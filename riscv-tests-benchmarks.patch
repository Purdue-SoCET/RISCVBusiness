diff --git a/benchmarks/Makefile b/benchmarks/Makefile
index fde4f23..de6931c 100644
--- a/benchmarks/Makefile
+++ b/benchmarks/Makefile
@@ -25,17 +25,9 @@ bmarks = \
 	vvadd \
 	memcpy \
 	multiply \
-	mm \
 	dhrystone \
 	spmv \
-	mt-vvadd \
-	mt-matmul \
-	mt-memcpy \
 	pmp \
-	vec-memcpy \
-	vec-daxpy \
-	vec-sgemm \
-	vec-strcmp \
 
 #--------------------------------------------------------------------
 # Build rules
@@ -43,10 +35,11 @@ bmarks = \
 
 RISCV_PREFIX ?= riscv$(XLEN)-unknown-elf-
 RISCV_GCC ?= $(RISCV_PREFIX)gcc
-RISCV_GCC_OPTS ?= -DPREALLOCATE=1 -mcmodel=medany -static -std=gnu99 -O2 -ffast-math -fno-common -fno-builtin-printf -fno-tree-loop-distribute-patterns -march=rv$(XLEN)gcv -mabi=lp64d
+RISCV_GCC_OPTS ?= -DPREALLOCATE=1 -mcmodel=medany -static -std=gnu99 -O2 -ffast-math -fno-common -fno-builtin-printf -fno-tree-loop-distribute-patterns -march=rv32imc_zicsr_zifencei_zba_zbb_zbs -mabi=ilp32
 RISCV_LINK ?= $(RISCV_GCC) -T $(src_dir)/common/test.ld $(incs)
 RISCV_LINK_OPTS ?= -static -nostdlib -nostartfiles -lm -lgcc -T $(src_dir)/common/test.ld
 RISCV_OBJDUMP ?= $(RISCV_PREFIX)objdump --disassemble-all --disassemble-zeroes --section=.text --section=.text.startup --section=.text.init --section=.data
+RISCV_OBJCOPY ?= $(RISCV_PREFIX)objcopy -O binary
 RISCV_SIM ?= spike --isa=rv$(XLEN)gcv
 
 incs  += -I$(src_dir)/../env -I$(src_dir)/common $(addprefix -I$(src_dir)/, $(bmarks))
@@ -55,6 +48,7 @@ objs  :=
 define compile_template
 $(1).riscv: $(wildcard $(src_dir)/$(1)/*) $(wildcard $(src_dir)/common/*)
 	$$(RISCV_GCC) $$(incs) $$(RISCV_GCC_OPTS) -o $$@ $(wildcard $(src_dir)/$(1)/*.c) $(wildcard $(src_dir)/$(1)/*.S) $(wildcard $(src_dir)/common/*.c) $(wildcard $(src_dir)/common/*.S) $$(RISCV_LINK_OPTS)
+	$$(RISCV_OBJCOPY) $(1).riscv $(1).bin
 endef
 
 $(foreach bmark,$(bmarks),$(eval $(call compile_template,$(bmark))))
diff --git a/benchmarks/common/syscalls.c b/benchmarks/common/syscalls.c
index 7a7b7fd..c78284b 100644
--- a/benchmarks/common/syscalls.c
+++ b/benchmarks/common/syscalls.c
@@ -25,6 +25,7 @@ static uintptr_t syscall(uintptr_t which, uint64_t arg0, uint64_t arg1, uint64_t
   __sync_synchronize();
 
   tohost = (uintptr_t)magic_mem;
+  asm volatile ("fence.i" : : :);
   while (fromhost == 0)
     ;
   fromhost = 0;
@@ -56,6 +57,7 @@ void setStats(int enable)
 void __attribute__((noreturn)) tohost_exit(uintptr_t code)
 {
   tohost = (code << 1) | 1;
+  asm volatile ("fence.i" : : :);
   while (1);
 }
 
@@ -64,6 +66,37 @@ uintptr_t __attribute__((weak)) handle_trap(uintptr_t cause, uintptr_t epc, uint
   tohost_exit(1337);
 }
 
+
+void cputchar(int x)
+{
+  tohost = (0x0101000000000000 | (unsigned char)x);
+  asm volatile ("fence.i" : : :);
+}
+
+void cputstring(const char* s)
+{
+  size_t len = strlen(s);
+  for (size_t i = 0; i < len; i++) {
+    cputchar(*s++);
+  }
+  cputchar('\n');
+}
+
+void put_uint32_hex(uint32_t x) {
+  char buf[10] = {0};
+
+  for(int i = 0; i < 8; i++) {
+      uint8_t value = (x & 0xF);
+      if(value >= 10) {
+          buf[7-i] = ((value-10) + 'A');
+      } else {
+          buf[7-i] = (value + '0');
+      }
+      x >>= 4;
+  }
+  cputstring(buf);
+}
+
 void exit(int code)
 {
   tohost_exit(code);
