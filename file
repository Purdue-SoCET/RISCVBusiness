diff --git a/.gitignore b/.gitignore
index a3ccd9d..50d3e73 100644
--- a/.gitignore
+++ b/.gitignore
@@ -39,3 +39,4 @@ _vmake
 *.qpg
 
 open_files.sh
+source_code/rv32v/tb/stuff.txt
diff --git a/compile_float.sh b/compile_float.sh
deleted file mode 100755
index d7effd3..0000000
--- a/compile_float.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-#!/bin/bash
-if [ $# -ne 1 ]; then
-    echo not enough of arguments
-    exit -1
-fi
-riscv64-unknown-elf-gcc -march=rv32g -mabi=ilp32f -static -mcmodel=medany -fvisibility=hidden -nostdlib -nostartfiles -T./verification/asm-env/link.ld -I./verification/asm-env/asm $1
-elf2hex 8 65536 a.out 2147483648 > build/meminit.hex
diff --git a/compile_selfasm_float.sh b/compile_selfasm_float.sh
deleted file mode 100755
index c14af19..0000000
--- a/compile_selfasm_float.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-#!/bin/bash
-if [ $# -ne 1 ]; then
-    echo not enough of arguments
-    exit -1
-fi
-riscv64-unknown-elf-gcc -march=rv32g -mabi=ilp32f -static -mcmodel=medany -fvisibility=hidden -nostdlib -nostartfiles -T./verification/asm-env/link.ld -I./verification/asm-env/selfasm $1
-elf2hex 8 65536 a.out 2147483648 > build/meminit.hex
diff --git a/compile_single_file.py b/compile_single_file.py
new file mode 100644
index 0000000..b8ddf8f
--- /dev/null
+++ b/compile_single_file.py
@@ -0,0 +1,112 @@
+
+import argparse
+import sys
+import glob
+import subprocess
+import os
+import re
+RISCV = '/home/asicfab/a/socet49/opt/riscv/bin/'
+
+def compile_asm(filename):
+    short_name = filename[:-2]
+    output_name = short_name + '.elf'
+    xlen = 'rv32g'
+    abi = 'ilp32'
+
+    cmd_arr = [RISCV + 'riscv64-unknown-elf-gcc', '-march=' + xlen, '-mabi=' + abi,
+                '-static', '-mcmodel=medany', '-fvisibility=hidden',
+                '-nostdlib', '-nostartfiles', 
+                '-T./verification/asm-env/link.ld',
+                '-I./verification/asm-env/selfasm', filename, '-o',
+                output_name]
+    #print " ".join(cmd_arr)
+    failure = subprocess.call(cmd_arr)
+    if failure:
+        return -1
+
+    # create an meminit.hex file from the elf file produced above
+    cmd_arr = ['/home/ecegrid/a/socpub/Public/riscv_dev/riscv_installs/RV_current/bin/elf2hex', '8', '65536', output_name, '2147483648']
+    hex_file_loc = 'meminit.hex'
+    with open(hex_file_loc, 'w') as hex_file:
+        failure = subprocess.call(cmd_arr, stdout=hex_file)
+    if failure:
+        return -2
+    else:
+        return 0
+
+def run(filename):
+    ret = compile_asm(filename)
+    if ret != 0:
+        if ret == -1:
+            print "An error has occured during GCC compilation"
+        elif ret == -2:
+            print "An error has occured converting elf to hex"
+        sys.exit(ret)
+
+    clean_init_hex(filename)
+
+# Create a temp file that consists of the Intel HEX format
+# version of the meminit.hex file, delete the original log file
+# and rename the temp file to the original's name
+def clean_init_hex(filename):
+    init_output = 'meminit.hex'
+    cleaned_location = init_output[:len(filename)-4] + "_clean.hex"
+    addr = 0x00
+    with open(init_output, 'r') as init_file:
+        cleaned_file = open(cleaned_location, 'w')
+
+        for line in init_file:
+            stripped_line = line[:len(line)-1]
+            for i in range(len(stripped_line), 0, -8):
+                data_word = stripped_line[i-8:i]
+                new_data_word = data_word[6:8] + data_word[4:6]
+                new_data_word += data_word[2:4] + data_word[0:2]
+                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
+                if len(checksum) < 2:
+                    checksum = '0' + checksum
+                addr_str = hex(addr/4)[2:]
+                #left pad the string with 0s until 4 hex digits
+                while len(addr_str) < 4:
+                    addr_str = '0' + addr_str
+                if new_data_word != "00000000":
+                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
+                    cleaned_file.write(out)
+                addr += 0x4
+        # add the EOL record to the file
+        cleaned_file.write(":00000001FF")
+        cleaned_file.close()
+    subprocess.call(['mv', cleaned_location, init_output])
+    return
+
+
+def calculate_checksum_str(data, addr):
+    addr = addr/4
+    high_addr = (addr & 0xFF00) >> 8
+    low_addr = addr & 0x00FF
+    data1 = data & 0x000000FF
+    data2 = (data & 0x0000FF00) >> 8
+    data3 = (data & 0x00FF0000) >> 16
+    data4 = (data & 0xFF000000) >> 24
+    checksum = 4 + high_addr + low_addr
+    checksum += data1 + data2 + data3 + data4
+    checksum = checksum & 0xFF
+    checksum = int(invert_bin_string(bin(checksum)[2:]),2)
+    checksum += 1
+    checksum_lower_byte = hex(checksum)[2:]
+    if len(checksum_lower_byte) > 2:
+        checksum_lower_byte = checksum_lower_byte[-2:]
+    return checksum_lower_byte 
+
+def invert_bin_string(bin_string):
+    inverted = ''
+    while len(bin_string) < 8:
+        bin_string = '0' + bin_string
+    for bit in bin_string:
+        if bit == '0':
+            inverted = inverted + '1'
+        else:
+            inverted = inverted + '0'
+    return inverted
+
+if __name__ == '__main__':
+    run(sys.argv[1])
\ No newline at end of file
diff --git a/run_tests.py b/run_tests.py
index f4c4a79..4c779be 100755
--- a/run_tests.py
+++ b/run_tests.py
@@ -36,7 +36,7 @@ START_GREEN = "\033[92m"
 START_RED = "\033[31m"
 
 FILE_NAME = None
-ARCH = "RV32I"
+ARCH = "RV32M"
 SUPPORTED_ARCHS = []
 SUPPORTED_TEST_TYPES = ['asm', 'c', 'selfasm', "sparce", ""]
 SPARCE_MODULES = ['sparce_svc', 'sparce_sprf', 'sparce_sasa_table', 'sparce_psru', 'sparce_cfid']
@@ -101,9 +101,8 @@ def compile_asm(file_name):
     output_name = output_dir + short_name + '.elf'
 
     # Added 64-bit support
-    xlen = 'rv64g' if '64' in ARCH else 'rv32g'
+    xlen = 'rv64g' if '64' in ARCH else 'rv32im'
     abi = 'lp64' if '64' in ARCH else 'ilp32'
-
     if not os.path.exists(os.path.dirname(output_name)):
         os.makedirs(os.path.dirname(output_name))
 
diff --git a/run_tests.py.bak b/run_tests.py.bak
deleted file mode 100755
index bc07de0..0000000
--- a/run_tests.py.bak
+++ /dev/null
@@ -1,736 +0,0 @@
-#!/usr/bin/python
-
-#
-#   Copyright 2016 Purdue University
-#
-#   Licensed under the Apache License, Version 2.0 (the "License");
-#   you may not use this file except in compliance with the License.
-#   You may obtain a copy of the License at
-#
-#       http://www.apache.org/licenses/LICENSE-2.0
-#
-#   Unless required by applicable law or agreed to in writing, software
-#   distributed under the License is distributed on an "AS IS" BASIS,
-#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#   See the License for the specific language governing permissions and
-#   limitations under the License.
-#
-#
-#   Filename:     run_tests.py
-#
-#   Created by:   Jacob R. Stevens
-#   Email:        steven69@purdue.edu
-#   Date Created: 06/01/2016
-#   Description:  Script for running processor tests
-
-import argparse
-import sys
-import glob
-import subprocess
-import os
-import re
-
-FNULL = open(os.devnull, 'w')
-END_COLOR = "\033[0m"
-START_GREEN = "\033[92m"
-START_RED = "\033[31m"
-
-FILE_NAME = None
-ARCH = "RV32I"
-SUPPORTED_ARCHS = []
-SUPPORTED_TEST_TYPES = ['asm', 'c', 'selfasm', "sparce", ""]
-SPARCE_MODULES = ['sparce_svc', 'sparce_sprf', 'sparce_sasa_table', 'sparce_psru', 'sparce_cfid']
-TEST_TYPE = ""
-# Change this variable to the filename (minus extension)
-# of the top level file for your project. This should
-# match the file name given in the top level wscript
-TOP_LEVEL = "RISCVBusiness" # NOTE: Adjust this module name to adjust what top level is needed for the Cadence simulation 
-
-def parse_arguments():
-    global ARCH, FILE_NAME, SUPPORTED_ARCHS, TEST_TYPE
-    parser = argparse.ArgumentParser(description="Run various processor tests. This script expects to be run at the top level of the RISCV Business directory")
-    parser.add_argument('--arch', '-a', dest='arch', type=str,
-                        default="RV32I",
-                        help="Specify the architecture targeted. Option(s): RV32I Default: RV32I")
-    parser.add_argument('--test', '-t', dest='test_type', type=str, default="",
-                        help="Specify what type of tests to run. Option(s): asm,selfasm,c Default: asm")
-    parser.add_argument('file_name', metavar='file_name', type=str,
-                        nargs='?',
-                        help="Run all tests that begin with this string. Optional")
-    args = parser.parse_args()
-    ARCH = args.arch
-    FILE_NAME = args.file_name
-    TEST_TYPE = args.test_type
-
-    if TEST_TYPE not in SUPPORTED_TEST_TYPES:
-        print "ERROR: " + TEST_TYPE + " is not a supported test type"
-        sys.exit(1)
-
-    if TEST_TYPE == "":
-        for test_type in SUPPORTED_TEST_TYPES[:-1]:
-            if test_type == 'selfasm':
-                test_file_dir = 'self-tests/'
-            else:
-                test_file_dir = test_type + '-tests/'
-        SUPPORTED_ARCHS = glob.glob('./verification/' + test_file_dir + '*')
-        SUPPORTED_ARCHS = [a.split('/'+test_file_dir)[1] for a in SUPPORTED_ARCHS]
-        if ARCH not in SUPPORTED_ARCHS:
-           if test_type != 'sparce':
-              print "ERROR: No " + test_type + " tests exist for " + ARCH
-              sys.exit(1)
-        else:
-          if TEST_TYPE == 'sparce':
-            pass
-          elif TEST_TYPE == 'selfasm':
-            test_file_dir = 'self-tests/'
-          else:
-            test_file_dir = TEST_TYPE + '-tests/'
-          SUPPORTED_ARCHS = glob.glob('./verification/' + test_file_dir + '*')
-          SUPPORTED_ARCHS = [a.split('/'+test_file_dir)[1] for a in SUPPORTED_ARCHS]
-          if ARCH not in SUPPORTED_ARCHS:
-            print "ERROR: No " + TEST_TYPE + " tests exist for " + ARCH
-            sys.exit(1)
-
-# compile_asm takes a file_name as input and assembles the file pointed
-# to by that file name. It also takes the elf file that is the result
-# of that compilation and creates a meminit.hex file for it
-def compile_asm(file_name):
-    # compile all of the files
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-    output_name = output_dir + short_name + '.elf'
-
-    # Added 64-bit support
-    xlen = 'rv64gcf' if '64' in ARCH else 'rv32if'
-    abi = 'lp64f' if '64' in ARCH else 'ilp32f'
-
-    if not os.path.exists(os.path.dirname(output_name)):
-        os.makedirs(os.path.dirname(output_name))
-
-    cmd_arr = ['riscv64-unknown-elf-gcc', '-march=' + xlen, '-mabi=' + abi, '-static',
-                '-mcmodel=medany', '-fvisibility=hidden', '-nostdlib',
-                '-nostartfiles', '-T./verification/asm-env/link.ld',
-                '-I./verification/asm-env/asm', file_name, '-o', output_name]
-    failure = subprocess.call(cmd_arr)
-    if failure:
-        return -1
-
-    # create an meminit.hex file from the elf file produced above
-    cmd_arr = ['elf2hex', '8', '65536', output_name, '2147483648']
-    hex_file_loc = output_dir + 'meminit.hex'
-    with open(hex_file_loc, 'w') as hex_file:
-        failure = subprocess.call(cmd_arr, stdout=hex_file)
-    if failure:
-        return -2
-    else:
-        return 0
-
-# compile_asm_for_self is identical to compile_asm but has different
-# settings specifically for compiling self tests
-def compile_asm_for_self(file_name):
-    # compile all of the files
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-    output_name = output_dir + short_name + '.elf'
-
-    if not os.path.exists(os.path.dirname(output_name)):
-        os.makedirs(os.path.dirname(output_name))
-
-    xlen = 'rv64g' if '64' in ARCH else 'rv32g'
-    abi = 'lp64' if '64' in ARCH else 'ilp32f'
-
-
-    cmd_arr = ['riscv64-unknown-elf-gcc', '-march=' + xlen, '-mabi=' + abi,
-                '-static', '-mcmodel=medany', '-fvisibility=hidden',
-                '-nostdlib', '-nostartfiles', 
-                '-T./verification/asm-env/link.ld',
-                '-I./verification/asm-env/selfasm', file_name, '-o',
-                output_name]
-    failure = subprocess.call(cmd_arr)
-    if failure:
-        return -1
-
-    # create an meminit.hex file from the elf file produced above
-    cmd_arr = ['elf2hex', '8', '65536', output_name, '2147483648']
-    hex_file_loc = output_dir + 'meminit.hex'
-    with open(hex_file_loc, 'w') as hex_file:
-        failure = subprocess.call(cmd_arr, stdout=hex_file)
-    if failure:
-        return -2
-    else:
-        return 0
-
-def compile_c(file_name):
-    # compile all of the files
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-    output_name = output_dir + short_name + '.elf'
-
-    if not os.path.exists(os.path.dirname(output_name)):
-        os.makedirs(os.path.dirname(output_name))
-
-    xlen = 'rv64g' if '64' in ARCH else 'rv32g'
-    abi = 'lp64' if '64' in ARCH else 'ilp32'
-
-    cmd_arr = ['riscv64-unknown-elf-gcc', '-O0', '-march='+xlen, '-mabi='+abi]
-    cmd_arr += ['-ffunction-sections', '-Wno-comments']
-    cmd_arr += ['-ffreestanding', '-nostdlib', '-o', output_name, 
-              '-Wl,-Bstatic,-T,verification/c-firmware/link.ld,--strip-debug']
-    cmd_arr += ['-lgcc', 'verification/c-firmware/trap.S']
-    cmd_arr += ['-Iverification/c-firmware/']
-    cmd_arr += ['verification/c-firmware/trap.c', 'verification/c-firmware/print.c', file_name]
-    failure = subprocess.call(cmd_arr)
-    if failure:
-        return -1
-
-    # create an meminit.hex file from the elf file produced above
-    cmd_arr = ['elf2hex', '8', '524288', output_name, '2147483648']
-    hex_file_loc = output_dir + 'meminit.hex'
-    with open(hex_file_loc, 'w') as hex_file:
-        failure = subprocess.call(cmd_arr, stdout=hex_file)
-    if failure:
-        return -2
-    else:
-        return 0
-
-def invert_bin_string(bin_string):
-    inverted = ''
-    while len(bin_string) < 8:
-        bin_string = '0' + bin_string
-    for bit in bin_string:
-        if bit == '0':
-            inverted = inverted + '1'
-        else:
-            inverted = inverted + '0'
-    return inverted
-
-
-# Returns the string representation of the
-# checksum for the given data and address values
-def calculate_checksum_str(data, addr):
-    addr = addr/4
-    high_addr = (addr & 0xFF00) >> 8
-    low_addr = addr & 0x00FF
-    data1 = data & 0x000000FF
-    data2 = (data & 0x0000FF00) >> 8
-    data3 = (data & 0x00FF0000) >> 16
-    data4 = (data & 0xFF000000) >> 24
-    checksum = 4 + high_addr + low_addr
-    checksum += data1 + data2 + data3 + data4
-    checksum = checksum & 0xFF
-    checksum = int(invert_bin_string(bin(checksum)[2:]),2)
-    checksum += 1
-    checksum_lower_byte = hex(checksum)[2:]
-    if len(checksum_lower_byte) > 2:
-        checksum_lower_byte = checksum_lower_byte[-2:]
-    return checksum_lower_byte 
-
-# Create a temp file that consists of the Intel HEX format
-# version of the meminit.hex file, delete the original log file
-# and rename the temp file to the original's name
-def clean_init_hex(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-    init_output = output_dir + 'meminit.hex'
-    build_dir = './build/meminit.hex'
-
-    cleaned_location = init_output[:len(file_name)-4] + "_clean.hex"
-    addr = 0x00
-    with open(init_output, 'r') as init_file:
-        cleaned_file = open(cleaned_location, 'w')
-
-        for line in init_file:
-            stripped_line = line[:len(line)-1]
-            for i in range(len(stripped_line), 0, -8):
-                data_word = stripped_line[i-8:i]
-                new_data_word = data_word[6:8] + data_word[4:6]
-                new_data_word += data_word[2:4] + data_word[0:2]
-                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
-                if len(checksum) < 2:
-                    checksum = '0' + checksum
-                addr_str = hex(addr/4)[2:]
-                #left pad the string with 0s until 4 hex digits
-                while len(addr_str) < 4:
-                    addr_str = '0' + addr_str
-                if new_data_word != "00000000":
-                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
-                    cleaned_file.write(out)
-                addr += 0x4
-        # add the EOL record to the file
-        cleaned_file.write(":00000001FF")
-        cleaned_file.close()
-    subprocess.call(['rm', init_output])
-    subprocess.call(['mv', cleaned_location, init_output])
-    if not os.path.exists(os.path.dirname(build_dir)):
-        os.makedirs(os.path.dirname(build_dir))
-    subprocess.call(['cp', init_output, build_dir])
-    return
-
-# Create a temp file that consists of the Intel HEX format
-# version of the meminit.hex file, delete the original log file
-# and rename the temp file to the original's name
-def clean_init_hex_for_self(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-    init_output = output_dir + 'meminit.hex'
-    build_dir = './build/meminit.hex'
-
-    cleaned_location = init_output[:len(file_name)-4] + "_clean.hex"
-    addr = 0x00
-    with open(init_output, 'r') as init_file:
-        cleaned_file = open(cleaned_location, 'w')
-
-        for line in init_file:
-            stripped_line = line[:len(line)-1]
-            for i in range(len(stripped_line), 0, -8):
-                data_word = stripped_line[i-8:i]
-                new_data_word = data_word[6:8] + data_word[4:6]
-                new_data_word += data_word[2:4] + data_word[0:2]
-                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
-                if len(checksum) < 2:
-                    checksum = '0' + checksum
-                addr_str = hex(addr/4)[2:]
-                #left pad the string with 0s until 4 hex digits
-                while len(addr_str) < 4:
-                    addr_str = '0' + addr_str
-                if new_data_word != "00000000":
-                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
-                    cleaned_file.write(out)
-                addr += 0x4
-        # add the EOL record to the file
-        cleaned_file.write(":00000001FF")
-        cleaned_file.close()
-    subprocess.call(['rm', init_output])
-    subprocess.call(['mv', cleaned_location, init_output])
-    if not os.path.exists(os.path.dirname(build_dir)):
-        os.makedirs(os.path.dirname(build_dir))
-    subprocess.call(['cp', init_output, build_dir])
-    return
-
-# Create a temp file that consists of the Intel HEX format
-# version of the spike log file, delete the original log file
-# and rename the temp file to the original's name
-def clean_spike_output(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    # clean the hex memory dump
-    spike_output = output_dir + short_name + '_spike.hex'
-    cleaned_location = output_dir + short_name + '_spike_clean.hex'
-    addr = 0x00
-    with open(spike_output, 'r') as spike_file:
-        cleaned_file = open(cleaned_location, 'w')
-        for line in spike_file:
-            stripped_line = line[:len(line)-1]
-            for i in range(len(stripped_line), 0, -8):
-                data_word = stripped_line[i-8:i]
-                new_data_word = data_word[6:8] + data_word[4:6]
-                new_data_word += data_word[2:4] + data_word[0:2]
-                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
-                if len(checksum) < 2:
-                    checksum = '0' + checksum
-                addr_str = hex(addr/4)[2:]
-                #left pad the string with 0s until 4 hex digits
-                while len(addr_str) < 4:
-                    addr_str = '0' + addr_str
-                if new_data_word != "00000000":
-                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
-                    cleaned_file.write(out)
-                addr += 0x4
-        # add the EOL record to the file
-        cleaned_file.write(":00000001FF")
-        cleaned_file.close()
-    subprocess.call(['rm', spike_output])
-    subprocess.call(['mv', cleaned_location, spike_output])
-
-    # clean the trace 
-    trace_output = output_dir + short_name + '_spike.trace'
-    cleaned_output = '' 
-    with open(trace_output, 'r') as trace_file:
-        for line in trace_file:
-            line = line.strip()
-            broken_line_arr = line.split()
-            # there is now a weird line after exceptions in spike
-            if len(broken_line_arr) == 4 and broken_line_arr[2] == 'tval':
-                continue
-            elif len(broken_line_arr) >= 5 and 'csrwi' == broken_line_arr[4]:
-                break
-            elif len(broken_line_arr) > 6 and '0x' == broken_line_arr[6][0:2]:
-                imm = int(broken_line_arr[6], 16)
-                broken_line_arr[6] = str(imm)
-            elif len(broken_line_arr) > 8 and '0x' == broken_line_arr[8][0:2]:
-                imm = int(broken_line_arr[8], 16)
-                broken_line_arr[8] = str(imm)
-
-            new_line = ' '.join(broken_line_arr) + '\n'
-            cleaned_output += new_line
-    with open(trace_output, 'w') as trace_file:
-        trace_file.write(cleaned_output) 
-
-    return
-
-def clean_sim_trace(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    # clean the trace
-    trace_output = output_dir + short_name + '_sim.trace'
-    cleaned_output = ''
-    with open('build/trace.log', 'r') as trace_file:
-        for line in trace_file:
-            broken_line_arr = line.split()
-            if 'csrwi' == broken_line_arr[4]:
-                break
-            new_line = ' '.join(broken_line_arr) + '\n'
-            cleaned_output += new_line
-    with open(trace_output, 'w') as trace_file:
-        trace_file.write(cleaned_output) 
-    return
-
-def run_sim(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    cmd_arr = ['waf', 'configure', '--top_level=' + TOP_LEVEL + '_self_test']
-    failure = subprocess.call(cmd_arr, stdout=FNULL)
-    if failure:
-        return -1
-    cmd_arr = ['waf', 'verify_source']
-    log = open(output_dir + 'waf_output.log', 'w')
-    log.write('Now running ' + file_name)
-    failure = subprocess.call(cmd_arr, stdout=log)
-    if failure:
-        log.close()
-        log = open(output_dir + 'waf_output.log', 'r')
-        for line in log:
-            print line
-        return -2
-    subprocess.call(['mv', 'build/cpu.hex', output_dir + 'cpu.hex'])
-    if(os.path.exists('build/stats.txt')):
-        subprocess.call(['mv', 'build/stats.txt', output_dir + 'stats.txt'])
-    return 0
-
-def run_self_sim(file_name):
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    cmd_arr = ['waf', 'configure', '--top_level=' + TOP_LEVEL + "_self_test"]
-    failure = subprocess.call(cmd_arr, stdout=FNULL)
-    if failure:
-        return -1
-    cmd_arr = ['waf', 'verify_source']
-    log = open(output_dir + 'waf_output.log', 'w')
-    log.write('Now running ' + file_name)
-    failure = subprocess.call(cmd_arr, stdout=log)
-    if failure:
-        log.close()
-        log = open(output_dir + 'waf_output.log', 'r')
-        for line in log:
-            print line
-        return -2
-    if(os.path.exists('build/stats.txt')):
-        subprocess.call(['mv', 'build/stats.txt', output_dir + 'stats.txt'])
-    return 0
-
-def run_spike_asm(file_name):
-    # the object file should already exist from calling compile_asm
-    short_name = file_name.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    elf_name = output_dir + short_name + '.elf'
-    log_name = output_dir + short_name + '_spike.hex'
-    cmd_arr = ['spike', '-l', '--isa=RV32IMF', '+signature=' + log_name, elf_name]
-    print(cmd_arr)
-    spike_log = open(output_dir + short_name + '_spike.trace', 'w')
-    failure = subprocess.call(cmd_arr, stdout = spike_log, stderr = spike_log)
-    spike_log.close()
-    if failure:
-        return -1
-    return 0
-
-def compare_results(f):
-    short_name = f.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    sim_name =  output_dir + 'cpu.hex'
-    spike_name = output_dir + short_name + '_spike.hex'
-    pass_msg = '{0:<40}{1:>20}'.format(short_name,START_GREEN + '[PASSED]' + END_COLOR)
-    fail_msg = '{0:<40}{1:>20}'.format(short_name,START_RED + '[FAILED]' + END_COLOR)
-    failure = subprocess.call(['diff', sim_name, spike_name],
-                stdout=FNULL, stderr=subprocess.STDOUT)
-    cmd_arr = ['diff', output_dir + short_name + '_spike.trace']
-    cmd_arr += [output_dir + short_name + '_sim.trace']
-    #failure = failure | subprocess.call(cmd_arr, stderr=subprocess.STDOUT)
-    if failure:
-        print fail_msg
-        return 1
-    else:
-        print pass_msg
-        return 0
-
-def check_results(f):
-    short_name = f.split(ARCH+'/')[1][:-2]
-    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
-
-    pass_msg = '{0:<40}{1:>20}'.format(short_name,START_GREEN + '[PASSED]' + END_COLOR)
-    fail_msg = '{0:<40}{1:>20}'.format(short_name,START_RED + '[FAILED]' + END_COLOR)
-
-    pattern = r'SUCCESS'
-    with open(output_dir + '/waf_output.log', 'r') as waf_output:
-        waf_output_text = waf_output.read()
-        match = re.search(pattern, waf_output_text)
-        if match:
-            print pass_msg
-            return 0
-        else:
-            print fail_msg
-            return 1
-
-def run_asm():
-    failures = 0
-    if FILE_NAME is None:
-        files = glob.glob("./verification/"+"asm"+"-tests/"+ARCH+"/*.S")
-    else:
-        files = glob.glob("./verification/"+"asm"+"-tests/"+ARCH+"/"+FILE_NAME+"*.S")
-    print "Starting asm tests..."
-    for f in files:
-        if 'asicfab' in os.environ['HOSTNAME']:
-            # Need to do the work on EE256
-            test_name = f.split('/')[-1][:-2]
-            output_dir = './sim_out/' + ARCH + '/' + test_name + '/'
-            elf_name = output_dir + test_name + '.elf'
-            log_name = output_dir + test_name + '_spike.hex'
-            ee256_cmd = '#!/bin/sh\nexport RISCV=~/riscv-toolchain\nexport PATH='
-            ee256_cmd += '~/riscv-toolchain/bin:$PATH\ncd '
-            ee256_cmd += 'RISCVBusiness \npython compile_asm.py ' + f + '\n'
-            ee256_cmd += 'spike -l --isa=RV32IM +signature=' + log_name + ' '
-            ee256_cmd += elf_name + ' &>> ' + output_dir + test_name + '_spike.trace'
-
-            with open('compile256.cmd', 'w') as cmd_f:
-                cmd_f.write(ee256_cmd)
-            asic_fab_cmd = "#!/bin/sh\nssh socetlnx03@128.46.75.147 'bash -s'  < compile256.cmd"
-            with open('compile_asicfab.cmd', 'w') as cmd_f:
-                cmd_f.write(asic_fab_cmd)
-            ret = subprocess.call(['chmod', '+x', 'compile_asicfab.cmd'])
-            if ret != 0:
-                print('Could not make executable')
-            ret = subprocess.call(['compile_asicfab.cmd'])
-
-            # Now bring the Spike trace and hex files over to asicfab
-            if not os.path.exists('./sim_out/' + ARCH + '/' + test_name):
-                os.makedirs('./sim_out/' + ARCH + '/' + test_name)
-            scp_cmd = 'scp -q socetlnx03@128.46.75.147:~/'
-            scp_cmd += 'RISCVBusiness/sim_out/' + ARCH + '/' + test_name
-            scp_cmd += '/* ./sim_out/' + ARCH + '/' + test_name
-            ret = subprocess.call(scp_cmd.split())
-            if ret != 0:
-                print('Could not transfer to asicfab')
-        else:
-            # RISCV tools correct, compile as usual
-            ret = compile_asm(f)
-            if ret != 0:
-                if ret == -1:
-                    print "An error has occured during GCC compilation"
-                elif ret == -2:
-                    print "An error has occured converting elf to hex"
-                sys.exit(1)
-            #clean_init_hex(f)
-            ret = run_spike_asm(f)
-            if ret != 0:
-                print "An error has occurred during running Spike"
-                sys.exit(ret)
-
-        clean_spike_output(f)
-        clean_init_hex(f)
-        ret = run_sim(f)
-        if ret != 0:
-            if ret == -1:
-              print "An error has occurred while setting waf's top level"
-            elif ret == -2:
-                print "An error has occurred while running " + f
-            sys.exit(ret)
-        clean_sim_trace(f)
-        failures += compare_results(f)
-
-    return failures
-
-def run_sparce():
-   failures = 0
-   print "starting sparce module tests..."
-   for module in SPARCE_MODULES:
-      
-      pass_msg = '{0:<40}{1:>20}'.format(module,START_GREEN + '[PASSED]' + END_COLOR)
-      fail_msg = '{0:<40}{1:>20}'.format(module,START_RED + '[FAILED]' + END_COLOR)
-
-      output_dir = './sim_out/sparce/' + module + '/'
-      if not os.path.exists(output_dir):
-         try:
-            os.makedirs(output_dir)
-         except OSError as exc: # Guard against race condition
-            if exc.errno != errno.EEXIST:
-               raise
-      cmd_arr = ['waf', 'configure', '--top_level=' + module]
-      failure = subprocess.call(cmd_arr, stdout=FNULL)
-      if failure:
-         print "Error configuring test for " + module
-         failures += 1
-      else:
-         cmd_arr = ['waf', 'verify_source']
-         log = open(output_dir + 'waf_output.log', 'w')
-         log.write('Now running ' + module)
-         failure = subprocess.call(cmd_arr, stdout=log)
-         if failure:
-            log.close()
-            log = open(output_dir + 'waf_output.log', 'r')
-            for line in log:
-                print line
-            failures += 1
-            print fail_msg
-         else:
-            print pass_msg
-
-   return failures
-
-def run_selfasm():
-    failures = 0
-    if FILE_NAME is None:
-        files = glob.glob("./verification/self-tests/" + ARCH + "/*.S")
-    else:
-        loc = "./verification/self-tests/" + ARCH + "/" + FILE_NAME + "*.S"
-        files = glob.glob(loc)
-    print "Starting self tests..."
-    for f in files:
-        # TODO: Fix timer error
-        #if 'timer2' in f: continue
-
-        if 'asicfab' in os.environ['HOSTNAME']:
-            # Do work remotely
-            test_name = f.split('/')[-1][:-2]
-            ee256_cmd = '#!/bin/sh\nexport RISCV=~/riscv-toolchain\nexport PATH='
-            ee256_cmd += '~/riscv-toolchain/bin:$PATH\ncd '
-            ee256_cmd += 'RISCVBusiness \npython compile_asm_for_self.py ' + f
-
-            with open('compile256.cmd', 'w') as cmd_f:
-                cmd_f.write(ee256_cmd)
-            asic_fab_cmd = "#!/bin/sh\nssh socetlnx03@128.46.75.147 'bash -s'  < compile256.cmd"
-            with open('compile_asicfab.cmd', 'w') as cmd_f:
-                cmd_f.write(asic_fab_cmd)
-            ret = subprocess.call(['chmod', '+x', 'compile_asicfab.cmd'])
-            if ret != 0:
-                print('Could not make executable')
-                sys.exit()
-            ret = subprocess.call(['compile_asicfab.cmd'])
-            if ret != 0:
-                print('Failed compiling on EE256')
-                sys.exit()
-
-            # Now bring the hex file over to asicfab
-            if not os.path.exists('./sim_out/' + ARCH + '/' + test_name):
-                os.makedirs('./sim_out/' + ARCH + '/' + test_name)
-            scp_cmd = 'scp -q socetlnx03@128.46.75.147:~/'
-            scp_cmd += 'RISCVBusiness/sim_out/' + ARCH + '/' + test_name
-            scp_cmd += '/* ./sim_out/' + ARCH + '/' + test_name
-            ret = subprocess.call(scp_cmd.split())
-            if ret != 0:
-                print('Could not transfer to asicfab')
-        else:
-            # Do the work locally
-            ret = compile_asm_for_self(f)
-            if ret != 0:
-                if ret == -1:
-                    print "An error has occured during GCC compilation"
-                elif ret == -2:
-                    print "An error has occured converting elf to hex"
-                sys.exit(ret)
-
-        clean_init_hex_for_self(f)
-        ret = run_self_sim(f)
-        if ret != 0:
-            if ret == -1:
-                print "An error has occured while seting waf's top level"
-            elif ret == -2:
-                print "An error has occured while running " + f
-            sys.exit(ret)
-        failures += check_results(f)
-    return failures
-
-def run_c():
-    failures = 0
-    if FILE_NAME is None:
-        files = glob.glob("./verification/c-tests/" + ARCH + "/*.c")
-    else:
-        loc = "./verification/c-tests/" + ARCH + "/" + FILE_NAME + "*.c"
-        files = glob.glob(loc)
-    print "Starting c tests..."
-    for f in files:
-        if 'asicfab' in os.environ['HOSTNAME']:
-            # Do work remotely
-            test_name = f.split('/')[-1][:-2]
-            output_dir = './sim_out/' + ARCH + '/' + test_name + '/'
-            elf_name = output_dir + test_name + '.elf'
-            log_name = output_dir + test_name + '_spike.hex'
-            ee256_cmd = '#!/bin/sh\nexport RISCV=~/riscv-toolchain\nexport PATH='
-            ee256_cmd += '~/riscv-toolchain/bin:$PATH\ncd '
-            ee256_cmd += 'RISCVBusiness \npython compile_c.py ' + f + '\n'
-
-            with open('compile256.cmd', 'w') as cmd_f:
-                cmd_f.write(ee256_cmd)
-            asic_fab_cmd = "#!/bin/sh\nssh socetlnx03@128.46.75.147 'bash -s'  < compile256.cmd"
-            with open('compile_asicfab.cmd', 'w') as cmd_f:
-                cmd_f.write(asic_fab_cmd)
-            ret = subprocess.call(['chmod', '+x', 'compile_asicfab.cmd'])
-            if ret != 0:
-                print('Could not make executable')
-            ret = subprocess.call(['compile_asicfab.cmd'])
-
-            # Now bring the hex files over to asicfab
-            if not os.path.exists('./sim_out/' + ARCH + '/' + test_name):
-                os.makedirs('./sim_out/' + ARCH + '/' + test_name)
-            scp_cmd = 'scp -q socetlnx03@128.46.75.147:~/'
-            scp_cmd += 'RISCVBusiness/sim_out/' + ARCH + '/' + test_name
-            scp_cmd += '/* ./sim_out/' + ARCH + '/' + test_name
-            ret = subprocess.call(scp_cmd.split())
-            if ret != 0:
-                print('Could not transfer to asicfab')
-        else:
-            ret = compile_c(f)
-            if ret != 0:
-                if ret == -1:
-                    print "An error has occured during GCC compilation"
-                elif ret == -2:
-                    print "An error has occured converting elf to hex"
-                sys.exit(ret)
-        clean_init_hex_for_self(f)
-        ret = run_self_sim(f)
-        if ret != 0:
-            if ret == -1:
-                print "An error has occured while seting waf's top level"
-            elif ret == -2:
-                print "An error has occured while running " + f
-            sys.exit(ret)
-        failures += check_results(f)
-    return failures
-
-if __name__ == '__main__':
-    parse_arguments()
-    failures = 0
-    # asm comparison testing
-    if TEST_TYPE == "asm":
-        failures = run_asm()
-    # C comparison testing
-    elif TEST_TYPE == "c":
-        failures = run_c()
-    # self tests
-    elif TEST_TYPE == "selfasm":
-      failures = run_selfasm()
-    # sparce tests
-    elif TEST_TYPE == "sparce":
-      failures = run_sparce()
-    elif TEST_TYPE == "":
-      failures += run_asm()
-      failures += run_selfasm()
-      failures += run_c()
-      failures += run_sparce()
-    else:
-        print "To be implemented"
-    sys.exit(failures)
diff --git a/run_tests_local.py b/run_tests_local.py
new file mode 100755
index 0000000..da9e489
--- /dev/null
+++ b/run_tests_local.py
@@ -0,0 +1,701 @@
+#!/usr/bin/python
+
+#
+#   Copyright 2016 Purdue University
+#
+#   Licensed under the Apache License, Version 2.0 (the "License");
+#   you may not use this file except in compliance with the License.
+#   You may obtain a copy of the License at
+#
+#       http://www.apache.org/licenses/LICENSE-2.0
+#
+#   Unless required by applicable law or agreed to in writing, software
+#   distributed under the License is distributed on an "AS IS" BASIS,
+#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#   See the License for the specific language governing permissions and
+#   limitations under the License.
+#
+#
+#   Filename:     run_tests.py
+#
+#   Created by:   Jacob R. Stevens
+#   Email:        steven69@purdue.edu
+#   Date Created: 06/01/2016
+#   Description:  Script for running processor tests
+
+import argparse
+import sys
+import glob
+import subprocess
+import os
+import re
+
+FNULL = open(os.devnull, 'w')
+END_COLOR = "\033[0m"
+START_GREEN = "\033[92m"
+START_RED = "\033[31m"
+
+FILE_NAME = None
+ARCH = "RV32M"
+SUPPORTED_ARCHS = []
+SUPPORTED_TEST_TYPES = ['asm', 'c', 'selfasm', "sparce", ""]
+SPARCE_MODULES = ['sparce_svc', 'sparce_sprf', 'sparce_sasa_table', 'sparce_psru', 'sparce_cfid']
+TEST_TYPE = ""
+# Change this variable to the filename (minus extension)
+# of the top level file for your project. This should
+# match the file name given in the top level wscript
+TOP_LEVEL = "RISCVBusiness" # NOTE: Adjust this module name to adjust what top level is needed for the Cadence simulation 
+
+def parse_arguments():
+    global ARCH, FILE_NAME, SUPPORTED_ARCHS, TEST_TYPE
+    parser = argparse.ArgumentParser(description="Run various processor tests. This script expects to be run at the top level of the RISCV Business directory")
+    parser.add_argument('--arch', '-a', dest='arch', type=str,
+                        default="RV32I",
+                        help="Specify the architecture targeted. Option(s): RV32I Default: RV32I")
+    parser.add_argument('--test', '-t', dest='test_type', type=str, default="",
+                        help="Specify what type of tests to run. Option(s): asm,selfasm,c Default: asm")
+    parser.add_argument('file_name', metavar='file_name', type=str,
+                        nargs='?',
+                        help="Run all tests that begin with this string. Optional")
+    args = parser.parse_args()
+    ARCH = args.arch
+    FILE_NAME = args.file_name
+    TEST_TYPE = args.test_type
+
+    if TEST_TYPE not in SUPPORTED_TEST_TYPES:
+        print "ERROR: " + TEST_TYPE + " is not a supported test type"
+        sys.exit(1)
+
+    if TEST_TYPE == "":
+        for test_type in SUPPORTED_TEST_TYPES[:-1]:
+            if test_type == 'selfasm':
+                test_file_dir = 'self-tests/'
+            else:
+                test_file_dir = test_type + '-tests/'
+        SUPPORTED_ARCHS = glob.glob('./verification/' + test_file_dir + '*')
+        SUPPORTED_ARCHS = [a.split('/'+test_file_dir)[1] for a in SUPPORTED_ARCHS]
+        if ARCH not in SUPPORTED_ARCHS:
+           if test_type != 'sparce':
+              print "ERROR: No " + test_type + " tests exist for " + ARCH
+              sys.exit(1)
+        else:
+          if TEST_TYPE == 'sparce':
+            pass
+          elif TEST_TYPE == 'selfasm':
+            test_file_dir = 'self-tests/'
+          else:
+            test_file_dir = TEST_TYPE + '-tests/'
+          SUPPORTED_ARCHS = glob.glob('./verification/' + test_file_dir + '*')
+          SUPPORTED_ARCHS = [a.split('/'+test_file_dir)[1] for a in SUPPORTED_ARCHS]
+          if ARCH not in SUPPORTED_ARCHS:
+            print "ERROR: No " + TEST_TYPE + " tests exist for " + ARCH
+            sys.exit(1)
+
+# compile_asm takes a file_name as input and assembles the file pointed
+# to by that file name. It also takes the elf file that is the result
+# of that compilation and creates a meminit.hex file for it
+def compile_asm(file_name):
+    # compile all of the files
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+    output_name = output_dir + short_name + '.elf'
+
+    # Added 64-bit support
+    xlen = 'rv64g' if '64' in ARCH else 'rv32im'
+    abi = 'lp64' if '64' in ARCH else 'ilp32'
+    if not os.path.exists(os.path.dirname(output_name)):
+        os.makedirs(os.path.dirname(output_name))
+
+    cmd_arr = ['/home/asicfab/a/socet49/opt/riscv/bin/riscv64-unknown-elf-gcc', '-march=' + xlen, '-mabi=' + abi, '-static',
+                '-mcmodel=medany', '-fvisibility=hidden', '-nostdlib',
+                '-nostartfiles', '-T./verification/asm-env/link.ld',
+                '-I./verification/asm-env/asm', file_name, '-o', output_name]
+    failure = subprocess.call(cmd_arr)
+    if failure:
+        return -1
+
+    # create an meminit.hex file from the elf file produced above
+    cmd_arr = ['/home/ecegrid/a/socpub/Public/riscv_dev/riscv_installs/RV_current/bin/elf2hex', '8', '65536', output_name, '2147483648']
+    hex_file_loc = output_dir + 'meminit.hex'
+    with open(hex_file_loc, 'w') as hex_file:
+        failure = subprocess.call(cmd_arr, stdout=hex_file)
+    if failure:
+        return -2
+    else:
+        return 0
+
+# compile_asm_for_self is identical to compile_asm but has different
+# settings specifically for compiling self tests
+def compile_asm_for_self(file_name):
+    # compile all of the files
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+    output_name = output_dir + short_name + '.elf'
+
+    if not os.path.exists(os.path.dirname(output_name)):
+        os.makedirs(os.path.dirname(output_name))
+
+    xlen = 'rv64g' if '64' in ARCH else 'rv32g'
+    abi = 'lp64' if '64' in ARCH else 'ilp32'
+
+
+    cmd_arr = ['/home/asicfab/a/socet49/opt/riscv/bin/riscv64-unknown-elf-gcc', '-march=' + xlen, '-mabi=' + abi,
+                '-static', '-mcmodel=medany', '-fvisibility=hidden',
+                '-nostdlib', '-nostartfiles', 
+                '-T./verification/asm-env/link.ld',
+                '-I./verification/asm-env/selfasm', file_name, '-o',
+                output_name]
+    #print " ".join(cmd_arr)
+    failure = subprocess.call(cmd_arr)
+    if failure:
+        return -1
+
+    # create an meminit.hex file from the elf file produced above
+    cmd_arr = ['/home/ecegrid/a/socpub/Public/riscv_dev/riscv_installs/RV_current/bin/elf2hex', '8', '65536', output_name, '2147483648']
+    hex_file_loc = output_dir + 'meminit.hex'
+    with open(hex_file_loc, 'w') as hex_file:
+        failure = subprocess.call(cmd_arr, stdout=hex_file)
+    if failure:
+        return -2
+    else:
+        return 0
+
+def compile_c(file_name):
+    # compile all of the files
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+    output_name = output_dir + short_name + '.elf'
+
+    if not os.path.exists(os.path.dirname(output_name)):
+        os.makedirs(os.path.dirname(output_name))
+
+    xlen = 'rv64g' if '64' in ARCH else 'rv32g'
+    abi = 'lp64' if '64' in ARCH else 'ilp32'
+
+    cmd_arr = ['riscv64-unknown-elf-gcc', '-O0', '-march='+xlen, '-mabi='+abi]
+    cmd_arr += ['-ffunction-sections', '-Wno-comments']
+    cmd_arr += ['-ffreestanding', '-nostdlib', '-o', output_name, 
+              '-Wl,-Bstatic,-T,verification/c-firmware/link.ld,--strip-debug']
+    cmd_arr += ['-lgcc', 'verification/c-firmware/trap.S']
+    cmd_arr += ['-Iverification/c-firmware/']
+    cmd_arr += ['verification/c-firmware/trap.c', 'verification/c-firmware/print.c', file_name]
+    failure = subprocess.call(cmd_arr)
+    if failure:
+        return -1
+
+    # create an meminit.hex file from the elf file produced above
+    cmd_arr = ['elf2hex', '8', '524288', output_name, '2147483648']
+    hex_file_loc = output_dir + 'meminit.hex'
+    with open(hex_file_loc, 'w') as hex_file:
+        failure = subprocess.call(cmd_arr, stdout=hex_file)
+    if failure:
+        return -2
+    else:
+        return 0
+
+def invert_bin_string(bin_string):
+    inverted = ''
+    while len(bin_string) < 8:
+        bin_string = '0' + bin_string
+    for bit in bin_string:
+        if bit == '0':
+            inverted = inverted + '1'
+        else:
+            inverted = inverted + '0'
+    return inverted
+
+
+# Returns the string representation of the
+# checksum for the given data and address values
+def calculate_checksum_str(data, addr):
+    addr = addr/4
+    high_addr = (addr & 0xFF00) >> 8
+    low_addr = addr & 0x00FF
+    data1 = data & 0x000000FF
+    data2 = (data & 0x0000FF00) >> 8
+    data3 = (data & 0x00FF0000) >> 16
+    data4 = (data & 0xFF000000) >> 24
+    checksum = 4 + high_addr + low_addr
+    checksum += data1 + data2 + data3 + data4
+    checksum = checksum & 0xFF
+    checksum = int(invert_bin_string(bin(checksum)[2:]),2)
+    checksum += 1
+    checksum_lower_byte = hex(checksum)[2:]
+    if len(checksum_lower_byte) > 2:
+        checksum_lower_byte = checksum_lower_byte[-2:]
+    return checksum_lower_byte 
+
+# Create a temp file that consists of the Intel HEX format
+# version of the meminit.hex file, delete the original log file
+# and rename the temp file to the original's name
+def clean_init_hex(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+    init_output = output_dir + 'meminit.hex'
+    build_dir = './build/meminit.hex'
+
+    cleaned_location = init_output[:len(file_name)-4] + "_clean.hex"
+    addr = 0x00
+    with open(init_output, 'r') as init_file:
+        cleaned_file = open(cleaned_location, 'w')
+
+        for line in init_file:
+            stripped_line = line[:len(line)-1]
+            for i in range(len(stripped_line), 0, -8):
+                data_word = stripped_line[i-8:i]
+                new_data_word = data_word[6:8] + data_word[4:6]
+                new_data_word += data_word[2:4] + data_word[0:2]
+                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
+                if len(checksum) < 2:
+                    checksum = '0' + checksum
+                addr_str = hex(addr/4)[2:]
+                #left pad the string with 0s until 4 hex digits
+                while len(addr_str) < 4:
+                    addr_str = '0' + addr_str
+                if new_data_word != "00000000":
+                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
+                    cleaned_file.write(out)
+                addr += 0x4
+        # add the EOL record to the file
+        cleaned_file.write(":00000001FF")
+        cleaned_file.close()
+    subprocess.call(['rm', init_output])
+    subprocess.call(['mv', cleaned_location, init_output])
+    if not os.path.exists(os.path.dirname(build_dir)):
+        os.makedirs(os.path.dirname(build_dir))
+    subprocess.call(['cp', init_output, build_dir])
+    return
+
+# Create a temp file that consists of the Intel HEX format
+# version of the meminit.hex file, delete the original log file
+# and rename the temp file to the original's name
+def clean_init_hex_for_self(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+    init_output = output_dir + 'meminit.hex'
+    build_dir = './build/meminit.hex'
+
+    cleaned_location = init_output[:len(file_name)-4] + "_clean.hex"
+    addr = 0x00
+    with open(init_output, 'r') as init_file:
+        cleaned_file = open(cleaned_location, 'w')
+
+        for line in init_file:
+            stripped_line = line[:len(line)-1]
+            for i in range(len(stripped_line), 0, -8):
+                data_word = stripped_line[i-8:i]
+                new_data_word = data_word[6:8] + data_word[4:6]
+                new_data_word += data_word[2:4] + data_word[0:2]
+                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
+                if len(checksum) < 2:
+                    checksum = '0' + checksum
+                addr_str = hex(addr/4)[2:]
+                #left pad the string with 0s until 4 hex digits
+                while len(addr_str) < 4:
+                    addr_str = '0' + addr_str
+                if new_data_word != "00000000":
+                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
+                    cleaned_file.write(out)
+                addr += 0x4
+        # add the EOL record to the file
+        cleaned_file.write(":00000001FF")
+        cleaned_file.close()
+    subprocess.call(['rm', init_output])
+    subprocess.call(['mv', cleaned_location, init_output])
+    if not os.path.exists(os.path.dirname(build_dir)):
+        os.makedirs(os.path.dirname(build_dir))
+    subprocess.call(['cp', init_output, build_dir])
+    return
+
+# Create a temp file that consists of the Intel HEX format
+# version of the spike log file, delete the original log file
+# and rename the temp file to the original's name
+def clean_spike_output(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    # clean the hex memory dump
+    spike_output = output_dir + short_name + '_spike.hex'
+    cleaned_location = output_dir + short_name + '_spike_clean.hex'
+    addr = 0x00
+    with open(spike_output, 'r') as spike_file:
+        cleaned_file = open(cleaned_location, 'w')
+        for line in spike_file:
+            stripped_line = line[:len(line)-1]
+            for i in range(len(stripped_line), 0, -8):
+                data_word = stripped_line[i-8:i]
+                new_data_word = data_word[6:8] + data_word[4:6]
+                new_data_word += data_word[2:4] + data_word[0:2]
+                checksum = calculate_checksum_str(int(new_data_word, 16), addr)
+                if len(checksum) < 2:
+                    checksum = '0' + checksum
+                addr_str = hex(addr/4)[2:]
+                #left pad the string with 0s until 4 hex digits
+                while len(addr_str) < 4:
+                    addr_str = '0' + addr_str
+                if new_data_word != "00000000":
+                    out = ":04" + addr_str + "00" + new_data_word + checksum + '\n'
+                    cleaned_file.write(out)
+                addr += 0x4
+        # add the EOL record to the file
+        cleaned_file.write(":00000001FF")
+        cleaned_file.close()
+    subprocess.call(['rm', spike_output])
+    subprocess.call(['mv', cleaned_location, spike_output])
+
+    # clean the trace 
+    trace_output = output_dir + short_name + '_spike.trace'
+    cleaned_output = '' 
+    with open(trace_output, 'r') as trace_file:
+        for line in trace_file:
+            line = line.strip()
+            broken_line_arr = line.split()
+            # there is now a weird line after exceptions in spike
+            if len(broken_line_arr) == 4 and broken_line_arr[2] == 'tval':
+                continue
+            elif len(broken_line_arr) >= 5 and 'csrwi' == broken_line_arr[4]:
+                break
+            elif len(broken_line_arr) > 6 and '0x' == broken_line_arr[6][0:2]:
+                imm = int(broken_line_arr[6], 16)
+                broken_line_arr[6] = str(imm)
+            elif len(broken_line_arr) > 8 and '0x' == broken_line_arr[8][0:2]:
+                imm = int(broken_line_arr[8], 16)
+                broken_line_arr[8] = str(imm)
+
+            new_line = ' '.join(broken_line_arr) + '\n'
+            cleaned_output += new_line
+    with open(trace_output, 'w') as trace_file:
+        trace_file.write(cleaned_output) 
+
+    return
+
+def clean_sim_trace(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    # clean the trace
+    trace_output = output_dir + short_name + '_sim.trace'
+    cleaned_output = ''
+    with open('build/trace.log', 'r') as trace_file:
+        for line in trace_file:
+            broken_line_arr = line.split()
+            if 'csrwi' == broken_line_arr[4]:
+                break
+            new_line = ' '.join(broken_line_arr) + '\n'
+            cleaned_output += new_line
+    with open(trace_output, 'w') as trace_file:
+        trace_file.write(cleaned_output) 
+    return
+
+def run_sim(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    cmd_arr = ['waf', 'configure', '--top_level=' + TOP_LEVEL]
+    failure = subprocess.call(cmd_arr, stdout=FNULL)
+    if failure:
+        return -1
+    cmd_arr = ['waf', 'verify_source']
+    log = open(output_dir + 'waf_output.log', 'w')
+    log.write('Now running ' + file_name)
+    failure = subprocess.call(cmd_arr, stdout=log)
+    if failure:
+        log.close()
+        log = open(output_dir + 'waf_output.log', 'r')
+        for line in log:
+            print line
+        return -2
+    subprocess.call(['mv', 'build/cpu.hex', output_dir + 'cpu.hex'])
+    if(os.path.exists('build/stats.txt')):
+        subprocess.call(['mv', 'build/stats.txt', output_dir + 'stats.txt'])
+    return 0
+
+def run_self_sim(file_name):
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    cmd_arr = ['waf', 'configure', '--top_level=' + TOP_LEVEL + "_self_test"]
+    failure = subprocess.call(cmd_arr, stdout=FNULL)
+    if failure:
+        return -1
+    cmd_arr = ['waf', 'verify_source']
+    log = open(output_dir + 'waf_output.log', 'w')
+    log.write('Now running ' + file_name)
+    failure = subprocess.call(cmd_arr, stdout=log)
+    if failure:
+        log.close()
+        log = open(output_dir + 'waf_output.log', 'r')
+        for line in log:
+            print line
+        return -2
+    if(os.path.exists('build/stats.txt')):
+        subprocess.call(['mv', 'build/stats.txt', output_dir + 'stats.txt'])
+    return 0
+
+def run_spike_asm(file_name):
+    # the object file should already exist from calling compile_asm
+    short_name = file_name.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    elf_name = output_dir + short_name + '.elf'
+    log_name = output_dir + short_name + '_spike.hex'
+    cmd_arr = ['spike', '-l', '--isa=RV32G', '+signature=' + log_name, elf_name]
+    spike_log = open(output_dir + short_name + '_spike.trace', 'w')
+    failure = subprocess.call(cmd_arr, stdout = spike_log, stderr = spike_log)
+    spike_log.close()
+    if failure:
+        return -1
+    return 0
+
+def compare_results(f):
+    short_name = f.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    sim_name =  output_dir + 'cpu.hex'
+    spike_name = output_dir + short_name + '_spike.hex'
+    pass_msg = '{0:<40}{1:>20}'.format(short_name,START_GREEN + '[PASSED]' + END_COLOR)
+    fail_msg = '{0:<40}{1:>20}'.format(short_name,START_RED + '[FAILED]' + END_COLOR)
+    failure = subprocess.call(['diff', sim_name, spike_name],
+                stdout=FNULL, stderr=subprocess.STDOUT)
+    cmd_arr = ['diff', output_dir + short_name + '_spike.trace']
+    cmd_arr += [output_dir + short_name + '_sim.trace']
+    #subprocess.call(cmd_arr)
+    if failure:
+        print fail_msg
+        return 1
+    else:
+        print pass_msg
+        return 0
+
+def check_results(f):
+    short_name = f.split(ARCH+'/')[1][:-2]
+    output_dir = './sim_out/' + ARCH + '/' + short_name + '/'
+
+    pass_msg = '{0:<40}{1:>20}'.format(short_name,START_GREEN + '[PASSED]' + END_COLOR)
+    fail_msg = '{0:<40}{1:>20}'.format(short_name,START_RED + '[FAILED]' + END_COLOR)
+
+    pattern = r'SUCCESS'
+    with open(output_dir + '/waf_output.log', 'r') as waf_output:
+        waf_output_text = waf_output.read()
+        match = re.search(pattern, waf_output_text)
+        if match:
+            print pass_msg
+            return 0
+        else:
+            print fail_msg
+            return 1
+
+def run_asm():
+    failures = 0
+    if FILE_NAME is None:
+        files = glob.glob("./verification/"+"asm"+"-tests/"+ARCH+"/*.S")
+    else:
+        files = glob.glob("./verification/"+"asm"+"-tests/"+ARCH+"/"+FILE_NAME+"*.S")
+    print "Starting asm tests..."
+    for f in files:
+        if 'asicfab' in os.environ['HOSTNAME']:
+            # Need to do the work on EE256
+            test_name = f.split('/')[-1][:-2]
+            output_dir = './sim_out/' + ARCH + '/' + test_name + '/'
+            elf_name = output_dir + test_name + '.elf'
+            log_name = output_dir + test_name + '_spike.hex'
+            ee256_cmd = '#!/bin/sh\nexport RISCV=~/riscv-toolchain\nexport PATH='
+            ee256_cmd += '~/riscv-toolchain/bin:$PATH\ncd '
+            ee256_cmd += 'RISCVBusiness \npython compile_asm.py ' + f + '\n'
+            ee256_cmd += 'spike -l --isa=RV32IM +signature=' + log_name + ' '
+            ee256_cmd += elf_name + ' &>> ' + output_dir + test_name + '_spike.trace'
+
+            with open('compile256.cmd', 'w') as cmd_f:
+                cmd_f.write(ee256_cmd)
+            asic_fab_cmd = "#!/bin/sh\nssh socetlnx03@128.46.75.147 'bash -s'  < compile256.cmd"
+            with open('compile_asicfab.cmd', 'w') as cmd_f:
+                cmd_f.write(asic_fab_cmd)
+            ret = subprocess.call(['chmod', '+x', 'compile_asicfab.cmd'])
+            if ret != 0:
+                print('Could not make executable')
+            ret = subprocess.call(['compile_asicfab.cmd'])
+
+            # Now bring the Spike trace and hex files over to asicfab
+            if not os.path.exists('./sim_out/' + ARCH + '/' + test_name):
+                os.makedirs('./sim_out/' + ARCH + '/' + test_name)
+            scp_cmd = 'scp -q socetlnx03@128.46.75.147:~/'
+            scp_cmd += 'RISCVBusiness/sim_out/' + ARCH + '/' + test_name
+            scp_cmd += '/* ./sim_out/' + ARCH + '/' + test_name
+            ret = subprocess.call(scp_cmd.split())
+            if ret != 0:
+                print('Could not transfer to asicfab')
+        else:
+            # RISCV tools correct, compile as usual
+            ret = compile_asm(f)
+            if ret != 0:
+                if ret == -1:
+                    print "An error has occured during GCC compilation"
+                elif ret == -2:
+                    print "An error has occured converting elf to hex"
+                sys.exit(1)
+            clean_init_hex(f)
+            ret = run_spike_asm(f)
+            if ret != 0:
+                print "An error has occurred during running Spike"
+                sys.exit(ret)
+
+        clean_spike_output(f)
+        clean_init_hex(f)
+        ret = run_sim(f)
+        if ret != 0:
+            if ret == -1:
+              print "An error has occurred while setting waf's top level"
+            elif ret == -2:
+                print "An error has occurred while running " + f
+            sys.exit(ret)
+        clean_sim_trace(f)
+        failures += compare_results(f)
+
+    return failures
+
+def run_sparce():
+   failures = 0
+   print "starting sparce module tests..."
+   for module in SPARCE_MODULES:
+      
+      pass_msg = '{0:<40}{1:>20}'.format(module,START_GREEN + '[PASSED]' + END_COLOR)
+      fail_msg = '{0:<40}{1:>20}'.format(module,START_RED + '[FAILED]' + END_COLOR)
+
+      output_dir = './sim_out/sparce/' + module + '/'
+      if not os.path.exists(output_dir):
+         try:
+            os.makedirs(output_dir)
+         except OSError as exc: # Guard against race condition
+            if exc.errno != errno.EEXIST:
+               raise
+      cmd_arr = ['waf', 'configure', '--top_level=' + module]
+      failure = subprocess.call(cmd_arr, stdout=FNULL)
+      if failure:
+         print "Error configuring test for " + module
+         failures += 1
+      else:
+         cmd_arr = ['waf', 'verify_source']
+         log = open(output_dir + 'waf_output.log', 'w')
+         log.write('Now running ' + module)
+         failure = subprocess.call(cmd_arr, stdout=log)
+         if failure:
+            log.close()
+            log = open(output_dir + 'waf_output.log', 'r')
+            for line in log:
+                print line
+            failures += 1
+            print fail_msg
+         else:
+            print pass_msg
+
+   return failures
+
+def run_selfasm():
+    failures = 0
+    if FILE_NAME is None:
+        files = glob.glob("./verification/self-tests/" + ARCH + "/*.S")
+    else:
+        loc = "./verification/self-tests/" + ARCH + "/" + FILE_NAME + "*.S"
+        files = glob.glob(loc)
+    print "Starting self tests..."
+    print files
+    for f in files:
+        ret = compile_asm_for_self(f)
+        if ret != 0:
+           if ret == -1:
+               print "An error has occured during GCC compilation"
+           elif ret == -2:
+               print "An error has occured converting elf to hex"
+           sys.exit(ret)
+
+        clean_init_hex_for_self(f)
+        ret = run_self_sim(f)
+        if ret != 0:
+            if ret == -1:
+                print "An error has occured while seting waf's top level"
+            elif ret == -2:
+                print "An error has occured while running " + f
+            sys.exit(ret)
+        failures += check_results(f)
+    return failures
+
+def run_c():
+    failures = 0
+    if FILE_NAME is None:
+        files = glob.glob("./verification/c-tests/" + ARCH + "/*.c")
+    else:
+        loc = "./verification/c-tests/" + ARCH + "/" + FILE_NAME + "*.c"
+        files = glob.glob(loc)
+    print "Starting c tests..."
+    for f in files:
+        if 'asicfab' in os.environ['HOSTNAME']:
+            # Do work remotely
+            test_name = f.split('/')[-1][:-2]
+            output_dir = './sim_out/' + ARCH + '/' + test_name + '/'
+            elf_name = output_dir + test_name + '.elf'
+            log_name = output_dir + test_name + '_spike.hex'
+            ee256_cmd = '#!/bin/sh\nexport RISCV=~/riscv-toolchain\nexport PATH='
+            ee256_cmd += '~/riscv-toolchain/bin:$PATH\ncd '
+            ee256_cmd += 'RISCVBusiness \npython compile_c.py ' + f + '\n'
+
+            with open('compile256.cmd', 'w') as cmd_f:
+                cmd_f.write(ee256_cmd)
+            asic_fab_cmd = "#!/bin/sh\nssh socetlnx03@128.46.75.147 'bash -s'  < compile256.cmd"
+            with open('compile_asicfab.cmd', 'w') as cmd_f:
+                cmd_f.write(asic_fab_cmd)
+            ret = subprocess.call(['chmod', '+x', 'compile_asicfab.cmd'])
+            if ret != 0:
+                print('Could not make executable')
+            ret = subprocess.call(['compile_asicfab.cmd'])
+
+            # Now bring the hex files over to asicfab
+            if not os.path.exists('./sim_out/' + ARCH + '/' + test_name):
+                os.makedirs('./sim_out/' + ARCH + '/' + test_name)
+            scp_cmd = 'scp -q socetlnx03@128.46.75.147:~/'
+            scp_cmd += 'RISCVBusiness/sim_out/' + ARCH + '/' + test_name
+            scp_cmd += '/* ./sim_out/' + ARCH + '/' + test_name
+            ret = subprocess.call(scp_cmd.split())
+            if ret != 0:
+                print('Could not transfer to asicfab')
+        else:
+            ret = compile_c(f)
+            if ret != 0:
+                if ret == -1:
+                    print "An error has occured during GCC compilation"
+                elif ret == -2:
+                    print "An error has occured converting elf to hex"
+                sys.exit(ret)
+        clean_init_hex_for_self(f)
+        ret = run_self_sim(f)
+        if ret != 0:
+            if ret == -1:
+                print "An error has occured while seting waf's top level"
+            elif ret == -2:
+                print "An error has occured while running " + f
+            sys.exit(ret)
+        failures += check_results(f)
+    return failures
+
+if __name__ == '__main__':
+    parse_arguments()
+    failures = 0
+    # asm comparison testing
+    if TEST_TYPE == "asm":
+        failures = run_asm()
+    # C comparison testing
+    elif TEST_TYPE == "c":
+        failures = run_c()
+    # self tests
+    elif TEST_TYPE == "selfasm":
+      failures = run_selfasm()
+    # sparce tests
+    elif TEST_TYPE == "sparce":
+      failures = run_sparce()
+    elif TEST_TYPE == "":
+      failures += run_asm()
+      failures += run_selfasm()
+      failures += run_c()
+      failures += run_sparce()
+    else:
+        print "To be implemented"
+    sys.exit(failures)
diff --git a/scripts/config_core.py b/scripts/config_core.py
index 892f5fb..23df2b3 100755
--- a/scripts/config_core.py
+++ b/scripts/config_core.py
@@ -1,4 +1,4 @@
-#!/usr/local/bin/python
+#!/usr/bin/python
 
 #
 #   Copyright 2016 Purdue University
diff --git a/scripts/restore.tcl b/scripts/restore.tcl
deleted file mode 100644
index fe91404..0000000
--- a/scripts/restore.tcl
+++ /dev/null
@@ -1,54 +0,0 @@
-
-# NC-Sim Command File
-# TOOL:	ncsim(64)	15.20-s030
-#
-#
-# You can restore this configuration with:
-#
-#      ncsim tb_RISCVBusiness_self_test -input /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/scripts/restore.tcl
-#
-
-set tcl_prompt1 {puts -nonewline "ncsim> "}
-set tcl_prompt2 {puts -nonewline "> "}
-set vlog_format %h
-set vhdl_format %v
-set real_precision 6
-set display_unit auto
-set time_unit module
-set heap_garbage_size -200
-set heap_garbage_time 0
-set assert_report_level note
-set assert_stop_level error
-set autoscope yes
-set assert_1164_warnings yes
-set pack_assert_off {}
-set severity_pack_assert_off {note warning}
-set assert_output_stop_level failed
-set tcl_debug_level 0
-set relax_path_name 1
-set vhdl_vcdmap XX01ZX01X
-set intovf_severity_level ERROR
-set probe_screen_format 0
-set rangecnst_severity_level ERROR
-set textio_severity_level ERROR
-set vital_timing_checks_on 1
-set vlog_code_show_force 0
-set assert_count_attempts 1
-set tcl_all64 false
-set tcl_runerror_exit false
-set assert_report_incompletes 0
-set show_force 1
-set force_reset_by_reinvoke 0
-set tcl_relaxed_literal 0
-set probe_exclude_patterns {}
-set probe_packed_limit 4k
-set probe_unpacked_limit 16k
-set assert_internal_msg no
-set svseed 1
-set assert_reporting_mode 0
-alias iprof profile
-database -open -shm -into dump.db _dump.db
-database -open -shm -into waves.shm waves -default
-probe -create -database waves tb_RISCVBusiness_self_test.DUT.fetch_decode_if.pc tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_a_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_b_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_op tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch_type tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.breakpoint tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_addr tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_clr tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_imm tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_rw_valid tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_set tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_swap tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dren tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dwen tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ecall_insn tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ex_pc_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_funct7 tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_opcode tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rd tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs1 tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs2 tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wen tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wsel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.fault_insn tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.frm_in tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.halt tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ifence tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.illegal_insn tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_I tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_S tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_SB tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_U tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_UJ tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_shamt_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.instr tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.j_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.jump tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.load_type tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.lui_instr tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.opcode tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rd tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs1 tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs2 tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ret_insn tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.shamt tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.w_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wen tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wfi tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.zimm tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.store_wdata tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.aluop tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_a tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_b tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_out tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.memory_addr tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.ext_out tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.dmem_in tb_RISCVBusiness_self_test.DUT.execute_stage.csr_wdata tb_RISCVBusiness_self_test.DUT.prv_pipe_if.addr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.badaddr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.breakpoint tb_RISCVBusiness_self_test.DUT.prv_pipe_if.clr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.env_m tb_RISCVBusiness_self_test.DUT.prv_pipe_if.epc tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ex_rmgmt tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ext_int tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ex_rmgmt_cause tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_insn tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_l tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_s tb_RISCVBusiness_self_test.DUT.prv_pipe_if.insert_pc tb_RISCVBusiness_self_test.DUT.prv_pipe_if.illegal_insn tb_RISCVBusiness_self_test.DUT.prv_pipe_if.instr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.intr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.invalid_csr tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_insn tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_l tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_s tb_RISCVBusiness_self_test.DUT.prv_pipe_if.pipe_clear tb_RISCVBusiness_self_test.DUT.prv_pipe_if.priv_pc tb_RISCVBusiness_self_test.DUT.prv_pipe_if.rdata tb_RISCVBusiness_self_test.DUT.prv_pipe_if.set tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ret tb_RISCVBusiness_self_test.DUT.prv_pipe_if.soft_int tb_RISCVBusiness_self_test.DUT.prv_pipe_if.swap tb_RISCVBusiness_self_test.DUT.prv_pipe_if.timer_int tb_RISCVBusiness_self_test.DUT.prv_pipe_if.valid_write tb_RISCVBusiness_self_test.DUT.prv_pipe_if.wb_enable tb_RISCVBusiness_self_test.DUT.prv_pipe_if.wdata tb_RISCVBusiness_self_test.DUT.prv_pipe_if.xepc_r tb_RISCVBusiness_self_test.DUT.prv_pipe_if.xtvec tb_RISCVBusiness_self_test.DUT.frf_if.clk tb_RISCVBusiness_self_test.DUT.frf_if.f_flags tb_RISCVBusiness_self_test.DUT.frf_if.f_frm tb_RISCVBusiness_self_test.DUT.frf_if.f_frm_in tb_RISCVBusiness_self_test.DUT.frf_if.f_rd tb_RISCVBusiness_self_test.DUT.frf_if.f_rs1 tb_RISCVBusiness_self_test.DUT.frf_if.f_rs1_data tb_RISCVBusiness_self_test.DUT.frf_if.f_rs2 tb_RISCVBusiness_self_test.DUT.frf_if.f_rs2_data tb_RISCVBusiness_self_test.DUT.frf_if.f_wdata tb_RISCVBusiness_self_test.DUT.frf_if.f_wen tb_RISCVBusiness_self_test.DUT.frf_if.n_rst tb_RISCVBusiness_self_test.DUT.rf_if.rd tb_RISCVBusiness_self_test.DUT.rf_if.rs1 tb_RISCVBusiness_self_test.DUT.rf_if.rs1_data tb_RISCVBusiness_self_test.DUT.rf_if.rs2 tb_RISCVBusiness_self_test.DUT.rf_if.rs2_data tb_RISCVBusiness_self_test.DUT.rf_if.w_data tb_RISCVBusiness_self_test.DUT.rf_if.wen tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.clk tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.n_rst tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_frm_in tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_funct_7 tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_a tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_b tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.fpu_out tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_flags tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_ready tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_a_sel tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.alu_a_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_b_sel tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.alu_b_sel tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rs1 tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rs1 tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.rs1 tb_RISCVBusiness_self_test.DUT.rf_if.decode.rs1_data tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.rs1_data tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rs2 tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rs2 tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.rs2 tb_RISCVBusiness_self_test.DUT.rf_if.decode.rs2_data tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.rs2_data tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rd tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rd tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.reg_rd tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_op tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.wen tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.wen tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.wen tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.dren tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.dren tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.dwen tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.dwen
-
-simvision -input restore.tcl.svcf
diff --git a/scripts/restore.tcl.svcf b/scripts/restore.tcl.svcf
deleted file mode 100644
index a150ec8..0000000
--- a/scripts/restore.tcl.svcf
+++ /dev/null
@@ -1,988 +0,0 @@
-# SimVision Command Script (Wed Apr 13 07:10:57 PM EDT 2022)
-#
-# Version 15.20.s030
-#
-# You can restore this configuration with:
-#
-#      ncsim tb_RISCVBusiness_self_test -input /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/scripts/restore.tcl
-#
-
-
-#
-# Preferences
-#
-preferences set plugin-enable-svdatabrowser-new 1
-preferences set cursorctl-dont-show-sync-warning 1
-preferences set toolbar-sendToIndago-WaveWindow {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Standard-Console {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Search-Console {
-  usual
-  position -pos 2
-}
-preferences set plugin-enable-groupscope 0
-preferences set plugin-enable-interleaveandcompare 0
-preferences set plugin-enable-waveformfrequencyplot 0
-
-#
-# Simulator
-#
-database require simulator -hints {
-	simulator "ncsim -gui tb_RISCVBusiness_self_test -input restore.tcl"
-}
-
-#
-# Conditions
-#
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_rs2_data[31:0]}
-if {[catch {condition new -name  condition -expr $expression}] != ""} {
-    condition set -using condition -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_a_sel[1:0]}
-if {[catch {condition new -name  de_alu_a_sel -expr $expression}] != ""} {
-    condition set -using de_alu_a_sel -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_b_sel[1:0]}
-if {[catch {condition new -name  de_alu_b_sel -expr $expression}] != ""} {
-    condition set -using de_alu_b_sel -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.alu_op[3:0]}
-if {[catch {condition new -name  de_alu_op -expr $expression}] != ""} {
-    condition set -using de_alu_op -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_funct7[6:0]}
-if {[catch {condition new -name  {de_f_funct7[6:0]} -expr $expression}] != ""} {
-    condition set -using {de_f_funct7[6:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rd[4:0]}
-if {[catch {condition new -name  de_f_reg_rd -expr $expression}] != ""} {
-    condition set -using de_f_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rd[4:0]}
-if {[catch {condition new -name  {de_f_reg_rd[4:0]} -expr $expression}] != ""} {
-    condition set -using {de_f_reg_rd[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs1[4:0]}
-if {[catch {condition new -name  de_f_reg_rs1 -expr $expression}] != ""} {
-    condition set -using de_f_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs1[4:0]}
-if {[catch {condition new -name  {de_f_reg_rs1[4:0]} -expr $expression}] != ""} {
-    condition set -using {de_f_reg_rs1[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs2[4:0]}
-if {[catch {condition new -name  de_f_reg_rs2 -expr $expression}] != ""} {
-    condition set -using de_f_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs2[4:0]}
-if {[catch {condition new -name  {de_f_reg_rs2[4:0]} -expr $expression}] != ""} {
-    condition set -using {de_f_reg_rs2[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs1_data[31:0]}
-if {[catch {condition new -name  de_f_rs1_data -expr $expression}] != ""} {
-    condition set -using de_f_rs1_data -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs2_data[31:0]}
-if {[catch {condition new -name  de_f_rs2_data -expr $expression}] != ""} {
-    condition set -using de_f_rs2_data -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wen
-if {[catch {condition new -name  de_f_wen -expr $expression}] != ""} {
-    condition set -using de_f_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wsel[2:0]}
-if {[catch {condition new -name  {de_f_wsel[2:0]} -expr $expression}] != ""} {
-    condition set -using {de_f_wsel[2:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rd[4:0]}
-if {[catch {condition new -name  de_reg_rd -expr $expression}] != ""} {
-    condition set -using de_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rs1[4:0]}
-if {[catch {condition new -name  de_reg_rs1 -expr $expression}] != ""} {
-    condition set -using de_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.reg_rs2[4:0]}
-if {[catch {condition new -name  de_reg_rs2 -expr $expression}] != ""} {
-    condition set -using de_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.rf_if.decode.rs1_data[31:0]}
-if {[catch {condition new -name  de_rs1_data -expr $expression}] != ""} {
-    condition set -using de_rs1_data -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.rf_if.decode.rs2_data[31:0]}
-if {[catch {condition new -name  de_rs2_data -expr $expression}] != ""} {
-    condition set -using de_rs2_data -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.control_unit.wen
-if {[catch {condition new -name  de_wen -expr $expression}] != ""} {
-    condition set -using de_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_rs2_data[31:0]}
-if {[catch {condition new -name  ex_ -expr $expression}] != ""} {
-    condition set -using ex_ -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.alu_a_sel[1:0]}
-if {[catch {condition new -name  ex_alu_a_sel -expr $expression}] != ""} {
-    condition set -using ex_alu_a_sel -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.alu_b_sel[1:0]}
-if {[catch {condition new -name  ex_alu_b_sel -expr $expression}] != ""} {
-    condition set -using ex_alu_b_sel -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.dren
-if {[catch {condition new -name  ex_dren -expr $expression}] != ""} {
-    condition set -using ex_dren -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.dwen
-if {[catch {condition new -name  ex_dwen -expr $expression}] != ""} {
-    condition set -using ex_dwen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_funct7[6:0]}
-if {[catch {condition new -name  {ex_f_funct7[6:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_funct7[6:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_reg_rd[4:0]}
-if {[catch {condition new -name  ex_f_reg_rd -expr $expression}] != ""} {
-    condition set -using ex_f_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_reg_rd[4:0]}
-if {[catch {condition new -name  {ex_f_reg_rd[4:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_reg_rd[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_reg_rs1[4:0]}
-if {[catch {condition new -name  ex_f_reg_rs1 -expr $expression}] != ""} {
-    condition set -using ex_f_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_reg_rs1[4:0]}
-if {[catch {condition new -name  {ex_f_reg_rs1[4:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_reg_rs1[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_reg_rs2[4:0]}
-if {[catch {condition new -name  ex_f_reg_rs2 -expr $expression}] != ""} {
-    condition set -using ex_f_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_reg_rs2[4:0]}
-if {[catch {condition new -name  {ex_f_reg_rs2[4:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_reg_rs2[4:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_rs1_data[31:0]}
-if {[catch {condition new -name  {ex_f_rs1_data[31:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_rs1_data[31:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_rs2_data[31:0]}
-if {[catch {condition new -name  ex_f_rs2_data -expr $expression}] != ""} {
-    condition set -using ex_f_rs2_data -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_rs2_data[31:0]}
-if {[catch {condition new -name  {ex_f_rs2_data[31:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_rs2_data[31:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_rs2_data[31:0]}
-if {[catch {condition new -name  {ex_f_rs2_data[31:0][31:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_rs2_data[31:0][31:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_wdata[31:0]}
-if {[catch {condition new -name  {ex_f_wdata[31:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_wdata[31:0]} -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_wen
-if {[catch {condition new -name  ex_f_wen -expr $expression}] != ""} {
-    condition set -using ex_f_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.f_wsel[2:0]}
-if {[catch {condition new -name  {ex_f_wsel[2:0]} -expr $expression}] != ""} {
-    condition set -using {ex_f_wsel[2:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.decode.f_rs1_data[31:0]}
-if {[catch {condition new -name  ex_fs1_data -expr $expression}] != ""} {
-    condition set -using ex_fs1_data -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_file_wdata[31:0]}
-if {[catch {condition new -name  {ex_reg_file_wdata[31:0]} -expr $expression}] != ""} {
-    condition set -using {ex_reg_file_wdata[31:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rd[4:0]}
-if {[catch {condition new -name  ex_reg_rd -expr $expression}] != ""} {
-    condition set -using ex_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rs1[4:0]}
-if {[catch {condition new -name  ex_reg_rs1 -expr $expression}] != ""} {
-    condition set -using ex_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.reg_rs2[4:0]}
-if {[catch {condition new -name  ex_reg_rs2 -expr $expression}] != ""} {
-    condition set -using ex_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.rs1_data[31:0]}
-if {[catch {condition new -name  ex_rs1_data -expr $expression}] != ""} {
-    condition set -using ex_rs1_data -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.rs2_data[31:0]}
-if {[catch {condition new -name  ex_rs2_data -expr $expression}] != ""} {
-    condition set -using ex_rs2_data -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.decode_execute_if.execute.wen
-if {[catch {condition new -name  ex_wen -expr $expression}] != ""} {
-    condition set -using ex_wen -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.dren
-if {[catch {condition new -name  mem_dren -expr $expression}] != ""} {
-    condition set -using mem_dren -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.dwen
-if {[catch {condition new -name  mem_dwen -expr $expression}] != ""} {
-    condition set -using mem_dwen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_reg_rd[4:0]}
-if {[catch {condition new -name  mem_f_reg_rd -expr $expression}] != ""} {
-    condition set -using mem_f_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_reg_rs1[4:0]}
-if {[catch {condition new -name  mem_f_reg_rs1 -expr $expression}] != ""} {
-    condition set -using mem_f_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_reg_rs2[4:0]}
-if {[catch {condition new -name  mem_f_reg_rs2 -expr $expression}] != ""} {
-    condition set -using mem_f_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_store_wdata[31:0]}
-if {[catch {condition new -name  mem_f_store_wdata -expr $expression}] != ""} {
-    condition set -using mem_f_store_wdata -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_wdata[31:0]}
-if {[catch {condition new -name  mem_f_wdata -expr $expression}] != ""} {
-    condition set -using mem_f_wdata -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_wen
-if {[catch {condition new -name  mem_f_wen -expr $expression}] != ""} {
-    condition set -using mem_f_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.f_wsel[2:0]}
-if {[catch {condition new -name  {mem_f_wsel[2:0]} -expr $expression}] != ""} {
-    condition set -using {mem_f_wsel[2:0]} -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.fpu_flags[4:0]}
-if {[catch {condition new -name  mem_fpu_flags -expr $expression}] != ""} {
-    condition set -using mem_fpu_flags -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.fpu_out[31:0]}
-if {[catch {condition new -name  mem_fpu_out -expr $expression}] != ""} {
-    condition set -using mem_fpu_out -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.reg_rd[4:0]}
-if {[catch {condition new -name  mem_reg_rd -expr $expression}] != ""} {
-    condition set -using mem_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.rs1[4:0]}
-if {[catch {condition new -name  mem_reg_rs1 -expr $expression}] != ""} {
-    condition set -using mem_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.rs2[4:0]}
-if {[catch {condition new -name  mem_reg_rs2 -expr $expression}] != ""} {
-    condition set -using mem_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.rs1[4:0]}
-if {[catch {condition new -name  {mem_rs1[4:0]} -expr $expression}] != ""} {
-    condition set -using {mem_rs1[4:0]} -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.wen
-if {[catch {condition new -name  mem_wen -expr $expression}] != ""} {
-    condition set -using mem_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_reg_rd[4:0]}
-if {[catch {condition new -name  wb_f_reg_rd -expr $expression}] != ""} {
-    condition set -using wb_f_reg_rd -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_reg_rs1[4:0]}
-if {[catch {condition new -name  wb_f_reg_rs1 -expr $expression}] != ""} {
-    condition set -using wb_f_reg_rs1 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_reg_rs2[4:0]}
-if {[catch {condition new -name  wb_f_reg_rs2 -expr $expression}] != ""} {
-    condition set -using wb_f_reg_rs2 -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_wdata[31:0]}
-if {[catch {condition new -name  wb_f_wdata -expr $expression}] != ""} {
-    condition set -using wb_f_wdata -expr $expression
-}
-set expression tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_wen
-if {[catch {condition new -name  wb_f_wen -expr $expression}] != ""} {
-    condition set -using wb_f_wen -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.f_wsel[2:0]}
-if {[catch {condition new -name  wb_f_wsel -expr $expression}] != ""} {
-    condition set -using wb_f_wsel -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.fpu_flags[4:0]}
-if {[catch {condition new -name  wb_fpu_flags -expr $expression}] != ""} {
-    condition set -using wb_fpu_flags -expr $expression
-}
-set expression {tb_RISCVBusiness_self_test.DUT.mem_wb_if.memory.fpu_out[31:0]}
-if {[catch {condition new -name  wb_fpu_out -expr $expression}] != ""} {
-    condition set -using wb_fpu_out -expr $expression
-}
-#
-# Groups
-#
-catch {group new -name frfif -overlay 0}
-catch {group new -name rfif -overlay 0}
-catch {group new -name cuif -overlay 0}
-catch {group new -name {floating point pipeline signals} -overlay 0}
-catch {group new -name priv_if -overlay 0}
-group using frfif
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.clk}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_flags[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_frm[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_frm_in[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_rd[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs1[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs1_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs2[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_rs2_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_wdata[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.f_wen}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.frf_if.n_rst}]} ]
-group using rfif
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.rd[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.rs1[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.rs1_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.rs2[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.rs2_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.w_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.rf_if.wen}]} ]
-group using cuif
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_a_sel[1:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_b_sel[1:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_op[3:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch_type[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.breakpoint}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_addr[11:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_clr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_imm}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_rw_valid}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_set}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_swap}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dren}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dwen}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ecall_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ex_pc_sel}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_funct7[6:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_opcode[6:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rd[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs1[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs2[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wen}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wsel[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.fault_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.frm_in[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.halt}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ifence}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.illegal_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_I[11:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_S[11:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_SB[12:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_U[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_UJ[20:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_shamt_sel}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.instr[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.j_sel}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.jump}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.load_type[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.lui_instr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.opcode[6:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rd[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs1[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs2[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ret_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.shamt[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.w_sel[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wen}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wfi}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.zimm[4:0]}]} ] \
-    [subst  {[format {de_alu_a_sel[1:0]}]} ] \
-    [subst  {[format {ex_alu_a_sel[1:0]}]} ] \
-    [subst  {[format {de_alu_b_sel[1:0]}]} ] \
-    [subst  {[format {ex_alu_b_sel[1:0]}]} ] \
-    [subst  {[format {de_reg_rs1[4:0]}]} ] \
-    [subst  {[format {ex_reg_rs1[4:0]}]} ] \
-    [subst  {[format {mem_reg_rs1[4:0]}]} ] \
-    [subst  {[format {de_rs1_data[31:0]}]} ] \
-    [subst  {[format {ex_rs1_data[31:0]}]} ] \
-    [subst  {[format {de_reg_rs2[4:0]}]} ] \
-    [subst  {[format {bus(bus(bus(bus(bus(ex_reg_rs2)))))} ]} ] \
-    [subst  {[format {mem_reg_rs2[4:0]}]} ] \
-    [subst  {[format {de_rs2_data[31:0]}]} ] \
-    [subst  {[format {ex_rs2_data[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.store_wdata[31:0]}]} ] \
-    [subst  {[format {de_reg_rd[4:0]}]} ] \
-    [subst  {[format {ex_reg_rd[4:0]}]} ] \
-    [subst  {[format {mem_reg_rd[4:0]}]} ] \
-    [subst  {[format {de_wen}]} ] \
-    [subst  {[format {ex_wen}]} ] \
-    [subst  {[format {mem_wen}]} ] \
-    [subst  {[format {de_alu_op[3:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.aluop[3:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_a[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_b[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.memory_addr[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dren}]} ] \
-    [subst  {[format {ex_dren}]} ] \
-    [subst  {[format {mem_dren}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.ext_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dwen}]} ] \
-    [subst  {[format {ex_dwen}]} ] \
-    [subst  {[format {mem_dwen}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.dmem_in[31:0]}]} ]
-group using {floating point pipeline signals}
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {[format {wb_f_wsel[2:0]}]} ] \
-    [subst  {[format {de_f_wen}]} ] \
-    [subst  {[format {ex_f_wen}]} ] \
-    [subst  {[format {mem_f_wen}]} ] \
-    [subst  {[format {wb_f_wen}]} ] \
-    [subst  {[format {mem_f_wdata[31:0]}]} ] \
-    [subst  {[format {wb_f_wdata[31:0]}]} ] \
-    [subst  {[format {de_f_rs1_data[31:0]}]} ] \
-    [subst  {[format {ex_fs1_data[31:0]}]} ] \
-    [subst  {[format {de_f_rs2_data[31:0]}]} ] \
-    [subst  {[format {ex_f_rs2_data[31:0]}]} ] \
-    [subst  {[format {mem_f_store_wdata[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.clk}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.n_rst}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_frm_in[2:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_funct_7[7:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_a[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_b[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.fpu_out[31:0]}]} ] \
-    [subst  {[format {mem_fpu_out[31:0]}]} ] \
-    [subst  {[format {wb_fpu_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_flags[4:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_ready}]} ] \
-    [subst  {[format {mem_fpu_flags[4:0]}]} ] \
-    [subst  {[format {wb_fpu_flags[4:0]}]} ] \
-    [subst  {[format {de_f_reg_rd[4:0]}]} ] \
-    [subst  {[format {ex_f_reg_rd[4:0]}]} ] \
-    [subst  {[format {mem_f_reg_rd[4:0]}]} ] \
-    [subst  {[format {wb_f_reg_rd[4:0]}]} ] \
-    [subst  {[format {de_f_reg_rs1[4:0]}]} ] \
-    [subst  {[format {ex_f_reg_rs1[4:0]}]} ] \
-    [subst  {[format {mem_f_reg_rs1[4:0]}]} ] \
-    [subst  {[format {wb_f_reg_rs1[4:0]}]} ] \
-    [subst  {[format {de_f_reg_rs2[4:0]}]} ] \
-    [subst  {[format {ex_f_reg_rs2[4:0]}]} ] \
-    [subst  {[format {mem_f_reg_rs2[4:0]}]} ] \
-    [subst  {[format {wb_f_reg_rs2[4:0]}]} ]
-group using priv_if
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.addr[11:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.badaddr[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.breakpoint}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.clr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.env_m}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.epc[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ex_rmgmt}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ext_int}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ex_rmgmt_cause[-1:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_l}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.fault_s}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.insert_pc}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.illegal_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.instr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.intr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.invalid_csr}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_insn}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_l}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.mal_s}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.pipe_clear}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.priv_pc[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.rdata[31:0]}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.set}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.ret}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.soft_int}]} ] \
-    [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.swap}]} ]
-
-#
-# Mnemonic Maps
-#
-mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
-{%c=TRUE -edgepriority 1 -shape high}}
-mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
-{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=* -label %x -linecolor gray -shape bus}}
-
-#
-# Design Browser windows
-#
-if {[catch {window new WatchList -name "Design Browser 1" -geometry 1920x946+0+0}] != ""} {
-    window geometry "Design Browser 1" 1920x946+0+0
-}
-window target "Design Browser 1" on
-browser using {Design Browser 1}
-browser set -scope [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if}]} ]
-browser set \
-    -signalsort name
-browser yview see [subst  {simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if}]} ]
-browser timecontrol set -lock 0
-
-#
-# Waveform windows
-#
-if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1440x723+2296+203}] != ""} {
-    window geometry "Waveform 1" 1440x723+2296+203
-}
-window target "Waveform 1" on
-waveform using {Waveform 1}
-waveform sidebar visibility partial
-waveform set \
-    -primarycursor TimeA \
-    -signalnames name \
-    -signalwidth 175 \
-    -units ps \
-    -valuewidth 75
-waveform baseline set -time 1,233,030ps
-
-
-set groupId0 [waveform add -groups frfif]
-waveform hierarchy collapse $groupId0
-
-
-set groupId0 [waveform add -groups rfif]
-
-
-set groupId0 [waveform add -groups cuif]
-waveform hierarchy collapse $groupId0
-
-
-set groupId0 [waveform add -groups {{floating point pipeline signals}}]
-waveform hierarchy collapse $groupId0
-
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.fetch_decode_if.pc[31:0]}]}
-	} ]]
-
-set groupId0 [waveform add -groups frfif]
-waveform hierarchy collapse $groupId0
-
-
-set groupId0 [waveform add -groups rfif]
-waveform hierarchy collapse $groupId0
-
-
-set groupId0 [waveform add -groups cuif]
-set gpGlist0 [waveform hierarchy contents $groupId0]
-set gpID0 [lindex $gpGlist0 0]
-foreach {name attrs} [subst  {
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_a_sel[1:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_b_sel[1:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.alu_op[3:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.branch_type[2:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.breakpoint}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_addr[11:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_clr}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_imm}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_rw_valid}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_set}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.csr_swap}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dren}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dwen}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ecall_insn}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ex_pc_sel}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_funct7[6:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_opcode[6:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rd[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs1[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_reg_rs2[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wen}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.f_wsel[2:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.fault_insn}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.frm_in[2:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.halt}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ifence}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.illegal_insn}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_I[11:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_S[11:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_SB[12:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_U[31:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_UJ[20:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.imm_shamt_sel}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.instr[31:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.j_sel}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.jump}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.load_type[2:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.lui_instr}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.opcode[6:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rd[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs1[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.reg_rs2[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.ret_insn}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.shamt[4:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.w_sel[2:0]}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wen}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.wfi}]} {}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.zimm[4:0]}]} {}
-    {[format {de_alu_a_sel[1:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_alu_a_sel[1:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {de_alu_b_sel[1:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_alu_b_sel[1:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {de_reg_rs1[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_reg_rs1[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_reg_rs1[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {de_rs1_data[31:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_rs1_data[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {de_reg_rs2[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {bus(bus(bus(bus(bus(ex_reg_rs2)))))} ]} {}
-    {[format {mem_reg_rs2[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {de_rs2_data[31:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_rs2_data[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_mem_if.execute.store_wdata[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {de_reg_rd[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_reg_rd[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_reg_rd[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {de_wen}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_wen}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_wen}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {de_alu_op[3:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.aluop[3:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_a[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_b[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.alu_if.port_out[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_mem_if.memory.memory_addr[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dren}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_dren}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_dren}]} {-color #ffff00 -namecolor #ffff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.ext_out[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.decode_stage.cu_if.dwen}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_dwen}]} {-namecolor #ff9900}
-    {[format {mem_dwen}]} {-color #ffff00 -namecolor #ffff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.memory_stage.dmem_ext.dmem_in[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-}] childcmds {
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-} {
-    set expected [ join [waveform signals -format fullpath $gpID0] ]
-    if {[string equal $name $expected] || $name == "cdivider"} {
-        if {$attrs != ""} {
-            eval waveform format $gpID0 $attrs
-        }
-        if { $childcmds != ""} {
-            eval $childcmds
-        }
-    }
-    set gpGlist0 [lrange $gpGlist0 1 end]
-    set gpID0 [lindex $gpGlist0 0]
-}
-
-
-set groupId0 [waveform add -groups {{floating point pipeline signals}}]
-set gpGlist0 [waveform hierarchy contents $groupId0]
-set gpID0 [lindex $gpGlist0 0]
-foreach {name attrs} [subst  {
-    {[format {wb_f_wsel[2:0]}]} {-namecolor #99ff00}
-    {[format {de_f_wen}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_f_wen}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_f_wen}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_f_wen}]} {-namecolor #99ff00}
-    {[format {mem_f_wdata[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_f_wdata[31:0]}]} {-namecolor #99ff00}
-    {[format {de_f_rs1_data[31:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_fs1_data[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {de_f_rs2_data[31:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_f_rs2_data[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_f_store_wdata[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.clk}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.n_rst}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_frm_in[2:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_funct_7[7:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_a[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.port_b[31:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.fpu_out[31:0]}]} {-namecolor #ff9900}
-    {[format {mem_fpu_out[31:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_fpu_out[31:0]}]} {-namecolor #99ff00}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_flags[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.fpu_if.f_ready}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_fpu_flags[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_fpu_flags[4:0]}]} {-namecolor #99ff00}
-    {[format {de_f_reg_rd[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_f_reg_rd[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_f_reg_rd[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_f_reg_rd[4:0]}]} {-namecolor #99ff00}
-    {[format {de_f_reg_rs1[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_f_reg_rs1[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_f_reg_rs1[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_f_reg_rs1[4:0]}]} {-namecolor #99ff00}
-    {[format {de_f_reg_rs2[4:0]}]} {-color #ff0000 -namecolor #ff0000}
-    {[format {ex_f_reg_rs2[4:0]}]} {-color #ff9900 -namecolor #ff9900}
-    {[format {mem_f_reg_rs2[4:0]}]} {-color #ffff00 -namecolor #ffff00}
-    {[format {wb_f_reg_rs2[4:0]}]} {-namecolor #99ff00}
-}] childcmds {
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-} {
-    set expected [ join [waveform signals -format fullpath $gpID0] ]
-    if {[string equal $name $expected] || $name == "cdivider"} {
-        if {$attrs != ""} {
-            eval waveform format $gpID0 $attrs
-        }
-        if { $childcmds != ""} {
-            eval $childcmds
-        }
-    }
-    set gpGlist0 [lrange $gpGlist0 1 end]
-    set gpID0 [lindex $gpGlist0 0]
-}
-
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.fetch_decode_if.pc[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.execute_stage.csr_wdata[31:0]}]}
-	} ]]
-
-set groupId0 [waveform add -groups priv_if]
-
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.timer_int}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.valid_write}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.wb_enable}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.wdata[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.xepc_r[3:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.prv_pipe_if.xtvec[3:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.WEN_mem}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.WEN_wb}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.bypass_f_rs1[1:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.bypass_f_rs2[1:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.bypass_rs1[1:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.bypass_rs2[1:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_WEN_mem}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_WEN_wb}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rd_data_mem[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rd_data_wb[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rd_mem[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rd_wb[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rs1_ex[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.f_rs2_ex[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rd_data_mem[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rd_data_wb[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rd_mem[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rd_wb[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rs1_ex[31:0]}]}
-	} ]]
-set id [waveform add -signals [subst  {
-	{simulator::[format {tb_RISCVBusiness_self_test.DUT.bypass_if.rs2_ex[31:0]}]}
-	} ]]
-
-waveform xview limits 0 1499520ps
-
-#
-# Waveform Window Links
-#
-
-#
-# Console windows
-#
-console set -windowname Console
-window geometry Console 730x250+1054+117
-
-#
-# Layout selection
-#
-
diff --git a/smalladd.S b/smalladd.S
new file mode 100644
index 0000000..2e82a74
--- /dev/null
+++ b/smalladd.S
@@ -0,0 +1,41 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     basic_branch.S
+*
+*   Created by:   Jacob R. Stevens
+*   Email:        steven69@purdue.edu
+*   Date Created: 07/01/2016
+*   Description:  Test of basic branching behavior
+*/
+
+
+main:
+  li x1, 0x5
+  li x2, 0x3
+  li x3, 0x3
+  li x4, 0x3
+  nop
+  nop
+  nop
+  nop
+  nop
+  nop
+label:
+  j label
+.data
+#test data goes here
+tdat0:  .word 0x00000080
diff --git a/source_code/INCA_libs/.history.lock b/source_code/INCA_libs/.history.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/history b/source_code/INCA_libs/history
deleted file mode 100644
index 5bd6297..0000000
--- a/source_code/INCA_libs/history
+++ /dev/null
@@ -1,7 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-
-s1::(11Mar2022:19:01:20):( irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv )
-s2::(11Mar2022:19:04:30):( irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv )
-s3::(21Mar2022:19:05:41):( irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv )
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_1.sva b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_1.sva
deleted file mode 100644
index d60a9d8..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_1.sva
+++ /dev/null
@@ -1,23 +0,0 @@
-vunit cds_psl1 (pipe5_writeback_stage) {
-(*cds_generated_bind_instance*)
-`line 86 "./tb/tb_RISCVBusiness_self_test.sv" 0
-cpu_tracker cpu_track1 (
-.CLK(CLK), 
-.wb_stall(wb_stall), 
-.instr(mem_wb_if.instr), 
-.pc(mem_wb_if.pc), 
-.opcode(mem_wb_if.opcode), 
-.funct3(mem_wb_if.funct3), 
-.funct12(mem_wb_if.funct12), 
-.rs1(mem_wb_if.rs1), 
-.rs2(mem_wb_if.rs2), 
-.rd(mem_wb_if.reg_rd), 
-.imm_S(mem_wb_if.imm_S), 
-.imm_I(mem_wb_if.imm_I), 
-.imm_U(mem_wb_if.imm_U), 
-.imm_UJ(mem_wb_if.imm_UJ_ext), 
-.imm_SB(mem_wb_if.imm_SB), 
-.instr_30(mem_wb_if.instr_30));
-
-}
-
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_2.sva b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_2.sva
deleted file mode 100644
index 07c300b..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_000006ca_2e805304_2.sva
+++ /dev/null
@@ -1,12 +0,0 @@
-vunit cds_psl2 (branch_predictor_wrapper) {
-(*cds_generated_bind_instance*)
-`line 105 "./tb/tb_RISCVBusiness_self_test.sv" 0
-branch_tracker branch_perf (
-.CLK(CLK), 
-.nRST(nRST), 
-.update_predictor(predict_if.update_predictor), 
-.prediction(predict_if.prediction), 
-.branch_result(predict_if.branch_result));
-
-}
-
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva
deleted file mode 100644
index d60a9d8..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva
+++ /dev/null
@@ -1,23 +0,0 @@
-vunit cds_psl1 (pipe5_writeback_stage) {
-(*cds_generated_bind_instance*)
-`line 86 "./tb/tb_RISCVBusiness_self_test.sv" 0
-cpu_tracker cpu_track1 (
-.CLK(CLK), 
-.wb_stall(wb_stall), 
-.instr(mem_wb_if.instr), 
-.pc(mem_wb_if.pc), 
-.opcode(mem_wb_if.opcode), 
-.funct3(mem_wb_if.funct3), 
-.funct12(mem_wb_if.funct12), 
-.rs1(mem_wb_if.rs1), 
-.rs2(mem_wb_if.rs2), 
-.rd(mem_wb_if.reg_rd), 
-.imm_S(mem_wb_if.imm_S), 
-.imm_I(mem_wb_if.imm_I), 
-.imm_U(mem_wb_if.imm_U), 
-.imm_UJ(mem_wb_if.imm_UJ_ext), 
-.imm_SB(mem_wb_if.imm_SB), 
-.instr_30(mem_wb_if.instr_30));
-
-}
-
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_2.sva b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_2.sva
deleted file mode 100644
index 07c300b..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_2.sva
+++ /dev/null
@@ -1,12 +0,0 @@
-vunit cds_psl2 (branch_predictor_wrapper) {
-(*cds_generated_bind_instance*)
-`line 105 "./tb/tb_RISCVBusiness_self_test.sv" 0
-branch_tracker branch_perf (
-.CLK(CLK), 
-.nRST(nRST), 
-.update_predictor(predict_if.update_predictor), 
-.prediction(predict_if.prediction), 
-.branch_result(predict_if.branch_result));
-
-}
-
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncelab_args.bnd b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncelab_args.bnd
deleted file mode 100644
index 1028e86..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncelab_args.bnd
+++ /dev/null
@@ -1 +0,0 @@
--f /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args -CHECK_VERSION "TOOL:	irun(64)	15.20-s030" -LOG_FD 4 -reinvoke ./INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/stf_00003b1c_2e808960.txt -symreinvoke extbind_reinvoke -nocopyright -append_log 
\ No newline at end of file
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncvlog_args.bnd b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncvlog_args.bnd
deleted file mode 100644
index cbe5ac3..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/ncvlog_args.bnd
+++ /dev/null
@@ -1,54 +0,0 @@
--MSS\ 
--dumpxst\ 
-pipe5_writeback_stage_0x32f57663\ 
--LOG_FD\ 
-4\ 
--neverwarn\ 
--reduce_messages\ 
--nocopyright\ 
--specificunit\ 
-worklib.pipe5_writeback_stage:sv\ 
--INCDIR\ 
-.\ 
--INCDIR\ 
-./include\ 
--cdslib\ 
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib\ 
--hdlvar\ 
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var\ 
--runmode\ 
--dumpxst\ 
-branch_predictor_wrapper_0x36ae9a84\ 
--specificunit\ 
-worklib.branch_predictor_wrapper:sv\ 
--INCDIR\ 
-.\ 
--INCDIR\ 
-./include\ 
--propfile ./INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva \ 
--propfile ./INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_2.sva \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32i_types_pkg.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/alu_types_pkg.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_1_11_pkg.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_pkg.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32f_types_pkg.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rv32f_reg_file.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/FPU_top_level.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/alu.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/branch_res.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/control_unit.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/dmem_extender.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/endian_swapper.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/jump_calc.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/RISCVBusiness.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/tb/tb_RISCVBusiness_self_test.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_block.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/branch_tracker.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/cpu_tracker.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv \ 
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/branch_predictor_wrapper.sv \ 
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl.file b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl.file
deleted file mode 100644
index 0120e32..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl.file
+++ /dev/null
@@ -1,24 +0,0 @@
-./rv32f_reg_file_if.vh
-./FPU_if.vh
-./alu_if.vh
-./branch_res_if.vh
-./control_unit_if.vh
-./rv32i_reg_file_if.vh
-./risc_mgmt_if.vh
-./component_selection_defines.vh
-./decompressor_if.vh
-./jump_calc_if.vh
-./pipe5_fetch1_fetch2_if.vh
-./predictor_pipeline_if.vh
-./pipe5_hazard_unit_if.vh
-./pipe5_fetch2_decode_if.vh
-./generic_bus_if.vh
-./pipe5_decode_execute_if.vh
-./pipe5_execute_mem_if.vh
-./pipe5_forwarding_unit_if.vh
-./pipe5_mem_writeback_if.vh
-./cache_control_if.vh
-./prv_pipeline_if.vh
-./ahb_if.vh
-./core_interrupt_if.vh
-./priv_1_11_internal_if.vh
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl2.file b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl2.file
deleted file mode 100644
index f7fd2c8..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.incl2.file
+++ /dev/null
@@ -1,198 +0,0 @@
-./include/rv32f_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32f_reg_file_if.vh
-./include/FPU_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/FPU_if.vh
-./include/FPU_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/FPU_if.vh
-./include/alu_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/alu_if.vh
-./include/branch_res_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/branch_res_if.vh
-./include/control_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/control_unit_if.vh
-./include/rv32i_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32i_reg_file_if.vh
-./include/risc_mgmt_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/risc_mgmt_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/decompressor_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/decompressor_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/jump_calc_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/jump_calc_if.vh
-./include/rv32i_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32i_reg_file_if.vh
-./include/pipe5_fetch1_fetch2_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_fetch1_fetch2_if.vh
-./include/predictor_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/predictor_pipeline_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/pipe5_fetch1_fetch2_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_fetch1_fetch2_if.vh
-./include/pipe5_fetch2_decode_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_fetch2_decode_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/pipe5_fetch2_decode_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_fetch2_decode_if.vh
-./include/pipe5_decode_execute_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_decode_execute_if.vh
-./include/control_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/control_unit_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/rv32i_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32i_reg_file_if.vh
-./include/rv32f_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32f_reg_file_if.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/pipe5_decode_execute_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_decode_execute_if.vh
-./include/pipe5_execute_mem_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_execute_mem_if.vh
-./include/pipe5_forwarding_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_forwarding_unit_if.vh
-./include/jump_calc_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/jump_calc_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/alu_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/alu_if.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/FPU_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/FPU_if.vh
-./include/pipe5_mem_writeback_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_mem_writeback_if.vh
-./include/pipe5_execute_mem_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_execute_mem_if.vh
-./include/pipe5_forwarding_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_forwarding_unit_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/cache_control_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/cache_control_if.vh
-./include/predictor_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/predictor_pipeline_if.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/prv_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/prv_pipeline_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/pipe5_mem_writeback_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_mem_writeback_if.vh
-./include/pipe5_forwarding_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_forwarding_unit_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/rv32i_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32i_reg_file_if.vh
-./include/pipe5_forwarding_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_forwarding_unit_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/ahb_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/ahb_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/cache_control_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/cache_control_if.vh
-./include/core_interrupt_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/core_interrupt_if.vh
-./include/pipe5_fetch1_fetch2_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_fetch1_fetch2_if.vh
-./include/pipe5_decode_execute_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_decode_execute_if.vh
-./include/pipe5_execute_mem_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_execute_mem_if.vh
-./include/pipe5_mem_writeback_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_mem_writeback_if.vh
-./include/pipe5_forwarding_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_forwarding_unit_if.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/rv32i_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32i_reg_file_if.vh
-./include/rv32f_reg_file_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/rv32f_reg_file_if.vh
-./include/jump_calc_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/jump_calc_if.vh
-./include/branch_res_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/branch_res_if.vh
-./include/predictor_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/predictor_pipeline_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/prv_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/prv_pipeline_if.vh
-./include/pipe5_hazard_unit_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/pipe5_hazard_unit_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/cache_control_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/cache_control_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/cache_control_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/cache_control_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/predictor_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/predictor_pipeline_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/predictor_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/predictor_pipeline_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/generic_bus_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/generic_bus_if.vh
-./include/prv_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/prv_pipeline_if.vh
-./include/core_interrupt_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/core_interrupt_if.vh
-./include/prv_pipeline_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/prv_pipeline_if.vh
-./include/priv_1_11_internal_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/priv_1_11_internal_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/core_interrupt_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/core_interrupt_if.vh
-./include/priv_1_11_internal_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/priv_1_11_internal_if.vh
-./include/priv_1_11_internal_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/priv_1_11_internal_if.vh
-./include/component_selection_defines.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/component_selection_defines.vh
-./include/priv_1_11_internal_if.vh
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/include/priv_1_11_internal_if.vh
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.nclib.lock b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.nclib.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.ncrun.lock b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.ncrun.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.ncv.lock b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.ncv.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts b/source_code/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts
deleted file mode 100644
index 7a3f9b6..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts
+++ /dev/null
@@ -1,68 +0,0 @@
-1643860774 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/branch_res.sv
-1646091536 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder_sub.sv
-1646090359 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step2.sv
-1647653567 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/pass_through/pass_through_cache.sv
-1645388226 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32i_types_pkg.sv
-1646090711 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step2.sv
-1645914094 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/RISCVBusiness.sv
-1646090918 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_compare.sv
-1646091312 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/c_to_cp.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_block.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_pipeline_control.sv
-1644099751 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/cpu_tracker.sv
-1644552060 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_control.sv
-1646091445 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_8b.sv
-1646090545 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step2.sv
-1646090882 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/determine_frac_status.sv
-1646091471 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/left_shift.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/caches_wrapper.sv
-1646090910 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sign_determine.sv
-1646091324 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sub_26b.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/bus_bridges/generic_nonpipeline.sv
-1643860775 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/branch_tracker.sv
-1644017177 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/alu.sv
-1646092046 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/clock_counter.sv
-1646091907 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/FPU_top_level.sv
-1647645785 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32f_types_pkg.sv
-1643860771 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/branch_predictor_wrapper.sv
-1646091539 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder.sv
-1646090354 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step1.sv
-1644551012 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/separate_caches.sv
-1646091439 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_26b.sv
-1644554307 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/tb/tb_RISCVBusiness_self_test.sv
-1646090708 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step1.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/dmem_extender.sv
-1647653481 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
-1643860771 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/nottaken_predictor/nottaken_predictor.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
-1646090946 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/u_to_s.sv
-1647485383 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
-1646090363 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step3.sv
-1646090326 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step1.sv
-1647653541 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/control_unit.sv
-1644099749 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_pkg.sv
-1646090714 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step3.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_sim_model.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_wrapper.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/config_ram_wrapper.sv
-1646090313 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/mul_26b.sv
-1643860774 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/endian_swapper.sv
-1647646679 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
-1646091479 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/subtract.sv
-1644017177 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/rv32i_reg_file.sv
-1644554307 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/jump_calc.sv
-1646091331 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/s_to_u.sv
-1644552060 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/memory_controller.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/alu_types_pkg.sv
-1646090901 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_comparesub.sv
-1646090930 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/right_shift.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_1_11_pkg.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/pipe5_types_pkg.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
-1646366024 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
-1647654525 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rv32f_reg_file.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_wrapper.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME b/source_code/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME
deleted file mode 100644
index f4a13ef..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME
+++ /dev/null
@@ -1 +0,0 @@
-(null)
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME b/source_code/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME
deleted file mode 100644
index f4a13ef..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME
+++ /dev/null
@@ -1 +0,0 @@
-(null)
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664 b/source_code/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664
deleted file mode 100644
index 00ff296..0000000
Binary files a/source_code/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664 and /dev/null differ
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cds.lib b/source_code/INCA_libs/irun.lnx8664.15.20.nc/cds.lib
deleted file mode 100644
index 3890a55..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cds.lib
+++ /dev/null
@@ -1 +0,0 @@
-include ./cdsrun.lib
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib b/source_code/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_cdsrun.lib b/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_hdlrun.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_cdsrun.lib b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_hdlrun.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_1557_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_cdsrun.lib b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_hdlrun.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ecegrid-thin1.ecn.purdue.edu_18874_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/files.ts b/source_code/INCA_libs/irun.lnx8664.15.20.nc/files.ts
deleted file mode 100644
index b67368b..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/files.ts
+++ /dev/null
@@ -1,68 +0,0 @@
-1645388226 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32i_types_pkg.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/alu_types_pkg.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_1_11_pkg.sv
-1644099749 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_pkg.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/pipe5_types_pkg.sv
-1647645785 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32f_types_pkg.sv
-1647654525 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rv32f_reg_file.sv
-1646091907 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/FPU_top_level.sv
-1646092046 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/clock_counter.sv
-1646090354 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step1.sv
-1646090359 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step2.sv
-1646090363 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step3.sv
-1646090708 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step1.sv
-1646090711 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step2.sv
-1646090714 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step3.sv
-1646090326 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step1.sv
-1646090545 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step2.sv
-1646090313 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/mul_26b.sv
-1646090882 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/determine_frac_status.sv
-1646090901 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_comparesub.sv
-1646090910 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sign_determine.sv
-1646090918 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_compare.sv
-1646090930 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/right_shift.sv
-1646090946 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/u_to_s.sv
-1646091312 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/c_to_cp.sv
-1646091324 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sub_26b.sv
-1646091331 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/s_to_u.sv
-1646091439 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_26b.sv
-1646091445 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_8b.sv
-1646091471 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/left_shift.sv
-1646091479 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/subtract.sv
-1646091536 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder_sub.sv
-1646091539 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder.sv
-1644017177 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/alu.sv
-1643860774 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/branch_res.sv
-1647653541 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/control_unit.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/dmem_extender.sv
-1643860774 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/endian_swapper.sv
-1644554307 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/jump_calc.sv
-1644017177 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/rv32i_reg_file.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
-1647646679 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
-1647653567 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
-1647653481 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
-1647485383 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
-1644554306 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
-1645914094 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/RISCVBusiness.sv
-1646366024 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
-1644552060 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/memory_controller.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/caches_wrapper.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/pass_through/pass_through_cache.sv
-1644551012 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/separate_caches.sv
-1644554307 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/tb/tb_RISCVBusiness_self_test.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/config_ram_wrapper.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_sim_model.sv
-1643860773 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_wrapper.sv
-1643860771 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/branch_predictor_wrapper.sv
-1643860771 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/nottaken_predictor/nottaken_predictor.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
-1643860772 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/bus_bridges/generic_nonpipeline.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_wrapper.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_block.sv
-1644552060 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_control.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
-1644551013 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_pipeline_control.sv
-1643860775 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/branch_tracker.sv
-1644099751 /home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/cpu_tracker.sv
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdl.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdl.var
deleted file mode 100644
index 399eabe..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdl.var
+++ /dev/null
@@ -1,8 +0,0 @@
-define NCSIMRC	( /package/eda/cadence/INCISIVE152/tools/inca/files/ncsimrc, ~/.ncsimrc )
-include ./hdlrun.var
-include ./xllibs/hdl.var
-define SNAPSHOT worklib.risc_mgmt_if:vh
-DEFINE RUNMODEDEFAULT 1
-DEFINE LIB_MAP ( + => worklib )
-define ELAB_SNAPSHOT
-define SNAPSHOT worklib.risc_mgmt_if:vh
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
deleted file mode 100644
index 15141c2..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
+++ /dev/null
@@ -1,86 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
-define ELAB_SNAPSHOT
-define SNAPSHOT worklib.risc_mgmt_if:vh
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/irun.args b/source_code/INCA_libs/irun.lnx8664.15.20.nc/irun.args
deleted file mode 100644
index ac19e3e..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/irun.args
+++ /dev/null
@@ -1,79 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--access
-+rwc
--timescale
-1ns/100ps
--shm
-packages/rv32i_types_pkg.sv
-packages/alu_types_pkg.sv
-packages/machine_mode_types_1_11_pkg.sv
-packages/machine_mode_types_pkg.sv
-packages/pipe5_types_pkg.sv
-packages/rv32f_types_pkg.sv
--incdir
-./include
-rv32f/rv32f_reg_file.sv
-rv32f/FPU_top_level.sv
-rv32f/clock_counter.sv
-rv32f/ADD_step1.sv
-rv32f/ADD_step2.sv
-rv32f/ADD_step3.sv
-rv32f/SUB_step1.sv
-rv32f/SUB_step2.sv
-rv32f/SUB_step3.sv
-rv32f/MUL_step1.sv
-rv32f/MUL_step2.sv
-rv32f/mul_26b.sv
-rv32f/determine_frac_status.sv
-rv32f/int_comparesub.sv
-rv32f/sign_determine.sv
-rv32f/int_compare.sv
-rv32f/right_shift.sv
-rv32f/u_to_s.sv
-rv32f/c_to_cp.sv
-rv32f/sub_26b.sv
-rv32f/s_to_u.sv
-rv32f/adder_26b.sv
-rv32f/adder_8b.sv
-rv32f/left_shift.sv
-rv32f/subtract.sv
-rv32f/rounder_sub.sv
-rv32f/rounder.sv
-standard_core/alu.sv
-standard_core/branch_res.sv
-standard_core/control_unit.sv
-standard_core/dmem_extender.sv
-standard_core/endian_swapper.sv
-standard_core/jump_calc.sv
-standard_core/rv32i_reg_file.sv
-pipelines/pipe5/src/pipe5_fetch1_stage.sv
-pipelines/pipe5/src/pipe5_fetch2_stage.sv
-pipelines/pipe5/src/pipe5_decode_stage.sv
-pipelines/pipe5/src/pipe5_execute_stage.sv
-pipelines/pipe5/src/pipe5_memory_stage.sv
-pipelines/pipe5/src/pipe5_writeback_stage.sv
-pipelines/pipe5/src/pipe5_forwarding_unit.sv
-standard_core/RISCVBusiness.sv
-pipelines/pipe5/src/pipe5_hazard_unit.sv
-standard_core/memory_controller.sv
-caches/caches_wrapper.sv
-caches/pass_through/pass_through_cache.sv
-caches/separate_caches.sv
-tb/tb_RISCVBusiness_self_test.sv
-ram/config_ram_wrapper.sv
-ram/ram_sim_model.sv
-ram/ram_wrapper.sv
-branch_predictors/branch_predictor_wrapper.sv
-branch_predictors/nottaken_predictor/nottaken_predictor.sv
-caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
-bus_bridges/generic_nonpipeline.sv
-privs/priv_wrapper.sv
-privs/priv_1_11/priv_1_11_block.sv
-privs/priv_1_11/priv_1_11_control.sv
-privs/priv_1_11/priv_1_11_csr_rfile.sv
-privs/priv_1_11/priv_1_11_pipeline_control.sv
-trackers/branch_tracker.sv
-trackers/cpu_tracker.sv
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args
deleted file mode 100644
index 33037d8..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args
+++ /dev/null
@@ -1,19 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--ACCESS
-+rwc
--timescale
-1ns/100ps
--MESSAGES
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--WORK
-worklib
--HASXLMODE
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env
deleted file mode 100644
index 0cc872a..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd
deleted file mode 100644
index 16eb97d..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd
+++ /dev/null
@@ -1,8 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--ACCESS
-+rwc
--timescale
-1ns/100ps
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args
deleted file mode 100644
index da27f05..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args
+++ /dev/null
@@ -1,22 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--SHM_DYN_PROBE
--MESSAGES
-+EMGRLOG
-irun.log
--XLSTIME
-1647903941
--XLKEEP
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--XLNAME
-irun
--XLVERSION
-"TOOL:	irun(64)	15.20-s030"
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env
deleted file mode 100644
index 08c4271..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 FALSE>#>
-setenv IRUNBATCH "FALSE"
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args
deleted file mode 100644
index 5a3fec6..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args
+++ /dev/null
@@ -1,24 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--SHM_DYN_PROBE
--MESSAGES
-+EMGRLOG
-irun.log
--XLSTIME
-1647903941
--XLKEEP
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--XLNAME
-irun
--XLVERSION
-"TOOL:	irun(64)	15.20-s030"
--XLNAME
-./INCA_libs/irun.lnx8664.15.20.nc/cparch07.ecn.purdue.edu_15116
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env
deleted file mode 100644
index 08c4271..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 FALSE>#>
-setenv IRUNBATCH "FALSE"
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args
deleted file mode 100644
index 9a4a73f..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args
+++ /dev/null
@@ -1,86 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
-packages/rv32i_types_pkg.sv
-packages/alu_types_pkg.sv
-packages/machine_mode_types_1_11_pkg.sv
-packages/machine_mode_types_pkg.sv
-packages/pipe5_types_pkg.sv
-packages/rv32f_types_pkg.sv
--INCDIR
-./include
-rv32f/rv32f_reg_file.sv
-rv32f/FPU_top_level.sv
-rv32f/clock_counter.sv
-rv32f/ADD_step1.sv
-rv32f/ADD_step2.sv
-rv32f/ADD_step3.sv
-rv32f/SUB_step1.sv
-rv32f/SUB_step2.sv
-rv32f/SUB_step3.sv
-rv32f/MUL_step1.sv
-rv32f/MUL_step2.sv
-rv32f/mul_26b.sv
-rv32f/determine_frac_status.sv
-rv32f/int_comparesub.sv
-rv32f/sign_determine.sv
-rv32f/int_compare.sv
-rv32f/right_shift.sv
-rv32f/u_to_s.sv
-rv32f/c_to_cp.sv
-rv32f/sub_26b.sv
-rv32f/s_to_u.sv
-rv32f/adder_26b.sv
-rv32f/adder_8b.sv
-rv32f/left_shift.sv
-rv32f/subtract.sv
-rv32f/rounder_sub.sv
-rv32f/rounder.sv
-standard_core/alu.sv
-standard_core/branch_res.sv
-standard_core/control_unit.sv
-standard_core/dmem_extender.sv
-standard_core/endian_swapper.sv
-standard_core/jump_calc.sv
-standard_core/rv32i_reg_file.sv
-pipelines/pipe5/src/pipe5_fetch1_stage.sv
-pipelines/pipe5/src/pipe5_fetch2_stage.sv
-pipelines/pipe5/src/pipe5_decode_stage.sv
-pipelines/pipe5/src/pipe5_execute_stage.sv
-pipelines/pipe5/src/pipe5_memory_stage.sv
-pipelines/pipe5/src/pipe5_writeback_stage.sv
-pipelines/pipe5/src/pipe5_forwarding_unit.sv
-standard_core/RISCVBusiness.sv
-pipelines/pipe5/src/pipe5_hazard_unit.sv
-standard_core/memory_controller.sv
-caches/caches_wrapper.sv
-caches/pass_through/pass_through_cache.sv
-caches/separate_caches.sv
-tb/tb_RISCVBusiness_self_test.sv
-ram/config_ram_wrapper.sv
-ram/ram_sim_model.sv
-ram/ram_wrapper.sv
-branch_predictors/branch_predictor_wrapper.sv
-branch_predictors/nottaken_predictor/nottaken_predictor.sv
-caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
-bus_bridges/generic_nonpipeline.sv
-privs/priv_wrapper.sv
-privs/priv_1_11/priv_1_11_block.sv
-privs/priv_1_11/priv_1_11_control.sv
-privs/priv_1_11/priv_1_11_csr_rfile.sv
-privs/priv_1_11/priv_1_11_pipeline_control.sv
-trackers/branch_tracker.sv
-trackers/cpu_tracker.sv
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
--MESSAGES
--UPDATE
--XLLIBSTORE
-./INCA_libs/irun.lnx8664.15.20.nc/xllibs
--ALLOWUNBOUND
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env
deleted file mode 100644
index 0cc872a..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files
deleted file mode 100644
index aa984c7..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files
+++ /dev/null
@@ -1,72 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32i_types_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/alu_types_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_1_11_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/machine_mode_types_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/pipe5_types_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/packages/rv32f_types_pkg.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rv32f_reg_file.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/FPU_top_level.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/clock_counter.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step1.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step2.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/ADD_step3.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step1.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step2.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/SUB_step3.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step1.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/MUL_step2.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/mul_26b.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/determine_frac_status.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_comparesub.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sign_determine.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/int_compare.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/right_shift.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/u_to_s.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/c_to_cp.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/sub_26b.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/s_to_u.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_26b.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/adder_8b.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/left_shift.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/subtract.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder_sub.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/rv32f/rounder.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/alu.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/branch_res.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/control_unit.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/dmem_extender.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/endian_swapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/jump_calc.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/rv32i_reg_file.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/RISCVBusiness.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/standard_core/memory_controller.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/caches_wrapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/pass_through/pass_through_cache.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/separate_caches.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/tb/tb_RISCVBusiness_self_test.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/config_ram_wrapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_sim_model.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/ram/ram_wrapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/branch_predictor_wrapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/branch_predictors/nottaken_predictor/nottaken_predictor.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/bus_bridges/generic_nonpipeline.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_wrapper.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_block.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_control.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/privs/priv_1_11/priv_1_11_pipeline_control.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/branch_tracker.sv
-/home/ecegridfs/a/socet90/AFTx06/RISCVBusiness/source_code/trackers/cpu_tracker.sv
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd b/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd
deleted file mode 100644
index 9858945..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd
+++ /dev/null
@@ -1,6 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--INCDIR
-./include
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/xllibs/.ncv.lock b/source_code/INCA_libs/irun.lnx8664.15.20.nc/xllibs/.ncv.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/irun.lnx8664.15.20.nc/xllibs/hdl.var b/source_code/INCA_libs/irun.lnx8664.15.20.nc/xllibs/hdl.var
deleted file mode 100644
index 4908648..0000000
--- a/source_code/INCA_libs/irun.lnx8664.15.20.nc/xllibs/hdl.var
+++ /dev/null
@@ -1,6 +0,0 @@
-define VIEW_MAP ( $VIEW_MAP \
-, .vh => vh \
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .vh => vh \
-)
diff --git a/source_code/INCA_libs/irun.nc b/source_code/INCA_libs/irun.nc
deleted file mode 120000
index 117750a..0000000
--- a/source_code/INCA_libs/irun.nc
+++ /dev/null
@@ -1 +0,0 @@
-irun.lnx8664.15.20.nc
\ No newline at end of file
diff --git a/source_code/INCA_libs/worklib/.cdsvmod b/source_code/INCA_libs/worklib/.cdsvmod
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/INCA_libs/worklib/.inca.db.150.lnx8664 b/source_code/INCA_libs/worklib/.inca.db.150.lnx8664
deleted file mode 100644
index ab998a3..0000000
Binary files a/source_code/INCA_libs/worklib/.inca.db.150.lnx8664 and /dev/null differ
diff --git a/source_code/INCA_libs/worklib/cdsinfo.tag b/source_code/INCA_libs/worklib/cdsinfo.tag
deleted file mode 100644
index 278d7fa..0000000
--- a/source_code/INCA_libs/worklib/cdsinfo.tag
+++ /dev/null
@@ -1 +0,0 @@
-CDSLIBRARY
diff --git a/source_code/INCA_libs/worklib/inca.lnx8664.150.pak b/source_code/INCA_libs/worklib/inca.lnx8664.150.pak
deleted file mode 100644
index a6578bc..0000000
Binary files a/source_code/INCA_libs/worklib/inca.lnx8664.150.pak and /dev/null differ
diff --git a/source_code/Makefile b/source_code/Makefile
deleted file mode 100644
index 0d7bf79..0000000
--- a/source_code/Makefile
+++ /dev/null
@@ -1,219 +0,0 @@
-# Eric Villasenor
-# evillase@gmail.com
-#
-# Makefile for system verilog or vhdl designs.
-#
-# you DON'T TOUCH THIS FILE!!!
-# I jest, you can mess with SIMTIME.
-# AND THAT IS IT!
-#
-
-# list of grid hosts
-GRIDHOSTS = ecegrid-lnx
-
-###############################because GRID is funny###########################
-ifneq (,$(findstring $(GRIDHOSTS), $(HOST)))
-%:
-	@$(if \
-		$(findstring $@, $(word 1, $(MAKECMDGOALS))), \
-		grid $(MAKE) $(MAKECMDGOALS) -$(MAKEFLAGS), \
-		echo "do nothing" > /dev/null)
-else
-###############################and i'm not laughing############################
-
-################################################################################
-# variables                                                                    #
-################################################################################
-
-# course libs and such
-COURSELIBS	= ${LIBS437}
-
-# directories
-SRCDIR			= source
-INCDIR			= include 
-TBDIR				= testbench
-MAPDIR			= mapped
-FPGADIR			= fpga
-SCRDIR			= scripts
-LIBDIR			= work
-DEPDIR			= .deps
-
-# commands and flags. 1/9/2020 mcj, added -suppress 12110 so simulation will run with -novopt
-#   novopt is deprecated in Questa 10.7a and later. Need to find better solution. 
-SYN					= synthesize
-MAKEDEP			= hdldep
-VSIM				= vsim -coverage #-suppress 12110
-VLOG				= vlog 
-VCOM				= vcom 
-VERFLAGS		= -sv +incdir+$(INCDIR) #+acc -sv12compat -mfcu -lint +incdir+$(INCDIR) -suppress 12110
-VHDFLAGS		= -93 +acc -lint
-SIMTIME			= -all
-
-# modelsim viewing options
-ifneq (0,$(words $(filter %.wav,$(MAKECMDGOALS))))
-# view waveform in graphical mode and load do file if there is one
-DOFILES			= $(notdir $(basename $(wildcard $(SCRDIR)/*.do)))
-DOFILE			= $(filter $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%_tb.wav=%), $(DOFILES))
-ifeq (1, $(words  $(DOFILE)))
-WAVDO				= do $(SCRDIR)/$(DOFILE).do
-else
-WAVDO				= add wave *
-endif
-SIMDO				= "view objects; $(WAVDO); run $(SIMTIME);" -onfinish stop
-else
-# view text output in cmdline mode
-SIMTERM			= -c
-SIMDO		= "run $(SIMTIME); exit;"
-endif
-
-# mapped files
-SYNTH				= $(filter $(MAKECMDGOALS:%.wav=%) \
-							$(MAKECMDGOALS:%.sim=%) $(MAKECMDGOALS:%_tb.sim=%) \
-							$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%_tb=%), \
-							$(notdir $(basename $(wildcard $(MAPDIR)/*.sv $(MAPDIR)/*.v $(MAPDIR)/*.vhd))))
-
-ifneq (,$(filter $(SYNTH), \
-	$(MAKECMDGOALS:%_tb=%) $(MAKECMDGOAlS:%_tb.sim=%) \
-	$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%.sim=%)))
-SYNDEF		=	+define+MAPPED
-#SIMSYN			= -sdftyp /=mapped/$(SYNTH)_v.sdo
-endif
-
-# v, sv or vhdl stems
-VLSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.v $(TBDIR)/*.v)))
-SVSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.sv $(TBDIR)/*.sv)))
-VHSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.vhd $(TBDIR)/*.vhd)))
-HDSTEM			= $(notdir $(basename $(wildcard $(INCDIR)/*.vh)))
-SRCSTEM			= $(VLSTEM) $(SVSTEM) $(VHSTEM)
-SRCS				= $(addsuffix .v,$(VLSTEM)) $(addsuffix .sv,$(SVSTEM)) $(addsuffix .vhd,$(VHSTEM))
-HDRS				= $(addsuffix .vh,$(HDSTEM))
-
-# dep files
-DEPS				= $(addsuffix .d, $(VLSTEM) $(SVSTEM) $(VHSTEM) $(HDSTEM))
-
-# no target files are made
-NODEPS			= help clean clean_asm clean_sim clean_map clean_deps clean_fpga
-
-################################################################################
-# config                                                                       #
-################################################################################
-
-# rules with no output file
-.PHONY:			$(NODEPS)
-
-# clear and set suffixes
-.SUFFIXES:
-.SUFFIXES: .vh .sv .vhd .d .v
-
-# set search paths
-vpath %.vh	$(INCDIR)/
-vpath %.v		$(SRCDIR)/ $(TBDIR)/
-vpath %.sv	$(MAPDIR)/ $(SRCDIR)/ $(TBDIR)/
-vpath %.vhd	$(SRCDIR)/ $(TBDIR)/
-vpath %.d		$(DEPDIR)/
-vpath %			$(DEPDIR)/
-
-# set default rule
-default: help
-
-# v,sv library search paths
-ifneq (0,$(words $(VLSTEM) $(SVSTEM)))
-SIMLIBS=$(addprefix -L ,$(filter %_ver,$(shell ls $(COURSELIBS))))
-endif
-
-# include dependencies
-ifeq (0,$(words $(findstring $(MAKECMDGOALS), $(NODEPS))))
-	# dash keeps this quiet
--include $(addprefix $(DEPDIR)/,$(DEPS))
-endif
-
-################################################################################
-# auto make rules                                                              #
-################################################################################
-
-# dependency rules
-$(DEPDIR):
-	@test -d $(DEPDIR) || mkdir $(DEPDIR)
-$(LIBDIR):
-	@test -d $(LIBDIR) || vlib $(LIBDIR)
-%.d: | $(DEPDIR)
-	@$(SHELL) -ec '$(MAKEDEP) ${*F} $(SRCDIR) $(TBDIR) $(INCDIR) \
-		| sed \
-		-e "s/$$/ $(filter ${*F}.v ${*F}.sv ${*F}.vhd ${*F}.vh,$(SRCS) $(HDRS))/" \
-		-e "s/\.[a-z]\+/&o/g" \
-		-e "s/^/${*F}: /" \
-		> $@'
-
-# header rules
-%.vho: %.vh | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# verilog rules
-%.vo: %.v | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# system verilog rules
-%.svo: %.sv | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# vhdl rules
-%.vhdo: %.vhd | $(LIBDIR)
-	$(VCOM) $(VHDFLAGS) $<
-	@touch $(DEPDIR)/$@
-
-# simulation rules
-%_tb.sim %_tb.wav %.sim %.wav: %_tb
-	@$(VSIM) $(SIMTERM) -do $(SIMDO) $(SIMLIBS) $(SIMSYN) -wlf $(addsuffix _tb,$*).wlf $(LIBDIR).$(addsuffix _tb,$*)
-
-# synthesis rules for mapped simulation
-%_tb.synf %.synf %_tb.synt %.synt %_tb.syn %.syn:
-	@$(SYN) $(if $(filter %.synt, $@),-t) $*
-	-@rm -f $(DEPDIR)/${*F}_tb.svo
-
-################################################################################
-# info clean up rules                                                          #
-################################################################################
-
-# cleaning rules
-clean: clean_sim clean_asm clean_map clean_deps clean_fpga
-
-clean_sim: clean_deps
-	@rm -rf $(LIBDIR) *.log *.wlf transcript
-
-clean_asm:
-	@rm -rf *.hex *.ver *.diff *.log
-
-clean_map:
-	@rm -rf $(MAPDIR)/* ._* *.summary *.log
-
-clean_fpga:
-	@rm -rf $(FPGADIR)/* ._*
-
-clean_deps:
-	@rm -rf $(DEPDIR) *.d
-
-help:
-	@echo ""
-	@echo "Hello $(USER)@$(HOST), you forgot some targets."
-	@echo "	If you need instructions to use this Makefile:"
-	@echo "		'make <module_name>' to build module"
-	@echo "		'make <module_name>_tb' to build module + testbench"
-	@echo "		'make <module_name>.sim' to sim tb on cmd line"
-	@echo "		'make <module_name>.wav' to sim tb with gui"
-	@echo "		'make <module_name>.syn' to synthesize functional net list"
-	@echo "		'make <module_name>.synt' to synthesize timing net list"
-	@echo "	Clean Rules:"
-	@echo "		'make clean' to clean everything"
-	@echo "		'make clean_sim' to clean simulation logs and work lib"
-	@echo "		'make clean_asm' to clean hex and testasm output"
-	@echo "		'make clean_map' to clean mapped dir"
-	@echo "		'make clean_fpga' to clean fpga dir"
-	@echo "	Obviously a testbench file must exist for some options."
-	@echo ""
-
-################################################################################
-endif # end GRID nonsense                                                      #
-################################################################################
diff --git a/source_code/dump.db/dump.db.dsn b/source_code/dump.db/dump.db.dsn
deleted file mode 100644
index 997bafa..0000000
Binary files a/source_code/dump.db/dump.db.dsn and /dev/null differ
diff --git a/source_code/dump.db/dump.db.trn b/source_code/dump.db/dump.db.trn
deleted file mode 100644
index e68cb6e..0000000
Binary files a/source_code/dump.db/dump.db.trn and /dev/null differ
diff --git a/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl b/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl
deleted file mode 100644
index 86960b4..0000000
--- a/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl
+++ /dev/null
@@ -1,48 +0,0 @@
-
-# NC-Sim Command File
-# TOOL:	ncsim(64)	15.20-s030
-#
-
-set tcl_prompt1 {puts -nonewline "ncsim> "}
-set tcl_prompt2 {puts -nonewline "> "}
-set vlog_format %h
-set vhdl_format %v
-set real_precision 6
-set display_unit auto
-set time_unit module
-set heap_garbage_size -200
-set heap_garbage_time 0
-set assert_report_level note
-set assert_stop_level error
-set autoscope yes
-set assert_1164_warnings yes
-set pack_assert_off {}
-set severity_pack_assert_off {note warning}
-set assert_output_stop_level failed
-set tcl_debug_level 0
-set relax_path_name 1
-set vhdl_vcdmap XX01ZX01X
-set intovf_severity_level ERROR
-set probe_screen_format 0
-set rangecnst_severity_level ERROR
-set textio_severity_level ERROR
-set vital_timing_checks_on 1
-set vlog_code_show_force 0
-set assert_count_attempts 1
-set tcl_all64 false
-set tcl_runerror_exit false
-set assert_report_incompletes 0
-set show_force 1
-set force_reset_by_reinvoke 0
-set tcl_relaxed_literal 0
-set probe_exclude_patterns {}
-set probe_packed_limit 4k
-set probe_unpacked_limit 16k
-set assert_internal_msg no
-set svseed 1
-set assert_reporting_mode 0
-alias . run
-alias iprof profile
-alias quit exit
-
-simvision -input /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/.simvision/6925_socet19__autosave.tcl.svcf
diff --git a/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl.svcf b/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl.svcf
deleted file mode 100644
index 81a202a..0000000
--- a/source_code/fpu_integration/.simvision/6925_socet19__autosave.tcl.svcf
+++ /dev/null
@@ -1,69 +0,0 @@
-
-#
-# Preferences
-#
-preferences set toolbar-Standard-WatchWindow {
-  usual
-  shown 0
-}
-preferences set plugin-enable-svdatabrowser-new 1
-preferences set toolbar-Windows-WatchWindow {
-  usual
-  shown 0
-}
-preferences set toolbar-sendToIndago-WaveWindow {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Standard-Console {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Search-Console {
-  usual
-  position -pos 2
-}
-preferences set plugin-enable-groupscope 0
-preferences set plugin-enable-interleaveandcompare 0
-preferences set plugin-enable-waveformfrequencyplot 0
-preferences set toolbar-SimControl-WatchWindow {
-  usual
-  shown 0
-}
-preferences set whats-new-dont-show-at-startup 1
-preferences set toolbar-TimeSearch-WatchWindow {
-  usual
-  shown 0
-}
-
-#
-# Mnemonic Maps
-#
-mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
-{%c=TRUE -edgepriority 1 -shape high}}
-mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
-{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=* -label %x -linecolor gray -shape bus}}
-
-#
-# Design Browser windows
-#
-if {[catch {window new WatchList -name "Design Browser 1" -geometry 1826x811+1285+19}] != ""} {
-    window geometry "Design Browser 1" 1826x811+1285+19
-}
-window target "Design Browser 1" on
-browser using {Design Browser 1}
-browser set \
-    -signalsort name
-browser timecontrol set -lock 0
-
-#
-# Console windows
-#
-console set -windowname Console
-window geometry Console 1830x356+1283+867
-
-#
-# Layout selection
-#
diff --git a/source_code/fpu_integration/.simvision/dbrowser-bookmarks b/source_code/fpu_integration/.simvision/dbrowser-bookmarks
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/.simvision/schematic-bookmarks b/source_code/fpu_integration/.simvision/schematic-bookmarks
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/.simvision/source-bookmarks b/source_code/fpu_integration/.simvision/source-bookmarks
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/.history.lock b/source_code/fpu_integration/INCA_libs/.history.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/history b/source_code/fpu_integration/INCA_libs/history
deleted file mode 100644
index ef14501..0000000
--- a/source_code/fpu_integration/INCA_libs/history
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-
-s1::(28Jun2020:20:30:14):( irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s2::(28Jun2020:20:30:59):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s3::(28Jun2020:20:32:03):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s4::(01Jul2020:15:52:11):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s5::(01Jul2020:15:55:03):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s6::(01Jul2020:16:06:37):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s7::(01Jul2020:16:16:03):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s8::(01Jul2020:16:49:08):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s9::(04Jul2020:15:46:26):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s10::(04Jul2020:16:21:13):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s11::(04Jul2020:16:21:29):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s12::(04Jul2020:16:22:16):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s13::(04Jul2020:16:25:51):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s14::(04Jul2020:16:29:20):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s15::(04Jul2020:16:29:37):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s16::(04Jul2020:16:32:05):( /package/eda/cadence/INCISIVE152/tools/bin/64bit/irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv -input restore.tcl )
-s17::(04Jul2020:16:37:19):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s18::(04Jul2020:16:51:02):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s19::(04Jul2020:17:02:58):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s20::(04Jul2020:17:08:47):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s21::(04Jul2020:17:24:43):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s22::(04Jul2020:17:28:14):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s23::(04Jul2020:17:31:51):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s24::(08Jul2020:17:03:02):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
-s25::(08Jul2020:17:18:31):( irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv )
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.nclib.lock b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.nclib.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.ncrun.lock b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.ncrun.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.ncv.lock b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.ncv.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts
deleted file mode 100644
index 50f6cdf..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/.timestamp.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-1594242420 /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/fpu.v
-1594242223 /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/tb_FPU_top_level.sv
-1578275498 /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/MITLL90_STDLIB_8T.v
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME
deleted file mode 100644
index f4a13ef..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/OVMHOME
+++ /dev/null
@@ -1 +0,0 @@
-(null)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME
deleted file mode 100644
index f4a13ef..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/UVMHOME
+++ /dev/null
@@ -1 +0,0 @@
-(null)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_11911_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12383_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_12868_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13498_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_13866_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_17969_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_19967_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21827_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_21909_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_22847_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2297_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2346_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_24212_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_2680_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_28899_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3282_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_3367_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6948_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8225_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_hdlrun.var
deleted file mode 100644
index 0c8f216..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_8806_hdlrun.var
+++ /dev/null
@@ -1,84 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664 b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664
deleted file mode 100644
index 3cf02d7..0000000
Binary files a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/bind.lst.lnx8664 and /dev/null differ
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cds.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cds.lib
deleted file mode 100644
index 3890a55..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cds.lib
+++ /dev/null
@@ -1 +0,0 @@
-include ./cdsrun.lib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
deleted file mode 100644
index 032efe7..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
+++ /dev/null
@@ -1,2 +0,0 @@
-SOFTINCLUDE /package/eda/cadence/INCISIVE152/tools/inca/files/cds.lib
-define worklib ../worklib
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/files.ts b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/files.ts
deleted file mode 100644
index cde967b..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/files.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-1578275498 /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/MITLL90_STDLIB_8T.v
-1594242420 /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/fpu.v
-1594242223 /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/tb_FPU_top_level.sv
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.args
deleted file mode 100644
index 5486a5d..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.args
+++ /dev/null
@@ -1,9 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-+NoArgsToLog
--COVERAGE
-all
--COVOVERWRITE
--UPDATE
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.env
deleted file mode 100644
index e22b04f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalbuild.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.args
deleted file mode 100644
index 85bae78..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.args
+++ /dev/null
@@ -1,9 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--gui
--COVERAGE
-all
--COVOVERWRITE
--MESSAGES
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.env
deleted file mode 100644
index e22b04f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/formalverifier.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdl.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdl.var
deleted file mode 100644
index 972761b..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdl.var
+++ /dev/null
@@ -1,7 +0,0 @@
-define NCSIMRC	( /package/eda/cadence/INCISIVE152/tools/inca/files/ncsimrc, ~/.ncsimrc )
-include ./hdlrun.var
-define SNAPSHOT worklib.and3_4x:v
-DEFINE RUNMODEDEFAULT 1
-DEFINE LIB_MAP ( + => worklib )
-define ELAB_SNAPSHOT
-define SNAPSHOT worklib.and3_4x:v
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
deleted file mode 100644
index 353e93e..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
+++ /dev/null
@@ -1,86 +0,0 @@
-DEFINE LANG_MAP (\
-	.v => verilog,\
-	.vp => verilog,\
-	.vs => verilog,\
-	.V => verilog,\
-	.VP => verilog,\
-	.VS => verilog,\
-	.v95 => verilog95,\
-	.v95p => verilog95,\
-	.V95 => verilog95,\
-	.V95P => verilog95,\
-	.vhd => vhdl,\
-	.vhdp => vhdl,\
-	.vhdl => vhdl,\
-	.vhdlp => vhdl,\
-	.VHDL => vhdl,\
-	.VHDLP => vhdl,\
-	.VHD => vhdl,\
-	.VHDP => vhdl,\
-	.e => e,\
-	.E => e,\
-	.elib => elib,\
-	.ELIB => elib,\
-	.viplib => elib,\
-	.VIPLIB => elib,\
-	.sv => systemverilog,\
-	.svp => systemverilog,\
-	.SV => systemverilog,\
-	.SVP => systemverilog,\
-	.svi => systemverilog,\
-	.svh => systemverilog,\
-	.vlib => systemverilog,\
-	.VLIB => systemverilog,\
-	.vams => verilog-ams,\
-	.VAMS => verilog-ams,\
-	.svams => sv-ams,\
-	.SVAMS => sv-ams,\
-	.svms => sv-ams,\
-	.SVMS => sv-ams,\
-	.vha => vhdl-ams,\
-	.VHA => vhdl-ams,\
-	.vhams => vhdl-ams,\
-	.VHAMS => vhdl-ams,\
-	.vhms => vhdl-ams,\
-	.VHMS => vhdl-ams,\
-	.scs => scs,\
-	.sp => scs,\
-	.s => assembly,\
-	.c => c,\
-	.o => o,\
-	.cpp => cpp,\
-	.cc => cpp,\
-	.a => a,\
-	.so => so,\
-	.sl => so,\
-	.pslvlog => psl_vlog,\
-	.pslvhdl => psl_vhdl,\
-	.pslsc => psl_sc,\
-	.vhcfg => vhcfg,\
-	.vhcfgp => vhcfg,\
-	DEF => unknown\
-)
-define VIEW_MAP ( $VIEW_MAP \
-, .v => v \
-, .vp => vp \
-, .vs => vs \
-, .V => V \
-, .VP => VP \
-, .VS => VS \
-, .sv => sv \
-, .svp => svp \
-, .SV => SV \
-, .SVP => SVP \
-, .svi => svi \
-, .svh => svh \
-, .vlib => vlib \
-, .VLIB => VLIB \
-, .vams => vams \
-, .VAMS => VAMS \
-, .svams => svams \
-, .SVAMS => SVAMS \
-, .svms => svms \
-, .SVMS => SVMS \
-)
-define ELAB_SNAPSHOT
-define SNAPSHOT worklib.ao21_4x:v
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/irun.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/irun.args
deleted file mode 100644
index fbfb629..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/irun.args
+++ /dev/null
@@ -1,16 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--gui
--access
-+rwc
-+nctimescale+1ns/1ns
--coverage
-all
--covoverwrite
--define
-MAPPED
-/package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v
-fpu.v
-source/tb_FPU_top_level.sv
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args
deleted file mode 100644
index 20d9e40..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.args
+++ /dev/null
@@ -1,22 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-+nctimescale+1ns/1ns
--ACCESS
-+rwc
--timescale
-1ns/1ns
--COVERAGE
-all
--MESSAGES
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--WORK
-worklib
--HASXLMODE
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env
deleted file mode 100644
index e22b04f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd
deleted file mode 100644
index 793a4ec..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncelab.hrd
+++ /dev/null
@@ -1,10 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--ACCESS
-+rwc
--timescale
-1ns/1ns
--COVERAGE
-all
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args
deleted file mode 100644
index 8a3423f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.args
+++ /dev/null
@@ -1,24 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-+nctimescale+1ns/1ns
--gui
--COVOVERWRITE
--MESSAGES
-+EMGRLOG
-irun.log
--XLSTIME
-1594243111
--XLKEEP
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--XLNAME
-irun
--XLVERSION
-"TOOL:	irun(64)	15.20-s030"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env
deleted file mode 100644
index 08c4271..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 FALSE>#>
-setenv IRUNBATCH "FALSE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args
deleted file mode 100644
index 86c371b..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.args
+++ /dev/null
@@ -1,26 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-+nctimescale+1ns/1ns
--gui
--COVOVERWRITE
--MESSAGES
-+EMGRLOG
-irun.log
--XLSTIME
-1594243111
--XLKEEP
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cds.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdl.var
--XLNAME
-irun
--XLVERSION
-"TOOL:	irun(64)	15.20-s030"
--XLNAME
-./INCA_libs/irun.lnx8664.15.20.nc/asicfab.ecn.purdue.edu_6915
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env
deleted file mode 100644
index 08c4271..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncsim_restart.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 FALSE>#>
-setenv IRUNBATCH "FALSE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args
deleted file mode 100644
index 5d60cb6..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.args
+++ /dev/null
@@ -1,21 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--XLMODE
-./INCA_libs/irun.lnx8664.15.20.nc
--RUNMODE
--DEFINE
-MAPPED
-/package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v
-fpu.v
-source/tb_FPU_top_level.sv
--CDSLIB
-./INCA_libs/irun.lnx8664.15.20.nc/cdsrun.lib
--HDLVAR
-./INCA_libs/irun.lnx8664.15.20.nc/hdlrun.var
--MESSAGES
--UPDATE
--XLLIBSTORE
-./INCA_libs/irun.lnx8664.15.20.nc/xllibs
--ALLOWUNBOUND
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env
deleted file mode 100644
index e22b04f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.env
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/csh
-#
-# File created by:  irun
-# Do not modify this file
-#
-#<< :  <#3 irun:/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/INCA_libs/irun.lnx8664.15.20.nc>#> <#3 irun:./INCA_libs/irun.lnx8664.15.20.nc>#>
-setenv NCRUNMODE "irun:./INCA_libs/irun.lnx8664.15.20.nc"
-#<< :  <#3 TRUE>#>
-setenv IRUNBATCH "TRUE"
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files
deleted file mode 100644
index 3130428..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.files
+++ /dev/null
@@ -1,7 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
-/package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/MITLL90_STDLIB_8T.v
-/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/fpu.v
-/home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/tb_FPU_top_level.sv
diff --git a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd b/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd
deleted file mode 100644
index 4d2542f..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.lnx8664.15.20.nc/ncvlog.hrd
+++ /dev/null
@@ -1,6 +0,0 @@
-//
-// File created by:  irun
-// Do not modify this file
-//
--DEFINE
-MAPPED
diff --git a/source_code/fpu_integration/INCA_libs/irun.nc b/source_code/fpu_integration/INCA_libs/irun.nc
deleted file mode 120000
index 117750a..0000000
--- a/source_code/fpu_integration/INCA_libs/irun.nc
+++ /dev/null
@@ -1 +0,0 @@
-irun.lnx8664.15.20.nc
\ No newline at end of file
diff --git a/source_code/fpu_integration/INCA_libs/worklib/.cdsvmod b/source_code/fpu_integration/INCA_libs/worklib/.cdsvmod
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/fpu_integration/INCA_libs/worklib/.inca.db.150.lnx8664 b/source_code/fpu_integration/INCA_libs/worklib/.inca.db.150.lnx8664
deleted file mode 100644
index 7515420..0000000
Binary files a/source_code/fpu_integration/INCA_libs/worklib/.inca.db.150.lnx8664 and /dev/null differ
diff --git a/source_code/fpu_integration/INCA_libs/worklib/cdsinfo.tag b/source_code/fpu_integration/INCA_libs/worklib/cdsinfo.tag
deleted file mode 100644
index 278d7fa..0000000
--- a/source_code/fpu_integration/INCA_libs/worklib/cdsinfo.tag
+++ /dev/null
@@ -1 +0,0 @@
-CDSLIBRARY
diff --git a/source_code/fpu_integration/INCA_libs/worklib/inca.lnx8664.150.pak b/source_code/fpu_integration/INCA_libs/worklib/inca.lnx8664.150.pak
deleted file mode 100644
index 35c0706..0000000
Binary files a/source_code/fpu_integration/INCA_libs/worklib/inca.lnx8664.150.pak and /dev/null differ
diff --git a/source_code/fpu_integration/Makefile_hdl b/source_code/fpu_integration/Makefile_hdl
deleted file mode 100644
index 017639e..0000000
--- a/source_code/fpu_integration/Makefile_hdl
+++ /dev/null
@@ -1,219 +0,0 @@
-# Eric Villasenor
-# evillase@gmail.com
-#
-# Makefile for system verilog or vhdl designs.
-#
-# you DON'T TOUCH THIS FILE!!!
-# I jest, you can mess with SIMTIME.
-# AND THAT IS IT!
-#
-
-# list of grid hosts
-GRIDHOSTS = ecegrid-lnx
-
-###############################because GRID is funny###########################
-ifneq (,$(findstring $(GRIDHOSTS), $(HOST)))
-%:
-	@$(if \
-		$(findstring $@, $(word 1, $(MAKECMDGOALS))), \
-		grid $(MAKE) $(MAKECMDGOALS) -$(MAKEFLAGS), \
-		echo "do nothing" > /dev/null)
-else
-###############################and i'm not laughing############################
-
-################################################################################
-# variables                                                                    #
-################################################################################
-
-# course libs and such
-COURSELIBS	= ${LIBS437}
-
-# directories
-SRCDIR			= source
-INCDIR			= include
-TBDIR				= testbench
-MAPDIR			= mapped
-FPGADIR			= fpga
-SCRDIR			= scripts
-LIBDIR			= work
-DEPDIR			= .deps
-
-# commands and flags. 1/9/2020 mcj, added -suppress 12110 so simulation will run with -novopt
-#   novopt is deprecated in Questa 10.7a and later. Need to find better solution. 
-SYN					= synthesize
-MAKEDEP			= hdldep
-VSIM				= vsim -coverage -sv_seed random #-suppress 12110
-VLOG				= vlog 
-VCOM				= vcom 
-VERFLAGS		= -sv +incdir+$(INCDIR) +incdir+../packages#+acc -sv12compat -mfcu -lint +incdir+$(INCDIR) -suppress 12110
-VHDFLAGS		= -93 +acc -lint
-SIMTIME			= -all
-
-# modelsim viewing options
-ifneq (0,$(words $(filter %.wav,$(MAKECMDGOALS))))
-# view waveform in graphical mode and load do file if there is one
-DOFILES			= $(notdir $(basename $(wildcard $(SCRDIR)/*.do)))
-DOFILE			= $(filter $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%_tb.wav=%), $(DOFILES))
-ifeq (1, $(words  $(DOFILE)))
-WAVDO				= do $(SCRDIR)/$(DOFILE).do
-else
-WAVDO				= add wave *
-endif
-SIMDO				= "view objects; $(WAVDO); run $(SIMTIME);" -onfinish stop
-else
-# view text output in cmdline mode
-SIMTERM			= -c
-SIMDO		= "run $(SIMTIME); exit;"
-endif
-
-# mapped files
-SYNTH				= $(filter $(MAKECMDGOALS:%.wav=%) \
-							$(MAKECMDGOALS:%.sim=%) $(MAKECMDGOALS:%_tb.sim=%) \
-							$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%_tb=%), \
-							$(notdir $(basename $(wildcard $(MAPDIR)/*.sv $(MAPDIR)/*.v $(MAPDIR)/*.vhd))))
-
-ifneq (,$(filter $(SYNTH), \
-	$(MAKECMDGOALS:%_tb=%) $(MAKECMDGOAlS:%_tb.sim=%) \
-	$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%.sim=%)))
-SYNDEF		=	+define+MAPPED
-#SIMSYN			= -sdftyp /=mapped/$(SYNTH)_v.sdo
-endif
-
-# v, sv or vhdl stems
-VLSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.v $(TBDIR)/*.v)))
-SVSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.sv $(TBDIR)/*.sv)))
-VHSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.vhd $(TBDIR)/*.vhd)))
-HDSTEM			= $(notdir $(basename $(wildcard $(INCDIR)/*.vh)))
-SRCSTEM			= $(VLSTEM) $(SVSTEM) $(VHSTEM)
-SRCS				= $(addsuffix .v,$(VLSTEM)) $(addsuffix .sv,$(SVSTEM)) $(addsuffix .vhd,$(VHSTEM))
-HDRS				= $(addsuffix .vh,$(HDSTEM))
-
-# dep files
-DEPS				= $(addsuffix .d, $(VLSTEM) $(SVSTEM) $(VHSTEM) $(HDSTEM))
-
-# no target files are made
-NODEPS			= help clean clean_asm clean_sim clean_map clean_deps clean_fpga
-
-################################################################################
-# config                                                                       #
-################################################################################
-
-# rules with no output file
-.PHONY:			$(NODEPS)
-
-# clear and set suffixes
-.SUFFIXES:
-.SUFFIXES: .vh .sv .vhd .d .v
-
-# set search paths
-vpath %.vh	$(INCDIR)/
-vpath %.v		$(SRCDIR)/ $(TBDIR)/
-vpath %.sv	$(MAPDIR)/ $(SRCDIR)/ $(TBDIR)/
-vpath %.vhd	$(SRCDIR)/ $(TBDIR)/
-vpath %.d		$(DEPDIR)/
-vpath %			$(DEPDIR)/
-
-# set default rule
-default: help
-
-# v,sv library search paths
-ifneq (0,$(words $(VLSTEM) $(SVSTEM)))
-SIMLIBS=$(addprefix -L ,$(filter %_ver,$(shell ls $(COURSELIBS))))
-endif
-
-# include dependencies
-ifeq (0,$(words $(findstring $(MAKECMDGOALS), $(NODEPS))))
-	# dash keeps this quiet
--include $(addprefix $(DEPDIR)/,$(DEPS))
-endif
-
-################################################################################
-# auto make rules                                                              #
-################################################################################
-
-# dependency rules
-$(DEPDIR):
-	@test -d $(DEPDIR) || mkdir $(DEPDIR)
-$(LIBDIR):
-	@test -d $(LIBDIR) || vlib $(LIBDIR)
-%.d: | $(DEPDIR)
-	@$(SHELL) -ec '$(MAKEDEP) ${*F} $(SRCDIR) $(TBDIR) $(INCDIR) \
-		| sed \
-		-e "s/$$/ $(filter ${*F}.v ${*F}.sv ${*F}.vhd ${*F}.vh,$(SRCS) $(HDRS))/" \
-		-e "s/\.[a-z]\+/&o/g" \
-		-e "s/^/${*F}: /" \
-		> $@'
-
-# header rules
-%.vho: %.vh | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# verilog rules
-%.vo: %.v | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# system verilog rules
-%.svo: %.sv | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# vhdl rules
-%.vhdo: %.vhd | $(LIBDIR)
-	$(VCOM) $(VHDFLAGS) $<
-	@touch $(DEPDIR)/$@
-
-# simulation rules
-%_tb.sim %_tb.wav %.sim %.wav: %_tb
-	@$(VSIM) $(SIMTERM) -do $(SIMDO) $(SIMLIBS) $(SIMSYN) -wlf $(addprefix tb_,$*).wlf $(LIBDIR).$(addprefix tb_,$*)
-
-# synthesis rules for mapped simulation
-%_tb.synf %.synf %_tb.synt %.synt %_tb.syn %.syn:
-	@$(SYN) $(if $(filter %.synt, $@),-t) $*
-	-@rm -f $(DEPDIR)/${*F}_tb.svo
-
-################################################################################
-# info clean up rules                                                          #
-################################################################################
-
-# cleaning rules
-clean: clean_sim clean_asm clean_map clean_deps clean_fpga
-
-clean_sim: clean_deps
-	@rm -rf $(LIBDIR) *.log *.wlf transcript
-
-clean_asm:
-	@rm -rf *.hex *.ver *.diff *.log
-
-clean_map:
-	@rm -rf $(MAPDIR)/* ._* *.summary *.log
-
-clean_fpga:
-	@rm -rf $(FPGADIR)/* ._*
-
-clean_deps:
-	@rm -rf $(DEPDIR) *.d
-
-help:
-	@echo ""
-	@echo "Hello $(USER)@$(HOST), you forgot some targets."
-	@echo "	If you need instructions to use this Makefile:"
-	@echo "		'make <module_name>' to build module"
-	@echo "		'make <module_name>_tb' to build module + testbench"
-	@echo "		'make <module_name>.sim' to sim tb on cmd line"
-	@echo "		'make <module_name>.wav' to sim tb with gui"
-	@echo "		'make <module_name>.syn' to synthesize functional net list"
-	@echo "		'make <module_name>.synt' to synthesize timing net list"
-	@echo "	Clean Rules:"
-	@echo "		'make clean' to clean everything"
-	@echo "		'make clean_sim' to clean simulation logs and work lib"
-	@echo "		'make clean_asm' to clean hex and testasm output"
-	@echo "		'make clean_map' to clean mapped dir"
-	@echo "		'make clean_fpga' to clean fpga dir"
-	@echo "	Obviously a testbench file must exist for some options."
-	@echo ""
-
-################################################################################
-endif # end GRID nonsense                                                      #
-################################################################################
diff --git a/source_code/fpu_integration/bkup_make b/source_code/fpu_integration/bkup_make
deleted file mode 100644
index 911c0e9..0000000
--- a/source_code/fpu_integration/bkup_make
+++ /dev/null
@@ -1,402 +0,0 @@
-##############################################################################
-# ECE 337 General Makefile
-# 
-# Set tab spacing to 2 spaces per tab for best viewing results
-##############################################################################
-
-# Include the common/shared variables for the course to minimize potentially stale values
-# Note: the release_make_vars already includes the common/public ones
-include /home/ecegrid/a/ece337/Course_Prod/course_make_vars
-
-##############################################################################
-# File Related Variables
-##############################################################################
-
-# List internal component/block files here (separate the filenames with spaces)
-# (do not include the source folder in the name)
-# NOTE: YOU WILL NEED TO SET THIS VARIABLE'S VALUE WHEN WORKING WITH HEIRARCHICAL DESIGNS
-# AND THE AUTOMATED GRADING SYSTEM
-COMPONENT_FILES	:= adder_8b.sv mul_26b.sv left_shift.sv subtract.sv rounder.sv int_compare.sv right_shift.sv u_to_s.sv adder_26b.sv s_to_u.sv ADD_step1.sv ADD_step2.sv ADD_step3.sv MUL_step1.sv MUL_step2.sv
-
-# Specify the name of the top level file (do not include the source folder in the name)
-# NOTE: YOU WILL NEED TO SET THIS VARIABLE'S VALUE WHEN WORKING WITH HEIRARCHICAL DESIGNS
-# AND THE AUTOMATED GRADING SYSTEM
-TOP_LEVEL_FILE	:= FPU_top_level.sv
-
-# Specify the filepath of the test bench you want to use (ie. tb_top_level.sv)
-# (do not include the source folder in the name)
-TEST_BENCH	:= tb_$(TOP_LEVEL_FILE)
-
-# Fill in the names of any test bench helper code files (code files referenced by your testbenches
-# other than the actual design files)( do not include the 'source/')
-TB_HELPER_FILES	:= 
-
-# Get the top level design and test_bench module names
-TB_MODULE		:= $(notdir $(basename $(TEST_BENCH)))
-TOP_MODULE	:= $(notdir $(basename $(TOP_LEVEL_FILE)))
-
-##############################################################################
-# Flexible Shift Register Design Related File Variables
-##############################################################################
-
-# The name of the flexible serial-to-parallel shift register design
-# (Do not include the source folder in the filename)
-STP_SR_FILE	:= flex_stp_sr.sv
-
-# The name of the flexible parallel-to-serial shift register design
-# (Do not include the source folder in the filename)
-PTS_SR_FILE	:= flex_pts_sr.sv
-
-##############################################################################
-# General Design Variables
-##############################################################################
-
-# Select the Cell Library to use with simulations
-GATE_LIB		:= $(AMI_05_LIB)
-
-S_WORK_LIB := source_work
-M_WORK_LIB := mapped_work
-
-LIB_CREATE	:= vlib
-COMPILE 		:= vlog -sv
-SIMULATE		:= vsim -Lf $(LABS_IP_LIB) -L $(GATE_LIB) -L $(GOLD_LIB) +no_glitch_msg -coverage -voptargs="+acc"
-DC_SHELL		:= dc_shell-t
-
-##############################################################################
-# Designate that all "intermediate" files created during chaing make rules
-# should not be deleted (otherwise automatically compiled or synthesized files
-# will be automatically deleted by make after it's done with them).
-##############################################################################
-.SECONDARY:
-
-##############################################################################
-# Designate targets that do not correspond directly to files so that they are
-# run every time they are called
-##############################################################################
-.PHONY: help clean veryclean
-.PHONY: print_vars
-.PHONY: sim_full_source sim_full_mapped
-.PHONY: syn_mapped
-
-##############################################################################
-# Make the default target (the one called when no specific one is invoked) to
-# output the proper usage of this makefile
-##############################################################################
-help:
-	@echo "----------------------------------------------------------------"
-	@echo "Administrative targets:"
-	@echo "  clean         - removes the temporary files"
-	@echo	"  veryclean     - removes the mapped files as well"
-	@echo	"  print_vars    - prints the contents of the variables"
-	@echo
-	@echo "Compilation targets:"
-	@echo "  source_%     - compiles the source version of an indivudal file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo "  mapped_%     - compiles the mapped version of an indivudal file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo "  mapped_tb_%  - compiles the testbench for an indivudal mapped file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo
-	@echo "Simulation targets:"
-	@echo "  sim_full_source   - compiles and simulates the source version"
-	@echo "                      of a full design including its top level"
-	@echo "                      test bench"
-	@echo "  sim_full_mapped   - compiles and simulates the mapped version"
-	@echo "                      of a full design including its top level"
-	@echo "                      test bench"
-	@echo "  sim_%_source      - compiles and simulates the source version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      without a testbench"
-	@echo "  sim_%_mapped      - compiles and simulates the mapped version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      without a testbench"
-	@echo "  tbsim_%_source    - compiles and simulates the source version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      with its testbench"
-	@echo "  tbsim_%_mapped    - compiles and simulates the mapped version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      with its testbench"
-	@echo 
-	@echo "Synthesis targets:"
-	@echo "  mapped/%.v - synthesizes the mapped version of an individual file"
-	@echo "               additionally the DEP_SUB_FILES variabl can be used "
-	@echo "               to define dependant submodule files needed for "
-	@echo "               synthesis and the CLOCK_NAME variable can be used"
-	@echo "               to define the clock signal name to use for synthesis"
-	@echo "               of sequential/clocked designs"
-	@echo "----------------------------------------------------------------"
-
-##############################################################################
-# Administrative Targets
-##############################################################################
-
-clean:
-	@echo -e "Removing temporary files"
-	@rm -rf *_work
-	@rm -rf analyzed/ARCH analyzed/ENTI
-	@rm -f analyzed/*
-	@rm -f schematic/*
-	@rm -f *.wlf *.svf transcript
-	@rm -f *.tran
-	@rm -f *.scomp *.mcomp
-	@rm -f do_mapping.tcl
-	@echo -e "Done\n\n"
-
-veryclean:
-	@$(MAKE) --no-print-directory clean
-	@echo -e "Removing synthesized files, synthesis logs, and synthesis reports"
-	@rm -f mapped/*
-	@rm -f reports/*
-	@rm -f *.log
-	@echo -e "Done\n\n"
-
-print_vars:
-	@echo -e "Component Files: \n $(foreach file, $(COMPONENT_FILES), $(file)\n)"
-	@echo -e "Top level File: $(TOP_LEVEL_FILE)"
-	@echo -e "Testbench: $(TEST_BENCH)"
-	@echo -e "Top level module: $(TOP_MODULE)"
-	@echo -e "Testbench module: $(TB_MODULE)"
-	@echo -e "Gate Library: '$(GATE_LIB)'"
-	@echo -e "Gold Library: '$(GOLD_LIB)'"
-	@echo -e "Course Library: '$(LABS_IP_LIB)'"
-	@echo -e "Source work library: '$(S_WORK_LIB)'"
-	@echo -e "Mapped work library: '$(M_WORK_LIB)'"
-
-##############################################################################
-# Custom Simulation Targets
-##############################################################################
-
-tbsim_flex_stp_sr_source: $(S_WORK_LIB) $(addprefix $(S_WORK_LIB)/, tb_flex_stp_sr $(basename $(STP_SR_FILE)) stp_sr_8_msb stp_sr_4_lsb)
-	@echo -e "Simulating Source Versions of Flexible Serial-to-Parallel Shift Register Configurations"
-	@$(SIMULATE) -i -t ps $(S_WORK_LIB).tb_flex_stp_sr
-
-tbsim_flex_stp_sr_mapped: $(M_WORK_LIB) $(addprefix $(M_WORK_LIB)/, tb_flex_stp_sr $(basename $(STP_SR_FILE)) stp_sr_8_msb stp_sr_4_lsb)
-	@echo -e "Simulating Mapped Versions of Flexible Serial-to-Parallel Shift Register Configurations"
-	@$(SIMULATE) -i -t ps $(M_WORK_LIB).tb_flex_stp_sr
-
-tbsim_flex_pts_sr_source: $(S_WORK_LIB) $(addprefix $(S_WORK_LIB)/, tb_flex_pts_sr $(basename $(PTS_SR_FILE)) pts_sr_8_msb pts_sr_4_lsb)
-	@echo -e "Simulating Source Versions of Flexible Parallel-to-Serial Shift Register Configurations"
-	@$(SIMULATE) -i -t ps $(S_WORK_LIB).tb_flex_pts_sr
-
-tbsim_flex_pts_sr_mapped: $(M_WORK_LIB) $(addprefix $(M_WORK_LIB)/, tb_flex_pts_sr $(basename $(PTS_SR_FILE)) pts_sr_8_msb pts_sr_4_lsb)
-	@echo -e "Simulating Mapped Versions of Flexible Parallel-to-Serial Shift Register Configurations"
-	@$(SIMULATE) -i -t ps $(M_WORK_LIB).tb_flex_pts_sr
-
-##############################################################################
-# General Compilation Targets
-##############################################################################
-
-# Define a pattern rule to automatically create the work library for a design source compile
-$(S_WORK_LIB):
-	@echo -e "Creating work library: $@"
-	@rm -rf $@
-	@$(LIB_CREATE) $@
-
-# Define a pattern rule to automatically compile updated source files for a design
-$(S_WORK_LIB)/%: source/%.sv | $(S_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(S_WORK_LIB)'"
-	@$(COMPILE) -work $(S_WORK_LIB) $< | tee $*.scomp ; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(S_WORK_LIB)'"
-
-# Define a pattern rule to for use at commandline to compile source versions
-source_%: $(S_WORK_LIB)/%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-# Define a pattern rule to automatically create the work library for a full design mapped compile
-$(M_WORK_LIB):
-	@echo -e "Creating work library: $@"
-	@rm -rf $@
-	@$(LIB_CREATE) $@
-
-# Define a pattern rule to automatically compile updated mapped design files for a full mapped design
-$(M_WORK_LIB)/%: mapped/%.v | $(M_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(M_WORK_LIB)'"
-	@$(COMPILE) -work $(M_WORK_LIB) $< | tee $*.mcomp ; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(M_WORK_LIB)'"
-
-# Define a pattern rule to automatically compile updated test bench files for a full mapped design
-$(M_WORK_LIB)/tb_%: source/tb_%.sv | $(M_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(M_WORK_LIB)'"
-	@$(COMPILE) -work $(M_WORK_LIB) $< | tee $*.mcomp; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(M_WORK_LIB)'"
-
-# Define a pattern rule to for use at commandline to compile mapped versions
-mapped_%: $(M_WORK_LIB)/%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-# Define a pattern rule to for use at commandline to compile testbenches
-mapped_tb_%: $(M_WORK_LIB)/tb_%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-##############################################################################
-# General Simulation Targets
-##############################################################################
-define CONSOLE_SIM_CMDS
-"run 15 us;	\
- quit -f"
-endef
-
-# This rule defines how to simulate the source form of the full design
-sim_full_source: $(addprefix $(S_WORK_LIB)/, $(notdir $(basename $(TOP_LEVEL_FILE) $(TEST_BENCH) $(TB_HELPER_FILES) $(COMPONENT_FILES))))
-	@echo -e "Simulating Source Design"
-# Uncomment below if you want to just run the simulation as a console command
-# using the commands listed in the CONSOLE_SIM_CMDS definition above instead of 
-# .do file and have the transcript contents to be saved to a file
-#	@$(SIMULATE) -c -t ps -do $(CONSOLE_SIM_CMDS) $(S_WORK_LIB).$(TB_MODULE) > source.tran
-
-# Uncomment below if you want run the simulation the normal way and have it
-# run the specified .do file
-#	@$(SIMULATE) -t ps -do s_waves.do $(S_WORK_LIB).$(TB_MODULE)
-
-# This way just runs it like normal and only sets up the simulation but doesn't
-# run it or add any waveforms
-	@$(SIMULATE) -i -t ps $(S_WORK_LIB).$(TB_MODULE)
-	@cp -f transcript $(basename $(TOP_LEVEL_FILE)).stran
-	@echo -e "Done simulating the source design\n\n"
-
-# This rule defines how to simulate the mapped form of the full design
-sim_full_mapped: $(addprefix $(M_WORK_LIB)/, $(notdir $(basename $(TOP_LEVEL_FILE) $(TEST_BENCH) $(TB_HELPER_FILES))))
-	@echo -e "Simulating Mapped Design"
-# Uncomment below if you want to just run the simulation as a console command
-# using the commands listed in the CONSOLE_SIM_CMDS definition above instead of 
-# .do file and have the transcript contents to be saved to a file
-#	@$(SIMULATE) -c -t ps -do $(CONSOLE_SIM_CMDS) $(M_WORK_LIB).$(TB_MODULE) > mapped.tran
-
-# Uncomment below if you want run the simulation the normal way and have it
-# run the specified .do file
-#	@$(SIMULATE) -t ps -do s_waves.do $(M_WORK_LIB).$(TB_MODULE)
-
-# This way just runs it like normal and only sets up the simulation but doesn't
-# run it or add any waveforms
-	@$(SIMULATE) -i -t ps $(M_WORK_LIB).$(TB_MODULE)
-	@cp -f transcript $(basename $(TOP_LEVEL_FILE)).mtran
-	@echo -e "Done simulating the mapped design\n\n"
-
-# Define a pattern rule for simulating the source version of individual files	without a testbench
-sim_%_source: $(S_WORK_LIB)/%
-	@$(SIMULATE) -i -t ps $(dir $<).$*
-	@cp -f transcript $*.stran
-
-# Define a pattern rule for simulating the mapped version of individual files	without a testbench
-sim_%_mapped: $(M_WORK_LIB)/%
-	@$(SIMULATE) -i -t ps $(dir $<).$*
-	@cp -f transcript $*.mtran
-
-# Define a pattern rule for simulating the source version of individual files	with a testbench
-tbsim_%_source: $(S_WORK_LIB)/% $(S_WORK_LIB)/tb_%
-	@$(SIMULATE) -i -t ps $(dir $<).tb_$*
-	@cp -f transcript $*.stran
-
-# Define a pattern rule for simulating the mapped version of individual files	with a testbench
-tbsim_%_mapped: $(M_WORK_LIB)/% $(M_WORK_LIB)/tb_%
-	@$(SIMULATE) -i -t ps $(dir $<).tb_$*
-	@cp -f transcript $*.mtran
-
-##############################################################################
-# Define the synthesis target specific variables to use
-##############################################################################
-
-# Set the default value of the clock name and clock period to an empty string so that clock timing will
-# only be activated in the SYN_CMDS definition if they were overwritten at invocation
-CLOCK_NAME 		:=
-CLOCK_PERIOD	:=
-
-# Set the default value of the source files for sub modules to be an empty string so that
-# it will only be used if overwritten at invocation
-DEP_SUB_FILES :=
-
-# Set the default value of the main source file to an empty string since it will be
-# overwritten by each rule where it is used anyways
-MAIN_FILE :=
-
-# Set the module's name to always be the same as the basename of the file
-# (a.k.a. the file name without the file extension)
-MOD_NAME := $(basename $(MAIN_FILE))
-
-##############################################################################
-# Synthesis Targets
-##############################################################################
-
-# A customized make target for the top level file for complex designs
-# Note: The CLOCK_NAME variable override below will need to be set to the actual
-# clock signal name for sequential/clocked designs.
-# Also have to specify to run with the c shell to force it to use the course config (.cshrc) and call course scripts 
-mapped/$(TOP_MODULE).v: SHELL := /usr/local/bin/tcsh
-$(addsuffix .v, $(addprefix mapped/, $(TOP_MODULE))): mapped/%.v : source/%.sv $(addprefix source/,$(COMPONENT_FILES))
-	@echo "Synthesizing design: $@\n"
-	@$(MAKE) --no-print-directory syn_mapped MAIN_FILE='$(notdir $<)' DEP_SUB_FILES='$(COMPONENT_FILES)' CLOCK_NAME='$(CLOCK_NAME)' CLOCK_PERIOD='$(CLOCK_PERIOD)' > $(notdir $(basename $@)).log
-	@echo "Synthesis run attempt for $@ complete"
-	@echo "Checking synthesis attempt for errors"
-	@syschk -w $(notdir $(basename $@))
-	@echo "\nCheck for synthesis attempt errors complete, open $(notdir $(basename $@)).log for details if errors were found"
-	@echo "\nRemember to check $(TOP_MODULE).log for latches and timing arcs"
-	@echo "Synthesis run complete for design: $@\n\n"
-
-# A pattern rule target to synthesize any design that does not already have one defined earlier,
-# as long as the desired mapped file has a corresponding source file with the same basename,
-# (which is grabbed by the '%' and accessed via the $* automatic variable).
-# Additionally it will include any specified dependant submodule source files in the target's
-# dependencies and thus will resynthesize if any of them are newer as well.
-# It will pass on any of the related variables values if they were overwritten at runtime.
-# Also have to specify to run with the c shell to force it to use the course config (.cshrc) and call course scripts 
-mapped/%.v: SHELL := /usr/local/bin/tcsh
-mapped/%.v: source/%.sv $(addprefix source/,$(DEP_SUB_FILES))
-	@echo "Synthesizing and Compiling design: $@\n"
-	@$(MAKE) --no-print-directory syn_mapped MAIN_FILE='$*.sv' DEP_SUB_FILES='$(DEP_SUB_FILES)' CLOCK_NAME='$(CLOCK_NAME)' CLOCK_PERIOD='$(CLOCK_PERIOD)' > $*.log
-	@echo "Synthesis run attempt for $@ complete"
-	@echo "Checking synthesis attempt for errors (errors will be printed if found)"
-	@syschk -w $*
-	@echo "\nCheck for synthesis attempt errors complete, open $*.log for details if errors were found"
-	@echo "\nRemember to check $*.log for latches and timing arcs"
-	@echo "Synthesis run complete for design: $@\n\n"
-
-##############################################################################
-# Define the synthesis commands to use
-##############################################################################
-define newline
-
-
-endef
-
-define SYN_CMDS
-# Step 1:  Read in the source file
-analyze -format sverilog -lib WORK {$(DEP_SUB_FILES) $(MAIN_FILE)}
-elaborate $(MOD_NAME) -lib WORK
-uniquify
-# Step 2: Set design constraints
-# Uncomment below to set timing, area, power, etc. constraints
-# set_max_delay <delay> -from "<input>" -to "<output>"
-# set_max_area <area>
-# set_max_total_power <power> mW
-$(if $(and $(CLOCK_NAME), $(CLOCK_PERIOD)), create_clock "$(CLOCK_NAME)" -name "$(CLOCK_NAME)" -period $(CLOCK_PERIOD))
-
-# Step 3: Compile the design
-compile -map_effort medium
-
-# Step 4: Output reports
-report_timing -path full -delay max -max_paths 1 -nworst 1 > reports/$(MOD_NAME).rep
-report_area >> reports/$(MOD_NAME).rep
-report_power -hier >> reports/$(MOD_NAME).rep
-
-# Step 5: Output final VHDL and Verilog files
-write_file -format verilog -hierarchy -output "mapped/$(MOD_NAME).v"
-echo "\nScript Done\n"
-echo "\nChecking Design\n"
-check_design
-quit
-endef
-
-# Define the target that will actually invoke the synthesis commands through design compiler
-syn_mapped do_mapping.tcl:
-	@echo -e "Synthesizing design: $(MAIN_FILE)"
-	@echo -e '$(subst $(newline),\n,$(subst \n,\\n,${SYN_CMDS}))' > do_mapping.tcl
-	$(DC_SHELL) -x "source -echo do_mapping.tcl"
-	@echo -e "Done\n\n"
-
-
diff --git a/source_code/fpu_integration/fpu.area.rpt b/source_code/fpu_integration/fpu.area.rpt
deleted file mode 100644
index 48d00aa..0000000
--- a/source_code/fpu_integration/fpu.area.rpt
+++ /dev/null
@@ -1,993 +0,0 @@
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jun 25 2020  03:07:48 pm
-  Module:                 adder_26b
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-  Instance   Cells  Cell Area  Net Area  Total Area  Wireload     
-------------------------------------------------------------------
-adder_26b       36        492         0         492    <none> (D) 
-  add_22_16     30        471         0         471    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jun 28 2020  08:11:55 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-                Instance                  Cells  Cell Area  Net Area  Total Area  Wireload     
------------------------------------------------------------------------------------------------
-FPU_top_level                              6670      34374         0       34374    <none> (D) 
-  mulStep1_MUL_mul_27_31                   1257       8751         0        8751    <none> (D) 
-  sub_step3                                1700       7044         0        7044    <none> (D) 
-    ROUND                                  1344       5667         0        5667    <none> (D) 
-    inc_add_104_30_5_Y_inc_add_101_30_4      93        320         0         320    <none> (D) 
-    shift_left                               66        235         0         235    <none> (D) 
-  add_step3                                 771       3054         0        3054    <none> (D) 
-    shift_left                              521       2056         0        2056    <none> (D) 
-    ROUND_inc_add_57_53_9                    88        282         0         282    <none> (D) 
-  sub_step2                                 499       2692         0        2692    <none> (D) 
-    change_to_complement_inc_add_12_54_6    100        319         0         319    <none> (D) 
-  add_step2                                 312       1668         0        1668    <none> (D) 
-    add_signed_fracs_add_22_16               30        471         0         471    <none> (D) 
-  substep1_cmp_exponents                    205       1025         0        1025    <none> (D) 
-  addStep1_cmp_exponents                     55        343         0         343    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 01 2020  03:52:01 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 01 2020  03:54:59 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 01 2020  04:05:38 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 01 2020  04:15:10 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 01 2020  04:48:33 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  03:46:04 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6732      34155         0       34155    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1668       6622         0        6622    <none> (D) 
-    ROUND                         1217       4981         0        4981    <none> (D) 
-      inc_add_140_35_7              84        269         0         269    <none> (D) 
-    inc_add_104_30_3                92        294         0         294    <none> (D) 
-    inc_add_101_30_2                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         875       3807         0        3807    <none> (D) 
-    shift_frac                     413       1655         0        1655    <none> (D) 
-    cmp_exponents                  244       1162         0        1162    <none> (D) 
-  add_step3                        764       3100         0        3100    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_5               88        282         0         282    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_4              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            141        924         0         924    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      61        216         0         216    <none> (D) 
-  sign_determine                     7         43         0          43    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  04:20:52 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     7019      35234         0       35234    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6814         0        6814    <none> (D) 
-    ROUND                         1330       5200         0        5200    <none> (D) 
-      inc_add_140_35_9              84        269         0         269    <none> (D) 
-    inc_add_104_30_5                92        294         0         294    <none> (D) 
-    inc_add_101_30_4                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         888       4101         0        4101    <none> (D) 
-    shift_frac                     435       1880         0        1880    <none> (D) 
-    cmp_exponents                  233       1235         0        1235    <none> (D) 
-  add_step3                        969       3740         0        3740    <none> (D) 
-    shift_left                     544       2099         0        2099    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_7               88        282         0         282    <none> (D) 
-    inc_add_67_35_3                 92        294         0         294    <none> (D) 
-    inc_add_62_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_6              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            135        796         0         796    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      59        260         0         260    <none> (D) 
-  sign_determine                     7         45         0          45    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  04:25:45 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     7019      35234         0       35234    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6814         0        6814    <none> (D) 
-    ROUND                         1330       5200         0        5200    <none> (D) 
-      inc_add_140_35_9              84        269         0         269    <none> (D) 
-    inc_add_104_30_5                92        294         0         294    <none> (D) 
-    inc_add_101_30_4                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         888       4101         0        4101    <none> (D) 
-    shift_frac                     435       1880         0        1880    <none> (D) 
-    cmp_exponents                  233       1235         0        1235    <none> (D) 
-  add_step3                        969       3740         0        3740    <none> (D) 
-    shift_left                     544       2099         0        2099    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_7               88        282         0         282    <none> (D) 
-    inc_add_67_35_3                 92        294         0         294    <none> (D) 
-    inc_add_62_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_6              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            135        796         0         796    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      59        260         0         260    <none> (D) 
-  sign_determine                     7         45         0          45    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  04:29:03 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     7019      35234         0       35234    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6814         0        6814    <none> (D) 
-    ROUND                         1330       5200         0        5200    <none> (D) 
-      inc_add_140_35_9              84        269         0         269    <none> (D) 
-    inc_add_104_30_5                92        294         0         294    <none> (D) 
-    inc_add_101_30_4                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         888       4101         0        4101    <none> (D) 
-    shift_frac                     435       1880         0        1880    <none> (D) 
-    cmp_exponents                  233       1235         0        1235    <none> (D) 
-  add_step3                        969       3740         0        3740    <none> (D) 
-    shift_left                     544       2099         0        2099    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_7               88        282         0         282    <none> (D) 
-    inc_add_67_35_3                 92        294         0         294    <none> (D) 
-    inc_add_62_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_6              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            135        796         0         796    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      59        260         0         260    <none> (D) 
-  sign_determine                     7         45         0          45    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  04:37:14 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     7019      35234         0       35234    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6814         0        6814    <none> (D) 
-    ROUND                         1330       5200         0        5200    <none> (D) 
-      inc_add_140_35_9              84        269         0         269    <none> (D) 
-    inc_add_104_30_5                92        294         0         294    <none> (D) 
-    inc_add_101_30_4                92        294         0         294    <none> (D) 
-    shift_left                      66        235         0         235    <none> (D) 
-  substep1                         888       4101         0        4101    <none> (D) 
-    shift_frac                     435       1880         0        1880    <none> (D) 
-    cmp_exponents                  233       1235         0        1235    <none> (D) 
-  add_step3                        969       3740         0        3740    <none> (D) 
-    shift_left                     544       2099         0        2099    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_7               88        282         0         282    <none> (D) 
-    inc_add_67_35_3                 92        294         0         294    <none> (D) 
-    inc_add_62_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_6              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            135        796         0         796    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      59        260         0         260    <none> (D) 
-  sign_determine                     7         45         0          45    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  04:45:35 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6917      34509         0       34509    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6892         0        6892    <none> (D) 
-    ROUND                         1304       5156         0        5156    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         868       3845         0        3845    <none> (D) 
-    shift_frac                     414       1813         0        1813    <none> (D) 
-    cmp_exponents                  233       1089         0        1089    <none> (D) 
-  add_step3                        858       3397         0        3397    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_62_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            137        702         0         702    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      63        190         0         190    <none> (D) 
-  sign_determine                     8         35         0          35    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  05:02:37 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6917      34509         0       34509    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6892         0        6892    <none> (D) 
-    ROUND                         1304       5156         0        5156    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         868       3845         0        3845    <none> (D) 
-    shift_frac                     414       1813         0        1813    <none> (D) 
-    cmp_exponents                  233       1089         0        1089    <none> (D) 
-  add_step3                        858       3397         0        3397    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_61_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            137        702         0         702    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      63        190         0         190    <none> (D) 
-  sign_determine                     8         35         0          35    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  05:17:35 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6917      34509         0       34509    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6892         0        6892    <none> (D) 
-    ROUND                         1304       5156         0        5156    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         868       3845         0        3845    <none> (D) 
-    shift_frac                     414       1813         0        1813    <none> (D) 
-    cmp_exponents                  233       1089         0        1089    <none> (D) 
-  add_step3                        858       3397         0        3397    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_61_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            137        702         0         702    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      63        190         0         190    <none> (D) 
-  sign_determine                     8         35         0          35    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  05:27:58 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6917      34509         0       34509    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6892         0        6892    <none> (D) 
-    ROUND                         1304       5156         0        5156    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         868       3845         0        3845    <none> (D) 
-    shift_frac                     414       1813         0        1813    <none> (D) 
-    cmp_exponents                  233       1089         0        1089    <none> (D) 
-  add_step3                        858       3397         0        3397    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_61_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            137        702         0         702    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      63        190         0         190    <none> (D) 
-  sign_determine                     8         35         0          35    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 04 2020  05:31:46 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6917      34509         0       34509    <none> (D) 
-  mulStep1                        1284       8597         0        8597    <none> (D) 
-    MUL                           1284       8597         0        8597    <none> (D) 
-      mul_27_31                   1284       8597         0        8597    <none> (D) 
-  sub_step3                       1774       6892         0        6892    <none> (D) 
-    ROUND                         1304       5156         0        5156    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         868       3845         0        3845    <none> (D) 
-    shift_frac                     414       1813         0        1813    <none> (D) 
-    cmp_exponents                  233       1089         0        1089    <none> (D) 
-  add_step3                        858       3397         0        3397    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_61_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2783         0        2783    <none> (D) 
-    sub_signed_fracs                95       1171         0        1171    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            137        702         0         702    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      63        190         0         190    <none> (D) 
-  sign_determine                     8         35         0          35    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 08 2020  05:02:33 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6932      35594         0       35594    <none> (D) 
-  mulStep1                        1297       9334         0        9334    <none> (D) 
-    MUL                           1297       9334         0        9334    <none> (D) 
-  sub_step3                       1703       6764         0        6764    <none> (D) 
-    ROUND                         1234       5019         0        5019    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         901       4059         0        4059    <none> (D) 
-    shift_frac                     432       1916         0        1916    <none> (D) 
-    cmp_exponents                  252       1176         0        1176    <none> (D) 
-  add_step3                        879       3452         0        3452    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_63_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2785         0        2785    <none> (D) 
-    sub_signed_fracs                95       1173         0        1173    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            156        838         0         838    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      67        224         0         224    <none> (D) 
-  sign_determine                     8         47         0          47    <none> (D) 
-
- (D) = wireload is default in technology library
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 08 2020  05:07:00 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-            Instance             Cells  Cell Area  Net Area  Total Area  Wireload     
---------------------------------------------------------------------------------------
-FPU_top_level                     6932      35594         0       35594    <none> (D) 
-  mulStep1                        1297       9334         0        9334    <none> (D) 
-    MUL                           1297       9334         0        9334    <none> (D) 
-  sub_step3                       1703       6764         0        6764    <none> (D) 
-    ROUND                         1234       5019         0        5019    <none> (D) 
-      inc_add_140_35_8              84        269         0         269    <none> (D) 
-    inc_add_104_30_4                92        294         0         294    <none> (D) 
-    inc_add_101_30_3                92        294         0         294    <none> (D) 
-    shift_left                      67        236         0         236    <none> (D) 
-  substep1                         901       4059         0        4059    <none> (D) 
-    shift_frac                     432       1916         0        1916    <none> (D) 
-    cmp_exponents                  252       1176         0        1176    <none> (D) 
-  add_step3                        879       3452         0        3452    <none> (D) 
-    shift_left                     523       2046         0        2046    <none> (D) 
-    ROUND                          112        372         0         372    <none> (D) 
-      inc_add_57_53_6               88        282         0         282    <none> (D) 
-    inc_add_63_30_1                 92        294         0         294    <none> (D) 
-    SUB                             21        124         0         124    <none> (D) 
-  sub_step2                        513       2785         0        2785    <none> (D) 
-    sub_signed_fracs                95       1173         0        1173    <none> (D) 
-      add_48_17                     29        471         0         471    <none> (D) 
-      add_51_19                     27        464         0         464    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_complement           127        376         0         376    <none> (D) 
-      inc_add_12_54_5              100        319         0         319    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  add_step2                        326       1728         0        1728    <none> (D) 
-    add_signed_fracs                35        492         0         492    <none> (D) 
-      add_22_16                     29        471         0         471    <none> (D) 
-    change_to_signed2               89        380         0         380    <none> (D) 
-    change_to_signed1               89        380         0         380    <none> (D) 
-    change_to_unsigned              87        374         0         374    <none> (D) 
-  addStep1                         336       1644         0        1644    <none> (D) 
-    shift_frac_with_smaller_exp    178        732         0         732    <none> (D) 
-    cmp_exponents                  102        501         0         501    <none> (D) 
-  determine_frac_status            156        838         0         838    <none> (D) 
-  mul_step2                         42        264         0         264    <none> (D) 
-    add_EXPs                        41        257         0         257    <none> (D) 
-  cmp_exponent                      67        224         0         224    <none> (D) 
-  sign_determine                     8         47         0          47    <none> (D) 
-
- (D) = wireload is default in technology library
diff --git a/source_code/fpu_integration/fpu.clocks.rpt b/source_code/fpu_integration/fpu.clocks.rpt
deleted file mode 100644
index 592f8a2..0000000
--- a/source_code/fpu_integration/fpu.clocks.rpt
+++ /dev/null
@@ -1,34 +0,0 @@
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 08 2020  05:07:00 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
-
- Clock Description
- ----------------- 
-
-  Clock                               Clock    Source     No of   
-  Name     Period   Rise    Fall      Domain  Pin/Port  Registers 
-------------------------------------------------------------------
- clock1   100000.0   0.0   50000.0   domain_1   clk           128 
-
- Clock Network Latency / Setup Uncertainty
- ----------------------------------------- 
-
-         Network   Network   Source   Source     Setup        Setup    
- Clock   Latency   Latency  Latency  Latency  Uncertainty  Uncertainty 
- Name     Rise      Fall      Rise     Fall       Rise         Fall    
------------------------------------------------------------------------
-clock1       0.0       0.0      0.0      0.0          0.0          0.0 
-
- Clock Relationship (with uncertainty & latency)
- ----------------------------------------------- 
-
-   From      To       R->R       R->F      F->R      F->F   
-------------------------------------------------------------
-  clock1   clock1   100000.0   50000.0   50000.0   100000.0 
diff --git a/source_code/fpu_integration/fpu.sdc_gen b/source_code/fpu_integration/fpu.sdc_gen
deleted file mode 100644
index cebb43b..0000000
--- a/source_code/fpu_integration/fpu.sdc_gen
+++ /dev/null
@@ -1,130 +0,0 @@
-# ####################################################################
-
-#  Created by Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1 on Wed Jul 08 17:07:00 -0400 2020
-
-# ####################################################################
-
-set sdc_version 1.7
-
-set_units -capacitance 1.0fF
-set_units -time 1.0ps
-
-# Set the current design
-current_design FPU_top_level
-
-create_clock -name "clock1" -add -period 100000.0 -waveform {0.0 50000.0} [get_ports clk]
-set_clock_gating_check -setup 0.0 
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[0]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[1]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[2]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[3]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[4]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[5]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {funct7[6]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {frm[0]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {frm[1]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {frm[2]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[0]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[1]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[2]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[3]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[4]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[5]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[6]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[7]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[8]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[9]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[10]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[11]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[12]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[13]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[14]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[15]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[16]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[17]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[18]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[19]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[20]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[21]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[22]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[23]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[24]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[25]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[26]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[27]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[28]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[29]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[30]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point2[31]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[0]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[1]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[2]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[3]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[4]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[5]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[6]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[7]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[8]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[9]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[10]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[11]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[12]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[13]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[14]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[15]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[16]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[17]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[18]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[19]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[20]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[21]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[22]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[23]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[24]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[25]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[26]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[27]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[28]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[29]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[30]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point1[31]}]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports nrst]
-set_input_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports clk]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {flags[0]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {flags[1]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {flags[2]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {flags[3]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {flags[4]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[0]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[1]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[2]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[3]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[4]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[5]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[6]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[7]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[8]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[9]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[10]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[11]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[12]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[13]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[14]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[15]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[16]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[17]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[18]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[19]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[20]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[21]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[22]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[23]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[24]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[25]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[26]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[27]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[28]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[29]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[30]}]
-set_output_delay -clock [get_clocks clock1] -add_delay 50000.0 [get_ports {floating_point_out[31]}]
-set_wire_load_mode "enclosed"
diff --git a/source_code/fpu_integration/fpu.tcl b/source_code/fpu_integration/fpu.tcl
deleted file mode 100644
index c1af69c..0000000
--- a/source_code/fpu_integration/fpu.tcl
+++ /dev/null
@@ -1,70 +0,0 @@
-set_attribute information_level 11
-
-set_attribute lib_search_path /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20
-
-set_attribute library MITLL90_STDLIB_8T.tt1p2v25c.lib
-
-set_attr hdl_search_path { ./src ./include ./tb_include }
-
-# No idea what this does...
-
-set_attribute hdl_undriven_output_port_value 0
-set_attribute use_tiehilo_for_const duplicate
-
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/FPU_top_level.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_8b.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/mul_26b.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/left_shift.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/subtract.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder_sub.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_compare.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/right_shift.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/u_to_s.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_26b.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/s_to_u.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step1.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step2.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step3.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step1.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step2.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step1.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step2.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sub_26b.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sign_determine.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/subtracter_8b.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/c_to_cp.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/right_shift_minus.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step3.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_comparesub.sv
-read_hdl -sv /local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/determine_frac_status.sv
-
-elaborate FPU_top_level
-
-#insert_tiehilo_cells -hi tiehi_1x -lo tielo_1x -maxfanout 1 -verbose
-
-set clock [define_clock -period 100000 -name clock1 clk]
-
-# Need to change to set_clock_latency?
-
-external_delay -input 50000 -clock $clock /designs/*/ports_in/*
-
-external_delay -output 50000 -clock $clock /designs/*/ports_out/*
-
-#Specify the external capacitive load on a port using the external_pin_cap attribute. The specified load will be calculated in femtofarads. The following example specifies an external capacitive load of 2 femtofarads on all output ports in the gia design:
-
-#set_attribute external_pin_cap 2 /designs/gia/ports_out/*
-
-synthesize -effort medium -to_mapped
-
-report timing -lint > fpu.timing-lint.rpt
-
-report clocks > fpu.clocks.rpt
-
-report area >> fpu.area.rpt
-
-write_hdl > fpu.v
-
-write_sdc > fpu.sdc_gen
-
-quit
diff --git a/source_code/fpu_integration/fpu.timing-lint.rpt b/source_code/fpu_integration/fpu.timing-lint.rpt
deleted file mode 100644
index 83ce355..0000000
--- a/source_code/fpu_integration/fpu.timing-lint.rpt
+++ /dev/null
@@ -1,61 +0,0 @@
-============================================================
-  Generated by:           Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-  Generated on:           Jul 08 2020  05:07:00 pm
-  Module:                 FPU_top_level
-  Technology library:     MITLL90_STDLIB_8T.tt1p2v25c 1.0
-  Operating conditions:   PVT_1P2V_25C (balanced_tree)
-  Wireload mode:          enclosed
-  Area mode:              timing library
-============================================================
-
--------------------------------------------------------------------------------
-Inputs without external driver/transition
-
-The following primary inputs have no external driver or input transition set.   
-As a result the transition on the ports will be assumed as zero. The            
-'external_driver' attribute is used to add and external driver or the           
-'fixed_slew' attribute to add an external transition.                           
-
-/designs/FPU_top_level/ports_in/floating_point1[0]
-/designs/FPU_top_level/ports_in/floating_point1[10]
-/designs/FPU_top_level/ports_in/floating_point1[11]
-  ... 72 other warnings in this category.
- Use the -verbose option for more details.
--------------------------------------------------------------------------------
-
--------------------------------------------------------------------------------
-Outputs without external load
-
-The following primary outputs have no external load set. As a result the load   
-on the ports will be assumed as zero. The 'external_pin_cap' attribute is used  
-to add and external pin cap.                                                    
-
-/designs/FPU_top_level/ports_out/flags[0]
-/designs/FPU_top_level/ports_out/flags[1]
-/designs/FPU_top_level/ports_out/flags[2]
-  ... 34 other warnings in this category.
- Use the -verbose option for more details.
--------------------------------------------------------------------------------
-
-
-Lint summary
- Unconnected/logic driven clocks                                  0
- Sequential data pins driven by a clock signal                    0
- Sequential clock pins without clock waveform                     0
- Sequential clock pins with multiple clock waveforms              0
- Generated clocks without clock waveform                          0
- Generated clocks with incompatible options                       0
- Generated clocks with multi-master clock                         0
- Paths constrained with different clocks                          0
- Loop-breaking cells for combinational feedback                   0
- Nets with multiple drivers                                       0
- Timing exceptions with no effect                                 0
- Suspicious multi_cycle exceptions                                0
- Pins/ports with conflicting case constants                       0
- Inputs without clocked external delays                           0
- Outputs without clocked external delays                          0
- Inputs without external driver/transition                       75
- Outputs without external load                                   37
- Exceptions with invalid timing start-/endpoints                  0
-
-                                                  Total:        112
diff --git a/source_code/fpu_integration/fv/FPU_top_level/dp_info.v b/source_code/fpu_integration/fv/FPU_top_level/dp_info.v
deleted file mode 100644
index 3b6a6cb..0000000
--- a/source_code/fpu_integration/fv/FPU_top_level/dp_info.v
+++ /dev/null
@@ -1,5561 +0,0 @@
-module add_unsigned_GENERIC_REAL(A, B, Z);
-// synthesis_equation add_unsigned
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  wire n_83, n_88, n_89, n_90, n_91, n_92, n_93, n_94;
-  wire n_95, n_96, n_97, n_98, n_99, n_100, n_101, n_102;
-  wire n_103, n_104, n_105, n_106, n_107, n_108, n_109, n_110;
-  wire n_111, n_112, n_113, n_114, n_115, n_116, n_117, n_118;
-  wire n_119, n_120, n_121, n_122, n_123, n_124, n_125, n_126;
-  wire n_127, n_128, n_129, n_130, n_131, n_132, n_133, n_134;
-  wire n_135, n_136, n_137, n_138, n_139, n_140, n_141, n_142;
-  wire n_143, n_144, n_145, n_146, n_147, n_148, n_149, n_150;
-  wire n_151, n_152, n_153, n_154, n_155, n_156, n_157, n_158;
-  wire n_159, n_160, n_161, n_162, n_163, n_164, n_165, n_166;
-  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_174;
-  wire n_175, n_176, n_177, n_178, n_179, n_180, n_181, n_182;
-  wire n_183, n_184, n_185, n_186, n_187, n_188, n_189, n_190;
-  wire n_191, n_192, n_193, n_194, n_195, n_196, n_197, n_198;
-  wire n_199, n_200, n_201, n_202, n_203, n_204, n_205, n_206;
-  wire n_207, n_208, n_209, n_210, n_211, n_212, n_216;
-  nand g1 (n_83, A[0], B[0]);
-  xor g5 (Z[0], A[0], B[0]);
-  nand g7 (n_88, A[1], B[1]);
-  nand g10 (n_92, n_88, n_89, n_90);
-  xor g11 (n_91, A[1], B[1]);
-  nand g13 (n_93, A[2], B[2]);
-  nand g14 (n_94, A[2], n_92);
-  nand g15 (n_95, B[2], n_92);
-  nand g16 (n_97, n_93, n_94, n_95);
-  xor g17 (n_96, A[2], B[2]);
-  xor g18 (Z[2], n_92, n_96);
-  nand g19 (n_98, A[3], B[3]);
-  nand g20 (n_99, A[3], n_97);
-  nand g21 (n_100, B[3], n_97);
-  nand g22 (n_102, n_98, n_99, n_100);
-  xor g23 (n_101, A[3], B[3]);
-  xor g24 (Z[3], n_97, n_101);
-  nand g25 (n_103, A[4], B[4]);
-  nand g26 (n_104, A[4], n_102);
-  nand g27 (n_105, B[4], n_102);
-  nand g28 (n_107, n_103, n_104, n_105);
-  xor g29 (n_106, A[4], B[4]);
-  xor g30 (Z[4], n_102, n_106);
-  nand g31 (n_108, A[5], B[5]);
-  nand g32 (n_109, A[5], n_107);
-  nand g33 (n_110, B[5], n_107);
-  nand g34 (n_112, n_108, n_109, n_110);
-  xor g35 (n_111, A[5], B[5]);
-  xor g36 (Z[5], n_107, n_111);
-  nand g37 (n_113, A[6], B[6]);
-  nand g38 (n_114, A[6], n_112);
-  nand g39 (n_115, B[6], n_112);
-  nand g40 (n_117, n_113, n_114, n_115);
-  xor g41 (n_116, A[6], B[6]);
-  xor g42 (Z[6], n_112, n_116);
-  nand g43 (n_118, A[7], B[7]);
-  nand g44 (n_119, A[7], n_117);
-  nand g45 (n_120, B[7], n_117);
-  nand g46 (n_122, n_118, n_119, n_120);
-  xor g47 (n_121, A[7], B[7]);
-  xor g48 (Z[7], n_117, n_121);
-  nand g49 (n_123, A[8], B[8]);
-  nand g50 (n_124, A[8], n_122);
-  nand g51 (n_125, B[8], n_122);
-  nand g52 (n_127, n_123, n_124, n_125);
-  xor g53 (n_126, A[8], B[8]);
-  xor g54 (Z[8], n_122, n_126);
-  nand g55 (n_128, A[9], B[9]);
-  nand g56 (n_129, A[9], n_127);
-  nand g57 (n_130, B[9], n_127);
-  nand g58 (n_132, n_128, n_129, n_130);
-  xor g59 (n_131, A[9], B[9]);
-  xor g60 (Z[9], n_127, n_131);
-  nand g61 (n_133, A[10], B[10]);
-  nand g62 (n_134, A[10], n_132);
-  nand g63 (n_135, B[10], n_132);
-  nand g64 (n_137, n_133, n_134, n_135);
-  xor g65 (n_136, A[10], B[10]);
-  xor g66 (Z[10], n_132, n_136);
-  nand g67 (n_138, A[11], B[11]);
-  nand g68 (n_139, A[11], n_137);
-  nand g69 (n_140, B[11], n_137);
-  nand g70 (n_142, n_138, n_139, n_140);
-  xor g71 (n_141, A[11], B[11]);
-  xor g72 (Z[11], n_137, n_141);
-  nand g73 (n_143, A[12], B[12]);
-  nand g74 (n_144, A[12], n_142);
-  nand g75 (n_145, B[12], n_142);
-  nand g76 (n_147, n_143, n_144, n_145);
-  xor g77 (n_146, A[12], B[12]);
-  xor g78 (Z[12], n_142, n_146);
-  nand g79 (n_148, A[13], B[13]);
-  nand g80 (n_149, A[13], n_147);
-  nand g81 (n_150, B[13], n_147);
-  nand g82 (n_152, n_148, n_149, n_150);
-  xor g83 (n_151, A[13], B[13]);
-  xor g84 (Z[13], n_147, n_151);
-  nand g85 (n_153, A[14], B[14]);
-  nand g86 (n_154, A[14], n_152);
-  nand g87 (n_155, B[14], n_152);
-  nand g88 (n_157, n_153, n_154, n_155);
-  xor g89 (n_156, A[14], B[14]);
-  xor g90 (Z[14], n_152, n_156);
-  nand g91 (n_158, A[15], B[15]);
-  nand g92 (n_159, A[15], n_157);
-  nand g93 (n_160, B[15], n_157);
-  nand g94 (n_162, n_158, n_159, n_160);
-  xor g95 (n_161, A[15], B[15]);
-  xor g96 (Z[15], n_157, n_161);
-  nand g97 (n_163, A[16], B[16]);
-  nand g98 (n_164, A[16], n_162);
-  nand g99 (n_165, B[16], n_162);
-  nand g100 (n_167, n_163, n_164, n_165);
-  xor g101 (n_166, A[16], B[16]);
-  xor g102 (Z[16], n_162, n_166);
-  nand g103 (n_168, A[17], B[17]);
-  nand g104 (n_169, A[17], n_167);
-  nand g105 (n_170, B[17], n_167);
-  nand g106 (n_172, n_168, n_169, n_170);
-  xor g107 (n_171, A[17], B[17]);
-  xor g108 (Z[17], n_167, n_171);
-  nand g109 (n_173, A[18], B[18]);
-  nand g110 (n_174, A[18], n_172);
-  nand g111 (n_175, B[18], n_172);
-  nand g112 (n_177, n_173, n_174, n_175);
-  xor g113 (n_176, A[18], B[18]);
-  xor g114 (Z[18], n_172, n_176);
-  nand g115 (n_178, A[19], B[19]);
-  nand g116 (n_179, A[19], n_177);
-  nand g117 (n_180, B[19], n_177);
-  nand g118 (n_182, n_178, n_179, n_180);
-  xor g119 (n_181, A[19], B[19]);
-  xor g120 (Z[19], n_177, n_181);
-  nand g121 (n_183, A[20], B[20]);
-  nand g122 (n_184, A[20], n_182);
-  nand g123 (n_185, B[20], n_182);
-  nand g124 (n_187, n_183, n_184, n_185);
-  xor g125 (n_186, A[20], B[20]);
-  xor g126 (Z[20], n_182, n_186);
-  nand g127 (n_188, A[21], B[21]);
-  nand g128 (n_189, A[21], n_187);
-  nand g129 (n_190, B[21], n_187);
-  nand g130 (n_192, n_188, n_189, n_190);
-  xor g131 (n_191, A[21], B[21]);
-  xor g132 (Z[21], n_187, n_191);
-  nand g133 (n_193, A[22], B[22]);
-  nand g134 (n_194, A[22], n_192);
-  nand g135 (n_195, B[22], n_192);
-  nand g136 (n_197, n_193, n_194, n_195);
-  xor g137 (n_196, A[22], B[22]);
-  xor g138 (Z[22], n_192, n_196);
-  nand g139 (n_198, A[23], B[23]);
-  nand g140 (n_199, A[23], n_197);
-  nand g141 (n_200, B[23], n_197);
-  nand g142 (n_202, n_198, n_199, n_200);
-  xor g143 (n_201, A[23], B[23]);
-  xor g144 (Z[23], n_197, n_201);
-  nand g145 (n_203, A[24], B[24]);
-  nand g146 (n_204, A[24], n_202);
-  nand g147 (n_205, B[24], n_202);
-  nand g148 (n_207, n_203, n_204, n_205);
-  xor g149 (n_206, A[24], B[24]);
-  xor g150 (Z[24], n_202, n_206);
-  nand g151 (n_208, A[25], B[25]);
-  nand g152 (n_209, A[25], n_207);
-  nand g153 (n_210, B[25], n_207);
-  nand g154 (n_212, n_208, n_209, n_210);
-  xor g155 (n_211, A[25], B[25]);
-  xor g156 (Z[25], n_207, n_211);
-  xor g161 (n_216, A[26], B[26]);
-  xor g162 (Z[26], n_212, n_216);
-  or g164 (n_89, wc, n_83);
-  not gc (wc, A[1]);
-  or g165 (n_90, wc0, n_83);
-  not gc0 (wc0, B[1]);
-  xnor g166 (Z[1], n_83, n_91);
-endmodule
-
-module add_unsigned_GENERIC(A, B, Z);
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  add_unsigned_GENERIC_REAL g1(.A (A), .B (B), .Z (Z));
-endmodule
-
-module add_unsigned_161_GENERIC_REAL(A, B, Z);
-// synthesis_equation add_unsigned
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  wire n_83, n_88, n_89, n_90, n_91, n_92, n_93, n_94;
-  wire n_95, n_96, n_97, n_98, n_99, n_100, n_101, n_102;
-  wire n_103, n_104, n_105, n_106, n_107, n_108, n_109, n_110;
-  wire n_111, n_112, n_113, n_114, n_115, n_116, n_117, n_118;
-  wire n_119, n_120, n_121, n_122, n_123, n_124, n_125, n_126;
-  wire n_127, n_128, n_129, n_130, n_131, n_132, n_133, n_134;
-  wire n_135, n_136, n_137, n_138, n_139, n_140, n_141, n_142;
-  wire n_143, n_144, n_145, n_146, n_147, n_148, n_149, n_150;
-  wire n_151, n_152, n_153, n_154, n_155, n_156, n_157, n_158;
-  wire n_159, n_160, n_161, n_162, n_163, n_164, n_165, n_166;
-  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_174;
-  wire n_175, n_176, n_177, n_178, n_179, n_180, n_181, n_182;
-  wire n_183, n_184, n_185, n_186, n_187, n_188, n_189, n_190;
-  wire n_191, n_192, n_193, n_194, n_195, n_196, n_197, n_198;
-  wire n_199, n_200, n_201, n_202, n_203, n_204, n_205, n_206;
-  wire n_207, n_208, n_209, n_210, n_211, n_212, n_216;
-  nand g1 (n_83, A[0], B[0]);
-  xor g5 (Z[0], A[0], B[0]);
-  nand g7 (n_88, A[1], B[1]);
-  nand g10 (n_92, n_88, n_89, n_90);
-  xor g11 (n_91, A[1], B[1]);
-  nand g13 (n_93, A[2], B[2]);
-  nand g14 (n_94, A[2], n_92);
-  nand g15 (n_95, B[2], n_92);
-  nand g16 (n_97, n_93, n_94, n_95);
-  xor g17 (n_96, A[2], B[2]);
-  xor g18 (Z[2], n_92, n_96);
-  nand g19 (n_98, A[3], B[3]);
-  nand g20 (n_99, A[3], n_97);
-  nand g21 (n_100, B[3], n_97);
-  nand g22 (n_102, n_98, n_99, n_100);
-  xor g23 (n_101, A[3], B[3]);
-  xor g24 (Z[3], n_97, n_101);
-  nand g25 (n_103, A[4], B[4]);
-  nand g26 (n_104, A[4], n_102);
-  nand g27 (n_105, B[4], n_102);
-  nand g28 (n_107, n_103, n_104, n_105);
-  xor g29 (n_106, A[4], B[4]);
-  xor g30 (Z[4], n_102, n_106);
-  nand g31 (n_108, A[5], B[5]);
-  nand g32 (n_109, A[5], n_107);
-  nand g33 (n_110, B[5], n_107);
-  nand g34 (n_112, n_108, n_109, n_110);
-  xor g35 (n_111, A[5], B[5]);
-  xor g36 (Z[5], n_107, n_111);
-  nand g37 (n_113, A[6], B[6]);
-  nand g38 (n_114, A[6], n_112);
-  nand g39 (n_115, B[6], n_112);
-  nand g40 (n_117, n_113, n_114, n_115);
-  xor g41 (n_116, A[6], B[6]);
-  xor g42 (Z[6], n_112, n_116);
-  nand g43 (n_118, A[7], B[7]);
-  nand g44 (n_119, A[7], n_117);
-  nand g45 (n_120, B[7], n_117);
-  nand g46 (n_122, n_118, n_119, n_120);
-  xor g47 (n_121, A[7], B[7]);
-  xor g48 (Z[7], n_117, n_121);
-  nand g49 (n_123, A[8], B[8]);
-  nand g50 (n_124, A[8], n_122);
-  nand g51 (n_125, B[8], n_122);
-  nand g52 (n_127, n_123, n_124, n_125);
-  xor g53 (n_126, A[8], B[8]);
-  xor g54 (Z[8], n_122, n_126);
-  nand g55 (n_128, A[9], B[9]);
-  nand g56 (n_129, A[9], n_127);
-  nand g57 (n_130, B[9], n_127);
-  nand g58 (n_132, n_128, n_129, n_130);
-  xor g59 (n_131, A[9], B[9]);
-  xor g60 (Z[9], n_127, n_131);
-  nand g61 (n_133, A[10], B[10]);
-  nand g62 (n_134, A[10], n_132);
-  nand g63 (n_135, B[10], n_132);
-  nand g64 (n_137, n_133, n_134, n_135);
-  xor g65 (n_136, A[10], B[10]);
-  xor g66 (Z[10], n_132, n_136);
-  nand g67 (n_138, A[11], B[11]);
-  nand g68 (n_139, A[11], n_137);
-  nand g69 (n_140, B[11], n_137);
-  nand g70 (n_142, n_138, n_139, n_140);
-  xor g71 (n_141, A[11], B[11]);
-  xor g72 (Z[11], n_137, n_141);
-  nand g73 (n_143, A[12], B[12]);
-  nand g74 (n_144, A[12], n_142);
-  nand g75 (n_145, B[12], n_142);
-  nand g76 (n_147, n_143, n_144, n_145);
-  xor g77 (n_146, A[12], B[12]);
-  xor g78 (Z[12], n_142, n_146);
-  nand g79 (n_148, A[13], B[13]);
-  nand g80 (n_149, A[13], n_147);
-  nand g81 (n_150, B[13], n_147);
-  nand g82 (n_152, n_148, n_149, n_150);
-  xor g83 (n_151, A[13], B[13]);
-  xor g84 (Z[13], n_147, n_151);
-  nand g85 (n_153, A[14], B[14]);
-  nand g86 (n_154, A[14], n_152);
-  nand g87 (n_155, B[14], n_152);
-  nand g88 (n_157, n_153, n_154, n_155);
-  xor g89 (n_156, A[14], B[14]);
-  xor g90 (Z[14], n_152, n_156);
-  nand g91 (n_158, A[15], B[15]);
-  nand g92 (n_159, A[15], n_157);
-  nand g93 (n_160, B[15], n_157);
-  nand g94 (n_162, n_158, n_159, n_160);
-  xor g95 (n_161, A[15], B[15]);
-  xor g96 (Z[15], n_157, n_161);
-  nand g97 (n_163, A[16], B[16]);
-  nand g98 (n_164, A[16], n_162);
-  nand g99 (n_165, B[16], n_162);
-  nand g100 (n_167, n_163, n_164, n_165);
-  xor g101 (n_166, A[16], B[16]);
-  xor g102 (Z[16], n_162, n_166);
-  nand g103 (n_168, A[17], B[17]);
-  nand g104 (n_169, A[17], n_167);
-  nand g105 (n_170, B[17], n_167);
-  nand g106 (n_172, n_168, n_169, n_170);
-  xor g107 (n_171, A[17], B[17]);
-  xor g108 (Z[17], n_167, n_171);
-  nand g109 (n_173, A[18], B[18]);
-  nand g110 (n_174, A[18], n_172);
-  nand g111 (n_175, B[18], n_172);
-  nand g112 (n_177, n_173, n_174, n_175);
-  xor g113 (n_176, A[18], B[18]);
-  xor g114 (Z[18], n_172, n_176);
-  nand g115 (n_178, A[19], B[19]);
-  nand g116 (n_179, A[19], n_177);
-  nand g117 (n_180, B[19], n_177);
-  nand g118 (n_182, n_178, n_179, n_180);
-  xor g119 (n_181, A[19], B[19]);
-  xor g120 (Z[19], n_177, n_181);
-  nand g121 (n_183, A[20], B[20]);
-  nand g122 (n_184, A[20], n_182);
-  nand g123 (n_185, B[20], n_182);
-  nand g124 (n_187, n_183, n_184, n_185);
-  xor g125 (n_186, A[20], B[20]);
-  xor g126 (Z[20], n_182, n_186);
-  nand g127 (n_188, A[21], B[21]);
-  nand g128 (n_189, A[21], n_187);
-  nand g129 (n_190, B[21], n_187);
-  nand g130 (n_192, n_188, n_189, n_190);
-  xor g131 (n_191, A[21], B[21]);
-  xor g132 (Z[21], n_187, n_191);
-  nand g133 (n_193, A[22], B[22]);
-  nand g134 (n_194, A[22], n_192);
-  nand g135 (n_195, B[22], n_192);
-  nand g136 (n_197, n_193, n_194, n_195);
-  xor g137 (n_196, A[22], B[22]);
-  xor g138 (Z[22], n_192, n_196);
-  nand g139 (n_198, A[23], B[23]);
-  nand g140 (n_199, A[23], n_197);
-  nand g141 (n_200, B[23], n_197);
-  nand g142 (n_202, n_198, n_199, n_200);
-  xor g143 (n_201, A[23], B[23]);
-  xor g144 (Z[23], n_197, n_201);
-  nand g145 (n_203, A[24], B[24]);
-  nand g146 (n_204, A[24], n_202);
-  nand g147 (n_205, B[24], n_202);
-  nand g148 (n_207, n_203, n_204, n_205);
-  xor g149 (n_206, A[24], B[24]);
-  xor g150 (Z[24], n_202, n_206);
-  nand g151 (n_208, A[25], B[25]);
-  nand g152 (n_209, A[25], n_207);
-  nand g153 (n_210, B[25], n_207);
-  nand g154 (n_212, n_208, n_209, n_210);
-  xor g155 (n_211, A[25], B[25]);
-  xor g156 (Z[25], n_207, n_211);
-  xor g161 (n_216, A[26], B[26]);
-  xor g162 (Z[26], n_212, n_216);
-  or g164 (n_89, wc, n_83);
-  not gc (wc, A[1]);
-  or g165 (n_90, wc0, n_83);
-  not gc0 (wc0, B[1]);
-  xnor g166 (Z[1], n_83, n_91);
-endmodule
-
-module add_unsigned_161_GENERIC(A, B, Z);
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  add_unsigned_161_GENERIC_REAL g1(.A (A), .B (B), .Z (Z));
-endmodule
-
-module add_unsigned_162_GENERIC_REAL(A, B, Z);
-// synthesis_equation add_unsigned
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  wire n_83, n_88, n_89, n_90, n_91, n_92, n_93, n_94;
-  wire n_95, n_96, n_97, n_98, n_99, n_100, n_101, n_102;
-  wire n_103, n_104, n_105, n_106, n_107, n_108, n_109, n_110;
-  wire n_111, n_112, n_113, n_114, n_115, n_116, n_117, n_118;
-  wire n_119, n_120, n_121, n_122, n_123, n_124, n_125, n_126;
-  wire n_127, n_128, n_129, n_130, n_131, n_132, n_133, n_134;
-  wire n_135, n_136, n_137, n_138, n_139, n_140, n_141, n_142;
-  wire n_143, n_144, n_145, n_146, n_147, n_148, n_149, n_150;
-  wire n_151, n_152, n_153, n_154, n_155, n_156, n_157, n_158;
-  wire n_159, n_160, n_161, n_162, n_163, n_164, n_165, n_166;
-  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_174;
-  wire n_175, n_176, n_177, n_178, n_179, n_180, n_181, n_182;
-  wire n_183, n_184, n_185, n_186, n_187, n_188, n_189, n_190;
-  wire n_191, n_192, n_193, n_194, n_195, n_196, n_197, n_198;
-  wire n_199, n_200, n_201, n_202, n_203, n_204, n_205, n_206;
-  wire n_207, n_208, n_209, n_210, n_211, n_212, n_216;
-  nand g1 (n_83, A[0], B[0]);
-  xor g5 (Z[0], A[0], B[0]);
-  nand g7 (n_88, A[1], B[1]);
-  nand g10 (n_92, n_88, n_89, n_90);
-  xor g11 (n_91, A[1], B[1]);
-  nand g13 (n_93, A[2], B[2]);
-  nand g14 (n_94, A[2], n_92);
-  nand g15 (n_95, B[2], n_92);
-  nand g16 (n_97, n_93, n_94, n_95);
-  xor g17 (n_96, A[2], B[2]);
-  xor g18 (Z[2], n_92, n_96);
-  nand g19 (n_98, A[3], B[3]);
-  nand g20 (n_99, A[3], n_97);
-  nand g21 (n_100, B[3], n_97);
-  nand g22 (n_102, n_98, n_99, n_100);
-  xor g23 (n_101, A[3], B[3]);
-  xor g24 (Z[3], n_97, n_101);
-  nand g25 (n_103, A[4], B[4]);
-  nand g26 (n_104, A[4], n_102);
-  nand g27 (n_105, B[4], n_102);
-  nand g28 (n_107, n_103, n_104, n_105);
-  xor g29 (n_106, A[4], B[4]);
-  xor g30 (Z[4], n_102, n_106);
-  nand g31 (n_108, A[5], B[5]);
-  nand g32 (n_109, A[5], n_107);
-  nand g33 (n_110, B[5], n_107);
-  nand g34 (n_112, n_108, n_109, n_110);
-  xor g35 (n_111, A[5], B[5]);
-  xor g36 (Z[5], n_107, n_111);
-  nand g37 (n_113, A[6], B[6]);
-  nand g38 (n_114, A[6], n_112);
-  nand g39 (n_115, B[6], n_112);
-  nand g40 (n_117, n_113, n_114, n_115);
-  xor g41 (n_116, A[6], B[6]);
-  xor g42 (Z[6], n_112, n_116);
-  nand g43 (n_118, A[7], B[7]);
-  nand g44 (n_119, A[7], n_117);
-  nand g45 (n_120, B[7], n_117);
-  nand g46 (n_122, n_118, n_119, n_120);
-  xor g47 (n_121, A[7], B[7]);
-  xor g48 (Z[7], n_117, n_121);
-  nand g49 (n_123, A[8], B[8]);
-  nand g50 (n_124, A[8], n_122);
-  nand g51 (n_125, B[8], n_122);
-  nand g52 (n_127, n_123, n_124, n_125);
-  xor g53 (n_126, A[8], B[8]);
-  xor g54 (Z[8], n_122, n_126);
-  nand g55 (n_128, A[9], B[9]);
-  nand g56 (n_129, A[9], n_127);
-  nand g57 (n_130, B[9], n_127);
-  nand g58 (n_132, n_128, n_129, n_130);
-  xor g59 (n_131, A[9], B[9]);
-  xor g60 (Z[9], n_127, n_131);
-  nand g61 (n_133, A[10], B[10]);
-  nand g62 (n_134, A[10], n_132);
-  nand g63 (n_135, B[10], n_132);
-  nand g64 (n_137, n_133, n_134, n_135);
-  xor g65 (n_136, A[10], B[10]);
-  xor g66 (Z[10], n_132, n_136);
-  nand g67 (n_138, A[11], B[11]);
-  nand g68 (n_139, A[11], n_137);
-  nand g69 (n_140, B[11], n_137);
-  nand g70 (n_142, n_138, n_139, n_140);
-  xor g71 (n_141, A[11], B[11]);
-  xor g72 (Z[11], n_137, n_141);
-  nand g73 (n_143, A[12], B[12]);
-  nand g74 (n_144, A[12], n_142);
-  nand g75 (n_145, B[12], n_142);
-  nand g76 (n_147, n_143, n_144, n_145);
-  xor g77 (n_146, A[12], B[12]);
-  xor g78 (Z[12], n_142, n_146);
-  nand g79 (n_148, A[13], B[13]);
-  nand g80 (n_149, A[13], n_147);
-  nand g81 (n_150, B[13], n_147);
-  nand g82 (n_152, n_148, n_149, n_150);
-  xor g83 (n_151, A[13], B[13]);
-  xor g84 (Z[13], n_147, n_151);
-  nand g85 (n_153, A[14], B[14]);
-  nand g86 (n_154, A[14], n_152);
-  nand g87 (n_155, B[14], n_152);
-  nand g88 (n_157, n_153, n_154, n_155);
-  xor g89 (n_156, A[14], B[14]);
-  xor g90 (Z[14], n_152, n_156);
-  nand g91 (n_158, A[15], B[15]);
-  nand g92 (n_159, A[15], n_157);
-  nand g93 (n_160, B[15], n_157);
-  nand g94 (n_162, n_158, n_159, n_160);
-  xor g95 (n_161, A[15], B[15]);
-  xor g96 (Z[15], n_157, n_161);
-  nand g97 (n_163, A[16], B[16]);
-  nand g98 (n_164, A[16], n_162);
-  nand g99 (n_165, B[16], n_162);
-  nand g100 (n_167, n_163, n_164, n_165);
-  xor g101 (n_166, A[16], B[16]);
-  xor g102 (Z[16], n_162, n_166);
-  nand g103 (n_168, A[17], B[17]);
-  nand g104 (n_169, A[17], n_167);
-  nand g105 (n_170, B[17], n_167);
-  nand g106 (n_172, n_168, n_169, n_170);
-  xor g107 (n_171, A[17], B[17]);
-  xor g108 (Z[17], n_167, n_171);
-  nand g109 (n_173, A[18], B[18]);
-  nand g110 (n_174, A[18], n_172);
-  nand g111 (n_175, B[18], n_172);
-  nand g112 (n_177, n_173, n_174, n_175);
-  xor g113 (n_176, A[18], B[18]);
-  xor g114 (Z[18], n_172, n_176);
-  nand g115 (n_178, A[19], B[19]);
-  nand g116 (n_179, A[19], n_177);
-  nand g117 (n_180, B[19], n_177);
-  nand g118 (n_182, n_178, n_179, n_180);
-  xor g119 (n_181, A[19], B[19]);
-  xor g120 (Z[19], n_177, n_181);
-  nand g121 (n_183, A[20], B[20]);
-  nand g122 (n_184, A[20], n_182);
-  nand g123 (n_185, B[20], n_182);
-  nand g124 (n_187, n_183, n_184, n_185);
-  xor g125 (n_186, A[20], B[20]);
-  xor g126 (Z[20], n_182, n_186);
-  nand g127 (n_188, A[21], B[21]);
-  nand g128 (n_189, A[21], n_187);
-  nand g129 (n_190, B[21], n_187);
-  nand g130 (n_192, n_188, n_189, n_190);
-  xor g131 (n_191, A[21], B[21]);
-  xor g132 (Z[21], n_187, n_191);
-  nand g133 (n_193, A[22], B[22]);
-  nand g134 (n_194, A[22], n_192);
-  nand g135 (n_195, B[22], n_192);
-  nand g136 (n_197, n_193, n_194, n_195);
-  xor g137 (n_196, A[22], B[22]);
-  xor g138 (Z[22], n_192, n_196);
-  nand g139 (n_198, A[23], B[23]);
-  nand g140 (n_199, A[23], n_197);
-  nand g141 (n_200, B[23], n_197);
-  nand g142 (n_202, n_198, n_199, n_200);
-  xor g143 (n_201, A[23], B[23]);
-  xor g144 (Z[23], n_197, n_201);
-  nand g145 (n_203, A[24], B[24]);
-  nand g146 (n_204, A[24], n_202);
-  nand g147 (n_205, B[24], n_202);
-  nand g148 (n_207, n_203, n_204, n_205);
-  xor g149 (n_206, A[24], B[24]);
-  xor g150 (Z[24], n_202, n_206);
-  nand g151 (n_208, A[25], B[25]);
-  nand g152 (n_209, A[25], n_207);
-  nand g153 (n_210, B[25], n_207);
-  nand g154 (n_212, n_208, n_209, n_210);
-  xor g155 (n_211, A[25], B[25]);
-  xor g156 (Z[25], n_207, n_211);
-  xor g161 (n_216, A[26], B[26]);
-  xor g162 (Z[26], n_212, n_216);
-  or g164 (n_89, wc, n_83);
-  not gc (wc, A[1]);
-  or g165 (n_90, wc0, n_83);
-  not gc0 (wc0, B[1]);
-  xnor g166 (Z[1], n_83, n_91);
-endmodule
-
-module add_unsigned_162_GENERIC(A, B, Z);
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  add_unsigned_162_GENERIC_REAL g1(.A (A), .B (B), .Z (Z));
-endmodule
-
-module add_unsigned_carry_358_2_GENERIC_REAL(A, B, CI, Z);
-// synthesis_equation add_unsigned_carry
-  input [22:0] A, B;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A, B;
-  wire CI;
-  wire [22:0] Z;
-  wire n_71, n_72, n_73, n_74, n_75, n_76, n_77, n_78;
-  wire n_79, n_80, n_81, n_82, n_83, n_84, n_85, n_86;
-  wire n_87, n_88, n_89, n_90, n_91, n_92, n_93, n_94;
-  wire n_95, n_96, n_97, n_98, n_99, n_100, n_101, n_102;
-  wire n_103, n_104, n_105, n_106, n_107, n_108, n_109, n_110;
-  wire n_111, n_112, n_113, n_114, n_115, n_116, n_117, n_118;
-  wire n_119, n_120, n_121, n_122, n_123, n_124, n_125, n_126;
-  wire n_127, n_128, n_129, n_130, n_131, n_132, n_133, n_134;
-  wire n_135, n_136, n_137, n_138, n_139, n_140, n_141, n_142;
-  wire n_143, n_144, n_145, n_146, n_147, n_148, n_149, n_150;
-  wire n_151, n_152, n_153, n_154, n_155, n_156, n_157, n_158;
-  wire n_159, n_160, n_161, n_162, n_163, n_164, n_165, n_166;
-  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_174;
-  wire n_175, n_176, n_177, n_178, n_179, n_180, n_184;
-  nand g1 (n_71, A[0], B[0]);
-  nand g2 (n_72, A[0], CI);
-  nand g3 (n_73, B[0], CI);
-  nand g4 (n_75, n_71, n_72, n_73);
-  xor g5 (n_74, A[0], B[0]);
-  xor g6 (Z[0], CI, n_74);
-  nand g7 (n_76, A[1], B[1]);
-  nand g8 (n_77, A[1], n_75);
-  nand g9 (n_78, B[1], n_75);
-  nand g10 (n_80, n_76, n_77, n_78);
-  xor g11 (n_79, A[1], B[1]);
-  xor g12 (Z[1], n_75, n_79);
-  nand g13 (n_81, A[2], B[2]);
-  nand g14 (n_82, A[2], n_80);
-  nand g15 (n_83, B[2], n_80);
-  nand g16 (n_85, n_81, n_82, n_83);
-  xor g17 (n_84, A[2], B[2]);
-  xor g18 (Z[2], n_80, n_84);
-  nand g19 (n_86, A[3], B[3]);
-  nand g20 (n_87, A[3], n_85);
-  nand g21 (n_88, B[3], n_85);
-  nand g22 (n_90, n_86, n_87, n_88);
-  xor g23 (n_89, A[3], B[3]);
-  xor g24 (Z[3], n_85, n_89);
-  nand g25 (n_91, A[4], B[4]);
-  nand g26 (n_92, A[4], n_90);
-  nand g27 (n_93, B[4], n_90);
-  nand g28 (n_95, n_91, n_92, n_93);
-  xor g29 (n_94, A[4], B[4]);
-  xor g30 (Z[4], n_90, n_94);
-  nand g31 (n_96, A[5], B[5]);
-  nand g32 (n_97, A[5], n_95);
-  nand g33 (n_98, B[5], n_95);
-  nand g34 (n_100, n_96, n_97, n_98);
-  xor g35 (n_99, A[5], B[5]);
-  xor g36 (Z[5], n_95, n_99);
-  nand g37 (n_101, A[6], B[6]);
-  nand g38 (n_102, A[6], n_100);
-  nand g39 (n_103, B[6], n_100);
-  nand g40 (n_105, n_101, n_102, n_103);
-  xor g41 (n_104, A[6], B[6]);
-  xor g42 (Z[6], n_100, n_104);
-  nand g43 (n_106, A[7], B[7]);
-  nand g44 (n_107, A[7], n_105);
-  nand g45 (n_108, B[7], n_105);
-  nand g46 (n_110, n_106, n_107, n_108);
-  xor g47 (n_109, A[7], B[7]);
-  xor g48 (Z[7], n_105, n_109);
-  nand g49 (n_111, A[8], B[8]);
-  nand g50 (n_112, A[8], n_110);
-  nand g51 (n_113, B[8], n_110);
-  nand g52 (n_115, n_111, n_112, n_113);
-  xor g53 (n_114, A[8], B[8]);
-  xor g54 (Z[8], n_110, n_114);
-  nand g55 (n_116, A[9], B[9]);
-  nand g56 (n_117, A[9], n_115);
-  nand g57 (n_118, B[9], n_115);
-  nand g58 (n_120, n_116, n_117, n_118);
-  xor g59 (n_119, A[9], B[9]);
-  xor g60 (Z[9], n_115, n_119);
-  nand g61 (n_121, A[10], B[10]);
-  nand g62 (n_122, A[10], n_120);
-  nand g63 (n_123, B[10], n_120);
-  nand g64 (n_125, n_121, n_122, n_123);
-  xor g65 (n_124, A[10], B[10]);
-  xor g66 (Z[10], n_120, n_124);
-  nand g67 (n_126, A[11], B[11]);
-  nand g68 (n_127, A[11], n_125);
-  nand g69 (n_128, B[11], n_125);
-  nand g70 (n_130, n_126, n_127, n_128);
-  xor g71 (n_129, A[11], B[11]);
-  xor g72 (Z[11], n_125, n_129);
-  nand g73 (n_131, A[12], B[12]);
-  nand g74 (n_132, A[12], n_130);
-  nand g75 (n_133, B[12], n_130);
-  nand g76 (n_135, n_131, n_132, n_133);
-  xor g77 (n_134, A[12], B[12]);
-  xor g78 (Z[12], n_130, n_134);
-  nand g79 (n_136, A[13], B[13]);
-  nand g80 (n_137, A[13], n_135);
-  nand g81 (n_138, B[13], n_135);
-  nand g82 (n_140, n_136, n_137, n_138);
-  xor g83 (n_139, A[13], B[13]);
-  xor g84 (Z[13], n_135, n_139);
-  nand g85 (n_141, A[14], B[14]);
-  nand g86 (n_142, A[14], n_140);
-  nand g87 (n_143, B[14], n_140);
-  nand g88 (n_145, n_141, n_142, n_143);
-  xor g89 (n_144, A[14], B[14]);
-  xor g90 (Z[14], n_140, n_144);
-  nand g91 (n_146, A[15], B[15]);
-  nand g92 (n_147, A[15], n_145);
-  nand g93 (n_148, B[15], n_145);
-  nand g94 (n_150, n_146, n_147, n_148);
-  xor g95 (n_149, A[15], B[15]);
-  xor g96 (Z[15], n_145, n_149);
-  nand g97 (n_151, A[16], B[16]);
-  nand g98 (n_152, A[16], n_150);
-  nand g99 (n_153, B[16], n_150);
-  nand g100 (n_155, n_151, n_152, n_153);
-  xor g101 (n_154, A[16], B[16]);
-  xor g102 (Z[16], n_150, n_154);
-  nand g103 (n_156, A[17], B[17]);
-  nand g104 (n_157, A[17], n_155);
-  nand g105 (n_158, B[17], n_155);
-  nand g106 (n_160, n_156, n_157, n_158);
-  xor g107 (n_159, A[17], B[17]);
-  xor g108 (Z[17], n_155, n_159);
-  nand g109 (n_161, A[18], B[18]);
-  nand g110 (n_162, A[18], n_160);
-  nand g111 (n_163, B[18], n_160);
-  nand g112 (n_165, n_161, n_162, n_163);
-  xor g113 (n_164, A[18], B[18]);
-  xor g114 (Z[18], n_160, n_164);
-  nand g115 (n_166, A[19], B[19]);
-  nand g116 (n_167, A[19], n_165);
-  nand g117 (n_168, B[19], n_165);
-  nand g118 (n_170, n_166, n_167, n_168);
-  xor g119 (n_169, A[19], B[19]);
-  xor g120 (Z[19], n_165, n_169);
-  nand g121 (n_171, A[20], B[20]);
-  nand g122 (n_172, A[20], n_170);
-  nand g123 (n_173, B[20], n_170);
-  nand g124 (n_175, n_171, n_172, n_173);
-  xor g125 (n_174, A[20], B[20]);
-  xor g126 (Z[20], n_170, n_174);
-  nand g127 (n_176, A[21], B[21]);
-  nand g128 (n_177, A[21], n_175);
-  nand g129 (n_178, B[21], n_175);
-  nand g130 (n_180, n_176, n_177, n_178);
-  xor g131 (n_179, A[21], B[21]);
-  xor g132 (Z[21], n_175, n_179);
-  xor g137 (n_184, A[22], B[22]);
-  xor g138 (Z[22], n_180, n_184);
-endmodule
-
-module add_unsigned_carry_358_2_GENERIC(A, B, CI, Z);
-  input [22:0] A, B;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A, B;
-  wire CI;
-  wire [22:0] Z;
-  wire n_1, n_2, n_3, n_4, n_5, n_6, n_7, n_8;
-  wire n_9, n_10, n_11, n_12, n_13, n_14, n_15, n_16;
-  wire n_17, n_18, n_19, n_20, n_21, n_45;
-  add_unsigned_carry_358_2_GENERIC_REAL g1(.A ({n_1, n_2, n_3, n_4,
-       n_5, n_6, n_7, n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15,
-       n_16, n_17, n_18, n_19, n_20, n_21, A[1:0]}), .B ({B[22:2],
-       n_45, B[0]}), .CI (CI), .Z (Z));
-  not g2 (n_1, B[21]);
-  not g3 (n_2, B[20]);
-  not g4 (n_3, B[19]);
-  not g5 (n_4, B[18]);
-  not g6 (n_5, B[17]);
-  not g7 (n_6, B[16]);
-  not g8 (n_7, B[15]);
-  not g9 (n_8, B[14]);
-  not g10 (n_9, B[13]);
-  not g11 (n_10, B[12]);
-  not g12 (n_11, B[11]);
-  not g13 (n_12, B[10]);
-  not g14 (n_13, B[9]);
-  not g15 (n_14, B[8]);
-  not g16 (n_15, B[7]);
-  not g17 (n_16, B[6]);
-  not g18 (n_17, B[5]);
-  not g19 (n_18, B[4]);
-  not g20 (n_19, B[3]);
-  not g21 (n_20, B[2]);
-  not g22 (n_21, A[1]);
-  not g23 (n_45, B[0]);
-endmodule
-
-module csa_tree_308_GENERIC_REAL(in_0, out_0, out_1);
-// synthesis_equation "assign out_0 = ( $signed({1'b0,in_0}) - 128 )  ; assign out_1 = 10'b0;"
-  input [7:0] in_0;
-  output [9:0] out_0, out_1;
-  wire [7:0] in_0;
-  wire [9:0] out_0, out_1;
-  assign out_1[0] = 1'b0;
-  assign out_1[1] = 1'b0;
-  assign out_1[2] = 1'b0;
-  assign out_1[3] = 1'b0;
-  assign out_1[4] = 1'b0;
-  assign out_1[5] = 1'b0;
-  assign out_1[6] = 1'b0;
-  assign out_1[7] = 1'b1;
-  assign out_1[8] = 1'b0;
-  assign out_1[9] = 1'b0;
-  assign out_0[0] = in_0[0];
-  assign out_0[1] = in_0[1];
-  assign out_0[2] = in_0[2];
-  assign out_0[3] = in_0[3];
-  assign out_0[4] = in_0[4];
-  assign out_0[5] = in_0[5];
-  assign out_0[6] = in_0[6];
-  assign out_0[7] = in_0[7];
-  assign out_0[8] = 1'b1;
-  assign out_0[9] = 1'b1;
-endmodule
-
-module csa_tree_308_GENERIC(in_0, out_0, out_1);
-  input [7:0] in_0;
-  output [9:0] out_0, out_1;
-  wire [7:0] in_0;
-  wire [9:0] out_0, out_1;
-  csa_tree_308_GENERIC_REAL g1(.in_0 (in_0), .out_0 (out_0), .out_1
-       (out_1));
-endmodule
-
-module csa_tree_308_1_GENERIC_REAL(in_0, out_0, out_1);
-// synthesis_equation "assign out_0 = ( $signed({1'b0,in_0}) - 128 )  ; assign out_1 = 10'b0;"
-  input [7:0] in_0;
-  output [9:0] out_0, out_1;
-  wire [7:0] in_0;
-  wire [9:0] out_0, out_1;
-  assign out_1[0] = 1'b0;
-  assign out_1[1] = 1'b0;
-  assign out_1[2] = 1'b0;
-  assign out_1[3] = 1'b0;
-  assign out_1[4] = 1'b0;
-  assign out_1[5] = 1'b0;
-  assign out_1[6] = 1'b0;
-  assign out_1[7] = 1'b1;
-  assign out_1[8] = 1'b0;
-  assign out_1[9] = 1'b0;
-  assign out_0[0] = in_0[0];
-  assign out_0[1] = in_0[1];
-  assign out_0[2] = in_0[2];
-  assign out_0[3] = in_0[3];
-  assign out_0[4] = in_0[4];
-  assign out_0[5] = in_0[5];
-  assign out_0[6] = in_0[6];
-  assign out_0[7] = in_0[7];
-  assign out_0[8] = 1'b1;
-  assign out_0[9] = 1'b1;
-endmodule
-
-module csa_tree_308_1_GENERIC(in_0, out_0, out_1);
-  input [7:0] in_0;
-  output [9:0] out_0, out_1;
-  wire [7:0] in_0;
-  wire [9:0] out_0, out_1;
-  csa_tree_308_1_GENERIC_REAL g1(.in_0 (in_0), .out_0 (out_0), .out_1
-       (out_1));
-endmodule
-
-module increment_unsigned_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  wire n_52, n_53, n_54, n_55, n_56, n_57, n_58, n_59;
-  wire n_60, n_61, n_62, n_63, n_64, n_65, n_66, n_67;
-  wire n_68, n_69, n_70, n_71, n_72, n_73, n_74, n_75;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_52, A[0], CI);
-  xor g25 (Z[1], A[1], n_52);
-  and g26 (n_53, A[1], n_52);
-  xor g27 (Z[2], A[2], n_53);
-  and g28 (n_54, A[2], n_53);
-  xor g29 (Z[3], A[3], n_54);
-  and g30 (n_55, A[3], n_54);
-  xor g31 (Z[4], A[4], n_55);
-  and g32 (n_56, A[4], n_55);
-  xor g33 (Z[5], A[5], n_56);
-  and g34 (n_57, A[5], n_56);
-  xor g35 (Z[6], A[6], n_57);
-  and g36 (n_58, A[6], n_57);
-  xor g37 (Z[7], A[7], n_58);
-  and g38 (n_59, A[7], n_58);
-  xor g39 (Z[8], A[8], n_59);
-  and g40 (n_60, A[8], n_59);
-  xor g41 (Z[9], A[9], n_60);
-  and g42 (n_61, A[9], n_60);
-  xor g43 (Z[10], A[10], n_61);
-  and g44 (n_62, A[10], n_61);
-  xor g45 (Z[11], A[11], n_62);
-  and g46 (n_63, A[11], n_62);
-  xor g47 (Z[12], A[12], n_63);
-  and g48 (n_64, A[12], n_63);
-  xor g49 (Z[13], A[13], n_64);
-  and g50 (n_65, A[13], n_64);
-  xor g51 (Z[14], A[14], n_65);
-  and g52 (n_66, A[14], n_65);
-  xor g53 (Z[15], A[15], n_66);
-  and g54 (n_67, A[15], n_66);
-  xor g55 (Z[16], A[16], n_67);
-  and g56 (n_68, A[16], n_67);
-  xor g57 (Z[17], A[17], n_68);
-  and g58 (n_69, A[17], n_68);
-  xor g59 (Z[18], A[18], n_69);
-  and g60 (n_70, A[18], n_69);
-  xor g61 (Z[19], A[19], n_70);
-  and g62 (n_71, A[19], n_70);
-  xor g63 (Z[20], A[20], n_71);
-  and g64 (n_72, A[20], n_71);
-  xor g65 (Z[21], A[21], n_72);
-  and g66 (n_73, A[21], n_72);
-  xor g67 (Z[22], A[22], n_73);
-  and g68 (n_74, A[22], n_73);
-  xor g69 (Z[23], A[23], n_74);
-  and g70 (n_75, A[23], n_74);
-  xor g71 (Z[24], A[24], n_75);
-endmodule
-
-module increment_unsigned_GENERIC(A, CI, Z);
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  increment_unsigned_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_1_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  wire n_52, n_53, n_54, n_55, n_56, n_57, n_58, n_59;
-  wire n_60, n_61, n_62, n_63, n_64, n_65, n_66, n_67;
-  wire n_68, n_69, n_70, n_71, n_72, n_73, n_74, n_75;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_52, A[0], CI);
-  xor g25 (Z[1], A[1], n_52);
-  and g26 (n_53, A[1], n_52);
-  xor g27 (Z[2], A[2], n_53);
-  and g28 (n_54, A[2], n_53);
-  xor g29 (Z[3], A[3], n_54);
-  and g30 (n_55, A[3], n_54);
-  xor g31 (Z[4], A[4], n_55);
-  and g32 (n_56, A[4], n_55);
-  xor g33 (Z[5], A[5], n_56);
-  and g34 (n_57, A[5], n_56);
-  xor g35 (Z[6], A[6], n_57);
-  and g36 (n_58, A[6], n_57);
-  xor g37 (Z[7], A[7], n_58);
-  and g38 (n_59, A[7], n_58);
-  xor g39 (Z[8], A[8], n_59);
-  and g40 (n_60, A[8], n_59);
-  xor g41 (Z[9], A[9], n_60);
-  and g42 (n_61, A[9], n_60);
-  xor g43 (Z[10], A[10], n_61);
-  and g44 (n_62, A[10], n_61);
-  xor g45 (Z[11], A[11], n_62);
-  and g46 (n_63, A[11], n_62);
-  xor g47 (Z[12], A[12], n_63);
-  and g48 (n_64, A[12], n_63);
-  xor g49 (Z[13], A[13], n_64);
-  and g50 (n_65, A[13], n_64);
-  xor g51 (Z[14], A[14], n_65);
-  and g52 (n_66, A[14], n_65);
-  xor g53 (Z[15], A[15], n_66);
-  and g54 (n_67, A[15], n_66);
-  xor g55 (Z[16], A[16], n_67);
-  and g56 (n_68, A[16], n_67);
-  xor g57 (Z[17], A[17], n_68);
-  and g58 (n_69, A[17], n_68);
-  xor g59 (Z[18], A[18], n_69);
-  and g60 (n_70, A[18], n_69);
-  xor g61 (Z[19], A[19], n_70);
-  and g62 (n_71, A[19], n_70);
-  xor g63 (Z[20], A[20], n_71);
-  and g64 (n_72, A[20], n_71);
-  xor g65 (Z[21], A[21], n_72);
-  and g66 (n_73, A[21], n_72);
-  xor g67 (Z[22], A[22], n_73);
-  and g68 (n_74, A[22], n_73);
-  xor g69 (Z[23], A[23], n_74);
-  and g70 (n_75, A[23], n_74);
-  xor g71 (Z[24], A[24], n_75);
-endmodule
-
-module increment_unsigned_1_GENERIC(A, CI, Z);
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  increment_unsigned_1_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_1_1252_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  wire n_52, n_53, n_54, n_55, n_56, n_57, n_58, n_59;
-  wire n_60, n_61, n_62, n_63, n_64, n_65, n_66, n_67;
-  wire n_68, n_69, n_70, n_71, n_72, n_73, n_74, n_75;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_52, A[0], CI);
-  xor g25 (Z[1], A[1], n_52);
-  and g26 (n_53, A[1], n_52);
-  xor g27 (Z[2], A[2], n_53);
-  and g28 (n_54, A[2], n_53);
-  xor g29 (Z[3], A[3], n_54);
-  and g30 (n_55, A[3], n_54);
-  xor g31 (Z[4], A[4], n_55);
-  and g32 (n_56, A[4], n_55);
-  xor g33 (Z[5], A[5], n_56);
-  and g34 (n_57, A[5], n_56);
-  xor g35 (Z[6], A[6], n_57);
-  and g36 (n_58, A[6], n_57);
-  xor g37 (Z[7], A[7], n_58);
-  and g38 (n_59, A[7], n_58);
-  xor g39 (Z[8], A[8], n_59);
-  and g40 (n_60, A[8], n_59);
-  xor g41 (Z[9], A[9], n_60);
-  and g42 (n_61, A[9], n_60);
-  xor g43 (Z[10], A[10], n_61);
-  and g44 (n_62, A[10], n_61);
-  xor g45 (Z[11], A[11], n_62);
-  and g46 (n_63, A[11], n_62);
-  xor g47 (Z[12], A[12], n_63);
-  and g48 (n_64, A[12], n_63);
-  xor g49 (Z[13], A[13], n_64);
-  and g50 (n_65, A[13], n_64);
-  xor g51 (Z[14], A[14], n_65);
-  and g52 (n_66, A[14], n_65);
-  xor g53 (Z[15], A[15], n_66);
-  and g54 (n_67, A[15], n_66);
-  xor g55 (Z[16], A[16], n_67);
-  and g56 (n_68, A[16], n_67);
-  xor g57 (Z[17], A[17], n_68);
-  and g58 (n_69, A[17], n_68);
-  xor g59 (Z[18], A[18], n_69);
-  and g60 (n_70, A[18], n_69);
-  xor g61 (Z[19], A[19], n_70);
-  and g62 (n_71, A[19], n_70);
-  xor g63 (Z[20], A[20], n_71);
-  and g64 (n_72, A[20], n_71);
-  xor g65 (Z[21], A[21], n_72);
-  and g66 (n_73, A[21], n_72);
-  xor g67 (Z[22], A[22], n_73);
-  and g68 (n_74, A[22], n_73);
-  xor g69 (Z[23], A[23], n_74);
-  and g70 (n_75, A[23], n_74);
-  xor g71 (Z[24], A[24], n_75);
-endmodule
-
-module increment_unsigned_1_1252_GENERIC(A, CI, Z);
-  input [24:0] A;
-  input CI;
-  output [24:0] Z;
-  wire [24:0] A;
-  wire CI;
-  wire [24:0] Z;
-  increment_unsigned_1_1252_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_332_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [26:0] A;
-  input CI;
-  output [26:0] Z;
-  wire [26:0] A;
-  wire CI;
-  wire [26:0] Z;
-  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_63;
-  wire n_64, n_65, n_66, n_67, n_68, n_69, n_70, n_71;
-  wire n_72, n_73, n_74, n_75, n_76, n_77, n_78, n_79;
-  wire n_80, n_81;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_56, A[0], CI);
-  xor g27 (Z[1], A[1], n_56);
-  and g28 (n_57, A[1], n_56);
-  xor g29 (Z[2], A[2], n_57);
-  and g30 (n_58, A[2], n_57);
-  xor g31 (Z[3], A[3], n_58);
-  and g32 (n_59, A[3], n_58);
-  xor g33 (Z[4], A[4], n_59);
-  and g34 (n_60, A[4], n_59);
-  xor g35 (Z[5], A[5], n_60);
-  and g36 (n_61, A[5], n_60);
-  xor g37 (Z[6], A[6], n_61);
-  and g38 (n_62, A[6], n_61);
-  xor g39 (Z[7], A[7], n_62);
-  and g40 (n_63, A[7], n_62);
-  xor g41 (Z[8], A[8], n_63);
-  and g42 (n_64, A[8], n_63);
-  xor g43 (Z[9], A[9], n_64);
-  and g44 (n_65, A[9], n_64);
-  xor g45 (Z[10], A[10], n_65);
-  and g46 (n_66, A[10], n_65);
-  xor g47 (Z[11], A[11], n_66);
-  and g48 (n_67, A[11], n_66);
-  xor g49 (Z[12], A[12], n_67);
-  and g50 (n_68, A[12], n_67);
-  xor g51 (Z[13], A[13], n_68);
-  and g52 (n_69, A[13], n_68);
-  xor g53 (Z[14], A[14], n_69);
-  and g54 (n_70, A[14], n_69);
-  xor g55 (Z[15], A[15], n_70);
-  and g56 (n_71, A[15], n_70);
-  xor g57 (Z[16], A[16], n_71);
-  and g58 (n_72, A[16], n_71);
-  xor g59 (Z[17], A[17], n_72);
-  and g60 (n_73, A[17], n_72);
-  xor g61 (Z[18], A[18], n_73);
-  and g62 (n_74, A[18], n_73);
-  xor g63 (Z[19], A[19], n_74);
-  and g64 (n_75, A[19], n_74);
-  xor g65 (Z[20], A[20], n_75);
-  and g66 (n_76, A[20], n_75);
-  xor g67 (Z[21], A[21], n_76);
-  and g68 (n_77, A[21], n_76);
-  xor g69 (Z[22], A[22], n_77);
-  and g70 (n_78, A[22], n_77);
-  xor g71 (Z[23], A[23], n_78);
-  and g72 (n_79, A[23], n_78);
-  xor g73 (Z[24], A[24], n_79);
-  and g74 (n_80, A[24], n_79);
-  xor g75 (Z[25], A[25], n_80);
-  and g76 (n_81, A[25], n_80);
-  xor g77 (Z[26], A[26], n_81);
-endmodule
-
-module increment_unsigned_332_GENERIC(A, CI, Z);
-  input [26:0] A;
-  input CI;
-  output [26:0] Z;
-  wire [26:0] A;
-  wire CI;
-  wire [26:0] Z;
-  increment_unsigned_332_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_355_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  wire n_48, n_49, n_50, n_51, n_52, n_53, n_54, n_55;
-  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_63;
-  wire n_64, n_65, n_66, n_67, n_68, n_69;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_48, A[0], CI);
-  xor g23 (Z[1], A[1], n_48);
-  and g24 (n_49, A[1], n_48);
-  xor g25 (Z[2], A[2], n_49);
-  and g26 (n_50, A[2], n_49);
-  xor g27 (Z[3], A[3], n_50);
-  and g28 (n_51, A[3], n_50);
-  xor g29 (Z[4], A[4], n_51);
-  and g30 (n_52, A[4], n_51);
-  xor g31 (Z[5], A[5], n_52);
-  and g32 (n_53, A[5], n_52);
-  xor g33 (Z[6], A[6], n_53);
-  and g34 (n_54, A[6], n_53);
-  xor g35 (Z[7], A[7], n_54);
-  and g36 (n_55, A[7], n_54);
-  xor g37 (Z[8], A[8], n_55);
-  and g38 (n_56, A[8], n_55);
-  xor g39 (Z[9], A[9], n_56);
-  and g40 (n_57, A[9], n_56);
-  xor g41 (Z[10], A[10], n_57);
-  and g42 (n_58, A[10], n_57);
-  xor g43 (Z[11], A[11], n_58);
-  and g44 (n_59, A[11], n_58);
-  xor g45 (Z[12], A[12], n_59);
-  and g46 (n_60, A[12], n_59);
-  xor g47 (Z[13], A[13], n_60);
-  and g48 (n_61, A[13], n_60);
-  xor g49 (Z[14], A[14], n_61);
-  and g50 (n_62, A[14], n_61);
-  xor g51 (Z[15], A[15], n_62);
-  and g52 (n_63, A[15], n_62);
-  xor g53 (Z[16], A[16], n_63);
-  and g54 (n_64, A[16], n_63);
-  xor g55 (Z[17], A[17], n_64);
-  and g56 (n_65, A[17], n_64);
-  xor g57 (Z[18], A[18], n_65);
-  and g58 (n_66, A[18], n_65);
-  xor g59 (Z[19], A[19], n_66);
-  and g60 (n_67, A[19], n_66);
-  xor g61 (Z[20], A[20], n_67);
-  and g62 (n_68, A[20], n_67);
-  xor g63 (Z[21], A[21], n_68);
-  and g64 (n_69, A[21], n_68);
-  xor g65 (Z[22], A[22], n_69);
-endmodule
-
-module increment_unsigned_355_GENERIC(A, CI, Z);
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  increment_unsigned_355_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_355_1_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  wire n_48, n_49, n_50, n_51, n_52, n_53, n_54, n_55;
-  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_63;
-  wire n_64, n_65, n_66, n_67, n_68, n_69;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_48, A[0], CI);
-  xor g23 (Z[1], A[1], n_48);
-  and g24 (n_49, A[1], n_48);
-  xor g25 (Z[2], A[2], n_49);
-  and g26 (n_50, A[2], n_49);
-  xor g27 (Z[3], A[3], n_50);
-  and g28 (n_51, A[3], n_50);
-  xor g29 (Z[4], A[4], n_51);
-  and g30 (n_52, A[4], n_51);
-  xor g31 (Z[5], A[5], n_52);
-  and g32 (n_53, A[5], n_52);
-  xor g33 (Z[6], A[6], n_53);
-  and g34 (n_54, A[6], n_53);
-  xor g35 (Z[7], A[7], n_54);
-  and g36 (n_55, A[7], n_54);
-  xor g37 (Z[8], A[8], n_55);
-  and g38 (n_56, A[8], n_55);
-  xor g39 (Z[9], A[9], n_56);
-  and g40 (n_57, A[9], n_56);
-  xor g41 (Z[10], A[10], n_57);
-  and g42 (n_58, A[10], n_57);
-  xor g43 (Z[11], A[11], n_58);
-  and g44 (n_59, A[11], n_58);
-  xor g45 (Z[12], A[12], n_59);
-  and g46 (n_60, A[12], n_59);
-  xor g47 (Z[13], A[13], n_60);
-  and g48 (n_61, A[13], n_60);
-  xor g49 (Z[14], A[14], n_61);
-  and g50 (n_62, A[14], n_61);
-  xor g51 (Z[15], A[15], n_62);
-  and g52 (n_63, A[15], n_62);
-  xor g53 (Z[16], A[16], n_63);
-  and g54 (n_64, A[16], n_63);
-  xor g55 (Z[17], A[17], n_64);
-  and g56 (n_65, A[17], n_64);
-  xor g57 (Z[18], A[18], n_65);
-  and g58 (n_66, A[18], n_65);
-  xor g59 (Z[19], A[19], n_66);
-  and g60 (n_67, A[19], n_66);
-  xor g61 (Z[20], A[20], n_67);
-  and g62 (n_68, A[20], n_67);
-  xor g63 (Z[21], A[21], n_68);
-  and g64 (n_69, A[21], n_68);
-  xor g65 (Z[22], A[22], n_69);
-endmodule
-
-module increment_unsigned_355_1_GENERIC(A, CI, Z);
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  increment_unsigned_355_1_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module increment_unsigned_355_2_GENERIC_REAL(A, CI, Z);
-// synthesis_equation increment_unsigned
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  wire n_48, n_49, n_50, n_51, n_52, n_53, n_54, n_55;
-  wire n_56, n_57, n_58, n_59, n_60, n_61, n_62, n_63;
-  wire n_64, n_65, n_66, n_67, n_68, n_69;
-  xor g1 (Z[0], A[0], CI);
-  and g2 (n_48, A[0], CI);
-  xor g23 (Z[1], A[1], n_48);
-  and g24 (n_49, A[1], n_48);
-  xor g25 (Z[2], A[2], n_49);
-  and g26 (n_50, A[2], n_49);
-  xor g27 (Z[3], A[3], n_50);
-  and g28 (n_51, A[3], n_50);
-  xor g29 (Z[4], A[4], n_51);
-  and g30 (n_52, A[4], n_51);
-  xor g31 (Z[5], A[5], n_52);
-  and g32 (n_53, A[5], n_52);
-  xor g33 (Z[6], A[6], n_53);
-  and g34 (n_54, A[6], n_53);
-  xor g35 (Z[7], A[7], n_54);
-  and g36 (n_55, A[7], n_54);
-  xor g37 (Z[8], A[8], n_55);
-  and g38 (n_56, A[8], n_55);
-  xor g39 (Z[9], A[9], n_56);
-  and g40 (n_57, A[9], n_56);
-  xor g41 (Z[10], A[10], n_57);
-  and g42 (n_58, A[10], n_57);
-  xor g43 (Z[11], A[11], n_58);
-  and g44 (n_59, A[11], n_58);
-  xor g45 (Z[12], A[12], n_59);
-  and g46 (n_60, A[12], n_59);
-  xor g47 (Z[13], A[13], n_60);
-  and g48 (n_61, A[13], n_60);
-  xor g49 (Z[14], A[14], n_61);
-  and g50 (n_62, A[14], n_61);
-  xor g51 (Z[15], A[15], n_62);
-  and g52 (n_63, A[15], n_62);
-  xor g53 (Z[16], A[16], n_63);
-  and g54 (n_64, A[16], n_63);
-  xor g55 (Z[17], A[17], n_64);
-  and g56 (n_65, A[17], n_64);
-  xor g57 (Z[18], A[18], n_65);
-  and g58 (n_66, A[18], n_65);
-  xor g59 (Z[19], A[19], n_66);
-  and g60 (n_67, A[19], n_66);
-  xor g61 (Z[20], A[20], n_67);
-  and g62 (n_68, A[20], n_67);
-  xor g63 (Z[21], A[21], n_68);
-  and g64 (n_69, A[21], n_68);
-  xor g65 (Z[22], A[22], n_69);
-endmodule
-
-module increment_unsigned_355_2_GENERIC(A, CI, Z);
-  input [22:0] A;
-  input CI;
-  output [22:0] Z;
-  wire [22:0] A;
-  wire CI;
-  wire [22:0] Z;
-  increment_unsigned_355_2_GENERIC_REAL g1(.A (A), .CI (CI), .Z (Z));
-endmodule
-
-module mult_unsigned_GENERIC_REAL(A, B, Z);
-// synthesis_equation "assign Z = $unsigned(A) * $unsigned(B);"
-  input [25:0] A, B;
-  output [51:0] Z;
-  wire [25:0] A, B;
-  wire [51:0] Z;
-  wire n_105, n_106, n_107, n_108, n_109, n_110, n_111, n_112;
-  wire n_113, n_114, n_115, n_116, n_117, n_118, n_119, n_120;
-  wire n_121, n_122, n_123, n_124, n_125, n_126, n_127, n_128;
-  wire n_129, n_130, n_131, n_132, n_133, n_134, n_135, n_136;
-  wire n_137, n_138, n_139, n_140, n_141, n_142, n_143, n_144;
-  wire n_145, n_146, n_147, n_148, n_149, n_150, n_151, n_152;
-  wire n_157, n_158, n_159, n_160, n_161, n_162, n_163, n_164;
-  wire n_165, n_166, n_167, n_168, n_169, n_170, n_171, n_172;
-  wire n_173, n_174, n_175, n_176, n_177, n_178, n_179, n_180;
-  wire n_181, n_182, n_183, n_184, n_185, n_186, n_187, n_188;
-  wire n_189, n_190, n_191, n_192, n_193, n_194, n_195, n_196;
-  wire n_197, n_198, n_199, n_200, n_201, n_202, n_204, n_311;
-  wire n_313, n_315, n_319, n_322, n_323, n_324, n_325, n_326;
-  wire n_327, n_328, n_329, n_330, n_331, n_332, n_333, n_334;
-  wire n_335, n_336, n_337, n_338, n_339, n_340, n_341, n_342;
-  wire n_343, n_344, n_345, n_346, n_347, n_348, n_349, n_350;
-  wire n_351, n_352, n_353, n_354, n_355, n_356, n_357, n_358;
-  wire n_359, n_360, n_361, n_362, n_363, n_364, n_365, n_366;
-  wire n_367, n_368, n_369, n_370, n_371, n_372, n_373, n_374;
-  wire n_375, n_376, n_377, n_378, n_379, n_380, n_381, n_382;
-  wire n_383, n_384, n_385, n_386, n_387, n_388, n_389, n_390;
-  wire n_391, n_392, n_393, n_396, n_397, n_401, n_402, n_404;
-  wire n_405, n_406, n_407, n_408, n_410, n_412, n_416, n_419;
-  wire n_420, n_421, n_422, n_423, n_424, n_425, n_426, n_427;
-  wire n_428, n_429, n_430, n_431, n_432, n_433, n_434, n_435;
-  wire n_436, n_437, n_438, n_439, n_440, n_441, n_442, n_443;
-  wire n_444, n_445, n_446, n_447, n_448, n_449, n_450, n_451;
-  wire n_452, n_453, n_454, n_455, n_456, n_457, n_458, n_459;
-  wire n_460, n_461, n_462, n_463, n_464, n_465, n_466, n_467;
-  wire n_468, n_469, n_470, n_471, n_472, n_473, n_474, n_475;
-  wire n_476, n_477, n_478, n_479, n_480, n_481, n_482, n_483;
-  wire n_484, n_485, n_486, n_487, n_488, n_489, n_490, n_493;
-  wire n_494, n_498, n_499, n_501, n_502, n_503, n_504, n_505;
-  wire n_507, n_509, n_513, n_516, n_517, n_518, n_519, n_520;
-  wire n_521, n_522, n_523, n_524, n_525, n_526, n_527, n_528;
-  wire n_529, n_530, n_531, n_532, n_533, n_534, n_535, n_536;
-  wire n_537, n_538, n_539, n_540, n_541, n_542, n_543, n_544;
-  wire n_545, n_546, n_547, n_548, n_549, n_550, n_551, n_552;
-  wire n_553, n_554, n_555, n_556, n_557, n_558, n_559, n_560;
-  wire n_561, n_562, n_563, n_564, n_565, n_566, n_567, n_568;
-  wire n_569, n_570, n_571, n_572, n_573, n_574, n_575, n_576;
-  wire n_577, n_578, n_579, n_580, n_581, n_582, n_583, n_584;
-  wire n_585, n_586, n_587, n_590, n_591, n_595, n_596, n_598;
-  wire n_599, n_600, n_601, n_602, n_604, n_606, n_610, n_613;
-  wire n_614, n_615, n_616, n_617, n_618, n_619, n_620, n_621;
-  wire n_622, n_623, n_624, n_625, n_626, n_627, n_628, n_629;
-  wire n_630, n_631, n_632, n_633, n_634, n_635, n_636, n_637;
-  wire n_638, n_639, n_640, n_641, n_642, n_643, n_644, n_645;
-  wire n_646, n_647, n_648, n_649, n_650, n_651, n_652, n_653;
-  wire n_654, n_655, n_656, n_657, n_658, n_659, n_660, n_661;
-  wire n_662, n_663, n_664, n_665, n_666, n_667, n_668, n_669;
-  wire n_670, n_671, n_672, n_673, n_674, n_675, n_676, n_677;
-  wire n_678, n_679, n_680, n_681, n_682, n_683, n_684, n_687;
-  wire n_688, n_692, n_693, n_695, n_696, n_697, n_698, n_699;
-  wire n_701, n_703, n_707, n_710, n_711, n_712, n_713, n_714;
-  wire n_715, n_716, n_717, n_718, n_719, n_720, n_721, n_722;
-  wire n_723, n_724, n_725, n_726, n_727, n_728, n_729, n_730;
-  wire n_731, n_732, n_733, n_734, n_735, n_736, n_737, n_738;
-  wire n_739, n_740, n_741, n_742, n_743, n_744, n_745, n_746;
-  wire n_747, n_748, n_749, n_750, n_751, n_752, n_753, n_754;
-  wire n_755, n_756, n_757, n_758, n_759, n_760, n_761, n_762;
-  wire n_763, n_764, n_765, n_766, n_767, n_768, n_769, n_770;
-  wire n_771, n_772, n_773, n_774, n_775, n_776, n_777, n_778;
-  wire n_779, n_780, n_781, n_784, n_785, n_789, n_790, n_792;
-  wire n_793, n_794, n_795, n_796, n_798, n_800, n_804, n_807;
-  wire n_808, n_809, n_810, n_811, n_812, n_813, n_814, n_815;
-  wire n_816, n_817, n_818, n_819, n_820, n_821, n_822, n_823;
-  wire n_824, n_825, n_826, n_827, n_828, n_829, n_830, n_831;
-  wire n_832, n_833, n_834, n_835, n_836, n_837, n_838, n_839;
-  wire n_840, n_841, n_842, n_843, n_844, n_845, n_846, n_847;
-  wire n_848, n_849, n_850, n_851, n_852, n_853, n_854, n_855;
-  wire n_856, n_857, n_858, n_859, n_860, n_861, n_862, n_863;
-  wire n_864, n_865, n_866, n_867, n_868, n_869, n_870, n_871;
-  wire n_872, n_873, n_874, n_875, n_876, n_877, n_878, n_881;
-  wire n_882, n_886, n_887, n_889, n_890, n_891, n_892, n_893;
-  wire n_895, n_897, n_901, n_904, n_905, n_906, n_907, n_908;
-  wire n_909, n_910, n_911, n_912, n_913, n_914, n_915, n_916;
-  wire n_917, n_918, n_919, n_920, n_921, n_922, n_923, n_924;
-  wire n_925, n_926, n_927, n_928, n_929, n_930, n_931, n_932;
-  wire n_933, n_934, n_935, n_936, n_937, n_938, n_939, n_940;
-  wire n_941, n_942, n_943, n_944, n_945, n_946, n_947, n_948;
-  wire n_949, n_950, n_951, n_952, n_953, n_954, n_955, n_956;
-  wire n_957, n_958, n_959, n_960, n_961, n_962, n_963, n_964;
-  wire n_965, n_966, n_967, n_968, n_969, n_970, n_971, n_972;
-  wire n_973, n_974, n_975, n_978, n_979, n_983, n_984, n_986;
-  wire n_987, n_988, n_989, n_990, n_992, n_994, n_998, n_1001;
-  wire n_1002, n_1003, n_1004, n_1005, n_1006, n_1007, n_1008, n_1009;
-  wire n_1010, n_1011, n_1012, n_1013, n_1014, n_1015, n_1016, n_1017;
-  wire n_1018, n_1019, n_1020, n_1021, n_1022, n_1023, n_1024, n_1025;
-  wire n_1026, n_1027, n_1028, n_1029, n_1030, n_1031, n_1032, n_1033;
-  wire n_1034, n_1035, n_1036, n_1037, n_1038, n_1039, n_1040, n_1041;
-  wire n_1042, n_1043, n_1044, n_1045, n_1046, n_1047, n_1048, n_1049;
-  wire n_1050, n_1051, n_1052, n_1053, n_1054, n_1055, n_1056, n_1057;
-  wire n_1058, n_1059, n_1060, n_1061, n_1062, n_1063, n_1064, n_1065;
-  wire n_1066, n_1067, n_1068, n_1069, n_1070, n_1071, n_1072, n_1075;
-  wire n_1076, n_1080, n_1081, n_1083, n_1084, n_1085, n_1086, n_1087;
-  wire n_1089, n_1091, n_1095, n_1098, n_1099, n_1100, n_1101, n_1102;
-  wire n_1103, n_1104, n_1105, n_1106, n_1107, n_1108, n_1109, n_1110;
-  wire n_1111, n_1112, n_1113, n_1114, n_1115, n_1116, n_1117, n_1118;
-  wire n_1119, n_1120, n_1121, n_1122, n_1123, n_1124, n_1125, n_1126;
-  wire n_1127, n_1128, n_1129, n_1130, n_1131, n_1132, n_1133, n_1134;
-  wire n_1135, n_1136, n_1137, n_1138, n_1139, n_1140, n_1141, n_1142;
-  wire n_1143, n_1144, n_1145, n_1146, n_1147, n_1148, n_1149, n_1150;
-  wire n_1151, n_1152, n_1153, n_1154, n_1155, n_1156, n_1157, n_1158;
-  wire n_1159, n_1160, n_1161, n_1162, n_1163, n_1164, n_1165, n_1166;
-  wire n_1167, n_1168, n_1169, n_1172, n_1173, n_1177, n_1178, n_1180;
-  wire n_1181, n_1182, n_1183, n_1184, n_1186, n_1188, n_1192, n_1195;
-  wire n_1196, n_1197, n_1198, n_1199, n_1200, n_1201, n_1202, n_1203;
-  wire n_1204, n_1205, n_1206, n_1207, n_1208, n_1209, n_1210, n_1211;
-  wire n_1212, n_1213, n_1214, n_1215, n_1216, n_1217, n_1218, n_1219;
-  wire n_1220, n_1221, n_1222, n_1223, n_1224, n_1225, n_1226, n_1227;
-  wire n_1228, n_1229, n_1230, n_1231, n_1232, n_1233, n_1234, n_1235;
-  wire n_1236, n_1237, n_1238, n_1239, n_1240, n_1241, n_1242, n_1243;
-  wire n_1244, n_1245, n_1246, n_1247, n_1248, n_1249, n_1250, n_1251;
-  wire n_1252, n_1253, n_1254, n_1255, n_1256, n_1257, n_1258, n_1259;
-  wire n_1260, n_1261, n_1262, n_1263, n_1264, n_1265, n_1266, n_1269;
-  wire n_1270, n_1274, n_1275, n_1277, n_1278, n_1279, n_1280, n_1281;
-  wire n_1283, n_1285, n_1289, n_1292, n_1293, n_1294, n_1295, n_1296;
-  wire n_1297, n_1298, n_1299, n_1300, n_1301, n_1302, n_1303, n_1304;
-  wire n_1305, n_1306, n_1307, n_1308, n_1309, n_1310, n_1311, n_1312;
-  wire n_1313, n_1314, n_1315, n_1316, n_1317, n_1318, n_1319, n_1320;
-  wire n_1321, n_1322, n_1323, n_1324, n_1325, n_1326, n_1327, n_1328;
-  wire n_1329, n_1330, n_1331, n_1332, n_1333, n_1334, n_1335, n_1336;
-  wire n_1337, n_1338, n_1339, n_1340, n_1341, n_1342, n_1343, n_1344;
-  wire n_1345, n_1346, n_1347, n_1348, n_1349, n_1350, n_1351, n_1352;
-  wire n_1353, n_1354, n_1355, n_1356, n_1357, n_1358, n_1359, n_1360;
-  wire n_1361, n_1362, n_1363, n_1366, n_1367, n_1371, n_1372, n_1374;
-  wire n_1375, n_1376, n_1377, n_1378, n_1380, n_1382, n_1386, n_1389;
-  wire n_1390, n_1391, n_1392, n_1393, n_1394, n_1395, n_1396, n_1397;
-  wire n_1398, n_1399, n_1400, n_1401, n_1402, n_1403, n_1404, n_1405;
-  wire n_1406, n_1407, n_1408, n_1409, n_1410, n_1411, n_1412, n_1413;
-  wire n_1414, n_1415, n_1416, n_1417, n_1418, n_1419, n_1420, n_1421;
-  wire n_1422, n_1423, n_1424, n_1425, n_1426, n_1427, n_1428, n_1429;
-  wire n_1430, n_1431, n_1432, n_1433, n_1434, n_1435, n_1436, n_1437;
-  wire n_1438, n_1439, n_1440, n_1441, n_1442, n_1443, n_1444, n_1445;
-  wire n_1446, n_1447, n_1448, n_1449, n_1450, n_1451, n_1452, n_1453;
-  wire n_1454, n_1455, n_1456, n_1457, n_1458, n_1459, n_1460, n_1463;
-  wire n_1464, n_1468, n_1469, n_1471, n_1472, n_1473, n_1474, n_1497;
-  wire n_1501, n_1505, n_1509, n_1513, n_1517, n_1521, n_1525, n_1529;
-  wire n_1533, n_1537, n_1541, n_1545, n_1549, n_1553, n_1557, n_1561;
-  wire n_1565, n_1569, n_1573, n_1577, n_1581, n_1585, n_1597, n_1598;
-  wire n_1599, n_1600, n_1601, n_1602, n_1603, n_1604, n_1605, n_1606;
-  wire n_1607, n_1608, n_1609, n_1610, n_1611, n_1612, n_1613, n_1614;
-  wire n_1615, n_1616, n_1617, n_1618, n_1619, n_1620, n_1621, n_1622;
-  wire n_1623, n_1624, n_1625, n_1626, n_1627, n_1628, n_1629, n_1630;
-  wire n_1631, n_1632, n_1633, n_1634, n_1635, n_1636, n_1637, n_1638;
-  wire n_1639, n_1640, n_1641, n_1642, n_1643, n_1644, n_1645, n_1646;
-  wire n_1647, n_1648, n_1649, n_1650, n_1651, n_1652, n_1653, n_1654;
-  wire n_1655, n_1656, n_1657, n_1658, n_1659, n_1660, n_1661, n_1662;
-  wire n_1663, n_1664, n_1665, n_1666, n_1667, n_1668, n_1669, n_1670;
-  wire n_1671, n_1672, n_1673, n_1674, n_1675, n_1676, n_1677, n_1678;
-  wire n_1679, n_1680, n_1681, n_1682, n_1683, n_1684, n_1685, n_1686;
-  wire n_1687, n_1688, n_1689, n_1690, n_1691, n_1692, n_1693, n_1694;
-  wire n_1695, n_1696, n_1697, n_1698, n_1699, n_1700, n_1701, n_1702;
-  wire n_1703, n_1704, n_1705, n_1706, n_1707, n_1708, n_1709, n_1710;
-  wire n_1711, n_1712, n_1713, n_1714, n_1715, n_1716, n_1717, n_1718;
-  wire n_1719, n_1720, n_1721, n_1722, n_1723, n_1724, n_1725, n_1726;
-  wire n_1727, n_1728, n_1729, n_1730, n_1731, n_1732, n_1733, n_1734;
-  wire n_1735, n_1736, n_1737, n_1738, n_1739, n_1740, n_1741, n_1742;
-  wire n_1743, n_1744, n_1745, n_1746, n_1747, n_1748, n_1749, n_1750;
-  wire n_1751, n_1752, n_1753, n_1754, n_1755, n_1756, n_1757, n_1758;
-  wire n_1759, n_1760, n_1761, n_1762, n_1763, n_1764, n_1765, n_1766;
-  wire n_1767, n_1768, n_1769, n_1770, n_1771, n_1772, n_1773, n_1774;
-  wire n_1775, n_1776, n_1777, n_1778, n_1779, n_1780, n_1781, n_1782;
-  wire n_1783, n_1784, n_1785, n_1786, n_1787, n_1788, n_1789, n_1790;
-  wire n_1791, n_1792, n_1793, n_1794, n_1795, n_1796, n_1797, n_1798;
-  wire n_1799, n_1800, n_1801, n_1802, n_1803, n_1804, n_1805, n_1806;
-  wire n_1807, n_1808, n_1809, n_1810, n_1811, n_1812, n_1813, n_1814;
-  wire n_1815, n_1816, n_1817, n_1818, n_1819, n_1820, n_1821, n_1822;
-  wire n_1823, n_1824, n_1825, n_1826, n_1827, n_1828, n_1829, n_1830;
-  wire n_1831, n_1832, n_1833, n_1834, n_1835, n_1836, n_1837, n_1838;
-  wire n_1839, n_1840, n_1841, n_1842, n_1843, n_1844, n_1845, n_1846;
-  wire n_1847, n_1848, n_1849, n_1850, n_1851, n_1852, n_1853, n_1854;
-  wire n_1855, n_1856, n_1857, n_1858, n_1859, n_1860, n_1861, n_1862;
-  wire n_1863, n_1864, n_1865, n_1866, n_1867, n_1868, n_1869, n_1870;
-  wire n_1871, n_1872, n_1873, n_1874, n_1875, n_1876, n_1877, n_1878;
-  wire n_1879, n_1880, n_1881, n_1882, n_1883, n_1884, n_1885, n_1886;
-  wire n_1887, n_1888, n_1889, n_1890, n_1891, n_1892, n_1893, n_1894;
-  wire n_1895, n_1896, n_1897, n_1898, n_1899, n_1900, n_1901, n_1902;
-  wire n_1903, n_1904, n_1905, n_1906, n_1907, n_1908, n_1909, n_1910;
-  wire n_1911, n_1912, n_1913, n_1914, n_1915, n_1916, n_1917, n_1918;
-  wire n_1919, n_1920, n_1921, n_1922, n_1923, n_1924, n_1925, n_1926;
-  wire n_1927, n_1928, n_1929, n_1930, n_1931, n_1932, n_1933, n_1934;
-  wire n_1935, n_1936, n_1937, n_1938, n_1939, n_1940, n_1941, n_1942;
-  wire n_1943, n_1944, n_1945, n_1946, n_1947, n_1948, n_1949, n_1950;
-  wire n_1951, n_1952, n_1953, n_1954, n_1955, n_1956, n_1957, n_1958;
-  wire n_1959, n_1960, n_1961, n_1962, n_1963, n_1964, n_1965, n_1966;
-  wire n_1967, n_1968, n_1969, n_1970, n_1972, n_1973, n_1974, n_1975;
-  wire n_1976, n_1977, n_1978, n_1979, n_1980, n_1981, n_1982, n_1983;
-  wire n_1984, n_1985, n_1986, n_1987, n_1988, n_1989, n_1990, n_1991;
-  wire n_1992, n_1993, n_1994, n_1995, n_1996, n_1997, n_1998, n_1999;
-  wire n_2000, n_2001, n_2002, n_2003, n_2006, n_2007, n_2008, n_2009;
-  wire n_2010, n_2011, n_2013, n_2014, n_2015, n_2016, n_2017, n_2019;
-  wire n_2020, n_2021, n_2022, n_2023, n_2024, n_2025, n_2026, n_2027;
-  wire n_2028, n_2029, n_2030, n_2031, n_2032, n_2033, n_2034, n_2035;
-  wire n_2036, n_2037, n_2038, n_2041, n_2042, n_2043, n_2044, n_2045;
-  wire n_2046, n_2047, n_2048, n_2049, n_2050, n_2051, n_2054, n_2055;
-  wire n_2056, n_2057, n_2058, n_2059, n_2060, n_2061, n_2062, n_2063;
-  wire n_2064, n_2065, n_2066, n_2067, n_2068, n_2069, n_2070, n_2071;
-  wire n_2072, n_2073, n_2075, n_2076, n_2078, n_2079, n_2080, n_2081;
-  wire n_2082, n_2083, n_2084, n_2085, n_2087, n_2088, n_2089, n_2090;
-  wire n_2091, n_2092, n_2093, n_2094, n_2095, n_2096, n_2097, n_2098;
-  wire n_2099, n_2100, n_2101, n_2102, n_2103, n_2104, n_2105, n_2106;
-  wire n_2109, n_2110, n_2111, n_2112, n_2113, n_2114, n_2115, n_2116;
-  wire n_2117, n_2118, n_2120, n_2121, n_2122, n_2123, n_2124, n_2125;
-  wire n_2126, n_2127, n_2128, n_2129, n_2130, n_2131, n_2132, n_2133;
-  wire n_2134, n_2135, n_2136, n_2137, n_2138, n_2140, n_2141, n_2143;
-  wire n_2144, n_2145, n_2146, n_2147, n_2148, n_2149, n_2151, n_2152;
-  wire n_2153, n_2154, n_2155, n_2156, n_2157, n_2158, n_2159, n_2160;
-  wire n_2161, n_2162, n_2163, n_2164, n_2165, n_2166, n_2167, n_2168;
-  wire n_2171, n_2172, n_2173, n_2174, n_2175, n_2176, n_2177, n_2178;
-  wire n_2179, n_2181, n_2182, n_2183, n_2184, n_2185, n_2186, n_2187;
-  wire n_2188, n_2189, n_2190, n_2191, n_2192, n_2193, n_2194, n_2195;
-  wire n_2196, n_2197, n_2199, n_2200, n_2201, n_2202, n_2203, n_2204;
-  wire n_2205, n_2206, n_2209, n_2210, n_2211, n_2212, n_2213, n_2214;
-  wire n_2215, n_2216, n_2217, n_2218, n_2219, n_2220, n_2221, n_2222;
-  wire n_2223, n_2224, n_2227, n_2228, n_2229, n_2230, n_2231, n_2232;
-  wire n_2233, n_2234, n_2236, n_2237, n_2238, n_2239, n_2240, n_2241;
-  wire n_2242, n_2243, n_2244, n_2245, n_2246, n_2247, n_2248, n_2249;
-  wire n_2250, n_2252, n_2253, n_2254, n_2255, n_2257, n_2258, n_2259;
-  wire n_2261, n_2262, n_2263, n_2264, n_2265, n_2266, n_2267, n_2268;
-  wire n_2269, n_2270, n_2271, n_2272, n_2273, n_2274, n_2277, n_2278;
-  wire n_2279, n_2280, n_2281, n_2282, n_2283, n_2285, n_2286, n_2287;
-  wire n_2288, n_2289, n_2290, n_2291, n_2292, n_2293, n_2294, n_2295;
-  wire n_2296, n_2297, n_2299, n_2301, n_2302, n_2303, n_2304, n_2305;
-  wire n_2307, n_2308, n_2309, n_2310, n_2311, n_2312, n_2313, n_2314;
-  wire n_2315, n_2316, n_2317, n_2318, n_2321, n_2322, n_2323, n_2324;
-  wire n_2325, n_2326, n_2328, n_2329, n_2330, n_2331, n_2332, n_2333;
-  wire n_2334, n_2335, n_2336, n_2337, n_2338, n_2340, n_2341, n_2342;
-  wire n_2343, n_2345, n_2347, n_2348, n_2349, n_2350, n_2351, n_2352;
-  wire n_2353, n_2354, n_2355, n_2356, n_2359, n_2360, n_2361, n_2362;
-  wire n_2363, n_2365, n_2366, n_2367, n_2368, n_2369, n_2370, n_2371;
-  wire n_2372, n_2373, n_2375, n_2377, n_2378, n_2379, n_2381, n_2382;
-  wire n_2383, n_2384, n_2385, n_2386, n_2387, n_2388, n_2391, n_2392;
-  wire n_2393, n_2394, n_2396, n_2397, n_2398, n_2399, n_2400, n_2401;
-  wire n_2402, n_2404, n_2406, n_2407, n_2409, n_2410, n_2411, n_2412;
-  wire n_2413, n_2414, n_2417, n_2418, n_2419, n_2421, n_2422, n_2423;
-  wire n_2424, n_2425, n_2427, n_2428, n_2431, n_2432, n_2433, n_2434;
-  wire n_2437, n_2438, n_2440, n_2441, n_2442, n_2445, n_2447, n_2448;
-  wire n_2451, n_2453, n_2457, n_2458, n_2459, n_2460, n_2461, n_2462;
-  wire n_2463, n_2464, n_2465, n_2466, n_2467, n_2468, n_2469, n_2470;
-  wire n_2471, n_2472, n_2473, n_2474, n_2475, n_2476, n_2477, n_2478;
-  wire n_2479, n_2480, n_2481, n_2482, n_2483, n_2484, n_2485, n_2486;
-  wire n_2487, n_2488, n_2489, n_2490, n_2491, n_2492, n_2493, n_2494;
-  wire n_2495, n_2496, n_2497, n_2498, n_2499, n_2500, n_2501, n_2502;
-  wire n_2503, n_2504, n_2505, n_2506, n_2507, n_2508, n_2509, n_2510;
-  wire n_2511, n_2512, n_2513, n_2514, n_2515, n_2516, n_2517, n_2518;
-  wire n_2519, n_2520, n_2521, n_2522, n_2523, n_2524, n_2525, n_2526;
-  wire n_2527, n_2528, n_2529, n_2530, n_2531, n_2532, n_2533, n_2534;
-  wire n_2535, n_2536, n_2537, n_2538, n_2539, n_2540, n_2541, n_2542;
-  wire n_2543, n_2544, n_2545, n_2546, n_2547, n_2548, n_2549, n_2550;
-  wire n_2551, n_2552, n_2553, n_2554, n_2555, n_2556, n_2557, n_2558;
-  wire n_2559, n_2560, n_2561, n_2562, n_2563, n_2564, n_2565, n_2566;
-  wire n_2567, n_2568, n_2569, n_2570, n_2571, n_2572, n_2573, n_2574;
-  wire n_2575, n_2576, n_2577, n_2578, n_2579, n_2580, n_2581, n_2582;
-  wire n_2583, n_2584, n_2585, n_2586, n_2587, n_2588, n_2589, n_2590;
-  wire n_2591, n_2592, n_2593, n_2594, n_2595, n_2596, n_2597, n_2598;
-  wire n_2599, n_2600, n_2601, n_2602, n_2603, n_2604, n_2605, n_2606;
-  wire n_2607, n_2608, n_2609, n_2610, n_2611, n_2612, n_2613, n_2614;
-  wire n_2615, n_2616, n_2617, n_2618, n_2619, n_2620, n_2621, n_2622;
-  wire n_2623, n_2624, n_2625, n_2626, n_2627, n_2628, n_2629, n_2630;
-  wire n_2631, n_2632, n_2633, n_2634, n_2635, n_2636, n_2637, n_2638;
-  wire n_2639, n_2640, n_2641, n_2642, n_2643, n_2644, n_2645, n_2646;
-  wire n_2647, n_2648, n_2649, n_2650, n_2651, n_2652, n_2653, n_2654;
-  wire n_2655, n_2656, n_2657, n_2658, n_2659, n_2660, n_2661, n_2662;
-  wire n_2663, n_2664, n_2665, n_2666, n_2667, n_2668, n_2669, n_2670;
-  wire n_2671, n_2672, n_2673, n_2674, n_2675, n_2676, n_2677, n_2678;
-  wire n_2679, n_2680, n_2681, n_2682, n_2683, n_2684, n_2685, n_2686;
-  wire n_2687, n_2688, n_2689, n_2690, n_2691, n_2692, n_2693, n_2694;
-  wire n_2695, n_2696, n_2697, n_2698, n_2699, n_2700, n_2701, n_2702;
-  wire n_2703, n_2704, n_2705, n_2706, n_2707, n_2708, n_2709, n_2710;
-  wire n_2711, n_2712, n_2713, n_2714, n_2715, n_2716, n_2717, n_2718;
-  wire n_2719, n_2720, n_2721, n_2722, n_2723, n_2724, n_2725, n_2726;
-  wire n_2727, n_2728, n_2729, n_2730, n_2731, n_2732, n_2733, n_2734;
-  wire n_2735, n_2736, n_2737, n_2738, n_2739, n_2740, n_2741, n_2742;
-  wire n_2743, n_2744, n_2745, n_2746, n_2747, n_2748, n_2749, n_2750;
-  wire n_2751, n_2752, n_2753, n_2754, n_2755, n_2756, n_2757, n_2758;
-  wire n_2759, n_2760, n_2761, n_2762, n_2763, n_2764, n_2765, n_2766;
-  wire n_2767, n_2768, n_2769, n_2770, n_2771, n_2772, n_2773, n_2774;
-  wire n_2775, n_2776, n_2777, n_2778, n_2779, n_2780, n_2781, n_2782;
-  wire n_2783, n_2784, n_2785, n_2786, n_2787, n_2788, n_2789, n_2790;
-  wire n_2791, n_2792, n_2793, n_2794, n_2795, n_2796, n_2797, n_2798;
-  wire n_2799, n_2800, n_2801, n_2802, n_2803, n_2804, n_2805, n_2806;
-  wire n_2807, n_2808, n_2809, n_2810, n_2811, n_2812, n_2813, n_2814;
-  wire n_2815, n_2816, n_2817, n_2818, n_2819, n_2820, n_2821, n_2822;
-  wire n_2823, n_2824, n_2825, n_2826, n_2827, n_2828, n_2829, n_2830;
-  wire n_2831, n_2832, n_2833, n_2834, n_2835, n_2836, n_2837, n_2838;
-  wire n_2839, n_2840, n_2841, n_2842, n_2843, n_2844, n_2845, n_2846;
-  wire n_2847, n_2848, n_2849, n_2850, n_2851, n_2852, n_2853, n_2854;
-  wire n_2855, n_2856, n_2857, n_2858, n_2859, n_2860, n_2861, n_2862;
-  wire n_2863, n_2864, n_2865, n_2866, n_2867, n_2868, n_2869, n_2870;
-  wire n_2871, n_2872, n_2873, n_2874, n_2875, n_2876, n_2877, n_2878;
-  wire n_2879, n_2880, n_2881, n_2882, n_2883, n_2884, n_2885, n_2886;
-  wire n_2887, n_2888, n_2889, n_2890, n_2891, n_2892, n_2893, n_2894;
-  wire n_2895, n_2896, n_2897, n_2898, n_2899, n_2900, n_2901, n_2902;
-  wire n_2903, n_2904, n_2905, n_2906, n_2907, n_2908, n_2909, n_2910;
-  wire n_2911, n_2912, n_2913, n_2914, n_2915, n_2916, n_2917, n_2918;
-  wire n_2919, n_2920, n_2921, n_2922, n_2923, n_2924, n_2925, n_2926;
-  wire n_2927, n_2928, n_2929, n_2930, n_2931, n_2932, n_2933, n_2934;
-  wire n_2935, n_2936, n_2937, n_2938, n_2939, n_2940, n_2941, n_2942;
-  wire n_2943, n_2944, n_2945, n_2946, n_2947, n_2948, n_2949, n_2950;
-  wire n_2951, n_2952, n_2953, n_2954, n_2955, n_2956, n_2957, n_2958;
-  wire n_2959, n_2960, n_2961, n_2962, n_2963, n_2964, n_2965, n_2966;
-  wire n_2967, n_2968, n_2969, n_2970, n_2971, n_2972, n_2973, n_2974;
-  wire n_2975, n_2976, n_2977, n_2978, n_2979, n_2980, n_2981, n_2982;
-  wire n_2983, n_2984, n_2985, n_2986, n_2987, n_2988, n_2989, n_2990;
-  wire n_2991, n_2992, n_2993, n_2994, n_2995, n_2996, n_2997, n_2998;
-  wire n_2999, n_3000, n_3001, n_3002, n_3003, n_3004, n_3005, n_3006;
-  wire n_3007, n_3008, n_3009, n_3010, n_3011, n_3012, n_3013, n_3014;
-  wire n_3015, n_3016, n_3017, n_3018, n_3019, n_3020, n_3021, n_3022;
-  wire n_3023, n_3024, n_3025, n_3026, n_3027, n_3028, n_3029, n_3030;
-  wire n_3031, n_3032, n_3033, n_3034, n_3035, n_3036, n_3037, n_3038;
-  wire n_3039, n_3040, n_3041, n_3042, n_3043, n_3044, n_3045, n_3046;
-  wire n_3047, n_3048, n_3049, n_3050, n_3051, n_3052, n_3053, n_3054;
-  wire n_3055, n_3056, n_3057, n_3058, n_3059, n_3060, n_3061, n_3062;
-  wire n_3063, n_3064, n_3065, n_3066, n_3067, n_3068, n_3069, n_3070;
-  wire n_3071, n_3072, n_3073, n_3074, n_3075, n_3076, n_3077, n_3078;
-  wire n_3079, n_3080, n_3081, n_3082, n_3083, n_3084, n_3085, n_3086;
-  wire n_3087, n_3088, n_3089, n_3090, n_3091, n_3092, n_3093, n_3094;
-  wire n_3095, n_3096, n_3097, n_3098, n_3099, n_3100, n_3101, n_3102;
-  wire n_3103, n_3104, n_3105, n_3106, n_3107, n_3108, n_3109, n_3110;
-  wire n_3111, n_3112, n_3113, n_3114, n_3115, n_3116, n_3117, n_3118;
-  wire n_3119, n_3120, n_3121, n_3122, n_3123, n_3124, n_3125, n_3126;
-  wire n_3127, n_3128, n_3129, n_3130, n_3131, n_3132, n_3133, n_3134;
-  wire n_3135, n_3136, n_3137, n_3138, n_3139, n_3140, n_3141, n_3142;
-  wire n_3143, n_3144, n_3145, n_3146, n_3147, n_3148, n_3149, n_3150;
-  wire n_3151, n_3152, n_3153, n_3154, n_3155, n_3156, n_3157, n_3158;
-  wire n_3159, n_3160, n_3161, n_3162, n_3163, n_3164, n_3165, n_3166;
-  wire n_3167, n_3168, n_3169, n_3170, n_3171, n_3172, n_3173, n_3174;
-  wire n_3175, n_3176, n_3177, n_3178, n_3179, n_3180, n_3181, n_3182;
-  wire n_3183, n_3184, n_3185, n_3186, n_3187, n_3188, n_3189, n_3190;
-  wire n_3191, n_3192, n_3193, n_3194, n_3195, n_3196, n_3197, n_3198;
-  wire n_3199, n_3200, n_3201, n_3202, n_3203, n_3204, n_3205, n_3206;
-  wire n_3207, n_3208, n_3209, n_3210, n_3211, n_3212, n_3213, n_3214;
-  wire n_3215, n_3216, n_3217, n_3218, n_3219, n_3220, n_3221, n_3222;
-  wire n_3223, n_3224, n_3225, n_3226, n_3227, n_3228, n_3229, n_3230;
-  wire n_3231, n_3232, n_3233, n_3234, n_3235, n_3236, n_3237, n_3238;
-  wire n_3239, n_3240, n_3241, n_3242, n_3243, n_3244, n_3245, n_3246;
-  wire n_3247, n_3248, n_3249, n_3250, n_3251, n_3252, n_3253, n_3254;
-  wire n_3255, n_3256, n_3257, n_3258, n_3259, n_3260, n_3261, n_3262;
-  wire n_3263, n_3264, n_3265, n_3266, n_3267, n_3268, n_3269, n_3270;
-  wire n_3271, n_3272, n_3273, n_3274, n_3275, n_3276, n_3277, n_3278;
-  wire n_3279, n_3280, n_3281, n_3282, n_3283, n_3284, n_3285, n_3286;
-  wire n_3287, n_3288, n_3289, n_3290, n_3291, n_3292, n_3293, n_3294;
-  wire n_3295, n_3296, n_3297, n_3298, n_3299, n_3300, n_3301, n_3302;
-  wire n_3303, n_3304, n_3305, n_3306, n_3307, n_3308, n_3309, n_3310;
-  wire n_3311, n_3312, n_3313, n_3314, n_3315, n_3316, n_3317, n_3318;
-  wire n_3319, n_3320, n_3321, n_3322, n_3323, n_3324, n_3325, n_3326;
-  wire n_3327, n_3328, n_3329, n_3330, n_3331, n_3332, n_3333, n_3334;
-  wire n_3335, n_3336, n_3337, n_3338, n_3339, n_3340, n_3341, n_3342;
-  wire n_3343, n_3344, n_3345, n_3346, n_3347, n_3348, n_3349, n_3350;
-  wire n_3351, n_3352, n_3353, n_3354, n_3355, n_3356, n_3357, n_3358;
-  wire n_3359, n_3360, n_3361, n_3362, n_3363, n_3364, n_3365, n_3366;
-  wire n_3367, n_3368, n_3369, n_3370, n_3371, n_3372, n_3373, n_3374;
-  wire n_3375, n_3376, n_3377, n_3378, n_3379, n_3380, n_3381, n_3382;
-  wire n_3383, n_3384, n_3385, n_3386, n_3387, n_3388, n_3389, n_3390;
-  wire n_3391, n_3392, n_3393, n_3394, n_3395, n_3396, n_3397, n_3398;
-  wire n_3399, n_3400, n_3401, n_3402, n_3403, n_3404, n_3405, n_3406;
-  wire n_3407, n_3408, n_3409, n_3410, n_3411, n_3412, n_3413, n_3414;
-  wire n_3415, n_3416, n_3417, n_3418, n_3419, n_3420, n_3421, n_3422;
-  wire n_3423, n_3424, n_3425, n_3426, n_3427, n_3428, n_3429, n_3430;
-  wire n_3431, n_3432, n_3433, n_3434, n_3435, n_3436, n_3437, n_3438;
-  wire n_3439, n_3440, n_3441, n_3442, n_3443, n_3444, n_3445, n_3446;
-  wire n_3447, n_3448, n_3449, n_3450, n_3451, n_3452, n_3453, n_3454;
-  wire n_3455, n_3456, n_3457, n_3458, n_3459, n_3460, n_3461, n_3462;
-  wire n_3463, n_3464, n_3465, n_3466, n_3467, n_3468, n_3469, n_3470;
-  wire n_3471, n_3472, n_3473, n_3474, n_3475, n_3476, n_3477, n_3478;
-  wire n_3479, n_3480, n_3481, n_3482, n_3483, n_3484, n_3485, n_3486;
-  wire n_3487, n_3488, n_3489, n_3490, n_3491, n_3492, n_3493, n_3494;
-  wire n_3495, n_3496, n_3497, n_3498, n_3499, n_3500, n_3501, n_3502;
-  wire n_3503, n_3504, n_3505, n_3506, n_3507, n_3508, n_3530, n_3533;
-  wire n_3535, n_3536, n_3537, n_3538, n_3539, n_3541, n_3542, n_3543;
-  wire n_3544, n_3545, n_3547, n_3548, n_3549, n_3550, n_3551, n_3553;
-  wire n_3554, n_3555, n_3556, n_3557, n_3559, n_3560, n_3561, n_3562;
-  wire n_3563, n_3565, n_3566, n_3567, n_3568, n_3569, n_3571, n_3572;
-  wire n_3573, n_3574, n_3575, n_3577, n_3578, n_3579, n_3580, n_3581;
-  wire n_3583, n_3584, n_3585, n_3586, n_3587, n_3589, n_3590, n_3591;
-  wire n_3592, n_3593, n_3595, n_3596, n_3597, n_3598, n_3599, n_3601;
-  wire n_3602, n_3603, n_3604, n_3605, n_3607, n_3608, n_3609, n_3610;
-  wire n_3611, n_3613, n_3614, n_3615, n_3616, n_3617, n_3619, n_3620;
-  wire n_3621, n_3622, n_3623, n_3625, n_3626, n_3627, n_3628, n_3629;
-  wire n_3631, n_3632, n_3633, n_3634, n_3635, n_3637, n_3638, n_3639;
-  wire n_3640, n_3641, n_3643, n_3644, n_3645, n_3646, n_3647, n_3649;
-  wire n_3650, n_3651, n_3652, n_3653, n_3655, n_3656, n_3657, n_3658;
-  wire n_3659, n_3661, n_3662, n_3663, n_3664, n_3665, n_3667, n_3668;
-  wire n_3669, n_3670, n_3671, n_3679, n_3683, n_3685, n_3686, n_3688;
-  wire n_3689, n_3691, n_3693, n_3695, n_3696, n_3698, n_3699, n_3701;
-  wire n_3703, n_3705, n_3706, n_3708, n_3709, n_3711, n_3713, n_3715;
-  wire n_3716, n_3718, n_3719, n_3721, n_3723, n_3725, n_3726, n_3728;
-  wire n_3729, n_3731, n_3733, n_3735, n_3736, n_3738, n_3739, n_3741;
-  wire n_3743, n_3745, n_3746, n_3748, n_3749, n_3751, n_3753, n_3755;
-  wire n_3756, n_3758, n_3759, n_3761, n_3763, n_3765, n_3766, n_3768;
-  wire n_3769, n_3771, n_3773, n_3775, n_3776, n_3778, n_3779, n_3781;
-  wire n_3783, n_3785, n_3786, n_3788, n_3789, n_3791, n_3799, n_3803;
-  wire n_3805, n_3806, n_3808, n_3810, n_3812, n_3813, n_3814, n_3816;
-  wire n_3817, n_3818, n_3820, n_3821, n_3823, n_3825, n_3827, n_3828;
-  wire n_3829, n_3831, n_3832, n_3833, n_3835, n_3836, n_3838, n_3840;
-  wire n_3842, n_3843, n_3844, n_3846, n_3847, n_3848, n_3850, n_3851;
-  wire n_3853, n_3855, n_3857, n_3858, n_3859, n_3861, n_3862, n_3863;
-  wire n_3865, n_3866, n_3868, n_3870, n_3872, n_3873, n_3874, n_3876;
-  wire n_3877, n_3878, n_3882, n_3883, n_3884, n_3886, n_3887, n_3889;
-  wire n_3890, n_3891, n_3892, n_3893, n_3894, n_3895, n_3896, n_3897;
-  wire n_3898, n_3899, n_3900, n_3901, n_3902, n_3903, n_3905, n_3908;
-  wire n_3910, n_3911, n_3912, n_3915, n_3918, n_3920, n_3921, n_3923;
-  wire n_3925, n_3926, n_3928, n_3930, n_3931, n_3933, n_3935, n_3936;
-  wire n_3938, n_3939, n_3941, n_3944, n_3946, n_3947, n_3948, n_3951;
-  wire n_3954, n_3956, n_3957, n_3959, n_3961, n_3962, n_3964, n_3966;
-  wire n_3967, n_3969, n_3971, n_3972, n_3974, n_3976, n_3977, n_3978;
-  wire n_3980, n_3981, n_3983, n_3984, n_3985, n_3986, n_3987, n_3988;
-  wire n_3989, n_3990, n_3991, n_3992, n_3993, n_3994, n_3996, n_3997;
-  wire n_3998, n_4000, n_4001, n_4002, n_4004, n_4005, n_4006, n_4008;
-  wire n_4009, n_4010, n_4012, n_4013, n_4014, n_4016, n_4017, n_4018;
-  wire n_4020, n_4021, n_4022, n_4024, n_4025, n_4026, n_4027, n_4029;
-  wire n_4031, n_4033, n_4034, n_4035, n_4037, n_4039, n_4040, n_4041;
-  wire n_4043, n_4044, n_4046, n_4047, n_4048, n_4049, n_4050, n_4051;
-  wire n_4052, n_4053, n_4054, n_4055, n_4056, n_4057, n_4059, n_4060;
-  wire n_4061, n_4063, n_4064, n_4065, n_4067, n_4068, n_4069, n_4071;
-  wire n_4072, n_4073, n_4075, n_4076, n_4077, n_4079, n_4080, n_4081;
-  wire n_4083, n_4084, n_4086, n_4087, n_4088, n_4089, n_4090, n_4091;
-  wire n_4092, n_4093, n_4094, n_4095, n_4101, n_4106, n_4109, n_4110;
-  wire n_4112, n_4113, n_4114, n_4115, n_4117, n_4118, n_4120, n_4121;
-  wire n_4123, n_4124, n_4125, n_4126, n_4128, n_4129, n_4130, n_4132;
-  wire n_4133, n_4134, n_4135, n_4137, n_4138, n_4140, n_4141, n_4143;
-  wire n_4144, n_4145, n_4146, n_4148, n_4149, n_4150, n_4151, n_4153;
-  wire n_4154, n_4155, n_4156, n_4158, n_4159, n_4161, n_4162, n_4164;
-  wire n_4165, n_4166, n_4167, n_4169, n_4170, n_4171, n_4173, n_4174;
-  wire n_4175, n_4176, n_4178, n_4179, n_4181, n_4182, n_4184, n_4185;
-  wire n_4186, n_4187, n_4189, n_4190, n_4191, n_4192, n_4194, n_4195;
-  wire n_4196, n_4197, n_4199, n_4200, n_4202, n_4203, n_4205, n_4206;
-  wire n_4207, n_4208, n_4210, n_4211, n_4213, n_4214, n_4216, n_4217;
-  wire n_4218, n_4219, n_4221, n_4222;
-  assign Z[0] = 1'b0;
-  assign Z[1] = 1'b0;
-  assign Z[2] = 1'b0;
-  assign Z[3] = 1'b0;
-  xor g126 (n_311, B[2], B[1]);
-  xor g127 (n_313, B[3], B[2]);
-  nor g131 (n_406, B[1], B[2]);
-  nand g132 (n_404, B[1], B[2]);
-  xor g138 (n_319, B[3], A[1]);
-  xor g142 (n_322, B[3], A[2]);
-  nand g143 (n_323, n_322, n_311);
-  nand g144 (n_324, n_319, n_315);
-  nand g145 (n_204, n_323, n_324);
-  xor g146 (n_325, B[3], A[3]);
-  nand g147 (n_326, n_325, n_311);
-  nand g148 (n_327, n_322, n_315);
-  nand g149 (n_151, n_326, n_327);
-  xor g150 (n_328, B[3], A[4]);
-  nand g151 (n_329, n_328, n_311);
-  nand g152 (n_330, n_325, n_315);
-  nand g153 (n_150, n_329, n_330);
-  xor g154 (n_331, B[3], A[5]);
-  nand g155 (n_332, n_331, n_311);
-  nand g156 (n_333, n_328, n_315);
-  nand g157 (n_1599, n_332, n_333);
-  xor g158 (n_334, B[3], A[6]);
-  nand g159 (n_335, n_334, n_311);
-  nand g160 (n_336, n_331, n_315);
-  nand g161 (n_1603, n_335, n_336);
-  xor g162 (n_337, B[3], A[7]);
-  nand g163 (n_338, n_337, n_311);
-  nand g164 (n_339, n_334, n_315);
-  nand g165 (n_1607, n_338, n_339);
-  xor g166 (n_340, B[3], A[8]);
-  nand g167 (n_341, n_340, n_311);
-  nand g168 (n_342, n_337, n_315);
-  nand g169 (n_1613, n_341, n_342);
-  xor g170 (n_343, B[3], A[9]);
-  nand g171 (n_344, n_343, n_311);
-  nand g172 (n_345, n_340, n_315);
-  nand g173 (n_1622, n_344, n_345);
-  xor g174 (n_346, B[3], A[10]);
-  nand g175 (n_347, n_346, n_311);
-  nand g176 (n_348, n_343, n_315);
-  nand g177 (n_1632, n_347, n_348);
-  xor g178 (n_349, B[3], A[11]);
-  nand g179 (n_350, n_349, n_311);
-  nand g180 (n_351, n_346, n_315);
-  nand g181 (n_1641, n_350, n_351);
-  xor g182 (n_352, B[3], A[12]);
-  nand g183 (n_353, n_352, n_311);
-  nand g184 (n_354, n_349, n_315);
-  nand g185 (n_1655, n_353, n_354);
-  xor g186 (n_355, B[3], A[13]);
-  nand g187 (n_356, n_355, n_311);
-  nand g188 (n_357, n_352, n_315);
-  nand g189 (n_1668, n_356, n_357);
-  xor g190 (n_358, B[3], A[14]);
-  nand g191 (n_359, n_358, n_311);
-  nand g192 (n_360, n_355, n_315);
-  nand g193 (n_1684, n_359, n_360);
-  xor g194 (n_361, B[3], A[15]);
-  nand g195 (n_362, n_361, n_311);
-  nand g196 (n_363, n_358, n_315);
-  nand g197 (n_1700, n_362, n_363);
-  xor g198 (n_364, B[3], A[16]);
-  nand g199 (n_365, n_364, n_311);
-  nand g200 (n_366, n_361, n_315);
-  nand g201 (n_1715, n_365, n_366);
-  xor g202 (n_367, B[3], A[17]);
-  nand g203 (n_368, n_367, n_311);
-  nand g204 (n_369, n_364, n_315);
-  nand g205 (n_1732, n_368, n_369);
-  xor g206 (n_370, B[3], A[18]);
-  nand g207 (n_371, n_370, n_311);
-  nand g208 (n_372, n_367, n_315);
-  nand g209 (n_1754, n_371, n_372);
-  xor g210 (n_373, B[3], A[19]);
-  nand g211 (n_374, n_373, n_311);
-  nand g212 (n_375, n_370, n_315);
-  nand g213 (n_1777, n_374, n_375);
-  xor g214 (n_376, B[3], A[20]);
-  nand g215 (n_377, n_376, n_311);
-  nand g216 (n_378, n_373, n_315);
-  nand g217 (n_1798, n_377, n_378);
-  xor g218 (n_379, B[3], A[21]);
-  nand g219 (n_380, n_379, n_311);
-  nand g220 (n_381, n_376, n_315);
-  nand g221 (n_1827, n_380, n_381);
-  xor g222 (n_382, B[3], A[22]);
-  nand g223 (n_383, n_382, n_311);
-  nand g224 (n_384, n_379, n_315);
-  nand g225 (n_1850, n_383, n_384);
-  xor g226 (n_385, B[3], A[23]);
-  nand g227 (n_386, n_385, n_311);
-  nand g228 (n_387, n_382, n_315);
-  nand g229 (n_1882, n_386, n_387);
-  xor g230 (n_388, B[3], A[24]);
-  nand g231 (n_389, n_388, n_311);
-  nand g232 (n_390, n_385, n_315);
-  nand g233 (n_1914, n_389, n_390);
-  xor g234 (n_391, B[3], A[25]);
-  nand g235 (n_392, n_391, n_311);
-  nand g236 (n_393, n_388, n_315);
-  nand g237 (n_1949, n_392, n_393);
-  nand g239 (n_396, B[3], n_311);
-  nand g240 (n_397, n_391, n_315);
-  nand g241 (n_1973, n_396, n_397);
-  nand g244 (n_401, B[3], n_315);
-  nand g245 (n_402, n_396, n_401);
-  or g249 (n_407, n_405, n_406);
-  and g250 (n_152, B[3], n_407);
-  xor g251 (n_408, B[4], B[3]);
-  xor g252 (n_410, B[5], B[4]);
-  nor g256 (n_503, B[3], B[4]);
-  nand g257 (n_501, B[3], B[4]);
-  xor g263 (n_416, B[5], A[1]);
-  xor g267 (n_419, B[5], A[2]);
-  nand g268 (n_420, n_419, n_408);
-  nand g269 (n_421, n_416, n_412);
-  nand g270 (n_1598, n_420, n_421);
-  xor g271 (n_422, B[5], A[3]);
-  nand g272 (n_423, n_422, n_408);
-  nand g273 (n_424, n_419, n_412);
-  nand g274 (n_1600, n_423, n_424);
-  xor g275 (n_425, B[5], A[4]);
-  nand g276 (n_426, n_425, n_408);
-  nand g277 (n_427, n_422, n_412);
-  nand g278 (n_1602, n_426, n_427);
-  xor g279 (n_428, B[5], A[5]);
-  nand g280 (n_429, n_428, n_408);
-  nand g281 (n_430, n_425, n_412);
-  nand g282 (n_1608, n_429, n_430);
-  xor g283 (n_431, B[5], A[6]);
-  nand g284 (n_432, n_431, n_408);
-  nand g285 (n_433, n_428, n_412);
-  nand g286 (n_1612, n_432, n_433);
-  xor g287 (n_434, B[5], A[7]);
-  nand g288 (n_435, n_434, n_408);
-  nand g289 (n_436, n_431, n_412);
-  nand g290 (n_1621, n_435, n_436);
-  xor g291 (n_437, B[5], A[8]);
-  nand g292 (n_438, n_437, n_408);
-  nand g293 (n_439, n_434, n_412);
-  nand g294 (n_1628, n_438, n_439);
-  xor g295 (n_440, B[5], A[9]);
-  nand g296 (n_441, n_440, n_408);
-  nand g297 (n_442, n_437, n_412);
-  nand g298 (n_1640, n_441, n_442);
-  xor g299 (n_443, B[5], A[10]);
-  nand g300 (n_444, n_443, n_408);
-  nand g301 (n_445, n_440, n_412);
-  nand g302 (n_1650, n_444, n_445);
-  xor g303 (n_446, B[5], A[11]);
-  nand g304 (n_447, n_446, n_408);
-  nand g305 (n_448, n_443, n_412);
-  nand g306 (n_1664, n_447, n_448);
-  xor g307 (n_449, B[5], A[12]);
-  nand g308 (n_450, n_449, n_408);
-  nand g309 (n_451, n_446, n_412);
-  nand g310 (n_1679, n_450, n_451);
-  xor g311 (n_452, B[5], A[13]);
-  nand g312 (n_453, n_452, n_408);
-  nand g313 (n_454, n_449, n_412);
-  nand g314 (n_1698, n_453, n_454);
-  xor g315 (n_455, B[5], A[14]);
-  nand g316 (n_456, n_455, n_408);
-  nand g317 (n_457, n_452, n_412);
-  nand g318 (n_1719, n_456, n_457);
-  xor g319 (n_458, B[5], A[15]);
-  nand g320 (n_459, n_458, n_408);
-  nand g321 (n_460, n_455, n_412);
-  nand g322 (n_1735, n_459, n_460);
-  xor g323 (n_461, B[5], A[16]);
-  nand g324 (n_462, n_461, n_408);
-  nand g325 (n_463, n_458, n_412);
-  nand g326 (n_1757, n_462, n_463);
-  xor g327 (n_464, B[5], A[17]);
-  nand g328 (n_465, n_464, n_408);
-  nand g329 (n_466, n_461, n_412);
-  nand g330 (n_1775, n_465, n_466);
-  xor g331 (n_467, B[5], A[18]);
-  nand g332 (n_468, n_467, n_408);
-  nand g333 (n_469, n_464, n_412);
-  nand g334 (n_1800, n_468, n_469);
-  xor g335 (n_470, B[5], A[19]);
-  nand g336 (n_471, n_470, n_408);
-  nand g337 (n_472, n_467, n_412);
-  nand g338 (n_1830, n_471, n_472);
-  xor g339 (n_473, B[5], A[20]);
-  nand g340 (n_474, n_473, n_408);
-  nand g341 (n_475, n_470, n_412);
-  nand g342 (n_1858, n_474, n_475);
-  xor g343 (n_476, B[5], A[21]);
-  nand g344 (n_477, n_476, n_408);
-  nand g345 (n_478, n_473, n_412);
-  nand g346 (n_1886, n_477, n_478);
-  xor g347 (n_479, B[5], A[22]);
-  nand g348 (n_480, n_479, n_408);
-  nand g349 (n_481, n_476, n_412);
-  nand g350 (n_1916, n_480, n_481);
-  xor g351 (n_482, B[5], A[23]);
-  nand g352 (n_483, n_482, n_408);
-  nand g353 (n_484, n_479, n_412);
-  nand g354 (n_1948, n_483, n_484);
-  xor g355 (n_485, B[5], A[24]);
-  nand g356 (n_486, n_485, n_408);
-  nand g357 (n_487, n_482, n_412);
-  nand g358 (n_1982, n_486, n_487);
-  xor g359 (n_488, B[5], A[25]);
-  nand g360 (n_489, n_488, n_408);
-  nand g361 (n_490, n_485, n_412);
-  nand g362 (n_2013, n_489, n_490);
-  nand g364 (n_493, B[5], n_408);
-  nand g365 (n_494, n_488, n_412);
-  nand g366 (n_2042, n_493, n_494);
-  nand g369 (n_498, B[5], n_412);
-  nand g370 (n_499, n_493, n_498);
-  or g374 (n_504, n_502, n_503);
-  and g375 (n_1597, B[5], n_504);
-  xor g376 (n_505, B[6], B[5]);
-  xor g377 (n_507, B[7], B[6]);
-  nor g381 (n_600, B[5], B[6]);
-  nand g382 (n_598, B[5], B[6]);
-  xor g388 (n_513, B[7], A[1]);
-  xor g392 (n_516, B[7], A[2]);
-  nand g393 (n_517, n_516, n_505);
-  nand g394 (n_518, n_513, n_509);
-  nand g395 (n_1604, n_517, n_518);
-  xor g396 (n_519, B[7], A[3]);
-  nand g397 (n_520, n_519, n_505);
-  nand g398 (n_521, n_516, n_509);
-  nand g399 (n_1606, n_520, n_521);
-  xor g400 (n_522, B[7], A[4]);
-  nand g401 (n_523, n_522, n_505);
-  nand g402 (n_524, n_519, n_509);
-  nand g403 (n_1615, n_523, n_524);
-  xor g404 (n_525, B[7], A[5]);
-  nand g405 (n_526, n_525, n_505);
-  nand g406 (n_527, n_522, n_509);
-  nand g407 (n_1620, n_526, n_527);
-  xor g408 (n_528, B[7], A[6]);
-  nand g409 (n_529, n_528, n_505);
-  nand g410 (n_530, n_525, n_509);
-  nand g411 (n_1630, n_529, n_530);
-  xor g412 (n_531, B[7], A[7]);
-  nand g413 (n_532, n_531, n_505);
-  nand g414 (n_533, n_528, n_509);
-  nand g415 (n_1639, n_532, n_533);
-  xor g416 (n_534, B[7], A[8]);
-  nand g417 (n_535, n_534, n_505);
-  nand g418 (n_536, n_531, n_509);
-  nand g419 (n_1653, n_535, n_536);
-  xor g420 (n_537, B[7], A[9]);
-  nand g421 (n_538, n_537, n_505);
-  nand g422 (n_539, n_534, n_509);
-  nand g423 (n_1667, n_538, n_539);
-  xor g424 (n_540, B[7], A[10]);
-  nand g425 (n_541, n_540, n_505);
-  nand g426 (n_542, n_537, n_509);
-  nand g427 (n_1683, n_541, n_542);
-  xor g428 (n_543, B[7], A[11]);
-  nand g429 (n_544, n_543, n_505);
-  nand g430 (n_545, n_540, n_509);
-  nand g431 (n_1695, n_544, n_545);
-  xor g432 (n_546, B[7], A[12]);
-  nand g433 (n_547, n_546, n_505);
-  nand g434 (n_548, n_543, n_509);
-  nand g435 (n_1713, n_547, n_548);
-  xor g436 (n_549, B[7], A[13]);
-  nand g437 (n_550, n_549, n_505);
-  nand g438 (n_551, n_546, n_509);
-  nand g439 (n_1736, n_550, n_551);
-  xor g440 (n_552, B[7], A[14]);
-  nand g441 (n_553, n_552, n_505);
-  nand g442 (n_554, n_549, n_509);
-  nand g443 (n_1758, n_553, n_554);
-  xor g444 (n_555, B[7], A[15]);
-  nand g445 (n_556, n_555, n_505);
-  nand g446 (n_557, n_552, n_509);
-  nand g447 (n_1779, n_556, n_557);
-  xor g448 (n_558, B[7], A[16]);
-  nand g449 (n_559, n_558, n_505);
-  nand g450 (n_560, n_555, n_509);
-  nand g451 (n_1803, n_559, n_560);
-  xor g452 (n_561, B[7], A[17]);
-  nand g453 (n_562, n_561, n_505);
-  nand g454 (n_563, n_558, n_509);
-  nand g455 (n_1831, n_562, n_563);
-  xor g456 (n_564, B[7], A[18]);
-  nand g457 (n_565, n_564, n_505);
-  nand g458 (n_566, n_561, n_509);
-  nand g459 (n_1859, n_565, n_566);
-  xor g460 (n_567, B[7], A[19]);
-  nand g461 (n_568, n_567, n_505);
-  nand g462 (n_569, n_564, n_509);
-  nand g463 (n_1881, n_568, n_569);
-  xor g464 (n_570, B[7], A[20]);
-  nand g465 (n_571, n_570, n_505);
-  nand g466 (n_572, n_567, n_509);
-  nand g467 (n_1912, n_571, n_572);
-  xor g468 (n_573, B[7], A[21]);
-  nand g469 (n_574, n_573, n_505);
-  nand g470 (n_575, n_570, n_509);
-  nand g471 (n_1944, n_574, n_575);
-  xor g472 (n_576, B[7], A[22]);
-  nand g473 (n_577, n_576, n_505);
-  nand g474 (n_578, n_573, n_509);
-  nand g475 (n_1980, n_577, n_578);
-  xor g476 (n_579, B[7], A[23]);
-  nand g477 (n_580, n_579, n_505);
-  nand g478 (n_581, n_576, n_509);
-  nand g479 (n_2010, n_580, n_581);
-  xor g480 (n_582, B[7], A[24]);
-  nand g481 (n_583, n_582, n_505);
-  nand g482 (n_584, n_579, n_509);
-  nand g483 (n_2047, n_583, n_584);
-  xor g484 (n_585, B[7], A[25]);
-  nand g485 (n_586, n_585, n_505);
-  nand g486 (n_587, n_582, n_509);
-  nand g487 (n_2081, n_586, n_587);
-  nand g489 (n_590, B[7], n_505);
-  nand g490 (n_591, n_585, n_509);
-  nand g491 (n_2114, n_590, n_591);
-  nand g494 (n_595, B[7], n_509);
-  nand g495 (n_596, n_590, n_595);
-  or g499 (n_601, n_599, n_600);
-  and g500 (n_1601, B[7], n_601);
-  xor g501 (n_602, B[8], B[7]);
-  xor g502 (n_604, B[9], B[8]);
-  nor g506 (n_697, B[7], B[8]);
-  nand g507 (n_695, B[7], B[8]);
-  xor g513 (n_610, B[9], A[1]);
-  xor g517 (n_613, B[9], A[2]);
-  nand g518 (n_614, n_613, n_602);
-  nand g519 (n_615, n_610, n_606);
-  nand g520 (n_1614, n_614, n_615);
-  xor g521 (n_616, B[9], A[3]);
-  nand g522 (n_617, n_616, n_602);
-  nand g523 (n_618, n_613, n_606);
-  nand g524 (n_1619, n_617, n_618);
-  xor g525 (n_619, B[9], A[4]);
-  nand g526 (n_620, n_619, n_602);
-  nand g527 (n_621, n_616, n_606);
-  nand g528 (n_1629, n_620, n_621);
-  xor g529 (n_622, B[9], A[5]);
-  nand g530 (n_623, n_622, n_602);
-  nand g531 (n_624, n_619, n_606);
-  nand g532 (n_1642, n_623, n_624);
-  xor g533 (n_625, B[9], A[6]);
-  nand g534 (n_626, n_625, n_602);
-  nand g535 (n_627, n_622, n_606);
-  nand g536 (n_1654, n_626, n_627);
-  xor g537 (n_628, B[9], A[7]);
-  nand g538 (n_629, n_628, n_602);
-  nand g539 (n_630, n_625, n_606);
-  nand g540 (n_1666, n_629, n_630);
-  xor g541 (n_631, B[9], A[8]);
-  nand g542 (n_632, n_631, n_602);
-  nand g543 (n_633, n_628, n_606);
-  nand g544 (n_1678, n_632, n_633);
-  xor g545 (n_634, B[9], A[9]);
-  nand g546 (n_635, n_634, n_602);
-  nand g547 (n_636, n_631, n_606);
-  nand g548 (n_1697, n_635, n_636);
-  xor g549 (n_637, B[9], A[10]);
-  nand g550 (n_638, n_637, n_602);
-  nand g551 (n_639, n_634, n_606);
-  nand g552 (n_1716, n_638, n_639);
-  xor g553 (n_640, B[9], A[11]);
-  nand g554 (n_641, n_640, n_602);
-  nand g555 (n_642, n_637, n_606);
-  nand g556 (n_1737, n_641, n_642);
-  xor g557 (n_643, B[9], A[12]);
-  nand g558 (n_644, n_643, n_602);
-  nand g559 (n_645, n_640, n_606);
-  nand g560 (n_1759, n_644, n_645);
-  xor g561 (n_646, B[9], A[13]);
-  nand g562 (n_647, n_646, n_602);
-  nand g563 (n_648, n_643, n_606);
-  nand g564 (n_1780, n_647, n_648);
-  xor g565 (n_649, B[9], A[14]);
-  nand g566 (n_650, n_649, n_602);
-  nand g567 (n_651, n_646, n_606);
-  nand g568 (n_1805, n_650, n_651);
-  xor g569 (n_652, B[9], A[15]);
-  nand g570 (n_653, n_652, n_602);
-  nand g571 (n_654, n_649, n_606);
-  nand g572 (n_1828, n_653, n_654);
-  xor g573 (n_655, B[9], A[16]);
-  nand g574 (n_656, n_655, n_602);
-  nand g575 (n_657, n_652, n_606);
-  nand g576 (n_1856, n_656, n_657);
-  xor g577 (n_658, B[9], A[17]);
-  nand g578 (n_659, n_658, n_602);
-  nand g579 (n_660, n_655, n_606);
-  nand g580 (n_1887, n_659, n_660);
-  xor g581 (n_661, B[9], A[18]);
-  nand g582 (n_662, n_661, n_602);
-  nand g583 (n_663, n_658, n_606);
-  nand g584 (n_1917, n_662, n_663);
-  xor g585 (n_664, B[9], A[19]);
-  nand g586 (n_665, n_664, n_602);
-  nand g587 (n_666, n_661, n_606);
-  nand g588 (n_1943, n_665, n_666);
-  xor g589 (n_667, B[9], A[20]);
-  nand g590 (n_668, n_667, n_602);
-  nand g591 (n_669, n_664, n_606);
-  nand g592 (n_1977, n_668, n_669);
-  xor g593 (n_670, B[9], A[21]);
-  nand g594 (n_671, n_670, n_602);
-  nand g595 (n_672, n_667, n_606);
-  nand g596 (n_2008, n_671, n_672);
-  xor g597 (n_673, B[9], A[22]);
-  nand g598 (n_674, n_673, n_602);
-  nand g599 (n_675, n_670, n_606);
-  nand g600 (n_2046, n_674, n_675);
-  xor g601 (n_676, B[9], A[23]);
-  nand g602 (n_677, n_676, n_602);
-  nand g603 (n_678, n_673, n_606);
-  nand g604 (n_2076, n_677, n_678);
-  xor g605 (n_679, B[9], A[24]);
-  nand g606 (n_680, n_679, n_602);
-  nand g607 (n_681, n_676, n_606);
-  nand g608 (n_2110, n_680, n_681);
-  xor g609 (n_682, B[9], A[25]);
-  nand g610 (n_683, n_682, n_602);
-  nand g611 (n_684, n_679, n_606);
-  nand g612 (n_2141, n_683, n_684);
-  nand g614 (n_687, B[9], n_602);
-  nand g615 (n_688, n_682, n_606);
-  nand g616 (n_2177, n_687, n_688);
-  nand g619 (n_692, B[9], n_606);
-  nand g620 (n_693, n_687, n_692);
-  or g624 (n_698, n_696, n_697);
-  and g625 (n_1611, B[9], n_698);
-  xor g626 (n_699, B[10], B[9]);
-  xor g627 (n_701, B[11], B[10]);
-  nor g631 (n_794, B[9], B[10]);
-  nand g632 (n_792, B[9], B[10]);
-  xor g638 (n_707, B[11], A[1]);
-  xor g642 (n_710, B[11], A[2]);
-  nand g643 (n_711, n_710, n_699);
-  nand g644 (n_712, n_707, n_703);
-  nand g645 (n_1631, n_711, n_712);
-  xor g646 (n_713, B[11], A[3]);
-  nand g647 (n_714, n_713, n_699);
-  nand g648 (n_715, n_710, n_703);
-  nand g649 (n_1638, n_714, n_715);
-  xor g650 (n_716, B[11], A[4]);
-  nand g651 (n_717, n_716, n_699);
-  nand g652 (n_718, n_713, n_703);
-  nand g653 (n_1651, n_717, n_718);
-  xor g654 (n_719, B[11], A[5]);
-  nand g655 (n_720, n_719, n_699);
-  nand g656 (n_721, n_716, n_703);
-  nand g657 (n_1665, n_720, n_721);
-  xor g658 (n_722, B[11], A[6]);
-  nand g659 (n_723, n_722, n_699);
-  nand g660 (n_724, n_719, n_703);
-  nand g661 (n_1680, n_723, n_724);
-  xor g662 (n_725, B[11], A[7]);
-  nand g663 (n_726, n_725, n_699);
-  nand g664 (n_727, n_722, n_703);
-  nand g665 (n_1699, n_726, n_727);
-  xor g666 (n_728, B[11], A[8]);
-  nand g667 (n_729, n_728, n_699);
-  nand g668 (n_730, n_725, n_703);
-  nand g669 (n_1712, n_729, n_730);
-  xor g670 (n_731, B[11], A[9]);
-  nand g671 (n_732, n_731, n_699);
-  nand g672 (n_733, n_728, n_703);
-  nand g673 (n_1734, n_732, n_733);
-  xor g674 (n_734, B[11], A[10]);
-  nand g675 (n_735, n_734, n_699);
-  nand g676 (n_736, n_731, n_703);
-  nand g677 (n_1756, n_735, n_736);
-  xor g678 (n_737, B[11], A[11]);
-  nand g679 (n_738, n_737, n_699);
-  nand g680 (n_739, n_734, n_703);
-  nand g681 (n_1781, n_738, n_739);
-  xor g682 (n_740, B[11], A[12]);
-  nand g683 (n_741, n_740, n_699);
-  nand g684 (n_742, n_737, n_703);
-  nand g685 (n_1806, n_741, n_742);
-  xor g686 (n_743, B[11], A[13]);
-  nand g687 (n_744, n_743, n_699);
-  nand g688 (n_745, n_740, n_703);
-  nand g689 (n_1826, n_744, n_745);
-  xor g690 (n_746, B[11], A[14]);
-  nand g691 (n_747, n_746, n_699);
-  nand g692 (n_748, n_743, n_703);
-  nand g693 (n_1854, n_747, n_748);
-  xor g694 (n_749, B[11], A[15]);
-  nand g695 (n_750, n_749, n_699);
-  nand g696 (n_751, n_746, n_703);
-  nand g697 (n_1883, n_750, n_751);
-  xor g698 (n_752, B[11], A[16]);
-  nand g699 (n_753, n_752, n_699);
-  nand g700 (n_754, n_749, n_703);
-  nand g701 (n_1915, n_753, n_754);
-  xor g702 (n_755, B[11], A[17]);
-  nand g703 (n_756, n_755, n_699);
-  nand g704 (n_757, n_752, n_703);
-  nand g705 (n_1942, n_756, n_757);
-  xor g706 (n_758, B[11], A[18]);
-  nand g707 (n_759, n_758, n_699);
-  nand g708 (n_760, n_755, n_703);
-  nand g709 (n_1983, n_759, n_760);
-  xor g710 (n_761, B[11], A[19]);
-  nand g711 (n_762, n_761, n_699);
-  nand g712 (n_763, n_758, n_703);
-  nand g713 (n_2017, n_762, n_763);
-  xor g714 (n_764, B[11], A[20]);
-  nand g715 (n_765, n_764, n_699);
-  nand g716 (n_766, n_761, n_703);
-  nand g717 (n_2051, n_765, n_766);
-  xor g718 (n_767, B[11], A[21]);
-  nand g719 (n_768, n_767, n_699);
-  nand g720 (n_769, n_764, n_703);
-  nand g721 (n_2085, n_768, n_769);
-  xor g722 (n_770, B[11], A[22]);
-  nand g723 (n_771, n_770, n_699);
-  nand g724 (n_772, n_767, n_703);
-  nand g725 (n_2116, n_771, n_772);
-  xor g726 (n_773, B[11], A[23]);
-  nand g727 (n_774, n_773, n_699);
-  nand g728 (n_775, n_770, n_703);
-  nand g729 (n_2149, n_774, n_775);
-  xor g730 (n_776, B[11], A[24]);
-  nand g731 (n_777, n_776, n_699);
-  nand g732 (n_778, n_773, n_703);
-  nand g733 (n_2179, n_777, n_778);
-  xor g734 (n_779, B[11], A[25]);
-  nand g735 (n_780, n_779, n_699);
-  nand g736 (n_781, n_776, n_703);
-  nand g737 (n_2204, n_780, n_781);
-  nand g739 (n_784, B[11], n_699);
-  nand g740 (n_785, n_779, n_703);
-  nand g741 (n_2227, n_784, n_785);
-  nand g744 (n_789, B[11], n_703);
-  nand g745 (n_790, n_784, n_789);
-  or g749 (n_795, n_793, n_794);
-  and g750 (n_1627, B[11], n_795);
-  xor g751 (n_796, B[12], B[11]);
-  xor g752 (n_798, B[13], B[12]);
-  nor g756 (n_891, B[11], B[12]);
-  nand g757 (n_889, B[11], B[12]);
-  xor g763 (n_804, B[13], A[1]);
-  xor g767 (n_807, B[13], A[2]);
-  nand g768 (n_808, n_807, n_796);
-  nand g769 (n_809, n_804, n_800);
-  nand g770 (n_1652, n_808, n_809);
-  xor g771 (n_810, B[13], A[3]);
-  nand g772 (n_811, n_810, n_796);
-  nand g773 (n_812, n_807, n_800);
-  nand g774 (n_1663, n_811, n_812);
-  xor g775 (n_813, B[13], A[4]);
-  nand g776 (n_814, n_813, n_796);
-  nand g777 (n_815, n_810, n_800);
-  nand g778 (n_1682, n_814, n_815);
-  xor g779 (n_816, B[13], A[5]);
-  nand g780 (n_817, n_816, n_796);
-  nand g781 (n_818, n_813, n_800);
-  nand g782 (n_1696, n_817, n_818);
-  xor g783 (n_819, B[13], A[6]);
-  nand g784 (n_820, n_819, n_796);
-  nand g785 (n_821, n_816, n_800);
-  nand g786 (n_1714, n_820, n_821);
-  xor g787 (n_822, B[13], A[7]);
-  nand g788 (n_823, n_822, n_796);
-  nand g789 (n_824, n_819, n_800);
-  nand g790 (n_1738, n_823, n_824);
-  xor g791 (n_825, B[13], A[8]);
-  nand g792 (n_826, n_825, n_796);
-  nand g793 (n_827, n_822, n_800);
-  nand g794 (n_1752, n_826, n_827);
-  xor g795 (n_828, B[13], A[9]);
-  nand g796 (n_829, n_828, n_796);
-  nand g797 (n_830, n_825, n_800);
-  nand g798 (n_1778, n_829, n_830);
-  xor g799 (n_831, B[13], A[10]);
-  nand g800 (n_832, n_831, n_796);
-  nand g801 (n_833, n_828, n_800);
-  nand g802 (n_1804, n_832, n_833);
-  xor g803 (n_834, B[13], A[11]);
-  nand g804 (n_835, n_834, n_796);
-  nand g805 (n_836, n_831, n_800);
-  nand g806 (n_1824, n_835, n_836);
-  xor g807 (n_837, B[13], A[12]);
-  nand g808 (n_838, n_837, n_796);
-  nand g809 (n_839, n_834, n_800);
-  nand g810 (n_1855, n_838, n_839);
-  xor g811 (n_840, B[13], A[13]);
-  nand g812 (n_841, n_840, n_796);
-  nand g813 (n_842, n_837, n_800);
-  nand g814 (n_1884, n_841, n_842);
-  xor g815 (n_843, B[13], A[14]);
-  nand g816 (n_844, n_843, n_796);
-  nand g817 (n_845, n_840, n_800);
-  nand g818 (n_1908, n_844, n_845);
-  xor g819 (n_846, B[13], A[15]);
-  nand g820 (n_847, n_846, n_796);
-  nand g821 (n_848, n_843, n_800);
-  nand g822 (n_1945, n_847, n_848);
-  xor g823 (n_849, B[13], A[16]);
-  nand g824 (n_850, n_849, n_796);
-  nand g825 (n_851, n_846, n_800);
-  nand g826 (n_1974, n_850, n_851);
-  xor g827 (n_852, B[13], A[17]);
-  nand g828 (n_853, n_852, n_796);
-  nand g829 (n_854, n_849, n_800);
-  nand g830 (n_2006, n_853, n_854);
-  xor g831 (n_855, B[13], A[18]);
-  nand g832 (n_856, n_855, n_796);
-  nand g833 (n_857, n_852, n_800);
-  nand g834 (n_2050, n_856, n_857);
-  xor g835 (n_858, B[13], A[19]);
-  nand g836 (n_859, n_858, n_796);
-  nand g837 (n_860, n_855, n_800);
-  nand g838 (n_2079, n_859, n_860);
-  xor g839 (n_861, B[13], A[20]);
-  nand g840 (n_862, n_861, n_796);
-  nand g841 (n_863, n_858, n_800);
-  nand g842 (n_2117, n_862, n_863);
-  xor g843 (n_864, B[13], A[21]);
-  nand g844 (n_865, n_864, n_796);
-  nand g845 (n_866, n_861, n_800);
-  nand g846 (n_2144, n_865, n_866);
-  xor g847 (n_867, B[13], A[22]);
-  nand g848 (n_868, n_867, n_796);
-  nand g849 (n_869, n_864, n_800);
-  nand g850 (n_2178, n_868, n_869);
-  xor g851 (n_870, B[13], A[23]);
-  nand g852 (n_871, n_870, n_796);
-  nand g853 (n_872, n_867, n_800);
-  nand g854 (n_2203, n_871, n_872);
-  xor g855 (n_873, B[13], A[24]);
-  nand g856 (n_874, n_873, n_796);
-  nand g857 (n_875, n_870, n_800);
-  nand g858 (n_2232, n_874, n_875);
-  xor g859 (n_876, B[13], A[25]);
-  nand g860 (n_877, n_876, n_796);
-  nand g861 (n_878, n_873, n_800);
-  nand g862 (n_2255, n_877, n_878);
-  nand g864 (n_881, B[13], n_796);
-  nand g865 (n_882, n_876, n_800);
-  nand g866 (n_2277, n_881, n_882);
-  nand g869 (n_886, B[13], n_800);
-  nand g870 (n_887, n_881, n_886);
-  or g874 (n_892, n_890, n_891);
-  and g875 (n_1649, B[13], n_892);
-  xor g876 (n_893, B[14], B[13]);
-  xor g877 (n_895, B[15], B[14]);
-  nor g881 (n_988, B[13], B[14]);
-  nand g882 (n_986, B[13], B[14]);
-  xor g888 (n_901, B[15], A[1]);
-  xor g892 (n_904, B[15], A[2]);
-  nand g893 (n_905, n_904, n_893);
-  nand g894 (n_906, n_901, n_897);
-  nand g895 (n_1681, n_905, n_906);
-  xor g896 (n_907, B[15], A[3]);
-  nand g897 (n_908, n_907, n_893);
-  nand g898 (n_909, n_904, n_897);
-  nand g899 (n_1694, n_908, n_909);
-  xor g900 (n_910, B[15], A[4]);
-  nand g901 (n_911, n_910, n_893);
-  nand g902 (n_912, n_907, n_897);
-  nand g903 (n_1717, n_911, n_912);
-  xor g904 (n_913, B[15], A[5]);
-  nand g905 (n_914, n_913, n_893);
-  nand g906 (n_915, n_910, n_897);
-  nand g907 (n_1733, n_914, n_915);
-  xor g908 (n_916, B[15], A[6]);
-  nand g909 (n_917, n_916, n_893);
-  nand g910 (n_918, n_913, n_897);
-  nand g911 (n_1755, n_917, n_918);
-  xor g912 (n_919, B[15], A[7]);
-  nand g913 (n_920, n_919, n_893);
-  nand g914 (n_921, n_916, n_897);
-  nand g915 (n_1782, n_920, n_921);
-  xor g916 (n_922, B[15], A[8]);
-  nand g917 (n_923, n_922, n_893);
-  nand g918 (n_924, n_919, n_897);
-  nand g919 (n_1801, n_923, n_924);
-  xor g920 (n_925, B[15], A[9]);
-  nand g921 (n_926, n_925, n_893);
-  nand g922 (n_927, n_922, n_897);
-  nand g923 (n_1829, n_926, n_927);
-  xor g924 (n_928, B[15], A[10]);
-  nand g925 (n_929, n_928, n_893);
-  nand g926 (n_930, n_925, n_897);
-  nand g927 (n_1857, n_929, n_930);
-  xor g928 (n_931, B[15], A[11]);
-  nand g929 (n_932, n_931, n_893);
-  nand g930 (n_933, n_928, n_897);
-  nand g931 (n_1879, n_932, n_933);
-  xor g932 (n_934, B[15], A[12]);
-  nand g933 (n_935, n_934, n_893);
-  nand g934 (n_936, n_931, n_897);
-  nand g935 (n_1913, n_935, n_936);
-  xor g936 (n_937, B[15], A[13]);
-  nand g937 (n_938, n_937, n_893);
-  nand g938 (n_939, n_934, n_897);
-  nand g939 (n_1940, n_938, n_939);
-  xor g940 (n_940, B[15], A[14]);
-  nand g941 (n_941, n_940, n_893);
-  nand g942 (n_942, n_937, n_897);
-  nand g943 (n_1978, n_941, n_942);
-  xor g944 (n_943, B[15], A[15]);
-  nand g945 (n_944, n_943, n_893);
-  nand g946 (n_945, n_940, n_897);
-  nand g947 (n_2007, n_944, n_945);
-  xor g948 (n_946, B[15], A[16]);
-  nand g949 (n_947, n_946, n_893);
-  nand g950 (n_948, n_943, n_897);
-  nand g951 (n_2043, n_947, n_948);
-  xor g952 (n_949, B[15], A[17]);
-  nand g953 (n_950, n_949, n_893);
-  nand g954 (n_951, n_946, n_897);
-  nand g955 (n_2075, n_950, n_951);
-  xor g956 (n_952, B[15], A[18]);
-  nand g957 (n_953, n_952, n_893);
-  nand g958 (n_954, n_949, n_897);
-  nand g959 (n_2111, n_953, n_954);
-  xor g960 (n_955, B[15], A[19]);
-  nand g961 (n_956, n_955, n_893);
-  nand g962 (n_957, n_952, n_897);
-  nand g963 (n_2140, n_956, n_957);
-  xor g964 (n_958, B[15], A[20]);
-  nand g965 (n_959, n_958, n_893);
-  nand g966 (n_960, n_955, n_897);
-  nand g967 (n_2172, n_959, n_960);
-  xor g968 (n_961, B[15], A[21]);
-  nand g969 (n_962, n_961, n_893);
-  nand g970 (n_963, n_958, n_897);
-  nand g971 (n_2200, n_962, n_963);
-  xor g972 (n_964, B[15], A[22]);
-  nand g973 (n_965, n_964, n_893);
-  nand g974 (n_966, n_961, n_897);
-  nand g975 (n_2230, n_965, n_966);
-  xor g976 (n_967, B[15], A[23]);
-  nand g977 (n_968, n_967, n_893);
-  nand g978 (n_969, n_964, n_897);
-  nand g979 (n_2253, n_968, n_969);
-  xor g980 (n_970, B[15], A[24]);
-  nand g981 (n_971, n_970, n_893);
-  nand g982 (n_972, n_967, n_897);
-  nand g983 (n_2279, n_971, n_972);
-  xor g984 (n_973, B[15], A[25]);
-  nand g985 (n_974, n_973, n_893);
-  nand g986 (n_975, n_970, n_897);
-  nand g987 (n_2305, n_974, n_975);
-  nand g989 (n_978, B[15], n_893);
-  nand g990 (n_979, n_973, n_897);
-  nand g991 (n_2324, n_978, n_979);
-  nand g994 (n_983, B[15], n_897);
-  nand g995 (n_984, n_978, n_983);
-  or g999 (n_989, n_987, n_988);
-  and g1000 (n_1677, B[15], n_989);
-  xor g1001 (n_990, B[16], B[15]);
-  xor g1002 (n_992, B[17], B[16]);
-  nor g1006 (n_1085, B[15], B[16]);
-  nand g1007 (n_1083, B[15], B[16]);
-  xor g1013 (n_998, B[17], A[1]);
-  xor g1017 (n_1001, B[17], A[2]);
-  nand g1018 (n_1002, n_1001, n_990);
-  nand g1019 (n_1003, n_998, n_994);
-  nand g1020 (n_1718, n_1002, n_1003);
-  xor g1021 (n_1004, B[17], A[3]);
-  nand g1022 (n_1005, n_1004, n_990);
-  nand g1023 (n_1006, n_1001, n_994);
-  nand g1024 (n_1731, n_1005, n_1006);
-  xor g1025 (n_1007, B[17], A[4]);
-  nand g1026 (n_1008, n_1007, n_990);
-  nand g1027 (n_1009, n_1004, n_994);
-  nand g1028 (n_1753, n_1008, n_1009);
-  xor g1029 (n_1010, B[17], A[5]);
-  nand g1030 (n_1011, n_1010, n_990);
-  nand g1031 (n_1012, n_1007, n_994);
-  nand g1032 (n_1776, n_1011, n_1012);
-  xor g1033 (n_1013, B[17], A[6]);
-  nand g1034 (n_1014, n_1013, n_990);
-  nand g1035 (n_1015, n_1010, n_994);
-  nand g1036 (n_1802, n_1014, n_1015);
-  xor g1037 (n_1016, B[17], A[7]);
-  nand g1038 (n_1017, n_1016, n_990);
-  nand g1039 (n_1018, n_1013, n_994);
-  nand g1040 (n_1832, n_1017, n_1018);
-  xor g1041 (n_1019, B[17], A[8]);
-  nand g1042 (n_1020, n_1019, n_990);
-  nand g1043 (n_1021, n_1016, n_994);
-  nand g1044 (n_1853, n_1020, n_1021);
-  xor g1045 (n_1022, B[17], A[9]);
-  nand g1046 (n_1023, n_1022, n_990);
-  nand g1047 (n_1024, n_1019, n_994);
-  nand g1048 (n_1885, n_1023, n_1024);
-  xor g1049 (n_1025, B[17], A[10]);
-  nand g1050 (n_1026, n_1025, n_990);
-  nand g1051 (n_1027, n_1022, n_994);
-  nand g1052 (n_1918, n_1026, n_1027);
-  xor g1053 (n_1028, B[17], A[11]);
-  nand g1054 (n_1029, n_1028, n_990);
-  nand g1055 (n_1030, n_1025, n_994);
-  nand g1056 (n_1947, n_1029, n_1030);
-  xor g1057 (n_1031, B[17], A[12]);
-  nand g1058 (n_1032, n_1031, n_990);
-  nand g1059 (n_1033, n_1028, n_994);
-  nand g1060 (n_1979, n_1032, n_1033);
-  xor g1061 (n_1034, B[17], A[13]);
-  nand g1062 (n_1035, n_1034, n_990);
-  nand g1063 (n_1036, n_1031, n_994);
-  nand g1064 (n_2016, n_1035, n_1036);
-  xor g1065 (n_1037, B[17], A[14]);
-  nand g1066 (n_1038, n_1037, n_990);
-  nand g1067 (n_1039, n_1034, n_994);
-  nand g1068 (n_2049, n_1038, n_1039);
-  xor g1069 (n_1040, B[17], A[15]);
-  nand g1070 (n_1041, n_1040, n_990);
-  nand g1071 (n_1042, n_1037, n_994);
-  nand g1072 (n_2084, n_1041, n_1042);
-  xor g1073 (n_1043, B[17], A[16]);
-  nand g1074 (n_1044, n_1043, n_990);
-  nand g1075 (n_1045, n_1040, n_994);
-  nand g1076 (n_2118, n_1044, n_1045);
-  xor g1077 (n_1046, B[17], A[17]);
-  nand g1078 (n_1047, n_1046, n_990);
-  nand g1079 (n_1048, n_1043, n_994);
-  nand g1080 (n_2146, n_1047, n_1048);
-  xor g1081 (n_1049, B[17], A[18]);
-  nand g1082 (n_1050, n_1049, n_990);
-  nand g1083 (n_1051, n_1046, n_994);
-  nand g1084 (n_2173, n_1050, n_1051);
-  xor g1085 (n_1052, B[17], A[19]);
-  nand g1086 (n_1053, n_1052, n_990);
-  nand g1087 (n_1054, n_1049, n_994);
-  nand g1088 (n_2199, n_1053, n_1054);
-  xor g1089 (n_1055, B[17], A[20]);
-  nand g1090 (n_1056, n_1055, n_990);
-  nand g1091 (n_1057, n_1052, n_994);
-  nand g1092 (n_2234, n_1056, n_1057);
-  xor g1093 (n_1058, B[17], A[21]);
-  nand g1094 (n_1059, n_1058, n_990);
-  nand g1095 (n_1060, n_1055, n_994);
-  nand g1096 (n_2252, n_1059, n_1060);
-  xor g1097 (n_1061, B[17], A[22]);
-  nand g1098 (n_1062, n_1061, n_990);
-  nand g1099 (n_1063, n_1058, n_994);
-  nand g1100 (n_2281, n_1062, n_1063);
-  xor g1101 (n_1064, B[17], A[23]);
-  nand g1102 (n_1065, n_1064, n_990);
-  nand g1103 (n_1066, n_1061, n_994);
-  nand g1104 (n_2301, n_1065, n_1066);
-  xor g1105 (n_1067, B[17], A[24]);
-  nand g1106 (n_1068, n_1067, n_990);
-  nand g1107 (n_1069, n_1064, n_994);
-  nand g1108 (n_2325, n_1068, n_1069);
-  xor g1109 (n_1070, B[17], A[25]);
-  nand g1110 (n_1071, n_1070, n_990);
-  nand g1111 (n_1072, n_1067, n_994);
-  nand g1112 (n_2345, n_1071, n_1072);
-  nand g1114 (n_1075, B[17], n_990);
-  nand g1115 (n_1076, n_1070, n_994);
-  nand g1116 (n_2361, n_1075, n_1076);
-  nand g1119 (n_1080, B[17], n_994);
-  nand g1120 (n_1081, n_1075, n_1080);
-  or g1124 (n_1086, n_1084, n_1085);
-  and g1125 (n_1711, B[17], n_1086);
-  xor g1126 (n_1087, B[18], B[17]);
-  xor g1127 (n_1089, B[19], B[18]);
-  nor g1131 (n_1182, B[17], B[18]);
-  nand g1132 (n_1180, B[17], B[18]);
-  xor g1138 (n_1095, B[19], A[1]);
-  xor g1142 (n_1098, B[19], A[2]);
-  nand g1143 (n_1099, n_1098, n_1087);
-  nand g1144 (n_1100, n_1095, n_1091);
-  nand g1145 (n_1760, n_1099, n_1100);
-  xor g1146 (n_1101, B[19], A[3]);
-  nand g1147 (n_1102, n_1101, n_1087);
-  nand g1148 (n_1103, n_1098, n_1091);
-  nand g1149 (n_1774, n_1102, n_1103);
-  xor g1150 (n_1104, B[19], A[4]);
-  nand g1151 (n_1105, n_1104, n_1087);
-  nand g1152 (n_1106, n_1101, n_1091);
-  nand g1153 (n_1799, n_1105, n_1106);
-  xor g1154 (n_1107, B[19], A[5]);
-  nand g1155 (n_1108, n_1107, n_1087);
-  nand g1156 (n_1109, n_1104, n_1091);
-  nand g1157 (n_1825, n_1108, n_1109);
-  xor g1158 (n_1110, B[19], A[6]);
-  nand g1159 (n_1111, n_1110, n_1087);
-  nand g1160 (n_1112, n_1107, n_1091);
-  nand g1161 (n_1852, n_1111, n_1112);
-  xor g1162 (n_1113, B[19], A[7]);
-  nand g1163 (n_1114, n_1113, n_1087);
-  nand g1164 (n_1115, n_1110, n_1091);
-  nand g1165 (n_1888, n_1114, n_1115);
-  xor g1166 (n_1116, B[19], A[8]);
-  nand g1167 (n_1117, n_1116, n_1087);
-  nand g1168 (n_1118, n_1113, n_1091);
-  nand g1169 (n_1911, n_1117, n_1118);
-  xor g1170 (n_1119, B[19], A[9]);
-  nand g1171 (n_1120, n_1119, n_1087);
-  nand g1172 (n_1121, n_1116, n_1091);
-  nand g1173 (n_1939, n_1120, n_1121);
-  xor g1174 (n_1122, B[19], A[10]);
-  nand g1175 (n_1123, n_1122, n_1087);
-  nand g1176 (n_1124, n_1119, n_1091);
-  nand g1177 (n_1981, n_1123, n_1124);
-  xor g1178 (n_1125, B[19], A[11]);
-  nand g1179 (n_1126, n_1125, n_1087);
-  nand g1180 (n_1127, n_1122, n_1091);
-  nand g1181 (n_2011, n_1126, n_1127);
-  xor g1182 (n_1128, B[19], A[12]);
-  nand g1183 (n_1129, n_1128, n_1087);
-  nand g1184 (n_1130, n_1125, n_1091);
-  nand g1185 (n_2048, n_1129, n_1130);
-  xor g1186 (n_1131, B[19], A[13]);
-  nand g1187 (n_1132, n_1131, n_1087);
-  nand g1188 (n_1133, n_1128, n_1091);
-  nand g1189 (n_2080, n_1132, n_1133);
-  xor g1190 (n_1134, B[19], A[14]);
-  nand g1191 (n_1135, n_1134, n_1087);
-  nand g1192 (n_1136, n_1131, n_1091);
-  nand g1193 (n_2109, n_1135, n_1136);
-  xor g1194 (n_1137, B[19], A[15]);
-  nand g1195 (n_1138, n_1137, n_1087);
-  nand g1196 (n_1139, n_1134, n_1091);
-  nand g1197 (n_2145, n_1138, n_1139);
-  xor g1198 (n_1140, B[19], A[16]);
-  nand g1199 (n_1141, n_1140, n_1087);
-  nand g1200 (n_1142, n_1137, n_1091);
-  nand g1201 (n_2171, n_1141, n_1142);
-  xor g1202 (n_1143, B[19], A[17]);
-  nand g1203 (n_1144, n_1143, n_1087);
-  nand g1204 (n_1145, n_1140, n_1091);
-  nand g1205 (n_2202, n_1144, n_1145);
-  xor g1206 (n_1146, B[19], A[18]);
-  nand g1207 (n_1147, n_1146, n_1087);
-  nand g1208 (n_1148, n_1143, n_1091);
-  nand g1209 (n_2233, n_1147, n_1148);
-  xor g1210 (n_1149, B[19], A[19]);
-  nand g1211 (n_1150, n_1149, n_1087);
-  nand g1212 (n_1151, n_1146, n_1091);
-  nand g1213 (n_2254, n_1150, n_1151);
-  xor g1214 (n_1152, B[19], A[20]);
-  nand g1215 (n_1153, n_1152, n_1087);
-  nand g1216 (n_1154, n_1149, n_1091);
-  nand g1217 (n_2282, n_1153, n_1154);
-  xor g1218 (n_1155, B[19], A[21]);
-  nand g1219 (n_1156, n_1155, n_1087);
-  nand g1220 (n_1157, n_1152, n_1091);
-  nand g1221 (n_2299, n_1156, n_1157);
-  xor g1222 (n_1158, B[19], A[22]);
-  nand g1223 (n_1159, n_1158, n_1087);
-  nand g1224 (n_1160, n_1155, n_1091);
-  nand g1225 (n_2323, n_1159, n_1160);
-  xor g1226 (n_1161, B[19], A[23]);
-  nand g1227 (n_1162, n_1161, n_1087);
-  nand g1228 (n_1163, n_1158, n_1091);
-  nand g1229 (n_2340, n_1162, n_1163);
-  xor g1230 (n_1164, B[19], A[24]);
-  nand g1231 (n_1165, n_1164, n_1087);
-  nand g1232 (n_1166, n_1161, n_1091);
-  nand g1233 (n_2362, n_1165, n_1166);
-  xor g1234 (n_1167, B[19], A[25]);
-  nand g1235 (n_1168, n_1167, n_1087);
-  nand g1236 (n_1169, n_1164, n_1091);
-  nand g1237 (n_2379, n_1168, n_1169);
-  nand g1239 (n_1172, B[19], n_1087);
-  nand g1240 (n_1173, n_1167, n_1091);
-  nand g1241 (n_2391, n_1172, n_1173);
-  nand g1244 (n_1177, B[19], n_1091);
-  nand g1245 (n_1178, n_1172, n_1177);
-  or g1249 (n_1183, n_1181, n_1182);
-  and g1250 (n_1751, B[19], n_1183);
-  xor g1251 (n_1184, B[20], B[19]);
-  xor g1252 (n_1186, B[21], B[20]);
-  nor g1256 (n_1279, B[19], B[20]);
-  nand g1257 (n_1277, B[19], B[20]);
-  xor g1263 (n_1192, B[21], A[1]);
-  xor g1267 (n_1195, B[21], A[2]);
-  nand g1268 (n_1196, n_1195, n_1184);
-  nand g1269 (n_1197, n_1192, n_1188);
-  nand g1270 (n_1807, n_1196, n_1197);
-  xor g1271 (n_1198, B[21], A[3]);
-  nand g1272 (n_1199, n_1198, n_1184);
-  nand g1273 (n_1200, n_1195, n_1188);
-  nand g1274 (n_1823, n_1199, n_1200);
-  xor g1275 (n_1201, B[21], A[4]);
-  nand g1276 (n_1202, n_1201, n_1184);
-  nand g1277 (n_1203, n_1198, n_1188);
-  nand g1278 (n_1851, n_1202, n_1203);
-  xor g1279 (n_1204, B[21], A[5]);
-  nand g1280 (n_1205, n_1204, n_1184);
-  nand g1281 (n_1206, n_1201, n_1188);
-  nand g1282 (n_1880, n_1205, n_1206);
-  xor g1283 (n_1207, B[21], A[6]);
-  nand g1284 (n_1208, n_1207, n_1184);
-  nand g1285 (n_1209, n_1204, n_1188);
-  nand g1286 (n_1910, n_1208, n_1209);
-  xor g1287 (n_1210, B[21], A[7]);
-  nand g1288 (n_1211, n_1210, n_1184);
-  nand g1289 (n_1212, n_1207, n_1188);
-  nand g1290 (n_1946, n_1211, n_1212);
-  xor g1291 (n_1213, B[21], A[8]);
-  nand g1292 (n_1214, n_1213, n_1184);
-  nand g1293 (n_1215, n_1210, n_1188);
-  nand g1294 (n_1975, n_1214, n_1215);
-  xor g1295 (n_1216, B[21], A[9]);
-  nand g1296 (n_1217, n_1216, n_1184);
-  nand g1297 (n_1218, n_1213, n_1188);
-  nand g1298 (n_2015, n_1217, n_1218);
-  xor g1299 (n_1219, B[21], A[10]);
-  nand g1300 (n_1220, n_1219, n_1184);
-  nand g1301 (n_1221, n_1216, n_1188);
-  nand g1302 (n_2044, n_1220, n_1221);
-  xor g1303 (n_1222, B[21], A[11]);
-  nand g1304 (n_1223, n_1222, n_1184);
-  nand g1305 (n_1224, n_1219, n_1188);
-  nand g1306 (n_2083, n_1223, n_1224);
-  xor g1307 (n_1225, B[21], A[12]);
-  nand g1308 (n_1226, n_1225, n_1184);
-  nand g1309 (n_1227, n_1222, n_1188);
-  nand g1310 (n_2112, n_1226, n_1227);
-  xor g1311 (n_1228, B[21], A[13]);
-  nand g1312 (n_1229, n_1228, n_1184);
-  nand g1313 (n_1230, n_1225, n_1188);
-  nand g1314 (n_2148, n_1229, n_1230);
-  xor g1315 (n_1231, B[21], A[14]);
-  nand g1316 (n_1232, n_1231, n_1184);
-  nand g1317 (n_1233, n_1228, n_1188);
-  nand g1318 (n_2174, n_1232, n_1233);
-  xor g1319 (n_1234, B[21], A[15]);
-  nand g1320 (n_1235, n_1234, n_1184);
-  nand g1321 (n_1236, n_1231, n_1188);
-  nand g1322 (n_2206, n_1235, n_1236);
-  xor g1323 (n_1237, B[21], A[16]);
-  nand g1324 (n_1238, n_1237, n_1184);
-  nand g1325 (n_1239, n_1234, n_1188);
-  nand g1326 (n_2229, n_1238, n_1239);
-  xor g1327 (n_1240, B[21], A[17]);
-  nand g1328 (n_1241, n_1240, n_1184);
-  nand g1329 (n_1242, n_1237, n_1188);
-  nand g1330 (n_2258, n_1241, n_1242);
-  xor g1331 (n_1243, B[21], A[18]);
-  nand g1332 (n_1244, n_1243, n_1184);
-  nand g1333 (n_1245, n_1240, n_1188);
-  nand g1334 (n_2283, n_1244, n_1245);
-  xor g1335 (n_1246, B[21], A[19]);
-  nand g1336 (n_1247, n_1246, n_1184);
-  nand g1337 (n_1248, n_1243, n_1188);
-  nand g1338 (n_2302, n_1247, n_1248);
-  xor g1339 (n_1249, B[21], A[20]);
-  nand g1340 (n_1250, n_1249, n_1184);
-  nand g1341 (n_1251, n_1246, n_1188);
-  nand g1342 (n_2326, n_1250, n_1251);
-  xor g1343 (n_1252, B[21], A[21]);
-  nand g1344 (n_1253, n_1252, n_1184);
-  nand g1345 (n_1254, n_1249, n_1188);
-  nand g1346 (n_2341, n_1253, n_1254);
-  xor g1347 (n_1255, B[21], A[22]);
-  nand g1348 (n_1256, n_1255, n_1184);
-  nand g1349 (n_1257, n_1252, n_1188);
-  nand g1350 (n_2360, n_1256, n_1257);
-  xor g1351 (n_1258, B[21], A[23]);
-  nand g1352 (n_1259, n_1258, n_1184);
-  nand g1353 (n_1260, n_1255, n_1188);
-  nand g1354 (n_2375, n_1259, n_1260);
-  xor g1355 (n_1261, B[21], A[24]);
-  nand g1356 (n_1262, n_1261, n_1184);
-  nand g1357 (n_1263, n_1258, n_1188);
-  nand g1358 (n_2392, n_1262, n_1263);
-  xor g1359 (n_1264, B[21], A[25]);
-  nand g1360 (n_1265, n_1264, n_1184);
-  nand g1361 (n_1266, n_1261, n_1188);
-  nand g1362 (n_2404, n_1265, n_1266);
-  nand g1364 (n_1269, B[21], n_1184);
-  nand g1365 (n_1270, n_1264, n_1188);
-  nand g1366 (n_2419, n_1269, n_1270);
-  nand g1369 (n_1274, B[21], n_1188);
-  nand g1370 (n_1275, n_1269, n_1274);
-  or g1374 (n_1280, n_1278, n_1279);
-  and g1375 (n_1797, B[21], n_1280);
-  xor g1376 (n_1281, B[22], B[21]);
-  xor g1377 (n_1283, B[23], B[22]);
-  nor g1381 (n_1376, B[21], B[22]);
-  nand g1382 (n_1374, B[21], B[22]);
-  xor g1388 (n_1289, B[23], A[1]);
-  xor g1392 (n_1292, B[23], A[2]);
-  nand g1393 (n_1293, n_1292, n_1281);
-  nand g1394 (n_1294, n_1289, n_1285);
-  nand g1395 (n_1860, n_1293, n_1294);
-  xor g1396 (n_1295, B[23], A[3]);
-  nand g1397 (n_1296, n_1295, n_1281);
-  nand g1398 (n_1297, n_1292, n_1285);
-  nand g1399 (n_1878, n_1296, n_1297);
-  xor g1400 (n_1298, B[23], A[4]);
-  nand g1401 (n_1299, n_1298, n_1281);
-  nand g1402 (n_1300, n_1295, n_1285);
-  nand g1403 (n_1909, n_1299, n_1300);
-  xor g1404 (n_1301, B[23], A[5]);
-  nand g1405 (n_1302, n_1301, n_1281);
-  nand g1406 (n_1303, n_1298, n_1285);
-  nand g1407 (n_1950, n_1302, n_1303);
-  xor g1408 (n_1304, B[23], A[6]);
-  nand g1409 (n_1305, n_1304, n_1281);
-  nand g1410 (n_1306, n_1301, n_1285);
-  nand g1411 (n_1976, n_1305, n_1306);
-  xor g1412 (n_1307, B[23], A[7]);
-  nand g1413 (n_1308, n_1307, n_1281);
-  nand g1414 (n_1309, n_1304, n_1285);
-  nand g1415 (n_2014, n_1308, n_1309);
-  xor g1416 (n_1310, B[23], A[8]);
-  nand g1417 (n_1311, n_1310, n_1281);
-  nand g1418 (n_1312, n_1307, n_1285);
-  nand g1419 (n_2045, n_1311, n_1312);
-  xor g1420 (n_1313, B[23], A[9]);
-  nand g1421 (n_1314, n_1313, n_1281);
-  nand g1422 (n_1315, n_1310, n_1285);
-  nand g1423 (n_2082, n_1314, n_1315);
-  xor g1424 (n_1316, B[23], A[10]);
-  nand g1425 (n_1317, n_1316, n_1281);
-  nand g1426 (n_1318, n_1313, n_1285);
-  nand g1427 (n_2115, n_1317, n_1318);
-  xor g1428 (n_1319, B[23], A[11]);
-  nand g1429 (n_1320, n_1319, n_1281);
-  nand g1430 (n_1321, n_1316, n_1285);
-  nand g1431 (n_2147, n_1320, n_1321);
-  xor g1432 (n_1322, B[23], A[12]);
-  nand g1433 (n_1323, n_1322, n_1281);
-  nand g1434 (n_1324, n_1319, n_1285);
-  nand g1435 (n_2176, n_1323, n_1324);
-  xor g1436 (n_1325, B[23], A[13]);
-  nand g1437 (n_1326, n_1325, n_1281);
-  nand g1438 (n_1327, n_1322, n_1285);
-  nand g1439 (n_2205, n_1326, n_1327);
-  xor g1440 (n_1328, B[23], A[14]);
-  nand g1441 (n_1329, n_1328, n_1281);
-  nand g1442 (n_1330, n_1325, n_1285);
-  nand g1443 (n_2231, n_1329, n_1330);
-  xor g1444 (n_1331, B[23], A[15]);
-  nand g1445 (n_1332, n_1331, n_1281);
-  nand g1446 (n_1333, n_1328, n_1285);
-  nand g1447 (n_2257, n_1332, n_1333);
-  xor g1448 (n_1334, B[23], A[16]);
-  nand g1449 (n_1335, n_1334, n_1281);
-  nand g1450 (n_1336, n_1331, n_1285);
-  nand g1451 (n_2280, n_1335, n_1336);
-  xor g1452 (n_1337, B[23], A[17]);
-  nand g1453 (n_1338, n_1337, n_1281);
-  nand g1454 (n_1339, n_1334, n_1285);
-  nand g1455 (n_2303, n_1338, n_1339);
-  xor g1456 (n_1340, B[23], A[18]);
-  nand g1457 (n_1341, n_1340, n_1281);
-  nand g1458 (n_1342, n_1337, n_1285);
-  nand g1459 (n_2322, n_1341, n_1342);
-  xor g1460 (n_1343, B[23], A[19]);
-  nand g1461 (n_1344, n_1343, n_1281);
-  nand g1462 (n_1345, n_1340, n_1285);
-  nand g1463 (n_2343, n_1344, n_1345);
-  xor g1464 (n_1346, B[23], A[20]);
-  nand g1465 (n_1347, n_1346, n_1281);
-  nand g1466 (n_1348, n_1343, n_1285);
-  nand g1467 (n_2363, n_1347, n_1348);
-  xor g1468 (n_1349, B[23], A[21]);
-  nand g1469 (n_1350, n_1349, n_1281);
-  nand g1470 (n_1351, n_1346, n_1285);
-  nand g1471 (n_2378, n_1350, n_1351);
-  xor g1472 (n_1352, B[23], A[22]);
-  nand g1473 (n_1353, n_1352, n_1281);
-  nand g1474 (n_1354, n_1349, n_1285);
-  nand g1475 (n_2394, n_1353, n_1354);
-  xor g1476 (n_1355, B[23], A[23]);
-  nand g1477 (n_1356, n_1355, n_1281);
-  nand g1478 (n_1357, n_1352, n_1285);
-  nand g1479 (n_2407, n_1356, n_1357);
-  xor g1480 (n_1358, B[23], A[24]);
-  nand g1481 (n_1359, n_1358, n_1281);
-  nand g1482 (n_1360, n_1355, n_1285);
-  nand g1483 (n_2417, n_1359, n_1360);
-  xor g1484 (n_1361, B[23], A[25]);
-  nand g1485 (n_1362, n_1361, n_1281);
-  nand g1486 (n_1363, n_1358, n_1285);
-  nand g1487 (n_2427, n_1362, n_1363);
-  nand g1489 (n_1366, B[23], n_1281);
-  nand g1490 (n_1367, n_1361, n_1285);
-  nand g1491 (n_2438, n_1366, n_1367);
-  nand g1494 (n_1371, B[23], n_1285);
-  nand g1495 (n_1372, n_1366, n_1371);
-  or g1499 (n_1377, n_1375, n_1376);
-  and g1500 (n_1849, B[23], n_1377);
-  xor g1501 (n_1378, B[24], B[23]);
-  xor g1502 (n_1380, B[25], B[24]);
-  nor g1506 (n_1473, B[23], B[24]);
-  nand g1507 (n_1471, B[23], B[24]);
-  xor g1513 (n_1386, B[25], A[1]);
-  xor g1517 (n_1389, B[25], A[2]);
-  nand g1518 (n_1390, n_1389, n_1378);
-  nand g1519 (n_1391, n_1386, n_1382);
-  nand g1520 (n_1919, n_1390, n_1391);
-  xor g1521 (n_1392, B[25], A[3]);
-  nand g1522 (n_1393, n_1392, n_1378);
-  nand g1523 (n_1394, n_1389, n_1382);
-  nand g1524 (n_1941, n_1393, n_1394);
-  xor g1525 (n_1395, B[25], A[4]);
-  nand g1526 (n_1396, n_1395, n_1378);
-  nand g1527 (n_1397, n_1392, n_1382);
-  nand g1528 (n_1972, n_1396, n_1397);
-  xor g1529 (n_1398, B[25], A[5]);
-  nand g1530 (n_1399, n_1398, n_1378);
-  nand g1531 (n_1400, n_1395, n_1382);
-  nand g1532 (n_2009, n_1399, n_1400);
-  xor g1533 (n_1401, B[25], A[6]);
-  nand g1534 (n_1402, n_1401, n_1378);
-  nand g1535 (n_1403, n_1398, n_1382);
-  nand g1536 (n_2041, n_1402, n_1403);
-  xor g1537 (n_1404, B[25], A[7]);
-  nand g1538 (n_1405, n_1404, n_1378);
-  nand g1539 (n_1406, n_1401, n_1382);
-  nand g1540 (n_2078, n_1405, n_1406);
-  xor g1541 (n_1407, B[25], A[8]);
-  nand g1542 (n_1408, n_1407, n_1378);
-  nand g1543 (n_1409, n_1404, n_1382);
-  nand g1544 (n_2113, n_1408, n_1409);
-  xor g1545 (n_1410, B[25], A[9]);
-  nand g1546 (n_1411, n_1410, n_1378);
-  nand g1547 (n_1412, n_1407, n_1382);
-  nand g1548 (n_2143, n_1411, n_1412);
-  xor g1549 (n_1413, B[25], A[10]);
-  nand g1550 (n_1414, n_1413, n_1378);
-  nand g1551 (n_1415, n_1410, n_1382);
-  nand g1552 (n_2175, n_1414, n_1415);
-  xor g1553 (n_1416, B[25], A[11]);
-  nand g1554 (n_1417, n_1416, n_1378);
-  nand g1555 (n_1418, n_1413, n_1382);
-  nand g1556 (n_2201, n_1417, n_1418);
-  xor g1557 (n_1419, B[25], A[12]);
-  nand g1558 (n_1420, n_1419, n_1378);
-  nand g1559 (n_1421, n_1416, n_1382);
-  nand g1560 (n_2228, n_1420, n_1421);
-  xor g1561 (n_1422, B[25], A[13]);
-  nand g1562 (n_1423, n_1422, n_1378);
-  nand g1563 (n_1424, n_1419, n_1382);
-  nand g1564 (n_2259, n_1423, n_1424);
-  xor g1565 (n_1425, B[25], A[14]);
-  nand g1566 (n_1426, n_1425, n_1378);
-  nand g1567 (n_1427, n_1422, n_1382);
-  nand g1568 (n_2278, n_1426, n_1427);
-  xor g1569 (n_1428, B[25], A[15]);
-  nand g1570 (n_1429, n_1428, n_1378);
-  nand g1571 (n_1430, n_1425, n_1382);
-  nand g1572 (n_2304, n_1429, n_1430);
-  xor g1573 (n_1431, B[25], A[16]);
-  nand g1574 (n_1432, n_1431, n_1378);
-  nand g1575 (n_1433, n_1428, n_1382);
-  nand g1576 (n_2321, n_1432, n_1433);
-  xor g1577 (n_1434, B[25], A[17]);
-  nand g1578 (n_1435, n_1434, n_1378);
-  nand g1579 (n_1436, n_1431, n_1382);
-  nand g1580 (n_2342, n_1435, n_1436);
-  xor g1581 (n_1437, B[25], A[18]);
-  nand g1582 (n_1438, n_1437, n_1378);
-  nand g1583 (n_1439, n_1434, n_1382);
-  nand g1584 (n_2359, n_1438, n_1439);
-  xor g1585 (n_1440, B[25], A[19]);
-  nand g1586 (n_1441, n_1440, n_1378);
-  nand g1587 (n_1442, n_1437, n_1382);
-  nand g1588 (n_2377, n_1441, n_1442);
-  xor g1589 (n_1443, B[25], A[20]);
-  nand g1590 (n_1444, n_1443, n_1378);
-  nand g1591 (n_1445, n_1440, n_1382);
-  nand g1592 (n_2393, n_1444, n_1445);
-  xor g1593 (n_1446, B[25], A[21]);
-  nand g1594 (n_1447, n_1446, n_1378);
-  nand g1595 (n_1448, n_1443, n_1382);
-  nand g1596 (n_2406, n_1447, n_1448);
-  xor g1597 (n_1449, B[25], A[22]);
-  nand g1598 (n_1450, n_1449, n_1378);
-  nand g1599 (n_1451, n_1446, n_1382);
-  nand g1600 (n_2418, n_1450, n_1451);
-  xor g1601 (n_1452, B[25], A[23]);
-  nand g1602 (n_1453, n_1452, n_1378);
-  nand g1603 (n_1454, n_1449, n_1382);
-  nand g1604 (n_2428, n_1453, n_1454);
-  xor g1605 (n_1455, B[25], A[24]);
-  nand g1606 (n_1456, n_1455, n_1378);
-  nand g1607 (n_1457, n_1452, n_1382);
-  nand g1608 (n_2437, n_1456, n_1457);
-  xor g1609 (n_1458, B[25], A[25]);
-  nand g1610 (n_1459, n_1458, n_1378);
-  nand g1611 (n_1460, n_1455, n_1382);
-  nand g1612 (n_2445, n_1459, n_1460);
-  nand g1614 (n_1463, B[25], n_1378);
-  nand g1615 (n_1464, n_1458, n_1382);
-  nand g1616 (n_2451, n_1463, n_1464);
-  nand g1619 (n_1468, B[25], n_1382);
-  nand g1620 (n_1469, n_1463, n_1468);
-  or g1624 (n_1474, n_1472, n_1473);
-  and g1625 (n_1907, B[25], n_1474);
-  nand g1643 (n_1497, A[2], B[25]);
-  nand g1647 (n_1501, A[3], B[25]);
-  nand g1651 (n_1505, A[4], B[25]);
-  nand g1655 (n_1509, A[5], B[25]);
-  nand g1659 (n_1513, A[6], B[25]);
-  nand g1663 (n_1517, A[7], B[25]);
-  nand g1667 (n_1521, A[8], B[25]);
-  nand g1671 (n_1525, A[9], B[25]);
-  nand g1675 (n_1529, A[10], B[25]);
-  nand g1679 (n_1533, A[11], B[25]);
-  nand g1683 (n_1537, A[12], B[25]);
-  nand g1687 (n_1541, A[13], B[25]);
-  nand g1691 (n_1545, A[14], B[25]);
-  nand g1695 (n_1549, A[15], B[25]);
-  nand g1699 (n_1553, A[16], B[25]);
-  nand g1703 (n_1557, A[17], B[25]);
-  nand g1707 (n_1561, A[18], B[25]);
-  nand g1711 (n_1565, A[19], B[25]);
-  nand g1715 (n_1569, A[20], B[25]);
-  nand g1719 (n_1573, A[21], B[25]);
-  nand g1723 (n_1577, A[22], B[25]);
-  nand g1727 (n_1581, A[23], B[25]);
-  nand g1731 (n_1585, A[24], B[25]);
-  xor g2040 (n_202, n_1597, n_1598);
-  and g2041 (n_149, n_1597, n_1598);
-  xor g2042 (n_201, n_1599, n_1600);
-  and g2043 (n_148, n_1599, n_1600);
-  xor g2044 (n_1605, n_1601, n_1602);
-  and g2045 (n_1610, n_1601, n_1602);
-  xor g2046 (n_2457, n_1603, n_1604);
-  xor g2047 (n_200, n_2457, n_1605);
-  nand g2048 (n_2458, n_1603, n_1604);
-  nand g2049 (n_2459, n_1605, n_1604);
-  nand g2050 (n_2460, n_1603, n_1605);
-  nand g2051 (n_147, n_2458, n_2459, n_2460);
-  xor g2052 (n_1609, n_1606, n_1607);
-  and g2053 (n_1617, n_1606, n_1607);
-  xor g2054 (n_2461, n_1608, n_1609);
-  xor g2055 (n_199, n_2461, n_1610);
-  nand g2056 (n_2462, n_1608, n_1609);
-  nand g2057 (n_2463, n_1610, n_1609);
-  nand g2058 (n_2464, n_1608, n_1610);
-  nand g2059 (n_146, n_2462, n_2463, n_2464);
-  xor g2060 (n_1616, n_1611, n_1612);
-  and g2061 (n_1623, n_1611, n_1612);
-  xor g2062 (n_2465, n_1613, n_1614);
-  xor g2063 (n_1618, n_2465, n_1615);
-  nand g2064 (n_2466, n_1613, n_1614);
-  nand g2065 (n_2467, n_1615, n_1614);
-  nand g2066 (n_2468, n_1613, n_1615);
-  nand g2067 (n_1625, n_2466, n_2467, n_2468);
-  xor g2068 (n_2469, n_1616, n_1617);
-  xor g2069 (n_198, n_2469, n_1618);
-  nand g2070 (n_2470, n_1616, n_1617);
-  nand g2071 (n_2471, n_1618, n_1617);
-  nand g2072 (n_2472, n_1616, n_1618);
-  nand g2073 (n_145, n_2470, n_2471, n_2472);
-  xor g2074 (n_1624, n_1619, n_1620);
-  and g2075 (n_1634, n_1619, n_1620);
-  xor g2076 (n_2473, n_1621, n_1622);
-  xor g2077 (n_1626, n_2473, n_1623);
-  nand g2078 (n_2474, n_1621, n_1622);
-  nand g2079 (n_2475, n_1623, n_1622);
-  nand g2080 (n_2476, n_1621, n_1623);
-  nand g2081 (n_1636, n_2474, n_2475, n_2476);
-  xor g2082 (n_2477, n_1624, n_1625);
-  xor g2083 (n_197, n_2477, n_1626);
-  nand g2084 (n_2478, n_1624, n_1625);
-  nand g2085 (n_2479, n_1626, n_1625);
-  nand g2086 (n_2480, n_1624, n_1626);
-  nand g2087 (n_144, n_2478, n_2479, n_2480);
-  xor g2088 (n_1633, n_1627, n_1628);
-  and g2089 (n_1644, n_1627, n_1628);
-  xor g2090 (n_2481, n_1629, n_1630);
-  xor g2091 (n_1635, n_2481, n_1631);
-  nand g2092 (n_2482, n_1629, n_1630);
-  nand g2093 (n_2483, n_1631, n_1630);
-  nand g2094 (n_2484, n_1629, n_1631);
-  nand g2095 (n_1645, n_2482, n_2483, n_2484);
-  xor g2096 (n_2485, n_1632, n_1633);
-  xor g2097 (n_1637, n_2485, n_1634);
-  nand g2098 (n_2486, n_1632, n_1633);
-  nand g2099 (n_2487, n_1634, n_1633);
-  nand g2100 (n_2488, n_1632, n_1634);
-  nand g2101 (n_1647, n_2486, n_2487, n_2488);
-  xor g2102 (n_2489, n_1635, n_1636);
-  xor g2103 (n_196, n_2489, n_1637);
-  nand g2104 (n_2490, n_1635, n_1636);
-  nand g2105 (n_2491, n_1637, n_1636);
-  nand g2106 (n_2492, n_1635, n_1637);
-  nand g2107 (n_143, n_2490, n_2491, n_2492);
-  xor g2108 (n_1643, n_1638, n_1639);
-  and g2109 (n_1657, n_1638, n_1639);
-  xor g2110 (n_2493, n_1640, n_1641);
-  xor g2111 (n_1646, n_2493, n_1642);
-  nand g2112 (n_2494, n_1640, n_1641);
-  nand g2113 (n_2495, n_1642, n_1641);
-  nand g2114 (n_2496, n_1640, n_1642);
-  nand g2115 (n_1658, n_2494, n_2495, n_2496);
-  xor g2116 (n_2497, n_1643, n_1644);
-  xor g2117 (n_1648, n_2497, n_1645);
-  nand g2118 (n_2498, n_1643, n_1644);
-  nand g2119 (n_2499, n_1645, n_1644);
-  nand g2120 (n_2500, n_1643, n_1645);
-  nand g2121 (n_1661, n_2498, n_2499, n_2500);
-  xor g2122 (n_2501, n_1646, n_1647);
-  xor g2123 (n_195, n_2501, n_1648);
-  nand g2124 (n_2502, n_1646, n_1647);
-  nand g2125 (n_2503, n_1648, n_1647);
-  nand g2126 (n_2504, n_1646, n_1648);
-  nand g2127 (n_142, n_2502, n_2503, n_2504);
-  xor g2128 (n_1656, n_1649, n_1650);
-  and g2129 (n_1670, n_1649, n_1650);
-  xor g2130 (n_2505, n_1651, n_1652);
-  xor g2131 (n_1659, n_2505, n_1653);
-  nand g2132 (n_2506, n_1651, n_1652);
-  nand g2133 (n_2507, n_1653, n_1652);
-  nand g2134 (n_2508, n_1651, n_1653);
-  nand g2135 (n_1671, n_2506, n_2507, n_2508);
-  xor g2136 (n_2509, n_1654, n_1655);
-  xor g2137 (n_1660, n_2509, n_1656);
-  nand g2138 (n_2510, n_1654, n_1655);
-  nand g2139 (n_2511, n_1656, n_1655);
-  nand g2140 (n_2512, n_1654, n_1656);
-  nand g2141 (n_1673, n_2510, n_2511, n_2512);
-  xor g2142 (n_2513, n_1657, n_1658);
-  xor g2143 (n_1662, n_2513, n_1659);
-  nand g2144 (n_2514, n_1657, n_1658);
-  nand g2145 (n_2515, n_1659, n_1658);
-  nand g2146 (n_2516, n_1657, n_1659);
-  nand g2147 (n_1675, n_2514, n_2515, n_2516);
-  xor g2148 (n_2517, n_1660, n_1661);
-  xor g2149 (n_194, n_2517, n_1662);
-  nand g2150 (n_2518, n_1660, n_1661);
-  nand g2151 (n_2519, n_1662, n_1661);
-  nand g2152 (n_2520, n_1660, n_1662);
-  nand g2153 (n_141, n_2518, n_2519, n_2520);
-  xor g2154 (n_1669, n_1663, n_1664);
-  and g2155 (n_1685, n_1663, n_1664);
-  xor g2156 (n_2521, n_1665, n_1666);
-  xor g2157 (n_1672, n_2521, n_1667);
-  nand g2158 (n_2522, n_1665, n_1666);
-  nand g2159 (n_2523, n_1667, n_1666);
-  nand g2160 (n_2524, n_1665, n_1667);
-  nand g2161 (n_1687, n_2522, n_2523, n_2524);
-  xor g2162 (n_2525, n_1668, n_1669);
-  xor g2163 (n_1674, n_2525, n_1670);
-  nand g2164 (n_2526, n_1668, n_1669);
-  nand g2165 (n_2527, n_1670, n_1669);
-  nand g2166 (n_2528, n_1668, n_1670);
-  nand g2167 (n_1690, n_2526, n_2527, n_2528);
-  xor g2168 (n_2529, n_1671, n_1672);
-  xor g2169 (n_1676, n_2529, n_1673);
-  nand g2170 (n_2530, n_1671, n_1672);
-  nand g2171 (n_2531, n_1673, n_1672);
-  nand g2172 (n_2532, n_1671, n_1673);
-  nand g2173 (n_1693, n_2530, n_2531, n_2532);
-  xor g2174 (n_2533, n_1674, n_1675);
-  xor g2175 (n_193, n_2533, n_1676);
-  nand g2176 (n_2534, n_1674, n_1675);
-  nand g2177 (n_2535, n_1676, n_1675);
-  nand g2178 (n_2536, n_1674, n_1676);
-  nand g2179 (n_140, n_2534, n_2535, n_2536);
-  xor g2180 (n_1686, n_1677, n_1678);
-  and g2181 (n_1702, n_1677, n_1678);
-  xor g2182 (n_2537, n_1679, n_1680);
-  xor g2183 (n_1689, n_2537, n_1681);
-  nand g2184 (n_2538, n_1679, n_1680);
-  nand g2185 (n_2539, n_1681, n_1680);
-  nand g2186 (n_2540, n_1679, n_1681);
-  nand g2187 (n_1703, n_2538, n_2539, n_2540);
-  xor g2188 (n_2541, n_1682, n_1683);
-  xor g2189 (n_1688, n_2541, n_1684);
-  nand g2190 (n_2542, n_1682, n_1683);
-  nand g2191 (n_2543, n_1684, n_1683);
-  nand g2192 (n_2544, n_1682, n_1684);
-  nand g2193 (n_1704, n_2542, n_2543, n_2544);
-  xor g2194 (n_2545, n_1685, n_1686);
-  xor g2195 (n_1691, n_2545, n_1687);
-  nand g2196 (n_2546, n_1685, n_1686);
-  nand g2197 (n_2547, n_1687, n_1686);
-  nand g2198 (n_2548, n_1685, n_1687);
-  nand g2199 (n_1707, n_2546, n_2547, n_2548);
-  xor g2200 (n_2549, n_1688, n_1689);
-  xor g2201 (n_1692, n_2549, n_1690);
-  nand g2202 (n_2550, n_1688, n_1689);
-  nand g2203 (n_2551, n_1690, n_1689);
-  nand g2204 (n_2552, n_1688, n_1690);
-  nand g2205 (n_1709, n_2550, n_2551, n_2552);
-  xor g2206 (n_2553, n_1691, n_1692);
-  xor g2207 (n_192, n_2553, n_1693);
-  nand g2208 (n_2554, n_1691, n_1692);
-  nand g2209 (n_2555, n_1693, n_1692);
-  nand g2210 (n_2556, n_1691, n_1693);
-  nand g2211 (n_139, n_2554, n_2555, n_2556);
-  xor g2212 (n_1701, n_1694, n_1695);
-  and g2213 (n_1721, n_1694, n_1695);
-  xor g2214 (n_2557, n_1696, n_1697);
-  xor g2215 (n_1705, n_2557, n_1698);
-  nand g2216 (n_2558, n_1696, n_1697);
-  nand g2217 (n_2559, n_1698, n_1697);
-  nand g2218 (n_2560, n_1696, n_1698);
-  nand g2219 (n_1722, n_2558, n_2559, n_2560);
-  xor g2220 (n_2561, n_1699, n_1700);
-  xor g2221 (n_1706, n_2561, n_1701);
-  nand g2222 (n_2562, n_1699, n_1700);
-  nand g2223 (n_2563, n_1701, n_1700);
-  nand g2224 (n_2564, n_1699, n_1701);
-  nand g2225 (n_1725, n_2562, n_2563, n_2564);
-  xor g2226 (n_2565, n_1702, n_1703);
-  xor g2227 (n_1708, n_2565, n_1704);
-  nand g2228 (n_2566, n_1702, n_1703);
-  nand g2229 (n_2567, n_1704, n_1703);
-  nand g2230 (n_2568, n_1702, n_1704);
-  nand g2231 (n_1727, n_2566, n_2567, n_2568);
-  xor g2232 (n_2569, n_1705, n_1706);
-  xor g2233 (n_1710, n_2569, n_1707);
-  nand g2234 (n_2570, n_1705, n_1706);
-  nand g2235 (n_2571, n_1707, n_1706);
-  nand g2236 (n_2572, n_1705, n_1707);
-  nand g2237 (n_1729, n_2570, n_2571, n_2572);
-  xor g2238 (n_2573, n_1708, n_1709);
-  xor g2239 (n_191, n_2573, n_1710);
-  nand g2240 (n_2574, n_1708, n_1709);
-  nand g2241 (n_2575, n_1710, n_1709);
-  nand g2242 (n_2576, n_1708, n_1710);
-  nand g2243 (n_138, n_2574, n_2575, n_2576);
-  xor g2244 (n_1720, n_1711, n_1712);
-  and g2245 (n_1739, n_1711, n_1712);
-  xor g2246 (n_2577, n_1713, n_1714);
-  xor g2247 (n_1724, n_2577, n_1715);
-  nand g2248 (n_2578, n_1713, n_1714);
-  nand g2249 (n_2579, n_1715, n_1714);
-  nand g2250 (n_2580, n_1713, n_1715);
-  nand g2251 (n_1741, n_2578, n_2579, n_2580);
-  xor g2252 (n_2581, n_1716, n_1717);
-  xor g2253 (n_1723, n_2581, n_1718);
-  nand g2254 (n_2582, n_1716, n_1717);
-  nand g2255 (n_2583, n_1718, n_1717);
-  nand g2256 (n_2584, n_1716, n_1718);
-  nand g2257 (n_1742, n_2582, n_2583, n_2584);
-  xor g2258 (n_2585, n_1719, n_1720);
-  xor g2259 (n_1726, n_2585, n_1721);
-  nand g2260 (n_2586, n_1719, n_1720);
-  nand g2261 (n_2587, n_1721, n_1720);
-  nand g2262 (n_2588, n_1719, n_1721);
-  nand g2263 (n_1745, n_2586, n_2587, n_2588);
-  xor g2264 (n_2589, n_1722, n_1723);
-  xor g2265 (n_1728, n_2589, n_1724);
-  nand g2266 (n_2590, n_1722, n_1723);
-  nand g2267 (n_2591, n_1724, n_1723);
-  nand g2268 (n_2592, n_1722, n_1724);
-  nand g2269 (n_1747, n_2590, n_2591, n_2592);
-  xor g2270 (n_2593, n_1725, n_1726);
-  xor g2271 (n_1730, n_2593, n_1727);
-  nand g2272 (n_2594, n_1725, n_1726);
-  nand g2273 (n_2595, n_1727, n_1726);
-  nand g2274 (n_2596, n_1725, n_1727);
-  nand g2275 (n_1749, n_2594, n_2595, n_2596);
-  xor g2276 (n_2597, n_1728, n_1729);
-  xor g2277 (n_190, n_2597, n_1730);
-  nand g2278 (n_2598, n_1728, n_1729);
-  nand g2279 (n_2599, n_1730, n_1729);
-  nand g2280 (n_2600, n_1728, n_1730);
-  nand g2281 (n_137, n_2598, n_2599, n_2600);
-  xor g2282 (n_1740, n_1731, n_1732);
-  and g2283 (n_1762, n_1731, n_1732);
-  xor g2284 (n_2601, n_1733, n_1734);
-  xor g2285 (n_1744, n_2601, n_1735);
-  nand g2286 (n_2602, n_1733, n_1734);
-  nand g2287 (n_2603, n_1735, n_1734);
-  nand g2288 (n_2604, n_1733, n_1735);
-  nand g2289 (n_1763, n_2602, n_2603, n_2604);
-  xor g2290 (n_2605, n_1736, n_1737);
-  xor g2291 (n_1743, n_2605, n_1738);
-  nand g2292 (n_2606, n_1736, n_1737);
-  nand g2293 (n_2607, n_1738, n_1737);
-  nand g2294 (n_2608, n_1736, n_1738);
-  nand g2295 (n_1764, n_2606, n_2607, n_2608);
-  xor g2296 (n_2609, n_1739, n_1740);
-  xor g2297 (n_1746, n_2609, n_1741);
-  nand g2298 (n_2610, n_1739, n_1740);
-  nand g2299 (n_2611, n_1741, n_1740);
-  nand g2300 (n_2612, n_1739, n_1741);
-  nand g2301 (n_1768, n_2610, n_2611, n_2612);
-  xor g2302 (n_2613, n_1742, n_1743);
-  xor g2303 (n_1748, n_2613, n_1744);
-  nand g2304 (n_2614, n_1742, n_1743);
-  nand g2305 (n_2615, n_1744, n_1743);
-  nand g2306 (n_2616, n_1742, n_1744);
-  nand g2307 (n_1770, n_2614, n_2615, n_2616);
-  xor g2308 (n_2617, n_1745, n_1746);
-  xor g2309 (n_1750, n_2617, n_1747);
-  nand g2310 (n_2618, n_1745, n_1746);
-  nand g2311 (n_2619, n_1747, n_1746);
-  nand g2312 (n_2620, n_1745, n_1747);
-  nand g2313 (n_1772, n_2618, n_2619, n_2620);
-  xor g2314 (n_2621, n_1748, n_1749);
-  xor g2315 (n_189, n_2621, n_1750);
-  nand g2316 (n_2622, n_1748, n_1749);
-  nand g2317 (n_2623, n_1750, n_1749);
-  nand g2318 (n_2624, n_1748, n_1750);
-  nand g2319 (n_136, n_2622, n_2623, n_2624);
-  xor g2320 (n_1761, n_1751, n_1752);
-  and g2321 (n_1784, n_1751, n_1752);
-  xor g2322 (n_2625, n_1753, n_1754);
-  xor g2323 (n_1765, n_2625, n_1755);
-  nand g2324 (n_2626, n_1753, n_1754);
-  nand g2325 (n_2627, n_1755, n_1754);
-  nand g2326 (n_2628, n_1753, n_1755);
-  nand g2327 (n_1785, n_2626, n_2627, n_2628);
-  xor g2328 (n_2629, n_1756, n_1757);
-  xor g2329 (n_1766, n_2629, n_1758);
-  nand g2330 (n_2630, n_1756, n_1757);
-  nand g2331 (n_2631, n_1758, n_1757);
-  nand g2332 (n_2632, n_1756, n_1758);
-  nand g2333 (n_1786, n_2630, n_2631, n_2632);
-  xor g2334 (n_2633, n_1759, n_1760);
-  xor g2335 (n_1767, n_2633, n_1761);
-  nand g2336 (n_2634, n_1759, n_1760);
-  nand g2337 (n_2635, n_1761, n_1760);
-  nand g2338 (n_2636, n_1759, n_1761);
-  nand g2339 (n_1789, n_2634, n_2635, n_2636);
-  xor g2340 (n_2637, n_1762, n_1763);
-  xor g2341 (n_1769, n_2637, n_1764);
-  nand g2342 (n_2638, n_1762, n_1763);
-  nand g2343 (n_2639, n_1764, n_1763);
-  nand g2344 (n_2640, n_1762, n_1764);
-  nand g2345 (n_1790, n_2638, n_2639, n_2640);
-  xor g2346 (n_2641, n_1765, n_1766);
-  xor g2347 (n_1771, n_2641, n_1767);
-  nand g2348 (n_2642, n_1765, n_1766);
-  nand g2349 (n_2643, n_1767, n_1766);
-  nand g2350 (n_2644, n_1765, n_1767);
-  nand g2351 (n_1793, n_2642, n_2643, n_2644);
-  xor g2352 (n_2645, n_1768, n_1769);
-  xor g2353 (n_1773, n_2645, n_1770);
-  nand g2354 (n_2646, n_1768, n_1769);
-  nand g2355 (n_2647, n_1770, n_1769);
-  nand g2356 (n_2648, n_1768, n_1770);
-  nand g2357 (n_1795, n_2646, n_2647, n_2648);
-  xor g2358 (n_2649, n_1771, n_1772);
-  xor g2359 (n_188, n_2649, n_1773);
-  nand g2360 (n_2650, n_1771, n_1772);
-  nand g2361 (n_2651, n_1773, n_1772);
-  nand g2362 (n_2652, n_1771, n_1773);
-  nand g2363 (n_135, n_2650, n_2651, n_2652);
-  xor g2364 (n_1783, n_1774, n_1775);
-  and g2365 (n_1809, n_1774, n_1775);
-  xor g2366 (n_2653, n_1776, n_1777);
-  xor g2367 (n_1788, n_2653, n_1778);
-  nand g2368 (n_2654, n_1776, n_1777);
-  nand g2369 (n_2655, n_1778, n_1777);
-  nand g2370 (n_2656, n_1776, n_1778);
-  nand g2371 (n_1811, n_2654, n_2655, n_2656);
-  xor g2372 (n_2657, n_1779, n_1780);
-  xor g2373 (n_1787, n_2657, n_1781);
-  nand g2374 (n_2658, n_1779, n_1780);
-  nand g2375 (n_2659, n_1781, n_1780);
-  nand g2376 (n_2660, n_1779, n_1781);
-  nand g2377 (n_1810, n_2658, n_2659, n_2660);
-  xor g2378 (n_2661, n_1782, n_1783);
-  xor g2379 (n_1791, n_2661, n_1784);
-  nand g2380 (n_2662, n_1782, n_1783);
-  nand g2381 (n_2663, n_1784, n_1783);
-  nand g2382 (n_2664, n_1782, n_1784);
-  nand g2383 (n_1815, n_2662, n_2663, n_2664);
-  xor g2384 (n_2665, n_1785, n_1786);
-  xor g2385 (n_1792, n_2665, n_1787);
-  nand g2386 (n_2666, n_1785, n_1786);
-  nand g2387 (n_2667, n_1787, n_1786);
-  nand g2388 (n_2668, n_1785, n_1787);
-  nand g2389 (n_1817, n_2666, n_2667, n_2668);
-  xor g2390 (n_2669, n_1788, n_1789);
-  xor g2391 (n_1794, n_2669, n_1790);
-  nand g2392 (n_2670, n_1788, n_1789);
-  nand g2393 (n_2671, n_1790, n_1789);
-  nand g2394 (n_2672, n_1788, n_1790);
-  nand g2395 (n_1820, n_2670, n_2671, n_2672);
-  xor g2396 (n_2673, n_1791, n_1792);
-  xor g2397 (n_1796, n_2673, n_1793);
-  nand g2398 (n_2674, n_1791, n_1792);
-  nand g2399 (n_2675, n_1793, n_1792);
-  nand g2400 (n_2676, n_1791, n_1793);
-  nand g2401 (n_1821, n_2674, n_2675, n_2676);
-  xor g2402 (n_2677, n_1794, n_1795);
-  xor g2403 (n_187, n_2677, n_1796);
-  nand g2404 (n_2678, n_1794, n_1795);
-  nand g2405 (n_2679, n_1796, n_1795);
-  nand g2406 (n_2680, n_1794, n_1796);
-  nand g2407 (n_134, n_2678, n_2679, n_2680);
-  xor g2408 (n_1808, n_1797, n_1798);
-  and g2409 (n_1834, n_1797, n_1798);
-  xor g2410 (n_2681, n_1799, n_1800);
-  xor g2411 (n_1813, n_2681, n_1801);
-  nand g2412 (n_2682, n_1799, n_1800);
-  nand g2413 (n_2683, n_1801, n_1800);
-  nand g2414 (n_2684, n_1799, n_1801);
-  nand g2415 (n_1837, n_2682, n_2683, n_2684);
-  xor g2416 (n_2685, n_1802, n_1803);
-  xor g2417 (n_1814, n_2685, n_1804);
-  nand g2418 (n_2686, n_1802, n_1803);
-  nand g2419 (n_2687, n_1804, n_1803);
-  nand g2420 (n_2688, n_1802, n_1804);
-  nand g2421 (n_1835, n_2686, n_2687, n_2688);
-  xor g2422 (n_2689, n_1805, n_1806);
-  xor g2423 (n_1812, n_2689, n_1807);
-  nand g2424 (n_2690, n_1805, n_1806);
-  nand g2425 (n_2691, n_1807, n_1806);
-  nand g2426 (n_2692, n_1805, n_1807);
-  nand g2427 (n_1836, n_2690, n_2691, n_2692);
-  xor g2428 (n_2693, n_1808, n_1809);
-  xor g2429 (n_1816, n_2693, n_1810);
-  nand g2430 (n_2694, n_1808, n_1809);
-  nand g2431 (n_2695, n_1810, n_1809);
-  nand g2432 (n_2696, n_1808, n_1810);
-  nand g2433 (n_1841, n_2694, n_2695, n_2696);
-  xor g2434 (n_2697, n_1811, n_1812);
-  xor g2435 (n_1818, n_2697, n_1813);
-  nand g2436 (n_2698, n_1811, n_1812);
-  nand g2437 (n_2699, n_1813, n_1812);
-  nand g2438 (n_2700, n_1811, n_1813);
-  nand g2439 (n_1842, n_2698, n_2699, n_2700);
-  xor g2440 (n_2701, n_1814, n_1815);
-  xor g2441 (n_1819, n_2701, n_1816);
-  nand g2442 (n_2702, n_1814, n_1815);
-  nand g2443 (n_2703, n_1816, n_1815);
-  nand g2444 (n_2704, n_1814, n_1816);
-  nand g2445 (n_1845, n_2702, n_2703, n_2704);
-  xor g2446 (n_2705, n_1817, n_1818);
-  xor g2447 (n_1822, n_2705, n_1819);
-  nand g2448 (n_2706, n_1817, n_1818);
-  nand g2449 (n_2707, n_1819, n_1818);
-  nand g2450 (n_2708, n_1817, n_1819);
-  nand g2451 (n_1848, n_2706, n_2707, n_2708);
-  xor g2452 (n_2709, n_1820, n_1821);
-  xor g2453 (n_186, n_2709, n_1822);
-  nand g2454 (n_2710, n_1820, n_1821);
-  nand g2455 (n_2711, n_1822, n_1821);
-  nand g2456 (n_2712, n_1820, n_1822);
-  nand g2457 (n_133, n_2710, n_2711, n_2712);
-  xor g2458 (n_1833, n_1823, n_1824);
-  and g2459 (n_1862, n_1823, n_1824);
-  xor g2460 (n_2713, n_1825, n_1826);
-  xor g2461 (n_1838, n_2713, n_1827);
-  nand g2462 (n_2714, n_1825, n_1826);
-  nand g2463 (n_2715, n_1827, n_1826);
-  nand g2464 (n_2716, n_1825, n_1827);
-  nand g2465 (n_1864, n_2714, n_2715, n_2716);
-  xor g2466 (n_2717, n_1828, n_1829);
-  xor g2467 (n_1839, n_2717, n_1830);
-  nand g2468 (n_2718, n_1828, n_1829);
-  nand g2469 (n_2719, n_1830, n_1829);
-  nand g2470 (n_2720, n_1828, n_1830);
-  nand g2471 (n_1863, n_2718, n_2719, n_2720);
-  xor g2472 (n_2721, n_1831, n_1832);
-  xor g2473 (n_1840, n_2721, n_1833);
-  nand g2474 (n_2722, n_1831, n_1832);
-  nand g2475 (n_2723, n_1833, n_1832);
-  nand g2476 (n_2724, n_1831, n_1833);
-  nand g2477 (n_1868, n_2722, n_2723, n_2724);
-  xor g2478 (n_2725, n_1834, n_1835);
-  xor g2479 (n_1843, n_2725, n_1836);
-  nand g2480 (n_2726, n_1834, n_1835);
-  nand g2481 (n_2727, n_1836, n_1835);
-  nand g2482 (n_2728, n_1834, n_1836);
-  nand g2483 (n_1870, n_2726, n_2727, n_2728);
-  xor g2484 (n_2729, n_1837, n_1838);
-  xor g2485 (n_1844, n_2729, n_1839);
-  nand g2486 (n_2730, n_1837, n_1838);
-  nand g2487 (n_2731, n_1839, n_1838);
-  nand g2488 (n_2732, n_1837, n_1839);
-  nand g2489 (n_1872, n_2730, n_2731, n_2732);
-  xor g2490 (n_2733, n_1840, n_1841);
-  xor g2491 (n_1846, n_2733, n_1842);
-  nand g2492 (n_2734, n_1840, n_1841);
-  nand g2493 (n_2735, n_1842, n_1841);
-  nand g2494 (n_2736, n_1840, n_1842);
-  nand g2495 (n_1875, n_2734, n_2735, n_2736);
-  xor g2496 (n_2737, n_1843, n_1844);
-  xor g2497 (n_1847, n_2737, n_1845);
-  nand g2498 (n_2738, n_1843, n_1844);
-  nand g2499 (n_2739, n_1845, n_1844);
-  nand g2500 (n_2740, n_1843, n_1845);
-  nand g2501 (n_1876, n_2738, n_2739, n_2740);
-  xor g2502 (n_2741, n_1846, n_1847);
-  xor g2503 (n_185, n_2741, n_1848);
-  nand g2504 (n_2742, n_1846, n_1847);
-  nand g2505 (n_2743, n_1848, n_1847);
-  nand g2506 (n_2744, n_1846, n_1848);
-  nand g2507 (n_132, n_2742, n_2743, n_2744);
-  xor g2508 (n_1861, n_1849, n_1850);
-  and g2509 (n_1890, n_1849, n_1850);
-  xor g2510 (n_2745, n_1851, n_1852);
-  xor g2511 (n_1866, n_2745, n_1853);
-  nand g2512 (n_2746, n_1851, n_1852);
-  nand g2513 (n_2747, n_1853, n_1852);
-  nand g2514 (n_2748, n_1851, n_1853);
-  nand g2515 (n_1892, n_2746, n_2747, n_2748);
-  xor g2516 (n_2749, n_1854, n_1855);
-  xor g2517 (n_1867, n_2749, n_1856);
-  nand g2518 (n_2750, n_1854, n_1855);
-  nand g2519 (n_2751, n_1856, n_1855);
-  nand g2520 (n_2752, n_1854, n_1856);
-  nand g2521 (n_1893, n_2750, n_2751, n_2752);
-  xor g2522 (n_2753, n_1857, n_1858);
-  xor g2523 (n_1865, n_2753, n_1859);
-  nand g2524 (n_2754, n_1857, n_1858);
-  nand g2525 (n_2755, n_1859, n_1858);
-  nand g2526 (n_2756, n_1857, n_1859);
-  nand g2527 (n_1891, n_2754, n_2755, n_2756);
-  xor g2528 (n_2757, n_1860, n_1861);
-  xor g2529 (n_1869, n_2757, n_1862);
-  nand g2530 (n_2758, n_1860, n_1861);
-  nand g2531 (n_2759, n_1862, n_1861);
-  nand g2532 (n_2760, n_1860, n_1862);
-  nand g2533 (n_1897, n_2758, n_2759, n_2760);
-  xor g2534 (n_2761, n_1863, n_1864);
-  xor g2535 (n_1871, n_2761, n_1865);
-  nand g2536 (n_2762, n_1863, n_1864);
-  nand g2537 (n_2763, n_1865, n_1864);
-  nand g2538 (n_2764, n_1863, n_1865);
-  nand g2539 (n_1899, n_2762, n_2763, n_2764);
-  xor g2540 (n_2765, n_1866, n_1867);
-  xor g2541 (n_1873, n_2765, n_1868);
-  nand g2542 (n_2766, n_1866, n_1867);
-  nand g2543 (n_2767, n_1868, n_1867);
-  nand g2544 (n_2768, n_1866, n_1868);
-  nand g2545 (n_1902, n_2766, n_2767, n_2768);
-  xor g2546 (n_2769, n_1869, n_1870);
-  xor g2547 (n_1874, n_2769, n_1871);
-  nand g2548 (n_2770, n_1869, n_1870);
-  nand g2549 (n_2771, n_1871, n_1870);
-  nand g2550 (n_2772, n_1869, n_1871);
-  nand g2551 (n_1903, n_2770, n_2771, n_2772);
-  xor g2552 (n_2773, n_1872, n_1873);
-  xor g2553 (n_1877, n_2773, n_1874);
-  nand g2554 (n_2774, n_1872, n_1873);
-  nand g2555 (n_2775, n_1874, n_1873);
-  nand g2556 (n_2776, n_1872, n_1874);
-  nand g2557 (n_1906, n_2774, n_2775, n_2776);
-  xor g2558 (n_2777, n_1875, n_1876);
-  xor g2559 (n_184, n_2777, n_1877);
-  nand g2560 (n_2778, n_1875, n_1876);
-  nand g2561 (n_2779, n_1877, n_1876);
-  nand g2562 (n_2780, n_1875, n_1877);
-  nand g2563 (n_131, n_2778, n_2779, n_2780);
-  xor g2564 (n_1889, n_1878, n_1879);
-  and g2565 (n_1921, n_1878, n_1879);
-  xor g2566 (n_2781, n_1880, n_1881);
-  xor g2567 (n_1894, n_2781, n_1882);
-  nand g2568 (n_2782, n_1880, n_1881);
-  nand g2569 (n_2783, n_1882, n_1881);
-  nand g2570 (n_2784, n_1880, n_1882);
-  nand g2571 (n_1924, n_2782, n_2783, n_2784);
-  xor g2572 (n_2785, n_1883, n_1884);
-  xor g2573 (n_1895, n_2785, n_1885);
-  nand g2574 (n_2786, n_1883, n_1884);
-  nand g2575 (n_2787, n_1885, n_1884);
-  nand g2576 (n_2788, n_1883, n_1885);
-  nand g2577 (n_1922, n_2786, n_2787, n_2788);
-  xor g2578 (n_2789, n_1886, n_1887);
-  xor g2579 (n_1896, n_2789, n_1888);
-  nand g2580 (n_2790, n_1886, n_1887);
-  nand g2581 (n_2791, n_1888, n_1887);
-  nand g2582 (n_2792, n_1886, n_1888);
-  nand g2583 (n_1923, n_2790, n_2791, n_2792);
-  xor g2584 (n_2793, n_1889, n_1890);
-  xor g2585 (n_1898, n_2793, n_1891);
-  nand g2586 (n_2794, n_1889, n_1890);
-  nand g2587 (n_2795, n_1891, n_1890);
-  nand g2588 (n_2796, n_1889, n_1891);
-  nand g2589 (n_1929, n_2794, n_2795, n_2796);
-  xor g2590 (n_2797, n_1892, n_1893);
-  xor g2591 (n_1900, n_2797, n_1894);
-  nand g2592 (n_2798, n_1892, n_1893);
-  nand g2593 (n_2799, n_1894, n_1893);
-  nand g2594 (n_2800, n_1892, n_1894);
-  nand g2595 (n_1931, n_2798, n_2799, n_2800);
-  xor g2596 (n_2801, n_1895, n_1896);
-  xor g2597 (n_1901, n_2801, n_1897);
-  nand g2598 (n_2802, n_1895, n_1896);
-  nand g2599 (n_2803, n_1897, n_1896);
-  nand g2600 (n_2804, n_1895, n_1897);
-  nand g2601 (n_1932, n_2802, n_2803, n_2804);
-  xor g2602 (n_2805, n_1898, n_1899);
-  xor g2603 (n_1904, n_2805, n_1900);
-  nand g2604 (n_2806, n_1898, n_1899);
-  nand g2605 (n_2807, n_1900, n_1899);
-  nand g2606 (n_2808, n_1898, n_1900);
-  nand g2607 (n_1935, n_2806, n_2807, n_2808);
-  xor g2608 (n_2809, n_1901, n_1902);
-  xor g2609 (n_1905, n_2809, n_1903);
-  nand g2610 (n_2810, n_1901, n_1902);
-  nand g2611 (n_2811, n_1903, n_1902);
-  nand g2612 (n_2812, n_1901, n_1903);
-  nand g2613 (n_1938, n_2810, n_2811, n_2812);
-  xor g2614 (n_2813, n_1904, n_1905);
-  xor g2615 (n_183, n_2813, n_1906);
-  nand g2616 (n_2814, n_1904, n_1905);
-  nand g2617 (n_2815, n_1906, n_1905);
-  nand g2618 (n_2816, n_1904, n_1906);
-  nand g2619 (n_130, n_2814, n_2815, n_2816);
-  xor g2620 (n_1920, n_1907, n_1908);
-  and g2621 (n_1952, n_1907, n_1908);
-  xor g2622 (n_2817, n_1909, n_1910);
-  xor g2623 (n_1927, n_2817, n_1911);
-  nand g2624 (n_2818, n_1909, n_1910);
-  nand g2625 (n_2819, n_1911, n_1910);
-  nand g2626 (n_2820, n_1909, n_1911);
-  nand g2627 (n_1954, n_2818, n_2819, n_2820);
-  xor g2628 (n_2821, n_1912, n_1913);
-  xor g2629 (n_1926, n_2821, n_1914);
-  nand g2630 (n_2822, n_1912, n_1913);
-  nand g2631 (n_2823, n_1914, n_1913);
-  nand g2632 (n_2824, n_1912, n_1914);
-  nand g2633 (n_1955, n_2822, n_2823, n_2824);
-  xor g2634 (n_2825, n_1915, n_1916);
-  xor g2635 (n_1925, n_2825, n_1917);
-  nand g2636 (n_2826, n_1915, n_1916);
-  nand g2637 (n_2827, n_1917, n_1916);
-  nand g2638 (n_2828, n_1915, n_1917);
-  nand g2639 (n_1953, n_2826, n_2827, n_2828);
-  xor g2640 (n_2829, n_1918, n_1919);
-  xor g2641 (n_1928, n_2829, n_1920);
-  nand g2642 (n_2830, n_1918, n_1919);
-  nand g2643 (n_2831, n_1920, n_1919);
-  nand g2644 (n_2832, n_1918, n_1920);
-  nand g2645 (n_1959, n_2830, n_2831, n_2832);
-  xor g2646 (n_2833, n_1921, n_1922);
-  xor g2647 (n_1930, n_2833, n_1923);
-  nand g2648 (n_2834, n_1921, n_1922);
-  nand g2649 (n_2835, n_1923, n_1922);
-  nand g2650 (n_2836, n_1921, n_1923);
-  nand g2651 (n_1960, n_2834, n_2835, n_2836);
-  xor g2652 (n_2837, n_1924, n_1925);
-  xor g2653 (n_1933, n_2837, n_1926);
-  nand g2654 (n_2838, n_1924, n_1925);
-  nand g2655 (n_2839, n_1926, n_1925);
-  nand g2656 (n_2840, n_1924, n_1926);
-  nand g2657 (n_1962, n_2838, n_2839, n_2840);
-  xor g2658 (n_2841, n_1927, n_1928);
-  xor g2659 (n_1934, n_2841, n_1929);
-  nand g2660 (n_2842, n_1927, n_1928);
-  nand g2661 (n_2843, n_1929, n_1928);
-  nand g2662 (n_2844, n_1927, n_1929);
-  nand g2663 (n_1965, n_2842, n_2843, n_2844);
-  xor g2664 (n_2845, n_1930, n_1931);
-  xor g2665 (n_1936, n_2845, n_1932);
-  nand g2666 (n_2846, n_1930, n_1931);
-  nand g2667 (n_2847, n_1932, n_1931);
-  nand g2668 (n_2848, n_1930, n_1932);
-  nand g2669 (n_1967, n_2846, n_2847, n_2848);
-  xor g2670 (n_2849, n_1933, n_1934);
-  xor g2671 (n_1937, n_2849, n_1935);
-  nand g2672 (n_2850, n_1933, n_1934);
-  nand g2673 (n_2851, n_1935, n_1934);
-  nand g2674 (n_2852, n_1933, n_1935);
-  nand g2675 (n_1969, n_2850, n_2851, n_2852);
-  xor g2676 (n_2853, n_1936, n_1937);
-  xor g2677 (n_182, n_2853, n_1938);
-  nand g2678 (n_2854, n_1936, n_1937);
-  nand g2679 (n_2855, n_1938, n_1937);
-  nand g2680 (n_2856, n_1936, n_1938);
-  nand g2681 (n_129, n_2854, n_2855, n_2856);
-  xor g2682 (n_1951, n_1939, n_1940);
-  and g2683 (n_1984, n_1939, n_1940);
-  xor g2684 (n_2857, n_1941, n_1942);
-  xor g2685 (n_1958, n_2857, n_1943);
-  nand g2686 (n_2858, n_1941, n_1942);
-  nand g2687 (n_2859, n_1943, n_1942);
-  nand g2688 (n_2860, n_1941, n_1943);
-  nand g2689 (n_1987, n_2858, n_2859, n_2860);
-  xor g2690 (n_2861, n_1944, n_1945);
-  xor g2691 (n_1957, n_2861, n_1946);
-  nand g2692 (n_2862, n_1944, n_1945);
-  nand g2693 (n_2863, n_1946, n_1945);
-  nand g2694 (n_2864, n_1944, n_1946);
-  nand g2695 (n_1985, n_2862, n_2863, n_2864);
-  xor g2696 (n_2865, n_1947, n_1948);
-  xor g2697 (n_1956, n_2865, n_1949);
-  nand g2698 (n_2866, n_1947, n_1948);
-  nand g2699 (n_2867, n_1949, n_1948);
-  nand g2700 (n_2868, n_1947, n_1949);
-  nand g2701 (n_1986, n_2866, n_2867, n_2868);
-  xor g2702 (n_2869, n_1950, n_1951);
-  xor g2703 (n_1961, n_2869, n_1952);
-  nand g2704 (n_2870, n_1950, n_1951);
-  nand g2705 (n_2871, n_1952, n_1951);
-  nand g2706 (n_2872, n_1950, n_1952);
-  nand g2707 (n_1992, n_2870, n_2871, n_2872);
-  xor g2708 (n_2873, n_1953, n_1954);
-  xor g2709 (n_1963, n_2873, n_1955);
-  nand g2710 (n_2874, n_1953, n_1954);
-  nand g2711 (n_2875, n_1955, n_1954);
-  nand g2712 (n_2876, n_1953, n_1955);
-  nand g2713 (n_1993, n_2874, n_2875, n_2876);
-  xor g2714 (n_2877, n_1956, n_1957);
-  xor g2715 (n_1964, n_2877, n_1958);
-  nand g2716 (n_2878, n_1956, n_1957);
-  nand g2717 (n_2879, n_1958, n_1957);
-  nand g2718 (n_2880, n_1956, n_1958);
-  nand g2719 (n_1996, n_2878, n_2879, n_2880);
-  xor g2720 (n_2881, n_1959, n_1960);
-  xor g2721 (n_1966, n_2881, n_1961);
-  nand g2722 (n_2882, n_1959, n_1960);
-  nand g2723 (n_2883, n_1961, n_1960);
-  nand g2724 (n_2884, n_1959, n_1961);
-  nand g2725 (n_1998, n_2882, n_2883, n_2884);
-  xor g2726 (n_2885, n_1962, n_1963);
-  xor g2727 (n_1968, n_2885, n_1964);
-  nand g2728 (n_2886, n_1962, n_1963);
-  nand g2729 (n_2887, n_1964, n_1963);
-  nand g2730 (n_2888, n_1962, n_1964);
-  nand g2731 (n_2000, n_2886, n_2887, n_2888);
-  xor g2732 (n_2889, n_1965, n_1966);
-  xor g2733 (n_1970, n_2889, n_1967);
-  nand g2734 (n_2890, n_1965, n_1966);
-  nand g2735 (n_2891, n_1967, n_1966);
-  nand g2736 (n_2892, n_1965, n_1967);
-  nand g2737 (n_2003, n_2890, n_2891, n_2892);
-  xor g2738 (n_2893, n_1968, n_1969);
-  xor g2739 (n_181, n_2893, n_1970);
-  nand g2740 (n_2894, n_1968, n_1969);
-  nand g2741 (n_2895, n_1970, n_1969);
-  nand g2742 (n_2896, n_1968, n_1970);
-  nand g2743 (n_128, n_2894, n_2895, n_2896);
-  xor g2745 (n_1990, n_2897, n_1973);
-  nand g2747 (n_2899, n_1973, n_1972);
-  nand g2749 (n_2020, n_2898, n_2899, n_2900);
-  xor g2750 (n_2901, n_1974, n_1975);
-  xor g2751 (n_1991, n_2901, n_1976);
-  nand g2752 (n_2902, n_1974, n_1975);
-  nand g2753 (n_2903, n_1976, n_1975);
-  nand g2754 (n_2904, n_1974, n_1976);
-  nand g2755 (n_2019, n_2902, n_2903, n_2904);
-  xor g2756 (n_2905, n_1977, n_1978);
-  xor g2757 (n_1989, n_2905, n_1979);
-  nand g2758 (n_2906, n_1977, n_1978);
-  nand g2759 (n_2907, n_1979, n_1978);
-  nand g2760 (n_2908, n_1977, n_1979);
-  nand g2761 (n_2021, n_2906, n_2907, n_2908);
-  xor g2762 (n_2909, n_1980, n_1981);
-  xor g2763 (n_1988, n_2909, n_1982);
-  nand g2764 (n_2910, n_1980, n_1981);
-  nand g2765 (n_2911, n_1982, n_1981);
-  nand g2766 (n_2912, n_1980, n_1982);
-  nand g2767 (n_2022, n_2910, n_2911, n_2912);
-  xor g2768 (n_2913, n_1983, n_1984);
-  xor g2769 (n_1994, n_2913, n_1985);
-  nand g2770 (n_2914, n_1983, n_1984);
-  nand g2771 (n_2915, n_1985, n_1984);
-  nand g2772 (n_2916, n_1983, n_1985);
-  nand g2773 (n_2027, n_2914, n_2915, n_2916);
-  xor g2774 (n_2917, n_1986, n_1987);
-  xor g2775 (n_1995, n_2917, n_1988);
-  nand g2776 (n_2918, n_1986, n_1987);
-  nand g2777 (n_2919, n_1988, n_1987);
-  nand g2778 (n_2920, n_1986, n_1988);
-  nand g2779 (n_2028, n_2918, n_2919, n_2920);
-  xor g2780 (n_2921, n_1989, n_1990);
-  xor g2781 (n_1997, n_2921, n_1991);
-  nand g2782 (n_2922, n_1989, n_1990);
-  nand g2783 (n_2923, n_1991, n_1990);
-  nand g2784 (n_2924, n_1989, n_1991);
-  nand g2785 (n_2030, n_2922, n_2923, n_2924);
-  xor g2786 (n_2925, n_1992, n_1993);
-  xor g2787 (n_1999, n_2925, n_1994);
-  nand g2788 (n_2926, n_1992, n_1993);
-  nand g2789 (n_2927, n_1994, n_1993);
-  nand g2790 (n_2928, n_1992, n_1994);
-  nand g2791 (n_2033, n_2926, n_2927, n_2928);
-  xor g2792 (n_2929, n_1995, n_1996);
-  xor g2793 (n_2001, n_2929, n_1997);
-  nand g2794 (n_2930, n_1995, n_1996);
-  nand g2795 (n_2931, n_1997, n_1996);
-  nand g2796 (n_2932, n_1995, n_1997);
-  nand g2797 (n_2035, n_2930, n_2931, n_2932);
-  xor g2798 (n_2933, n_1998, n_1999);
-  xor g2799 (n_2002, n_2933, n_2000);
-  nand g2800 (n_2934, n_1998, n_1999);
-  nand g2801 (n_2935, n_2000, n_1999);
-  nand g2802 (n_2936, n_1998, n_2000);
-  nand g2803 (n_2037, n_2934, n_2935, n_2936);
-  xor g2804 (n_2937, n_2001, n_2002);
-  xor g2805 (n_180, n_2937, n_2003);
-  nand g2806 (n_2938, n_2001, n_2002);
-  nand g2807 (n_2939, n_2003, n_2002);
-  nand g2808 (n_2940, n_2001, n_2003);
-  nand g2809 (n_127, n_2938, n_2939, n_2940);
-  xor g2812 (n_2941, n_2006, n_2007);
-  xor g2813 (n_2025, n_2941, n_2008);
-  nand g2814 (n_2942, n_2006, n_2007);
-  nand g2815 (n_2943, n_2008, n_2007);
-  nand g2816 (n_2944, n_2006, n_2008);
-  nand g2817 (n_2055, n_2942, n_2943, n_2944);
-  xor g2818 (n_2945, n_2009, n_2010);
-  xor g2819 (n_2026, n_2945, n_2011);
-  nand g2820 (n_2946, n_2009, n_2010);
-  nand g2821 (n_2947, n_2011, n_2010);
-  nand g2822 (n_2948, n_2009, n_2011);
-  nand g2823 (n_2056, n_2946, n_2947, n_2948);
-  xor g2825 (n_2024, n_2949, n_2014);
-  nand g2827 (n_2951, n_2014, n_2013);
-  nand g2829 (n_2057, n_2950, n_2951, n_2952);
-  xor g2830 (n_2953, n_2015, n_2016);
-  xor g2831 (n_2023, n_2953, n_2017);
-  nand g2832 (n_2954, n_2015, n_2016);
-  nand g2833 (n_2955, n_2017, n_2016);
-  nand g2834 (n_2956, n_2015, n_2017);
-  nand g2835 (n_2054, n_2954, n_2955, n_2956);
-  xor g2836 (n_2957, n_1501, n_2019);
-  xor g2837 (n_2031, n_2957, n_2020);
-  nand g2838 (n_2958, n_1501, n_2019);
-  nand g2839 (n_2959, n_2020, n_2019);
-  nand g2840 (n_2960, n_1501, n_2020);
-  nand g2841 (n_2062, n_2958, n_2959, n_2960);
-  xor g2842 (n_2961, n_2021, n_2022);
-  xor g2843 (n_2029, n_2961, n_2023);
-  nand g2844 (n_2962, n_2021, n_2022);
-  nand g2845 (n_2963, n_2023, n_2022);
-  nand g2846 (n_2964, n_2021, n_2023);
-  nand g2847 (n_2065, n_2962, n_2963, n_2964);
-  xor g2848 (n_2965, n_2024, n_2025);
-  xor g2849 (n_2032, n_2965, n_2026);
-  nand g2850 (n_2966, n_2024, n_2025);
-  nand g2851 (n_2967, n_2026, n_2025);
-  nand g2852 (n_2968, n_2024, n_2026);
-  nand g2853 (n_2063, n_2966, n_2967, n_2968);
-  xor g2854 (n_2969, n_2027, n_2028);
-  xor g2855 (n_2036, n_2969, n_2029);
-  nand g2856 (n_2970, n_2027, n_2028);
-  nand g2857 (n_2971, n_2029, n_2028);
-  nand g2858 (n_2972, n_2027, n_2029);
-  nand g2859 (n_2068, n_2970, n_2971, n_2972);
-  xor g2860 (n_2973, n_2030, n_2031);
-  xor g2861 (n_2034, n_2973, n_2032);
-  nand g2862 (n_2974, n_2030, n_2031);
-  nand g2863 (n_2975, n_2032, n_2031);
-  nand g2864 (n_2976, n_2030, n_2032);
-  nand g2865 (n_2070, n_2974, n_2975, n_2976);
-  xor g2866 (n_2977, n_2033, n_2034);
-  xor g2867 (n_2038, n_2977, n_2035);
-  nand g2868 (n_2978, n_2033, n_2034);
-  nand g2869 (n_2979, n_2035, n_2034);
-  nand g2870 (n_2980, n_2033, n_2035);
-  nand g2871 (n_2072, n_2978, n_2979, n_2980);
-  xor g2872 (n_2981, n_2036, n_2037);
-  xor g2873 (n_179, n_2981, n_2038);
-  nand g2874 (n_2982, n_2036, n_2037);
-  nand g2875 (n_2983, n_2038, n_2037);
-  nand g2876 (n_2984, n_2036, n_2038);
-  nand g2877 (n_126, n_2982, n_2983, n_2984);
-  xor g2880 (n_2985, n_2041, n_2042);
-  xor g2881 (n_2060, n_2985, n_2043);
-  nand g2882 (n_2986, n_2041, n_2042);
-  nand g2883 (n_2987, n_2043, n_2042);
-  nand g2884 (n_2988, n_2041, n_2043);
-  nand g2885 (n_2089, n_2986, n_2987, n_2988);
-  xor g2886 (n_2989, n_2044, n_2045);
-  xor g2887 (n_2061, n_2989, n_2046);
-  nand g2888 (n_2990, n_2044, n_2045);
-  nand g2889 (n_2991, n_2046, n_2045);
-  nand g2890 (n_2992, n_2044, n_2046);
-  nand g2891 (n_2087, n_2990, n_2991, n_2992);
-  xor g2892 (n_2993, n_2047, n_2048);
-  xor g2893 (n_2059, n_2993, n_2049);
-  nand g2894 (n_2994, n_2047, n_2048);
-  nand g2895 (n_2995, n_2049, n_2048);
-  nand g2896 (n_2996, n_2047, n_2049);
-  nand g2897 (n_2088, n_2994, n_2995, n_2996);
-  xor g2898 (n_2997, n_2050, n_2051);
-  xor g2899 (n_2058, n_2997, n_1505);
-  nand g2900 (n_2998, n_2050, n_2051);
-  nand g2901 (n_2999, n_1505, n_2051);
-  nand g2902 (n_3000, n_2050, n_1505);
-  nand g2903 (n_2090, n_2998, n_2999, n_3000);
-  xor g2905 (n_2066, n_3001, n_2055);
-  nand g2907 (n_3003, n_2055, n_2054);
-  nand g2909 (n_2095, n_3002, n_3003, n_3004);
-  xor g2910 (n_3005, n_2056, n_2057);
-  xor g2911 (n_2064, n_3005, n_2058);
-  nand g2912 (n_3006, n_2056, n_2057);
-  nand g2913 (n_3007, n_2058, n_2057);
-  nand g2914 (n_3008, n_2056, n_2058);
-  nand g2915 (n_2097, n_3006, n_3007, n_3008);
-  xor g2916 (n_3009, n_2059, n_2060);
-  xor g2917 (n_2067, n_3009, n_2061);
-  nand g2918 (n_3010, n_2059, n_2060);
-  nand g2919 (n_3011, n_2061, n_2060);
-  nand g2920 (n_3012, n_2059, n_2061);
-  nand g2921 (n_2096, n_3010, n_3011, n_3012);
-  xor g2922 (n_3013, n_2062, n_2063);
-  xor g2923 (n_2071, n_3013, n_2064);
-  nand g2924 (n_3014, n_2062, n_2063);
-  nand g2925 (n_3015, n_2064, n_2063);
-  nand g2926 (n_3016, n_2062, n_2064);
-  nand g2927 (n_2101, n_3014, n_3015, n_3016);
-  xor g2928 (n_3017, n_2065, n_2066);
-  xor g2929 (n_2069, n_3017, n_2067);
-  nand g2930 (n_3018, n_2065, n_2066);
-  nand g2931 (n_3019, n_2067, n_2066);
-  nand g2932 (n_3020, n_2065, n_2067);
-  nand g2933 (n_2103, n_3018, n_3019, n_3020);
-  xor g2934 (n_3021, n_2068, n_2069);
-  xor g2935 (n_2073, n_3021, n_2070);
-  nand g2936 (n_3022, n_2068, n_2069);
-  nand g2937 (n_3023, n_2070, n_2069);
-  nand g2938 (n_3024, n_2068, n_2070);
-  nand g2939 (n_2105, n_3022, n_3023, n_3024);
-  xor g2940 (n_3025, n_2071, n_2072);
-  xor g2941 (n_178, n_3025, n_2073);
-  nand g2942 (n_3026, n_2071, n_2072);
-  nand g2943 (n_3027, n_2073, n_2072);
-  nand g2944 (n_3028, n_2071, n_2073);
-  nand g2945 (n_125, n_3026, n_3027, n_3028);
-  xor g2947 (n_2093, n_3029, n_2076);
-  nand g2949 (n_3031, n_2076, n_2075);
-  nand g2951 (n_2122, n_3030, n_3031, n_3032);
-  xor g2953 (n_2094, n_3033, n_2079);
-  nand g2955 (n_3035, n_2079, n_2078);
-  nand g2957 (n_2120, n_3034, n_3035, n_3036);
-  xor g2958 (n_3037, n_2080, n_2081);
-  xor g2959 (n_2092, n_3037, n_2082);
-  nand g2960 (n_3038, n_2080, n_2081);
-  nand g2961 (n_3039, n_2082, n_2081);
-  nand g2962 (n_3040, n_2080, n_2082);
-  nand g2963 (n_2123, n_3038, n_3039, n_3040);
-  xor g2964 (n_3041, n_2083, n_2084);
-  xor g2965 (n_2091, n_3041, n_2085);
-  nand g2966 (n_3042, n_2083, n_2084);
-  nand g2967 (n_3043, n_2085, n_2084);
-  nand g2968 (n_3044, n_2083, n_2085);
-  nand g2969 (n_2121, n_3042, n_3043, n_3044);
-  xor g2971 (n_2098, n_3045, n_2088);
-  nand g2973 (n_3047, n_2088, n_2087);
-  nand g2975 (n_2127, n_3046, n_3047, n_3048);
-  xor g2976 (n_3049, n_2089, n_2090);
-  xor g2977 (n_2100, n_3049, n_2091);
-  nand g2978 (n_3050, n_2089, n_2090);
-  nand g2979 (n_3051, n_2091, n_2090);
-  nand g2980 (n_3052, n_2089, n_2091);
-  nand g2981 (n_2129, n_3050, n_3051, n_3052);
-  xor g2982 (n_3053, n_2092, n_2093);
-  xor g2983 (n_2099, n_3053, n_2094);
-  nand g2984 (n_3054, n_2092, n_2093);
-  nand g2985 (n_3055, n_2094, n_2093);
-  nand g2986 (n_3056, n_2092, n_2094);
-  nand g2987 (n_2131, n_3054, n_3055, n_3056);
-  xor g2988 (n_3057, n_2095, n_2096);
-  xor g2989 (n_2102, n_3057, n_2097);
-  nand g2990 (n_3058, n_2095, n_2096);
-  nand g2991 (n_3059, n_2097, n_2096);
-  nand g2992 (n_3060, n_2095, n_2097);
-  nand g2993 (n_2133, n_3058, n_3059, n_3060);
-  xor g2994 (n_3061, n_2098, n_2099);
-  xor g2995 (n_2104, n_3061, n_2100);
-  nand g2996 (n_3062, n_2098, n_2099);
-  nand g2997 (n_3063, n_2100, n_2099);
-  nand g2998 (n_3064, n_2098, n_2100);
-  nand g2999 (n_2136, n_3062, n_3063, n_3064);
-  xor g3000 (n_3065, n_2101, n_2102);
-  xor g3001 (n_2106, n_3065, n_2103);
-  nand g3002 (n_3066, n_2101, n_2102);
-  nand g3003 (n_3067, n_2103, n_2102);
-  nand g3004 (n_3068, n_2101, n_2103);
-  nand g3005 (n_2138, n_3066, n_3067, n_3068);
-  xor g3006 (n_3069, n_2104, n_2105);
-  xor g3007 (n_177, n_3069, n_2106);
-  nand g3008 (n_3070, n_2104, n_2105);
-  nand g3009 (n_3071, n_2106, n_2105);
-  nand g3010 (n_3072, n_2104, n_2106);
-  nand g3011 (n_124, n_3070, n_3071, n_3072);
-  xor g3014 (n_3073, n_2109, n_2110);
-  xor g3015 (n_2126, n_3073, n_2111);
-  nand g3016 (n_3074, n_2109, n_2110);
-  nand g3017 (n_3075, n_2111, n_2110);
-  nand g3018 (n_3076, n_2109, n_2111);
-  nand g3019 (n_2153, n_3074, n_3075, n_3076);
-  xor g3020 (n_3077, n_2112, n_2113);
-  xor g3021 (n_2124, n_3077, n_2114);
-  nand g3022 (n_3078, n_2112, n_2113);
-  nand g3023 (n_3079, n_2114, n_2113);
-  nand g3024 (n_3080, n_2112, n_2114);
-  nand g3025 (n_2151, n_3078, n_3079, n_3080);
-  xor g3026 (n_3081, n_2115, n_2116);
-  xor g3027 (n_2125, n_3081, n_2117);
-  nand g3028 (n_3082, n_2115, n_2116);
-  nand g3029 (n_3083, n_2117, n_2116);
-  nand g3030 (n_3084, n_2115, n_2117);
-  nand g3031 (n_2152, n_3082, n_3083, n_3084);
-  xor g3032 (n_3085, n_2118, n_1513);
-  xor g3033 (n_2128, n_3085, n_2120);
-  nand g3034 (n_3086, n_2118, n_1513);
-  nand g3035 (n_3087, n_2120, n_1513);
-  nand g3036 (n_3088, n_2118, n_2120);
-  nand g3037 (n_2159, n_3086, n_3087, n_3088);
-  xor g3038 (n_3089, n_2121, n_2122);
-  xor g3039 (n_2130, n_3089, n_2123);
-  nand g3040 (n_3090, n_2121, n_2122);
-  nand g3041 (n_3091, n_2123, n_2122);
-  nand g3042 (n_3092, n_2121, n_2123);
-  nand g3043 (n_2158, n_3090, n_3091, n_3092);
-  xor g3044 (n_3093, n_2124, n_2125);
-  xor g3045 (n_2132, n_3093, n_2126);
-  nand g3046 (n_3094, n_2124, n_2125);
-  nand g3047 (n_3095, n_2126, n_2125);
-  nand g3048 (n_3096, n_2124, n_2126);
-  nand g3049 (n_2161, n_3094, n_3095, n_3096);
-  xor g3050 (n_3097, n_2127, n_2128);
-  xor g3051 (n_2134, n_3097, n_2129);
-  nand g3052 (n_3098, n_2127, n_2128);
-  nand g3053 (n_3099, n_2129, n_2128);
-  nand g3054 (n_3100, n_2127, n_2129);
-  nand g3055 (n_2164, n_3098, n_3099, n_3100);
-  xor g3056 (n_3101, n_2130, n_2131);
-  xor g3057 (n_2135, n_3101, n_2132);
-  nand g3058 (n_3102, n_2130, n_2131);
-  nand g3059 (n_3103, n_2132, n_2131);
-  nand g3060 (n_3104, n_2130, n_2132);
-  nand g3061 (n_2166, n_3102, n_3103, n_3104);
-  xor g3062 (n_3105, n_2133, n_2134);
-  xor g3063 (n_2137, n_3105, n_2135);
-  nand g3064 (n_3106, n_2133, n_2134);
-  nand g3065 (n_3107, n_2135, n_2134);
-  nand g3066 (n_3108, n_2133, n_2135);
-  nand g3067 (n_2168, n_3106, n_3107, n_3108);
-  xor g3068 (n_3109, n_2136, n_2137);
-  xor g3069 (n_176, n_3109, n_2138);
-  nand g3070 (n_3110, n_2136, n_2137);
-  nand g3071 (n_3111, n_2138, n_2137);
-  nand g3072 (n_3112, n_2136, n_2138);
-  nand g3073 (n_123, n_3110, n_3111, n_3112);
-  xor g3075 (n_2156, n_3113, n_2141);
-  nand g3077 (n_3115, n_2141, n_2140);
-  nand g3079 (n_2181, n_3114, n_3115, n_3116);
-  xor g3081 (n_2154, n_3117, n_2144);
-  nand g3083 (n_3119, n_2144, n_2143);
-  nand g3085 (n_2183, n_3118, n_3119, n_3120);
-  xor g3086 (n_3121, n_2145, n_2146);
-  xor g3087 (n_2155, n_3121, n_2147);
-  nand g3088 (n_3122, n_2145, n_2146);
-  nand g3089 (n_3123, n_2147, n_2146);
-  nand g3090 (n_3124, n_2145, n_2147);
-  nand g3091 (n_2182, n_3122, n_3123, n_3124);
-  xor g3092 (n_3125, n_2148, n_2149);
-  nand g3094 (n_3126, n_2148, n_2149);
-  nand g3097 (n_2187, n_3126, n_3127, n_3128);
-  xor g3098 (n_3129, n_2151, n_2152);
-  xor g3099 (n_2160, n_3129, n_2153);
-  nand g3100 (n_3130, n_2151, n_2152);
-  nand g3101 (n_3131, n_2153, n_2152);
-  nand g3102 (n_3132, n_2151, n_2153);
-  nand g3103 (n_2188, n_3130, n_3131, n_3132);
-  xor g3104 (n_3133, n_2154, n_2155);
-  xor g3105 (n_2162, n_3133, n_2156);
-  nand g3106 (n_3134, n_2154, n_2155);
-  nand g3107 (n_3135, n_2156, n_2155);
-  nand g3108 (n_3136, n_2154, n_2156);
-  nand g3109 (n_2190, n_3134, n_3135, n_3136);
-  xor g3110 (n_3137, n_2157, n_2158);
-  xor g3111 (n_2163, n_3137, n_2159);
-  nand g3112 (n_3138, n_2157, n_2158);
-  nand g3113 (n_3139, n_2159, n_2158);
-  nand g3114 (n_3140, n_2157, n_2159);
-  nand g3115 (n_2193, n_3138, n_3139, n_3140);
-  xor g3116 (n_3141, n_2160, n_2161);
-  xor g3117 (n_2165, n_3141, n_2162);
-  nand g3118 (n_3142, n_2160, n_2161);
-  nand g3119 (n_3143, n_2162, n_2161);
-  nand g3120 (n_3144, n_2160, n_2162);
-  nand g3121 (n_2194, n_3142, n_3143, n_3144);
-  xor g3122 (n_3145, n_2163, n_2164);
-  xor g3123 (n_2167, n_3145, n_2165);
-  nand g3124 (n_3146, n_2163, n_2164);
-  nand g3125 (n_3147, n_2165, n_2164);
-  nand g3126 (n_3148, n_2163, n_2165);
-  nand g3127 (n_2197, n_3146, n_3147, n_3148);
-  xor g3128 (n_3149, n_2166, n_2167);
-  xor g3129 (n_175, n_3149, n_2168);
-  nand g3130 (n_3150, n_2166, n_2167);
-  nand g3131 (n_3151, n_2168, n_2167);
-  nand g3132 (n_3152, n_2166, n_2168);
-  nand g3133 (n_122, n_3150, n_3151, n_3152);
-  xor g3136 (n_3153, n_2171, n_2172);
-  xor g3137 (n_2185, n_3153, n_2173);
-  nand g3138 (n_3154, n_2171, n_2172);
-  nand g3139 (n_3155, n_2173, n_2172);
-  nand g3140 (n_3156, n_2171, n_2173);
-  nand g3141 (n_2209, n_3154, n_3155, n_3156);
-  xor g3142 (n_3157, n_2174, n_2175);
-  xor g3143 (n_2186, n_3157, n_2176);
-  nand g3144 (n_3158, n_2174, n_2175);
-  nand g3145 (n_3159, n_2176, n_2175);
-  nand g3146 (n_3160, n_2174, n_2176);
-  nand g3147 (n_2211, n_3158, n_3159, n_3160);
-  xor g3148 (n_3161, n_2177, n_2178);
-  xor g3149 (n_2184, n_3161, n_2179);
-  nand g3150 (n_3162, n_2177, n_2178);
-  nand g3151 (n_3163, n_2179, n_2178);
-  nand g3152 (n_3164, n_2177, n_2179);
-  nand g3153 (n_2210, n_3162, n_3163, n_3164);
-  xor g3154 (n_3165, n_1521, n_2181);
-  xor g3155 (n_2189, n_3165, n_2182);
-  nand g3156 (n_3166, n_1521, n_2181);
-  nand g3157 (n_3167, n_2182, n_2181);
-  nand g3158 (n_3168, n_1521, n_2182);
-  nand g3159 (n_2216, n_3166, n_3167, n_3168);
-  xor g3160 (n_3169, n_2183, n_2184);
-  xor g3161 (n_2191, n_3169, n_2185);
-  nand g3162 (n_3170, n_2183, n_2184);
-  nand g3163 (n_3171, n_2185, n_2184);
-  nand g3164 (n_3172, n_2183, n_2185);
-  nand g3165 (n_2217, n_3170, n_3171, n_3172);
-  xor g3166 (n_3173, n_2186, n_2187);
-  xor g3167 (n_2192, n_3173, n_2188);
-  nand g3168 (n_3174, n_2186, n_2187);
-  nand g3169 (n_3175, n_2188, n_2187);
-  nand g3170 (n_3176, n_2186, n_2188);
-  nand g3171 (n_2220, n_3174, n_3175, n_3176);
-  xor g3172 (n_3177, n_2189, n_2190);
-  xor g3173 (n_2195, n_3177, n_2191);
-  nand g3174 (n_3178, n_2189, n_2190);
-  nand g3175 (n_3179, n_2191, n_2190);
-  nand g3176 (n_3180, n_2189, n_2191);
-  nand g3177 (n_2221, n_3178, n_3179, n_3180);
-  xor g3178 (n_3181, n_2192, n_2193);
-  xor g3179 (n_2196, n_3181, n_2194);
-  nand g3180 (n_3182, n_2192, n_2193);
-  nand g3181 (n_3183, n_2194, n_2193);
-  nand g3182 (n_3184, n_2192, n_2194);
-  nand g3183 (n_2224, n_3182, n_3183, n_3184);
-  xor g3184 (n_3185, n_2195, n_2196);
-  xor g3185 (n_174, n_3185, n_2197);
-  nand g3186 (n_3186, n_2195, n_2196);
-  nand g3187 (n_3187, n_2197, n_2196);
-  nand g3188 (n_3188, n_2195, n_2197);
-  nand g3189 (n_121, n_3186, n_3187, n_3188);
-  xor g3191 (n_2213, n_3189, n_2200);
-  nand g3193 (n_3191, n_2200, n_2199);
-  nand g3195 (n_2236, n_3190, n_3191, n_3192);
-  xor g3196 (n_3193, n_2201, n_2202);
-  xor g3197 (n_2214, n_3193, n_2203);
-  nand g3198 (n_3194, n_2201, n_2202);
-  nand g3199 (n_3195, n_2203, n_2202);
-  nand g3200 (n_3196, n_2201, n_2203);
-  nand g3201 (n_2238, n_3194, n_3195, n_3196);
-  xor g3202 (n_3197, n_2204, n_2205);
-  xor g3203 (n_2212, n_3197, n_2206);
-  nand g3204 (n_3198, n_2204, n_2205);
-  nand g3205 (n_3199, n_2206, n_2205);
-  nand g3206 (n_3200, n_2204, n_2206);
-  nand g3207 (n_2237, n_3198, n_3199, n_3200);
-  xor g3209 (n_2215, n_3201, n_2209);
-  nand g3213 (n_2242, n_3202, n_3203, n_3204);
-  xor g3214 (n_3205, n_2210, n_2211);
-  xor g3215 (n_2218, n_3205, n_2212);
-  nand g3216 (n_3206, n_2210, n_2211);
-  nand g3217 (n_3207, n_2212, n_2211);
-  nand g3218 (n_3208, n_2210, n_2212);
-  nand g3219 (n_2243, n_3206, n_3207, n_3208);
-  xor g3220 (n_3209, n_2213, n_2214);
-  xor g3221 (n_2219, n_3209, n_2215);
-  nand g3222 (n_3210, n_2213, n_2214);
-  nand g3223 (n_3211, n_2215, n_2214);
-  nand g3224 (n_3212, n_2213, n_2215);
-  nand g3225 (n_2246, n_3210, n_3211, n_3212);
-  xor g3226 (n_3213, n_2216, n_2217);
-  xor g3227 (n_2222, n_3213, n_2218);
-  nand g3228 (n_3214, n_2216, n_2217);
-  nand g3229 (n_3215, n_2218, n_2217);
-  nand g3230 (n_3216, n_2216, n_2218);
-  nand g3231 (n_2247, n_3214, n_3215, n_3216);
-  xor g3232 (n_3217, n_2219, n_2220);
-  xor g3233 (n_2223, n_3217, n_2221);
-  nand g3234 (n_3218, n_2219, n_2220);
-  nand g3235 (n_3219, n_2221, n_2220);
-  nand g3236 (n_3220, n_2219, n_2221);
-  nand g3237 (n_2250, n_3218, n_3219, n_3220);
-  xor g3238 (n_3221, n_2222, n_2223);
-  xor g3239 (n_173, n_3221, n_2224);
-  nand g3240 (n_3222, n_2222, n_2223);
-  nand g3241 (n_3223, n_2224, n_2223);
-  nand g3242 (n_3224, n_2222, n_2224);
-  nand g3243 (n_120, n_3222, n_3223, n_3224);
-  xor g3246 (n_3225, n_2227, n_2228);
-  xor g3247 (n_2239, n_3225, n_2229);
-  nand g3248 (n_3226, n_2227, n_2228);
-  nand g3249 (n_3227, n_2229, n_2228);
-  nand g3250 (n_3228, n_2227, n_2229);
-  nand g3251 (n_2261, n_3226, n_3227, n_3228);
-  xor g3252 (n_3229, n_2230, n_2231);
-  xor g3253 (n_2241, n_3229, n_2232);
-  nand g3254 (n_3230, n_2230, n_2231);
-  nand g3255 (n_3231, n_2232, n_2231);
-  nand g3256 (n_3232, n_2230, n_2232);
-  nand g3257 (n_2262, n_3230, n_3231, n_3232);
-  xor g3258 (n_3233, n_2233, n_2234);
-  xor g3259 (n_2240, n_3233, n_1529);
-  nand g3260 (n_3234, n_2233, n_2234);
-  nand g3261 (n_3235, n_1529, n_2234);
-  nand g3262 (n_3236, n_2233, n_1529);
-  nand g3263 (n_2265, n_3234, n_3235, n_3236);
-  xor g3264 (n_3237, n_2236, n_2237);
-  xor g3265 (n_2244, n_3237, n_2238);
-  nand g3266 (n_3238, n_2236, n_2237);
-  nand g3267 (n_3239, n_2238, n_2237);
-  nand g3268 (n_3240, n_2236, n_2238);
-  nand g3269 (n_2267, n_3238, n_3239, n_3240);
-  xor g3270 (n_3241, n_2239, n_2240);
-  xor g3271 (n_2245, n_3241, n_2241);
-  nand g3272 (n_3242, n_2239, n_2240);
-  nand g3273 (n_3243, n_2241, n_2240);
-  nand g3274 (n_3244, n_2239, n_2241);
-  nand g3275 (n_2269, n_3242, n_3243, n_3244);
-  xor g3276 (n_3245, n_2242, n_2243);
-  xor g3277 (n_2248, n_3245, n_2244);
-  nand g3278 (n_3246, n_2242, n_2243);
-  nand g3279 (n_3247, n_2244, n_2243);
-  nand g3280 (n_3248, n_2242, n_2244);
-  nand g3281 (n_2271, n_3246, n_3247, n_3248);
-  xor g3282 (n_3249, n_2245, n_2246);
-  xor g3283 (n_2249, n_3249, n_2247);
-  nand g3284 (n_3250, n_2245, n_2246);
-  nand g3285 (n_3251, n_2247, n_2246);
-  nand g3286 (n_3252, n_2245, n_2247);
-  nand g3287 (n_2274, n_3250, n_3251, n_3252);
-  xor g3288 (n_3253, n_2248, n_2249);
-  xor g3289 (n_172, n_3253, n_2250);
-  nand g3290 (n_3254, n_2248, n_2249);
-  nand g3291 (n_3255, n_2250, n_2249);
-  nand g3292 (n_3256, n_2248, n_2250);
-  nand g3293 (n_119, n_3254, n_3255, n_3256);
-  xor g3295 (n_2264, n_3257, n_2253);
-  nand g3297 (n_3259, n_2253, n_2252);
-  nand g3299 (n_2286, n_3258, n_3259, n_3260);
-  xor g3300 (n_3261, n_2254, n_2255);
-  nand g3302 (n_3262, n_2254, n_2255);
-  nand g3305 (n_2287, n_3262, n_3263, n_3264);
-  xor g3306 (n_3265, n_2257, n_2258);
-  xor g3307 (n_2263, n_3265, n_2259);
-  nand g3308 (n_3266, n_2257, n_2258);
-  nand g3309 (n_3267, n_2259, n_2258);
-  nand g3310 (n_3268, n_2257, n_2259);
-  nand g3311 (n_2285, n_3266, n_3267, n_3268);
-  xor g3313 (n_2268, n_3269, n_2262);
-  nand g3315 (n_3271, n_2262, n_2261);
-  nand g3317 (n_2290, n_3270, n_3271, n_3272);
-  xor g3318 (n_3273, n_2263, n_2264);
-  xor g3319 (n_2270, n_3273, n_2265);
-  nand g3320 (n_3274, n_2263, n_2264);
-  nand g3321 (n_3275, n_2265, n_2264);
-  nand g3322 (n_3276, n_2263, n_2265);
-  nand g3323 (n_2293, n_3274, n_3275, n_3276);
-  xor g3324 (n_3277, n_2266, n_2267);
-  xor g3325 (n_2272, n_3277, n_2268);
-  nand g3326 (n_3278, n_2266, n_2267);
-  nand g3327 (n_3279, n_2268, n_2267);
-  nand g3328 (n_3280, n_2266, n_2268);
-  nand g3329 (n_2294, n_3278, n_3279, n_3280);
-  xor g3330 (n_3281, n_2269, n_2270);
-  xor g3331 (n_2273, n_3281, n_2271);
-  nand g3332 (n_3282, n_2269, n_2270);
-  nand g3333 (n_3283, n_2271, n_2270);
-  nand g3334 (n_3284, n_2269, n_2271);
-  nand g3335 (n_2297, n_3282, n_3283, n_3284);
-  xor g3336 (n_3285, n_2272, n_2273);
-  xor g3337 (n_171, n_3285, n_2274);
-  nand g3338 (n_3286, n_2272, n_2273);
-  nand g3339 (n_3287, n_2274, n_2273);
-  nand g3340 (n_3288, n_2272, n_2274);
-  nand g3341 (n_118, n_3286, n_3287, n_3288);
-  xor g3344 (n_3289, n_2277, n_2278);
-  xor g3345 (n_2288, n_3289, n_2279);
-  nand g3346 (n_3290, n_2277, n_2278);
-  nand g3347 (n_3291, n_2279, n_2278);
-  nand g3348 (n_3292, n_2277, n_2279);
-  nand g3349 (n_2308, n_3290, n_3291, n_3292);
-  xor g3350 (n_3293, n_2280, n_2281);
-  xor g3351 (n_2289, n_3293, n_2282);
-  nand g3352 (n_3294, n_2280, n_2281);
-  nand g3353 (n_3295, n_2282, n_2281);
-  nand g3354 (n_3296, n_2280, n_2282);
-  nand g3355 (n_2307, n_3294, n_3295, n_3296);
-  xor g3356 (n_3297, n_2283, n_1537);
-  xor g3357 (n_2291, n_3297, n_2285);
-  nand g3358 (n_3298, n_2283, n_1537);
-  nand g3359 (n_3299, n_2285, n_1537);
-  nand g3360 (n_3300, n_2283, n_2285);
-  nand g3361 (n_2312, n_3298, n_3299, n_3300);
-  xor g3362 (n_3301, n_2286, n_2287);
-  xor g3363 (n_2292, n_3301, n_2288);
-  nand g3364 (n_3302, n_2286, n_2287);
-  nand g3365 (n_3303, n_2288, n_2287);
-  nand g3366 (n_3304, n_2286, n_2288);
-  nand g3367 (n_2314, n_3302, n_3303, n_3304);
-  xor g3368 (n_3305, n_2289, n_2290);
-  xor g3369 (n_2295, n_3305, n_2291);
-  nand g3370 (n_3306, n_2289, n_2290);
-  nand g3371 (n_3307, n_2291, n_2290);
-  nand g3372 (n_3308, n_2289, n_2291);
-  nand g3373 (n_2315, n_3306, n_3307, n_3308);
-  xor g3374 (n_3309, n_2292, n_2293);
-  xor g3375 (n_2296, n_3309, n_2294);
-  nand g3376 (n_3310, n_2292, n_2293);
-  nand g3377 (n_3311, n_2294, n_2293);
-  nand g3378 (n_3312, n_2292, n_2294);
-  nand g3379 (n_2318, n_3310, n_3311, n_3312);
-  xor g3380 (n_3313, n_2295, n_2296);
-  xor g3381 (n_170, n_3313, n_2297);
-  nand g3382 (n_3314, n_2295, n_2296);
-  nand g3383 (n_3315, n_2297, n_2296);
-  nand g3384 (n_3316, n_2295, n_2297);
-  nand g3385 (n_117, n_3314, n_3315, n_3316);
-  nand g3391 (n_2328, n_3318, n_3319, n_3320);
-  xor g3392 (n_3321, n_2301, n_2302);
-  xor g3393 (n_2311, n_3321, n_2303);
-  nand g3394 (n_3322, n_2301, n_2302);
-  nand g3395 (n_3323, n_2303, n_2302);
-  nand g3396 (n_3324, n_2301, n_2303);
-  nand g3397 (n_2329, n_3322, n_3323, n_3324);
-  xor g3398 (n_3325, n_2304, n_2305);
-  nand g3400 (n_3326, n_2304, n_2305);
-  nand g3403 (n_2331, n_3326, n_3327, n_3328);
-  xor g3404 (n_3329, n_2307, n_2308);
-  xor g3405 (n_2313, n_3329, n_2309);
-  nand g3406 (n_3330, n_2307, n_2308);
-  nand g3407 (n_3331, n_2309, n_2308);
-  nand g3408 (n_3332, n_2307, n_2309);
-  nand g3409 (n_2334, n_3330, n_3331, n_3332);
-  xor g3410 (n_3333, n_2310, n_2311);
-  xor g3411 (n_2316, n_3333, n_2312);
-  nand g3412 (n_3334, n_2310, n_2311);
-  nand g3413 (n_3335, n_2312, n_2311);
-  nand g3414 (n_3336, n_2310, n_2312);
-  nand g3415 (n_2336, n_3334, n_3335, n_3336);
-  xor g3416 (n_3337, n_2313, n_2314);
-  xor g3417 (n_2317, n_3337, n_2315);
-  nand g3418 (n_3338, n_2313, n_2314);
-  nand g3419 (n_3339, n_2315, n_2314);
-  nand g3420 (n_3340, n_2313, n_2315);
-  nand g3421 (n_2338, n_3338, n_3339, n_3340);
-  xor g3422 (n_3341, n_2316, n_2317);
-  xor g3423 (n_169, n_3341, n_2318);
-  nand g3424 (n_3342, n_2316, n_2317);
-  nand g3425 (n_3343, n_2318, n_2317);
-  nand g3426 (n_3344, n_2316, n_2318);
-  nand g3427 (n_168, n_3342, n_3343, n_3344);
-  xor g3430 (n_3345, n_2321, n_2322);
-  xor g3431 (n_2332, n_3345, n_2323);
-  nand g3432 (n_3346, n_2321, n_2322);
-  nand g3433 (n_3347, n_2323, n_2322);
-  nand g3434 (n_3348, n_2321, n_2323);
-  nand g3435 (n_2347, n_3346, n_3347, n_3348);
-  xor g3436 (n_3349, n_2324, n_2325);
-  xor g3437 (n_2330, n_3349, n_2326);
-  nand g3438 (n_3350, n_2324, n_2325);
-  nand g3439 (n_3351, n_2326, n_2325);
-  nand g3440 (n_3352, n_2324, n_2326);
-  nand g3441 (n_2348, n_3350, n_3351, n_3352);
-  xor g3442 (n_3353, n_1545, n_2328);
-  xor g3443 (n_2333, n_3353, n_2329);
-  nand g3444 (n_3354, n_1545, n_2328);
-  nand g3445 (n_3355, n_2329, n_2328);
-  nand g3446 (n_3356, n_1545, n_2329);
-  nand g3447 (n_2352, n_3354, n_3355, n_3356);
-  xor g3448 (n_3357, n_2330, n_2331);
-  xor g3449 (n_2335, n_3357, n_2332);
-  nand g3450 (n_3358, n_2330, n_2331);
-  nand g3451 (n_3359, n_2332, n_2331);
-  nand g3452 (n_3360, n_2330, n_2332);
-  nand g3453 (n_2353, n_3358, n_3359, n_3360);
-  xor g3454 (n_3361, n_2333, n_2334);
-  xor g3455 (n_2337, n_3361, n_2335);
-  nand g3456 (n_3362, n_2333, n_2334);
-  nand g3457 (n_3363, n_2335, n_2334);
-  nand g3458 (n_3364, n_2333, n_2335);
-  nand g3459 (n_2356, n_3362, n_3363, n_3364);
-  xor g3460 (n_3365, n_2336, n_2337);
-  xor g3461 (n_116, n_3365, n_2338);
-  nand g3462 (n_3366, n_2336, n_2337);
-  nand g3463 (n_3367, n_2338, n_2337);
-  nand g3464 (n_3368, n_2336, n_2338);
-  nand g3465 (n_167, n_3366, n_3367, n_3368);
-  xor g3467 (n_2350, n_3369, n_2341);
-  nand g3469 (n_3371, n_2341, n_2340);
-  nand g3471 (n_2366, n_3370, n_3371, n_3372);
-  xor g3472 (n_3373, n_2342, n_2343);
-  nand g3474 (n_3374, n_2342, n_2343);
-  nand g3477 (n_2365, n_3374, n_3375, n_3376);
-  xor g3479 (n_2351, n_3377, n_2347);
-  nand g3482 (n_3380, n_2345, n_2347);
-  nand g3483 (n_2369, n_3378, n_3379, n_3380);
-  xor g3484 (n_3381, n_2348, n_2349);
-  xor g3485 (n_2354, n_3381, n_2350);
-  nand g3486 (n_3382, n_2348, n_2349);
-  nand g3487 (n_3383, n_2350, n_2349);
-  nand g3488 (n_3384, n_2348, n_2350);
-  nand g3489 (n_2370, n_3382, n_3383, n_3384);
-  xor g3490 (n_3385, n_2351, n_2352);
-  xor g3491 (n_2355, n_3385, n_2353);
-  nand g3492 (n_3386, n_2351, n_2352);
-  nand g3493 (n_3387, n_2353, n_2352);
-  nand g3494 (n_3388, n_2351, n_2353);
-  nand g3495 (n_2373, n_3386, n_3387, n_3388);
-  xor g3496 (n_3389, n_2354, n_2355);
-  xor g3497 (n_115, n_3389, n_2356);
-  nand g3498 (n_3390, n_2354, n_2355);
-  nand g3499 (n_3391, n_2356, n_2355);
-  nand g3500 (n_3392, n_2354, n_2356);
-  nand g3501 (n_114, n_3390, n_3391, n_3392);
-  xor g3504 (n_3393, n_2359, n_2360);
-  xor g3505 (n_2367, n_3393, n_2361);
-  nand g3506 (n_3394, n_2359, n_2360);
-  nand g3507 (n_3395, n_2361, n_2360);
-  nand g3508 (n_3396, n_2359, n_2361);
-  nand g3509 (n_2381, n_3394, n_3395, n_3396);
-  xor g3510 (n_3397, n_2362, n_2363);
-  xor g3511 (n_2368, n_3397, n_1553);
-  nand g3512 (n_3398, n_2362, n_2363);
-  nand g3513 (n_3399, n_1553, n_2363);
-  nand g3514 (n_3400, n_2362, n_1553);
-  nand g3515 (n_2383, n_3398, n_3399, n_3400);
-  xor g3516 (n_3401, n_2365, n_2366);
-  xor g3517 (n_2371, n_3401, n_2367);
-  nand g3518 (n_3402, n_2365, n_2366);
-  nand g3519 (n_3403, n_2367, n_2366);
-  nand g3520 (n_3404, n_2365, n_2367);
-  nand g3521 (n_2386, n_3402, n_3403, n_3404);
-  xor g3522 (n_3405, n_2368, n_2369);
-  xor g3523 (n_2372, n_3405, n_2370);
-  nand g3524 (n_3406, n_2368, n_2369);
-  nand g3525 (n_3407, n_2370, n_2369);
-  nand g3526 (n_3408, n_2368, n_2370);
-  nand g3527 (n_2388, n_3406, n_3407, n_3408);
-  xor g3528 (n_3409, n_2371, n_2372);
-  xor g3529 (n_166, n_3409, n_2373);
-  nand g3530 (n_3410, n_2371, n_2372);
-  nand g3531 (n_3411, n_2373, n_2372);
-  nand g3532 (n_3412, n_2371, n_2373);
-  nand g3533 (n_113, n_3410, n_3411, n_3412);
-  nand g3539 (n_2396, n_3414, n_3415, n_3416);
-  xor g3540 (n_3417, n_2377, n_2378);
-  xor g3541 (n_2382, n_3417, n_2379);
-  nand g3542 (n_3418, n_2377, n_2378);
-  nand g3543 (n_3419, n_2379, n_2378);
-  nand g3544 (n_3420, n_2377, n_2379);
-  nand g3545 (n_2397, n_3418, n_3419, n_3420);
-  xor g3547 (n_2385, n_3421, n_2382);
-  nand g3549 (n_3423, n_2382, n_2381);
-  nand g3551 (n_2400, n_3422, n_3423, n_3424);
-  xor g3552 (n_3425, n_2383, n_2384);
-  xor g3553 (n_2387, n_3425, n_2385);
-  nand g3554 (n_3426, n_2383, n_2384);
-  nand g3555 (n_3427, n_2385, n_2384);
-  nand g3556 (n_3428, n_2383, n_2385);
-  nand g3557 (n_2402, n_3426, n_3427, n_3428);
-  xor g3558 (n_3429, n_2386, n_2387);
-  xor g3559 (n_165, n_3429, n_2388);
-  nand g3560 (n_3430, n_2386, n_2387);
-  nand g3561 (n_3431, n_2388, n_2387);
-  nand g3562 (n_3432, n_2386, n_2388);
-  nand g3563 (n_112, n_3430, n_3431, n_3432);
-  xor g3566 (n_3433, n_2391, n_2392);
-  xor g3567 (n_2398, n_3433, n_2393);
-  nand g3568 (n_3434, n_2391, n_2392);
-  nand g3569 (n_3435, n_2393, n_2392);
-  nand g3570 (n_3436, n_2391, n_2393);
-  nand g3571 (n_2409, n_3434, n_3435, n_3436);
-  xor g3572 (n_3437, n_2394, n_1561);
-  xor g3573 (n_2399, n_3437, n_2396);
-  nand g3574 (n_3438, n_2394, n_1561);
-  nand g3575 (n_3439, n_2396, n_1561);
-  nand g3576 (n_3440, n_2394, n_2396);
-  nand g3577 (n_2412, n_3438, n_3439, n_3440);
-  xor g3578 (n_3441, n_2397, n_2398);
-  xor g3579 (n_2401, n_3441, n_2399);
-  nand g3580 (n_3442, n_2397, n_2398);
-  nand g3581 (n_3443, n_2399, n_2398);
-  nand g3582 (n_3444, n_2397, n_2399);
-  nand g3583 (n_2414, n_3442, n_3443, n_3444);
-  xor g3584 (n_3445, n_2400, n_2401);
-  xor g3585 (n_164, n_3445, n_2402);
-  nand g3586 (n_3446, n_2400, n_2401);
-  nand g3587 (n_3447, n_2402, n_2401);
-  nand g3588 (n_3448, n_2400, n_2402);
-  nand g3589 (n_163, n_3446, n_3447, n_3448);
-  nand g3595 (n_2421, n_3450, n_3451, n_3452);
-  xor g3596 (n_3453, n_2406, n_2407);
-  nand g3598 (n_3454, n_2406, n_2407);
-  nand g3601 (n_2423, n_3454, n_3455, n_3456);
-  xor g3602 (n_3457, n_2409, n_2410);
-  xor g3603 (n_2413, n_3457, n_2411);
-  nand g3604 (n_3458, n_2409, n_2410);
-  nand g3605 (n_3459, n_2411, n_2410);
-  nand g3606 (n_3460, n_2409, n_2411);
-  nand g3607 (n_2425, n_3458, n_3459, n_3460);
-  xor g3608 (n_3461, n_2412, n_2413);
-  xor g3609 (n_111, n_3461, n_2414);
-  nand g3610 (n_3462, n_2412, n_2413);
-  nand g3611 (n_3463, n_2414, n_2413);
-  nand g3612 (n_3464, n_2412, n_2414);
-  nand g3613 (n_162, n_3462, n_3463, n_3464);
-  xor g3616 (n_3465, n_2417, n_2418);
-  xor g3617 (n_2422, n_3465, n_2419);
-  nand g3618 (n_3466, n_2417, n_2418);
-  nand g3619 (n_3467, n_2419, n_2418);
-  nand g3620 (n_3468, n_2417, n_2419);
-  nand g3621 (n_2431, n_3466, n_3467, n_3468);
-  xor g3622 (n_3469, n_1569, n_2421);
-  xor g3623 (n_2424, n_3469, n_2422);
-  nand g3624 (n_3470, n_1569, n_2421);
-  nand g3625 (n_3471, n_2422, n_2421);
-  nand g3626 (n_3472, n_1569, n_2422);
-  nand g3627 (n_2434, n_3470, n_3471, n_3472);
-  xor g3628 (n_3473, n_2423, n_2424);
-  xor g3629 (n_110, n_3473, n_2425);
-  nand g3630 (n_3474, n_2423, n_2424);
-  nand g3631 (n_3475, n_2425, n_2424);
-  nand g3632 (n_3476, n_2423, n_2425);
-  nand g3633 (n_109, n_3474, n_3475, n_3476);
-  xor g3635 (n_2432, n_3477, n_2428);
-  nand g3637 (n_3479, n_2428, n_2427);
-  nand g3639 (n_2440, n_3478, n_3479, n_3480);
-  xor g3641 (n_2433, n_3481, n_2431);
-  nand g3645 (n_2442, n_3482, n_3483, n_3484);
-  xor g3646 (n_3485, n_2432, n_2433);
-  xor g3647 (n_161, n_3485, n_2434);
-  nand g3648 (n_3486, n_2432, n_2433);
-  nand g3649 (n_3487, n_2434, n_2433);
-  nand g3650 (n_3488, n_2432, n_2434);
-  nand g3651 (n_160, n_3486, n_3487, n_3488);
-  xor g3654 (n_3489, n_2437, n_2438);
-  xor g3655 (n_2441, n_3489, n_1577);
-  nand g3656 (n_3490, n_2437, n_2438);
-  nand g3657 (n_3491, n_1577, n_2438);
-  nand g3658 (n_3492, n_2437, n_1577);
-  nand g3659 (n_2448, n_3490, n_3491, n_3492);
-  xor g3660 (n_3493, n_2440, n_2441);
-  xor g3661 (n_108, n_3493, n_2442);
-  nand g3662 (n_3494, n_2440, n_2441);
-  nand g3663 (n_3495, n_2442, n_2441);
-  nand g3664 (n_3496, n_2440, n_2442);
-  nand g3665 (n_159, n_3494, n_3495, n_3496);
-  xor g3667 (n_2447, n_3497, n_2445);
-  nand g3671 (n_2453, n_3498, n_3499, n_3500);
-  xor g3673 (n_107, n_3501, n_2448);
-  nand g3675 (n_3503, n_2448, n_2447);
-  nand g3677 (n_158, n_3502, n_3503, n_3504);
-  xor g3680 (n_3505, n_2451, n_1585);
-  xor g3681 (n_106, n_3505, n_2453);
-  nand g3682 (n_3506, n_2451, n_1585);
-  nand g3683 (n_3507, n_2453, n_1585);
-  nand g3684 (n_3508, n_2451, n_2453);
-  nand g3685 (n_157, n_3506, n_3507, n_3508);
-  nor g3705 (n_3535, n_152, n_204);
-  nand g3706 (n_3530, n_152, n_204);
-  nor g3709 (n_3541, n_150, n_202);
-  nand g3710 (n_3536, n_150, n_202);
-  nor g3711 (n_3537, n_149, n_201);
-  nand g3712 (n_3538, n_149, n_201);
-  nor g3713 (n_3547, n_148, n_200);
-  nand g3714 (n_3542, n_148, n_200);
-  nor g3715 (n_3543, n_147, n_199);
-  nand g3716 (n_3544, n_147, n_199);
-  nor g3717 (n_3553, n_146, n_198);
-  nand g3718 (n_3548, n_146, n_198);
-  nor g3719 (n_3549, n_145, n_197);
-  nand g3720 (n_3550, n_145, n_197);
-  nor g3721 (n_3559, n_144, n_196);
-  nand g3722 (n_3554, n_144, n_196);
-  nor g3723 (n_3555, n_143, n_195);
-  nand g3724 (n_3556, n_143, n_195);
-  nor g3725 (n_3565, n_142, n_194);
-  nand g3726 (n_3560, n_142, n_194);
-  nor g3727 (n_3561, n_141, n_193);
-  nand g3728 (n_3562, n_141, n_193);
-  nor g3729 (n_3571, n_140, n_192);
-  nand g3730 (n_3566, n_140, n_192);
-  nor g3731 (n_3567, n_139, n_191);
-  nand g3732 (n_3568, n_139, n_191);
-  nor g3733 (n_3577, n_138, n_190);
-  nand g3734 (n_3572, n_138, n_190);
-  nor g3735 (n_3573, n_137, n_189);
-  nand g3736 (n_3574, n_137, n_189);
-  nor g3737 (n_3583, n_136, n_188);
-  nand g3738 (n_3578, n_136, n_188);
-  nor g3739 (n_3579, n_135, n_187);
-  nand g3740 (n_3580, n_135, n_187);
-  nor g3741 (n_3589, n_134, n_186);
-  nand g3742 (n_3584, n_134, n_186);
-  nor g3743 (n_3585, n_133, n_185);
-  nand g3744 (n_3586, n_133, n_185);
-  nor g3745 (n_3595, n_132, n_184);
-  nand g3746 (n_3590, n_132, n_184);
-  nor g3747 (n_3591, n_131, n_183);
-  nand g3748 (n_3592, n_131, n_183);
-  nor g3749 (n_3601, n_130, n_182);
-  nand g3750 (n_3596, n_130, n_182);
-  nor g3751 (n_3597, n_129, n_181);
-  nand g3752 (n_3598, n_129, n_181);
-  nor g3753 (n_3607, n_128, n_180);
-  nand g3754 (n_3602, n_128, n_180);
-  nor g3755 (n_3603, n_127, n_179);
-  nand g3756 (n_3604, n_127, n_179);
-  nor g3757 (n_3613, n_126, n_178);
-  nand g3758 (n_3608, n_126, n_178);
-  nor g3759 (n_3609, n_125, n_177);
-  nand g3760 (n_3610, n_125, n_177);
-  nor g3761 (n_3619, n_124, n_176);
-  nand g3762 (n_3614, n_124, n_176);
-  nor g3763 (n_3615, n_123, n_175);
-  nand g3764 (n_3616, n_123, n_175);
-  nor g3765 (n_3625, n_122, n_174);
-  nand g3766 (n_3620, n_122, n_174);
-  nor g3767 (n_3621, n_121, n_173);
-  nand g3768 (n_3622, n_121, n_173);
-  nor g3769 (n_3631, n_120, n_172);
-  nand g3770 (n_3626, n_120, n_172);
-  nor g3771 (n_3627, n_119, n_171);
-  nand g3772 (n_3628, n_119, n_171);
-  nor g3773 (n_3637, n_118, n_170);
-  nand g3774 (n_3632, n_118, n_170);
-  nor g3775 (n_3633, n_117, n_169);
-  nand g3776 (n_3634, n_117, n_169);
-  nor g3777 (n_3643, n_116, n_168);
-  nand g3778 (n_3638, n_116, n_168);
-  nor g3779 (n_3639, n_115, n_167);
-  nand g3780 (n_3640, n_115, n_167);
-  nor g3781 (n_3649, n_114, n_166);
-  nand g3782 (n_3644, n_114, n_166);
-  nor g3783 (n_3645, n_113, n_165);
-  nand g3784 (n_3646, n_113, n_165);
-  nor g3785 (n_3655, n_112, n_164);
-  nand g3786 (n_3650, n_112, n_164);
-  nor g3787 (n_3651, n_111, n_163);
-  nand g3788 (n_3652, n_111, n_163);
-  nor g3789 (n_3661, n_110, n_162);
-  nand g3790 (n_3656, n_110, n_162);
-  nor g3791 (n_3657, n_109, n_161);
-  nand g3792 (n_3658, n_109, n_161);
-  nor g3793 (n_3667, n_108, n_160);
-  nand g3794 (n_3662, n_108, n_160);
-  nor g3795 (n_3663, n_107, n_159);
-  nand g3796 (n_3664, n_107, n_159);
-  nor g3797 (n_3671, n_106, n_158);
-  nand g3798 (n_3668, n_106, n_158);
-  nor g3812 (n_3539, n_3536, n_3537);
-  nor g3815 (n_3683, n_3541, n_3537);
-  nor g3816 (n_3545, n_3542, n_3543);
-  nor g3819 (n_3691, n_3547, n_3543);
-  nor g3820 (n_3551, n_3548, n_3549);
-  nor g3823 (n_3693, n_3553, n_3549);
-  nor g3824 (n_3557, n_3554, n_3555);
-  nor g3827 (n_3701, n_3559, n_3555);
-  nor g3828 (n_3563, n_3560, n_3561);
-  nor g3831 (n_3703, n_3565, n_3561);
-  nor g3832 (n_3569, n_3566, n_3567);
-  nor g3835 (n_3711, n_3571, n_3567);
-  nor g3836 (n_3575, n_3572, n_3573);
-  nor g3839 (n_3713, n_3577, n_3573);
-  nor g3840 (n_3581, n_3578, n_3579);
-  nor g3843 (n_3721, n_3583, n_3579);
-  nor g3844 (n_3587, n_3584, n_3585);
-  nor g3847 (n_3723, n_3589, n_3585);
-  nor g3848 (n_3593, n_3590, n_3591);
-  nor g3851 (n_3731, n_3595, n_3591);
-  nor g3852 (n_3599, n_3596, n_3597);
-  nor g3855 (n_3733, n_3601, n_3597);
-  nor g3856 (n_3605, n_3602, n_3603);
-  nor g3859 (n_3741, n_3607, n_3603);
-  nor g3860 (n_3611, n_3608, n_3609);
-  nor g3863 (n_3743, n_3613, n_3609);
-  nor g3864 (n_3617, n_3614, n_3615);
-  nor g3867 (n_3751, n_3619, n_3615);
-  nor g3868 (n_3623, n_3620, n_3621);
-  nor g3871 (n_3753, n_3625, n_3621);
-  nor g3872 (n_3629, n_3626, n_3627);
-  nor g3875 (n_3761, n_3631, n_3627);
-  nor g3876 (n_3635, n_3632, n_3633);
-  nor g3879 (n_3763, n_3637, n_3633);
-  nor g3880 (n_3641, n_3638, n_3639);
-  nor g3883 (n_3771, n_3643, n_3639);
-  nor g3884 (n_3647, n_3644, n_3645);
-  nor g3887 (n_3773, n_3649, n_3645);
-  nor g3888 (n_3653, n_3650, n_3651);
-  nor g3891 (n_3781, n_3655, n_3651);
-  nor g3892 (n_3659, n_3656, n_3657);
-  nor g3895 (n_3783, n_3661, n_3657);
-  nor g3896 (n_3665, n_3662, n_3663);
-  nor g3899 (n_3791, n_3667, n_3663);
-  nor g3915 (n_3689, n_3553, n_3688);
-  nand g3924 (n_3808, n_3691, n_3693);
-  nor g3925 (n_3699, n_3565, n_3698);
-  nand g3934 (n_3816, n_3701, n_3703);
-  nor g3935 (n_3709, n_3577, n_3708);
-  nand g3944 (n_3823, n_3711, n_3713);
-  nor g3945 (n_3719, n_3589, n_3718);
-  nand g3954 (n_3831, n_3721, n_3723);
-  nor g3955 (n_3729, n_3601, n_3728);
-  nand g3964 (n_3838, n_3731, n_3733);
-  nor g3965 (n_3739, n_3613, n_3738);
-  nand g3974 (n_3846, n_3741, n_3743);
-  nor g3975 (n_3749, n_3625, n_3748);
-  nand g3984 (n_3853, n_3751, n_3753);
-  nor g3985 (n_3759, n_3637, n_3758);
-  nand g3994 (n_3861, n_3761, n_3763);
-  nor g3995 (n_3769, n_3649, n_3768);
-  nand g4004 (n_3868, n_3771, n_3773);
-  nor g4005 (n_3779, n_3661, n_3778);
-  nand g4014 (n_3876, n_3781, n_3783);
-  nor g4015 (n_3789, n_3671, n_3788);
-  nor g4031 (n_3806, n_3559, n_3805);
-  nor g4034 (n_3890, n_3559, n_3808);
-  nor g4040 (n_3814, n_3812, n_3805);
-  nor g4043 (n_3896, n_3808, n_3812);
-  nor g4044 (n_3818, n_3816, n_3805);
-  nor g4047 (n_3899, n_3808, n_3816);
-  nor g4048 (n_3821, n_3583, n_3820);
-  nor g4051 (n_3984, n_3583, n_3823);
-  nor g4057 (n_3829, n_3827, n_3820);
-  nor g4060 (n_3990, n_3823, n_3827);
-  nor g4061 (n_3833, n_3831, n_3820);
-  nor g4064 (n_3905, n_3823, n_3831);
-  nor g4065 (n_3836, n_3607, n_3835);
-  nor g4068 (n_3918, n_3607, n_3838);
-  nor g4074 (n_3844, n_3842, n_3835);
-  nor g4077 (n_3928, n_3838, n_3842);
-  nor g4078 (n_3848, n_3846, n_3835);
-  nor g4081 (n_3933, n_3838, n_3846);
-  nor g4082 (n_3851, n_3631, n_3850);
-  nor g4085 (n_4047, n_3631, n_3853);
-  nor g4091 (n_3859, n_3857, n_3850);
-  nor g4094 (n_4053, n_3853, n_3857);
-  nor g4095 (n_3863, n_3861, n_3850);
-  nor g4098 (n_3941, n_3853, n_3861);
-  nor g4099 (n_3866, n_3655, n_3865);
-  nor g4102 (n_3954, n_3655, n_3868);
-  nor g4108 (n_3874, n_3872, n_3865);
-  nor g4111 (n_3964, n_3868, n_3872);
-  nor g4112 (n_3878, n_3876, n_3865);
-  nor g4115 (n_3969, n_3868, n_3876);
-  nand g4118 (n_4112, n_3542, n_3882);
-  nand g4120 (n_4114, n_3688, n_3883);
-  nand g4123 (n_4117, n_3886, n_3887);
-  nand g4126 (n_4120, n_3805, n_3889);
-  nand g4128 (n_4123, n_3891, n_3892);
-  nand g4130 (n_4125, n_3894, n_3895);
-  nand g4132 (n_4128, n_3897, n_3898);
-  nand g4134 (n_3974, n_3900, n_3901);
-  nor g4135 (n_3903, n_3595, n_3902);
-  nand g4144 (n_3998, n_3731, n_3905);
-  nor g4145 (n_3912, n_3910, n_3902);
-  nor g4150 (n_3915, n_3838, n_3902);
-  nand g4159 (n_4010, n_3905, n_3918);
-  nand g4164 (n_4014, n_3905, n_3923);
-  nand g4169 (n_4018, n_3905, n_3928);
-  nand g4174 (n_4022, n_3905, n_3933);
-  nor g4175 (n_3939, n_3643, n_3938);
-  nand g4184 (n_4061, n_3771, n_3941);
-  nor g4185 (n_3948, n_3946, n_3938);
-  nor g4190 (n_3951, n_3868, n_3938);
-  nand g4199 (n_4073, n_3941, n_3954);
-  nand g4204 (n_4077, n_3941, n_3959);
-  nand g4209 (n_4081, n_3941, n_3964);
-  nand g4214 (n_4029, n_3941, n_3969);
-  nand g4217 (n_4132, n_3566, n_3976);
-  nand g4218 (n_3977, n_3711, n_3974);
-  nand g4219 (n_4134, n_3708, n_3977);
-  nand g4222 (n_4137, n_3980, n_3981);
-  nand g4225 (n_4140, n_3820, n_3983);
-  nand g4226 (n_3986, n_3984, n_3974);
-  nand g4227 (n_4143, n_3985, n_3986);
-  nand g4228 (n_3989, n_3987, n_3974);
-  nand g4229 (n_4145, n_3988, n_3989);
-  nand g4230 (n_3992, n_3990, n_3974);
-  nand g4231 (n_4148, n_3991, n_3992);
-  nand g4232 (n_3993, n_3905, n_3974);
-  nand g4233 (n_4150, n_3902, n_3993);
-  nand g4236 (n_4153, n_3996, n_3997);
-  nand g4239 (n_4155, n_4000, n_4001);
-  nand g4242 (n_4158, n_4004, n_4005);
-  nand g4245 (n_4161, n_4008, n_4009);
-  nand g4248 (n_4164, n_4012, n_4013);
-  nand g4251 (n_4166, n_4016, n_4017);
-  nand g4254 (n_4169, n_4020, n_4021);
-  nand g4257 (n_4037, n_4024, n_4025);
-  nor g4258 (n_4027, n_3667, n_4026);
-  nor g4261 (n_4087, n_3667, n_4029);
-  nor g4267 (n_4035, n_4033, n_4026);
-  nor g4270 (n_4093, n_4033, n_4029);
-  nand g4273 (n_4173, n_3614, n_4039);
-  nand g4274 (n_4040, n_3751, n_4037);
-  nand g4275 (n_4175, n_3748, n_4040);
-  nand g4278 (n_4178, n_4043, n_4044);
-  nand g4281 (n_4181, n_3850, n_4046);
-  nand g4282 (n_4049, n_4047, n_4037);
-  nand g4283 (n_4184, n_4048, n_4049);
-  nand g4284 (n_4052, n_4050, n_4037);
-  nand g4285 (n_4186, n_4051, n_4052);
-  nand g4286 (n_4055, n_4053, n_4037);
-  nand g4287 (n_4189, n_4054, n_4055);
-  nand g4288 (n_4056, n_3941, n_4037);
-  nand g4289 (n_4191, n_3938, n_4056);
-  nand g4292 (n_4194, n_4059, n_4060);
-  nand g4295 (n_4196, n_4063, n_4064);
-  nand g4298 (n_4199, n_4067, n_4068);
-  nand g4301 (n_4202, n_4071, n_4072);
-  nand g4304 (n_4205, n_4075, n_4076);
-  nand g4307 (n_4207, n_4079, n_4080);
-  nand g4310 (n_4210, n_4083, n_4084);
-  nand g4313 (n_4213, n_4026, n_4086);
-  nand g4314 (n_4089, n_4087, n_4037);
-  nand g4315 (n_4216, n_4088, n_4089);
-  nand g4316 (n_4092, n_4090, n_4037);
-  nand g4317 (n_4218, n_4091, n_4092);
-  nand g4318 (n_4095, n_4093, n_4037);
-  nand g4319 (n_4221, n_4094, n_4095);
-  xnor g4333 (Z[6], n_3533, n_4106);
-  xnor g4341 (Z[9], n_4112, n_4113);
-  xnor g4343 (Z[10], n_4114, n_4115);
-  xnor g4346 (Z[11], n_4117, n_4118);
-  xnor g4349 (Z[12], n_4120, n_4121);
-  xnor g4352 (Z[13], n_4123, n_4124);
-  xnor g4354 (Z[14], n_4125, n_4126);
-  xnor g4357 (Z[15], n_4128, n_4129);
-  xnor g4359 (Z[16], n_3974, n_4130);
-  xnor g4362 (Z[17], n_4132, n_4133);
-  xnor g4364 (Z[18], n_4134, n_4135);
-  xnor g4367 (Z[19], n_4137, n_4138);
-  xnor g4370 (Z[20], n_4140, n_4141);
-  xnor g4373 (Z[21], n_4143, n_4144);
-  xnor g4375 (Z[22], n_4145, n_4146);
-  xnor g4378 (Z[23], n_4148, n_4149);
-  xnor g4380 (Z[24], n_4150, n_4151);
-  xnor g4383 (Z[25], n_4153, n_4154);
-  xnor g4385 (Z[26], n_4155, n_4156);
-  xnor g4388 (Z[27], n_4158, n_4159);
-  xnor g4391 (Z[28], n_4161, n_4162);
-  xnor g4394 (Z[29], n_4164, n_4165);
-  xnor g4396 (Z[30], n_4166, n_4167);
-  xnor g4399 (Z[31], n_4169, n_4170);
-  xnor g4401 (Z[32], n_4037, n_4171);
-  xnor g4404 (Z[33], n_4173, n_4174);
-  xnor g4406 (Z[34], n_4175, n_4176);
-  xnor g4409 (Z[35], n_4178, n_4179);
-  xnor g4412 (Z[36], n_4181, n_4182);
-  xnor g4415 (Z[37], n_4184, n_4185);
-  xnor g4417 (Z[38], n_4186, n_4187);
-  xnor g4420 (Z[39], n_4189, n_4190);
-  xnor g4422 (Z[40], n_4191, n_4192);
-  xnor g4425 (Z[41], n_4194, n_4195);
-  xnor g4427 (Z[42], n_4196, n_4197);
-  xnor g4430 (Z[43], n_4199, n_4200);
-  xnor g4433 (Z[44], n_4202, n_4203);
-  xnor g4436 (Z[45], n_4205, n_4206);
-  xnor g4438 (Z[46], n_4207, n_4208);
-  xnor g4441 (Z[47], n_4210, n_4211);
-  xnor g4444 (Z[48], n_4213, n_4214);
-  xnor g4447 (Z[49], n_4216, n_4217);
-  xnor g4449 (Z[50], n_4218, n_4219);
-  xnor g4452 (Z[51], n_4221, n_4222);
-  and g4454 (n_405, wc, n_404);
-  not gc (wc, A[0]);
-  and g4455 (n_502, wc0, n_501);
-  not gc0 (wc0, A[0]);
-  and g4456 (n_599, wc1, n_598);
-  not gc1 (wc1, A[0]);
-  and g4457 (n_696, wc2, n_695);
-  not gc2 (wc2, A[0]);
-  and g4458 (n_793, wc3, n_792);
-  not gc3 (wc3, A[0]);
-  and g4459 (n_890, wc4, n_889);
-  not gc4 (wc4, A[0]);
-  and g4460 (n_987, wc5, n_986);
-  not gc5 (wc5, A[0]);
-  and g4461 (n_1084, wc6, n_1083);
-  not gc6 (wc6, A[0]);
-  and g4462 (n_1181, wc7, n_1180);
-  not gc7 (wc7, A[0]);
-  and g4463 (n_1278, wc8, n_1277);
-  not gc8 (wc8, A[0]);
-  and g4464 (n_1375, wc9, n_1374);
-  not gc9 (wc9, A[0]);
-  and g4465 (n_1472, wc10, n_1471);
-  not gc10 (wc10, A[0]);
-  and g4466 (n_315, n_313, wc11);
-  not gc11 (wc11, n_311);
-  and g4467 (n_412, n_410, wc12);
-  not gc12 (wc12, n_408);
-  and g4468 (n_509, n_507, wc13);
-  not gc13 (wc13, n_505);
-  and g4469 (n_606, n_604, wc14);
-  not gc14 (wc14, n_602);
-  and g4470 (n_703, n_701, wc15);
-  not gc15 (wc15, n_699);
-  and g4471 (n_800, n_798, wc16);
-  not gc16 (wc16, n_796);
-  and g4472 (n_897, n_895, wc17);
-  not gc17 (wc17, n_893);
-  and g4473 (n_994, n_992, wc18);
-  not gc18 (wc18, n_990);
-  and g4474 (n_1091, n_1089, wc19);
-  not gc19 (wc19, n_1087);
-  and g4475 (n_1188, n_1186, wc20);
-  not gc20 (wc20, n_1184);
-  and g4476 (n_1285, n_1283, wc21);
-  not gc21 (wc21, n_1281);
-  and g4477 (n_1382, n_1380, wc22);
-  not gc22 (wc22, n_1378);
-  xnor g4501 (n_2897, n_1972, n_1497);
-  or g4502 (n_2898, n_1497, wc23);
-  not gc23 (wc23, n_1972);
-  or g4503 (n_2900, n_1497, wc24);
-  not gc24 (wc24, n_1973);
-  xnor g4504 (n_3029, n_2075, n_1509);
-  or g4505 (n_3030, n_1509, wc25);
-  not gc25 (wc25, n_2075);
-  or g4506 (n_3032, n_1509, wc26);
-  not gc26 (wc26, n_2076);
-  xnor g4507 (n_3113, n_2140, n_1517);
-  or g4508 (n_3114, n_1517, wc27);
-  not gc27 (wc27, n_2140);
-  or g4509 (n_3116, n_1517, wc28);
-  not gc28 (wc28, n_2141);
-  xnor g4510 (n_3189, n_2199, n_1525);
-  or g4511 (n_3190, n_1525, wc29);
-  not gc29 (wc29, n_2199);
-  or g4512 (n_3192, n_1525, wc30);
-  not gc30 (wc30, n_2200);
-  xnor g4513 (n_3257, n_2252, n_1533);
-  or g4514 (n_3258, n_1533, wc31);
-  not gc31 (wc31, n_2252);
-  or g4515 (n_3260, n_1533, wc32);
-  not gc32 (wc32, n_2253);
-  xnor g4516 (n_3317, n_2299, n_1541);
-  or g4517 (n_3318, n_1541, wc33);
-  not gc33 (wc33, n_2299);
-  xnor g4518 (n_3369, n_2340, n_1549);
-  or g4519 (n_3370, n_1549, wc34);
-  not gc34 (wc34, n_2340);
-  or g4520 (n_3372, n_1549, wc35);
-  not gc35 (wc35, n_2341);
-  xnor g4521 (n_3413, n_2375, n_1557);
-  or g4522 (n_3414, n_1557, wc36);
-  not gc36 (wc36, n_2375);
-  xnor g4523 (n_3449, n_2404, n_1565);
-  or g4524 (n_3450, n_1565, wc37);
-  not gc37 (wc37, n_2404);
-  xnor g4525 (n_3477, n_2427, n_1573);
-  or g4526 (n_3478, n_1573, wc38);
-  not gc38 (wc38, n_2427);
-  or g4527 (n_3480, n_1573, wc39);
-  not gc39 (wc39, n_2428);
-  or g4528 (n_3500, n_1581, wc40);
-  not gc40 (wc40, n_2445);
-  xnor g4530 (n_2949, n_402, n_2013);
-  or g4531 (n_2950, wc41, n_402);
-  not gc41 (wc41, n_2013);
-  or g4532 (n_2952, wc42, n_402);
-  not gc42 (wc42, n_2014);
-  xnor g4533 (n_3033, n_499, n_2078);
-  or g4534 (n_3034, wc43, n_499);
-  not gc43 (wc43, n_2078);
-  or g4535 (n_3036, wc44, n_499);
-  not gc44 (wc44, n_2079);
-  xnor g4536 (n_3117, n_596, n_2143);
-  or g4537 (n_3118, wc45, n_596);
-  not gc45 (wc45, n_2143);
-  or g4538 (n_3120, wc46, n_596);
-  not gc46 (wc46, n_2144);
-  xnor g4539 (n_2157, n_1513, n_3125);
-  or g4540 (n_3127, n_1513, wc47);
-  not gc47 (wc47, n_2149);
-  or g4541 (n_3128, n_1513, wc48);
-  not gc48 (wc48, n_2148);
-  xor g4542 (n_3201, n_693, n_1521);
-  or g4543 (n_3202, n_693, n_1521);
-  xnor g4544 (n_2266, n_790, n_3261);
-  or g4545 (n_3263, wc49, n_790);
-  not gc49 (wc49, n_2255);
-  or g4546 (n_3264, wc50, n_790);
-  not gc50 (wc50, n_2254);
-  xnor g4547 (n_2309, n_887, n_3317);
-  or g4548 (n_3319, wc51, n_887);
-  not gc51 (wc51, n_2299);
-  or g4549 (n_3320, n_887, n_1541);
-  xnor g4550 (n_2310, n_1537, n_3325);
-  or g4551 (n_3327, n_1537, wc52);
-  not gc52 (wc52, n_2305);
-  or g4552 (n_3328, n_1537, wc53);
-  not gc53 (wc53, n_2304);
-  xnor g4553 (n_2349, n_984, n_3373);
-  or g4554 (n_3375, wc54, n_984);
-  not gc54 (wc54, n_2343);
-  or g4555 (n_3376, wc55, n_984);
-  not gc55 (wc55, n_2342);
-  xnor g4556 (n_3377, n_2345, n_1545);
-  or g4557 (n_3378, n_1545, wc56);
-  not gc56 (wc56, n_2345);
-  xnor g4558 (n_2384, n_1081, n_3413);
-  or g4559 (n_3415, wc57, n_1081);
-  not gc57 (wc57, n_2375);
-  or g4560 (n_3416, n_1081, n_1557);
-  xnor g4561 (n_2410, n_1178, n_3449);
-  or g4562 (n_3451, wc58, n_1178);
-  not gc58 (wc58, n_2404);
-  or g4563 (n_3452, n_1178, n_1565);
-  xnor g4564 (n_2411, n_1561, n_3453);
-  or g4565 (n_3455, n_1561, wc59);
-  not gc59 (wc59, n_2407);
-  or g4566 (n_3456, n_1561, wc60);
-  not gc60 (wc60, n_2406);
-  xor g4567 (n_3481, n_1275, n_1569);
-  or g4568 (n_3482, n_1275, n_1569);
-  xor g4569 (n_3497, n_1372, n_1581);
-  or g4570 (n_3498, n_1372, n_1581);
-  or g4571 (n_3499, wc61, n_1372);
-  not gc61 (wc61, n_2445);
-  and g4572 (n_3533, wc62, n_151);
-  not gc62 (wc62, n_3530);
-  xnor g4574 (n_3001, n_1501, n_2054);
-  or g4575 (n_3002, wc63, n_1501);
-  not gc63 (wc63, n_2054);
-  or g4576 (n_3004, wc64, n_1501);
-  not gc64 (wc64, n_2055);
-  xnor g4577 (n_3045, n_1505, n_2087);
-  or g4578 (n_3046, wc65, n_1505);
-  not gc65 (wc65, n_2087);
-  or g4579 (n_3048, wc66, n_1505);
-  not gc66 (wc66, n_2088);
-  or g4580 (n_3203, wc67, n_1521);
-  not gc67 (wc67, n_2209);
-  or g4581 (n_3204, wc68, n_693);
-  not gc68 (wc68, n_2209);
-  xnor g4582 (n_3269, n_1529, n_2261);
-  or g4583 (n_3270, wc69, n_1529);
-  not gc69 (wc69, n_2261);
-  or g4584 (n_3272, wc70, n_1529);
-  not gc70 (wc70, n_2262);
-  or g4585 (n_3379, wc71, n_1545);
-  not gc71 (wc71, n_2347);
-  xnor g4586 (n_3421, n_1553, n_2381);
-  or g4587 (n_3422, wc72, n_1553);
-  not gc72 (wc72, n_2381);
-  or g4588 (n_3424, wc73, n_1553);
-  not gc73 (wc73, n_2382);
-  or g4589 (n_3483, wc74, n_1569);
-  not gc74 (wc74, n_2431);
-  or g4590 (n_3484, wc75, n_1275);
-  not gc75 (wc75, n_2431);
-  xnor g4591 (n_105, n_1469, n_1585);
-  or g4593 (n_4101, wc76, n_3535);
-  not gc76 (wc76, n_3530);
-  xnor g4595 (n_3501, n_1577, n_2447);
-  or g4596 (n_3502, wc77, n_1577);
-  not gc77 (wc77, n_2447);
-  or g4597 (n_3504, wc78, n_1577);
-  not gc78 (wc78, n_2448);
-  and g4598 (n_3685, wc79, n_3538);
-  not gc79 (wc79, n_3539);
-  and g4599 (n_3679, n_3533, wc80);
-  not gc80 (wc80, n_3541);
-  not g4602 (Z[4], n_4101);
-  or g4603 (n_4106, wc81, n_3541);
-  not gc81 (wc81, n_3536);
-  or g4604 (n_4109, wc82, n_3537);
-  not gc82 (wc82, n_3538);
-  and g4605 (n_3799, wc83, n_3536);
-  not gc83 (wc83, n_3679);
-  and g4606 (n_3686, n_3683, n_3533);
-  xnor g4607 (Z[5], n_151, n_3530);
-  or g4608 (n_4110, wc84, n_3547);
-  not gc84 (wc84, n_3542);
-  and g4609 (n_3688, wc85, n_3544);
-  not gc85 (wc85, n_3545);
-  and g4610 (n_3803, wc86, n_3685);
-  not gc86 (wc86, n_3686);
-  or g4611 (n_3884, wc87, n_3553);
-  not gc87 (wc87, n_3691);
-  or g4612 (n_4113, wc88, n_3543);
-  not gc88 (wc88, n_3544);
-  or g4613 (n_4115, wc89, n_3553);
-  not gc89 (wc89, n_3548);
-  and g4614 (n_3669, n_157, n_105);
-  or g4615 (n_3670, n_157, n_105);
-  and g4616 (n_3695, wc90, n_3550);
-  not gc90 (wc90, n_3551);
-  or g4619 (n_4118, wc91, n_3549);
-  not gc91 (wc91, n_3550);
-  and g4620 (n_3698, wc92, n_3556);
-  not gc92 (wc92, n_3557);
-  and g4621 (n_3886, wc93, n_3548);
-  not gc93 (wc93, n_3689);
-  and g4622 (n_3696, wc94, n_3693);
-  not gc94 (wc94, n_3688);
-  or g4623 (n_3882, n_3547, n_3803);
-  or g4624 (n_3883, n_3803, wc95);
-  not gc95 (wc95, n_3691);
-  or g4625 (n_3887, n_3803, n_3884);
-  xor g4626 (Z[7], n_4109, n_3799);
-  xor g4627 (Z[8], n_4110, n_3803);
-  or g4628 (n_4121, wc96, n_3559);
-  not gc96 (wc96, n_3554);
-  or g4629 (n_4124, wc97, n_3555);
-  not gc97 (wc97, n_3556);
-  or g4630 (n_4219, wc98, n_3671);
-  not gc98 (wc98, n_3668);
-  and g4631 (n_3705, wc99, n_3562);
-  not gc99 (wc99, n_3563);
-  and g4632 (n_3805, wc100, n_3695);
-  not gc100 (wc100, n_3696);
-  or g4633 (n_3812, wc101, n_3565);
-  not gc101 (wc101, n_3701);
-  and g4634 (n_3893, wc102, n_3701);
-  not gc102 (wc102, n_3808);
-  or g4635 (n_3889, n_3808, n_3803);
-  or g4636 (n_3892, n_3803, wc103);
-  not gc103 (wc103, n_3890);
-  or g4637 (n_4126, wc104, n_3565);
-  not gc104 (wc104, n_3560);
-  or g4638 (n_4129, wc105, n_3561);
-  not gc105 (wc105, n_3562);
-  or g4639 (n_4130, wc106, n_3571);
-  not gc106 (wc106, n_3566);
-  or g4640 (n_4217, wc107, n_3663);
-  not gc107 (wc107, n_3664);
-  or g4641 (n_4222, wc108, n_3669);
-  not gc108 (wc108, n_3670);
-  and g4642 (n_3708, wc109, n_3568);
-  not gc109 (wc109, n_3569);
-  and g4643 (n_3788, wc110, n_3664);
-  not gc110 (wc110, n_3665);
-  and g4644 (n_3813, wc111, n_3560);
-  not gc111 (wc111, n_3699);
-  and g4645 (n_3706, wc112, n_3703);
-  not gc112 (wc112, n_3698);
-  or g4646 (n_4033, wc113, n_3671);
-  not gc113 (wc113, n_3791);
-  and g4647 (n_3810, wc114, n_3701);
-  not gc114 (wc114, n_3805);
-  or g4648 (n_3895, wc115, n_3803);
-  not gc115 (wc115, n_3893);
-  or g4649 (n_4133, wc116, n_3567);
-  not gc116 (wc116, n_3568);
-  or g4650 (n_4211, wc117, n_3657);
-  not gc117 (wc117, n_3658);
-  or g4651 (n_4214, wc118, n_3667);
-  not gc118 (wc118, n_3662);
-  and g4652 (n_3715, wc119, n_3574);
-  not gc119 (wc119, n_3575);
-  and g4653 (n_3718, wc120, n_3580);
-  not gc120 (wc120, n_3581);
-  and g4654 (n_3725, wc121, n_3586);
-  not gc121 (wc121, n_3587);
-  and g4655 (n_3778, wc122, n_3652);
-  not gc122 (wc122, n_3653);
-  and g4656 (n_3785, wc123, n_3658);
-  not gc123 (wc123, n_3659);
-  and g4657 (n_3817, wc124, n_3705);
-  not gc124 (wc124, n_3706);
-  or g4658 (n_3978, wc125, n_3577);
-  not gc125 (wc125, n_3711);
-  or g4659 (n_3827, wc126, n_3589);
-  not gc126 (wc126, n_3721);
-  or g4660 (n_3872, wc127, n_3661);
-  not gc127 (wc127, n_3781);
-  and g4661 (n_3891, wc128, n_3554);
-  not gc128 (wc128, n_3806);
-  and g4662 (n_3894, wc129, n_3698);
-  not gc129 (wc129, n_3810);
-  or g4663 (n_3898, n_3803, wc130);
-  not gc130 (wc130, n_3896);
-  or g4664 (n_3901, n_3803, wc131);
-  not gc131 (wc131, n_3899);
-  or g4665 (n_4135, wc132, n_3577);
-  not gc132 (wc132, n_3572);
-  or g4666 (n_4138, wc133, n_3573);
-  not gc133 (wc133, n_3574);
-  or g4667 (n_4141, wc134, n_3583);
-  not gc134 (wc134, n_3578);
-  or g4668 (n_4144, wc135, n_3579);
-  not gc135 (wc135, n_3580);
-  or g4669 (n_4146, wc136, n_3589);
-  not gc136 (wc136, n_3584);
-  or g4670 (n_4149, wc137, n_3585);
-  not gc137 (wc137, n_3586);
-  or g4671 (n_4203, wc138, n_3655);
-  not gc138 (wc138, n_3650);
-  or g4672 (n_4206, wc139, n_3651);
-  not gc139 (wc139, n_3652);
-  or g4673 (n_4208, wc140, n_3661);
-  not gc140 (wc140, n_3656);
-  and g4674 (n_3728, wc141, n_3592);
-  not gc141 (wc141, n_3593);
-  and g4675 (n_3775, wc142, n_3646);
-  not gc142 (wc142, n_3647);
-  and g4676 (n_3980, wc143, n_3572);
-  not gc143 (wc143, n_3709);
-  and g4677 (n_3716, wc144, n_3713);
-  not gc144 (wc144, n_3708);
-  and g4678 (n_3726, wc145, n_3723);
-  not gc145 (wc145, n_3718);
-  and g4679 (n_3786, wc146, n_3783);
-  not gc146 (wc146, n_3778);
-  and g4680 (n_4034, wc147, n_3668);
-  not gc147 (wc147, n_3789);
-  and g4681 (n_3897, n_3813, wc148);
-  not gc148 (wc148, n_3814);
-  and g4682 (n_3987, wc149, n_3721);
-  not gc149 (wc149, n_3823);
-  or g4683 (n_4151, wc150, n_3595);
-  not gc150 (wc150, n_3590);
-  or g4684 (n_4154, wc151, n_3591);
-  not gc151 (wc151, n_3592);
-  or g4685 (n_4197, wc152, n_3649);
-  not gc152 (wc152, n_3644);
-  or g4686 (n_4200, wc153, n_3645);
-  not gc153 (wc153, n_3646);
-  and g4687 (n_3735, wc154, n_3598);
-  not gc154 (wc154, n_3599);
-  and g4688 (n_3768, wc155, n_3640);
-  not gc155 (wc155, n_3641);
-  and g4689 (n_3820, wc156, n_3715);
-  not gc156 (wc156, n_3716);
-  and g4690 (n_3828, wc157, n_3584);
-  not gc157 (wc157, n_3719);
-  and g4691 (n_3832, wc158, n_3725);
-  not gc158 (wc158, n_3726);
-  or g4692 (n_3910, wc159, n_3601);
-  not gc159 (wc159, n_3731);
-  or g4693 (n_3946, wc160, n_3649);
-  not gc160 (wc160, n_3771);
-  and g4694 (n_3873, wc161, n_3656);
-  not gc161 (wc161, n_3779);
-  and g4695 (n_3877, wc162, n_3785);
-  not gc162 (wc162, n_3786);
-  and g4696 (n_3900, n_3817, wc163);
-  not gc163 (wc163, n_3818);
-  or g4697 (n_3994, wc164, n_3595);
-  not gc164 (wc164, n_3905);
-  or g4698 (n_4156, wc165, n_3601);
-  not gc165 (wc165, n_3596);
-  or g4699 (n_4159, wc166, n_3597);
-  not gc166 (wc166, n_3598);
-  or g4700 (n_4162, wc167, n_3607);
-  not gc167 (wc167, n_3602);
-  or g4701 (n_4167, wc168, n_3613);
-  not gc168 (wc168, n_3608);
-  or g4702 (n_4190, wc169, n_3633);
-  not gc169 (wc169, n_3634);
-  or g4703 (n_4192, wc170, n_3643);
-  not gc170 (wc170, n_3638);
-  or g4704 (n_4195, wc171, n_3639);
-  not gc171 (wc171, n_3640);
-  and g4705 (n_3738, wc172, n_3604);
-  not gc172 (wc172, n_3605);
-  and g4706 (n_3745, wc173, n_3610);
-  not gc173 (wc173, n_3611);
-  and g4707 (n_3748, wc174, n_3616);
-  not gc174 (wc174, n_3617);
-  and g4708 (n_3755, wc175, n_3622);
-  not gc175 (wc175, n_3623);
-  and g4709 (n_3758, wc176, n_3628);
-  not gc176 (wc176, n_3629);
-  and g4710 (n_3765, wc177, n_3634);
-  not gc177 (wc177, n_3635);
-  and g4711 (n_3911, wc178, n_3596);
-  not gc178 (wc178, n_3729);
-  and g4712 (n_3736, wc179, n_3733);
-  not gc179 (wc179, n_3728);
-  or g4713 (n_3842, wc180, n_3613);
-  not gc180 (wc180, n_3741);
-  or g4714 (n_4041, wc181, n_3625);
-  not gc181 (wc181, n_3751);
-  or g4715 (n_3857, wc182, n_3637);
-  not gc182 (wc182, n_3761);
-  and g4716 (n_3776, wc183, n_3773);
-  not gc183 (wc183, n_3768);
-  and g4717 (n_3825, wc184, n_3721);
-  not gc184 (wc184, n_3820);
-  and g4718 (n_3959, wc185, n_3781);
-  not gc185 (wc185, n_3868);
-  or g4719 (n_4165, wc186, n_3603);
-  not gc186 (wc186, n_3604);
-  or g4720 (n_4170, wc187, n_3609);
-  not gc187 (wc187, n_3610);
-  or g4721 (n_4171, wc188, n_3619);
-  not gc188 (wc188, n_3614);
-  or g4722 (n_4174, wc189, n_3615);
-  not gc189 (wc189, n_3616);
-  or g4723 (n_4176, wc190, n_3625);
-  not gc190 (wc190, n_3620);
-  or g4724 (n_4179, wc191, n_3621);
-  not gc191 (wc191, n_3622);
-  or g4725 (n_4182, wc192, n_3631);
-  not gc192 (wc192, n_3626);
-  or g4726 (n_4185, wc193, n_3627);
-  not gc193 (wc193, n_3628);
-  or g4727 (n_4187, wc194, n_3637);
-  not gc194 (wc194, n_3632);
-  and g4728 (n_3835, wc195, n_3735);
-  not gc195 (wc195, n_3736);
-  and g4729 (n_3746, wc196, n_3743);
-  not gc196 (wc196, n_3738);
-  and g4730 (n_3756, wc197, n_3753);
-  not gc197 (wc197, n_3748);
-  and g4731 (n_3766, wc198, n_3763);
-  not gc198 (wc198, n_3758);
-  and g4732 (n_3947, wc199, n_3644);
-  not gc199 (wc199, n_3769);
-  and g4733 (n_3865, wc200, n_3775);
-  not gc200 (wc200, n_3776);
-  and g4734 (n_3985, wc201, n_3578);
-  not gc201 (wc201, n_3821);
-  and g4735 (n_3988, wc202, n_3718);
-  not gc202 (wc202, n_3825);
-  and g4736 (n_3991, n_3828, wc203);
-  not gc203 (wc203, n_3829);
-  and g4737 (n_3902, n_3832, wc204);
-  not gc204 (wc204, n_3833);
-  and g4738 (n_3923, wc205, n_3741);
-  not gc205 (wc205, n_3838);
-  and g4739 (n_4050, wc206, n_3761);
-  not gc206 (wc206, n_3853);
-  or g4740 (n_4002, n_3910, wc207);
-  not gc207 (wc207, n_3905);
-  or g4741 (n_4006, wc208, n_3838);
-  not gc208 (wc208, n_3905);
-  or g4742 (n_3976, wc209, n_3571);
-  not gc209 (wc209, n_3974);
-  or g4743 (n_3981, n_3978, wc210);
-  not gc210 (wc210, n_3974);
-  or g4744 (n_3983, wc211, n_3823);
-  not gc211 (wc211, n_3974);
-  or g4745 (n_3997, n_3994, wc212);
-  not gc212 (wc212, n_3974);
-  or g4746 (n_4001, n_3998, wc213);
-  not gc213 (wc213, n_3974);
-  and g4747 (n_3843, wc214, n_3608);
-  not gc214 (wc214, n_3739);
-  and g4748 (n_3847, wc215, n_3745);
-  not gc215 (wc215, n_3746);
-  and g4749 (n_4043, wc216, n_3620);
-  not gc216 (wc216, n_3749);
-  and g4750 (n_3850, wc217, n_3755);
-  not gc217 (wc217, n_3756);
-  and g4751 (n_3858, wc218, n_3632);
-  not gc218 (wc218, n_3759);
-  and g4752 (n_3862, wc219, n_3765);
-  not gc219 (wc219, n_3766);
-  and g4753 (n_3840, wc220, n_3741);
-  not gc220 (wc220, n_3835);
-  and g4754 (n_3870, wc221, n_3781);
-  not gc221 (wc221, n_3865);
-  and g4755 (n_3908, wc222, n_3731);
-  not gc222 (wc222, n_3902);
-  and g4756 (n_3921, wc223, n_3918);
-  not gc223 (wc223, n_3902);
-  or g4757 (n_4057, wc224, n_3643);
-  not gc224 (wc224, n_3941);
-  or g4758 (n_4065, n_3946, wc225);
-  not gc225 (wc225, n_3941);
-  or g4759 (n_4069, wc226, n_3868);
-  not gc226 (wc226, n_3941);
-  and g4760 (n_3920, wc227, n_3602);
-  not gc227 (wc227, n_3836);
-  and g4761 (n_3925, wc228, n_3738);
-  not gc228 (wc228, n_3840);
-  and g4762 (n_3855, wc229, n_3761);
-  not gc229 (wc229, n_3850);
-  and g4763 (n_3956, wc230, n_3650);
-  not gc230 (wc230, n_3866);
-  and g4764 (n_3961, wc231, n_3778);
-  not gc231 (wc231, n_3870);
-  and g4765 (n_3966, n_3873, wc232);
-  not gc232 (wc232, n_3874);
-  and g4766 (n_3971, n_3877, wc233);
-  not gc233 (wc233, n_3878);
-  and g4767 (n_3996, wc234, n_3590);
-  not gc234 (wc234, n_3903);
-  and g4768 (n_4000, wc235, n_3728);
-  not gc235 (wc235, n_3908);
-  and g4769 (n_4004, n_3911, wc236);
-  not gc236 (wc236, n_3912);
-  and g4770 (n_4008, n_3835, wc237);
-  not gc237 (wc237, n_3915);
-  and g4771 (n_3926, n_3923, wc238);
-  not gc238 (wc238, n_3902);
-  and g4772 (n_3931, wc239, n_3928);
-  not gc239 (wc239, n_3902);
-  and g4773 (n_3936, wc240, n_3933);
-  not gc240 (wc240, n_3902);
-  or g4774 (n_4005, n_4002, wc241);
-  not gc241 (wc241, n_3974);
-  or g4775 (n_4009, n_4006, wc242);
-  not gc242 (wc242, n_3974);
-  or g4776 (n_4013, n_4010, wc243);
-  not gc243 (wc243, n_3974);
-  and g4777 (n_4090, wc244, n_3791);
-  not gc244 (wc244, n_4029);
-  and g4778 (n_3930, n_3843, wc245);
-  not gc245 (wc245, n_3844);
-  and g4779 (n_3935, n_3847, wc246);
-  not gc246 (wc246, n_3848);
-  and g4780 (n_4048, wc247, n_3626);
-  not gc247 (wc247, n_3851);
-  and g4781 (n_4051, wc248, n_3758);
-  not gc248 (wc248, n_3855);
-  and g4782 (n_4054, n_3858, wc249);
-  not gc249 (wc249, n_3859);
-  and g4783 (n_3938, n_3862, wc250);
-  not gc250 (wc250, n_3863);
-  or g4784 (n_4017, n_4014, wc251);
-  not gc251 (wc251, n_3974);
-  or g4785 (n_4021, n_4018, wc252);
-  not gc252 (wc252, n_3974);
-  or g4786 (n_4025, n_4022, wc253);
-  not gc253 (wc253, n_3974);
-  and g4787 (n_4012, n_3920, wc254);
-  not gc254 (wc254, n_3921);
-  and g4788 (n_4016, wc255, n_3925);
-  not gc255 (wc255, n_3926);
-  and g4789 (n_3944, wc256, n_3771);
-  not gc256 (wc256, n_3938);
-  and g4790 (n_3957, wc257, n_3954);
-  not gc257 (wc257, n_3938);
-  and g4791 (n_3962, wc258, n_3959);
-  not gc258 (wc258, n_3938);
-  and g4792 (n_3967, wc259, n_3964);
-  not gc259 (wc259, n_3938);
-  and g4793 (n_3972, wc260, n_3969);
-  not gc260 (wc260, n_3938);
-  and g4794 (n_4020, n_3930, wc261);
-  not gc261 (wc261, n_3931);
-  and g4795 (n_4024, n_3935, wc262);
-  not gc262 (wc262, n_3936);
-  and g4796 (n_4059, wc263, n_3638);
-  not gc263 (wc263, n_3939);
-  and g4797 (n_4063, wc264, n_3768);
-  not gc264 (wc264, n_3944);
-  and g4798 (n_4067, n_3947, wc265);
-  not gc265 (wc265, n_3948);
-  and g4799 (n_4071, n_3865, wc266);
-  not gc266 (wc266, n_3951);
-  and g4800 (n_4075, wc267, n_3956);
-  not gc267 (wc267, n_3957);
-  and g4801 (n_4079, wc268, n_3961);
-  not gc268 (wc268, n_3962);
-  and g4802 (n_4083, wc269, n_3966);
-  not gc269 (wc269, n_3967);
-  and g4803 (n_4026, wc270, n_3971);
-  not gc270 (wc270, n_3972);
-  and g4804 (n_4031, wc271, n_3791);
-  not gc271 (wc271, n_4026);
-  and g4805 (n_4088, wc272, n_3662);
-  not gc272 (wc272, n_4027);
-  and g4806 (n_4091, wc273, n_3788);
-  not gc273 (wc273, n_4031);
-  and g4807 (n_4094, n_4034, wc274);
-  not gc274 (wc274, n_4035);
-  or g4808 (n_4039, wc275, n_3619);
-  not gc275 (wc275, n_4037);
-  or g4809 (n_4044, n_4041, wc276);
-  not gc276 (wc276, n_4037);
-  or g4810 (n_4046, wc277, n_3853);
-  not gc277 (wc277, n_4037);
-  or g4811 (n_4060, n_4057, wc278);
-  not gc278 (wc278, n_4037);
-  or g4812 (n_4064, wc279, n_4061);
-  not gc279 (wc279, n_4037);
-  or g4813 (n_4068, n_4065, wc280);
-  not gc280 (wc280, n_4037);
-  or g4814 (n_4072, n_4069, wc281);
-  not gc281 (wc281, n_4037);
-  or g4815 (n_4076, wc282, n_4073);
-  not gc282 (wc282, n_4037);
-  or g4816 (n_4080, wc283, n_4077);
-  not gc283 (wc283, n_4037);
-  or g4817 (n_4084, wc284, n_4081);
-  not gc284 (wc284, n_4037);
-  or g4818 (n_4086, wc285, n_4029);
-  not gc285 (wc285, n_4037);
-endmodule
-
-module mult_unsigned_GENERIC(A, B, Z);
-  input [25:0] A, B;
-  output [51:0] Z;
-  wire [25:0] A, B;
-  wire [51:0] Z;
-  mult_unsigned_GENERIC_REAL g1(.A (A), .B (B), .Z (Z));
-endmodule
-
diff --git a/source_code/fpu_integration/fv/FPU_top_level/g1.v.gz b/source_code/fpu_integration/fv/FPU_top_level/g1.v.gz
deleted file mode 100644
index b8c5acf..0000000
Binary files a/source_code/fpu_integration/fv/FPU_top_level/g1.v.gz and /dev/null differ
diff --git a/source_code/fpu_integration/fv/FPU_top_level/rtl_to_g1.do b/source_code/fpu_integration/fv/FPU_top_level/rtl_to_g1.do
deleted file mode 100644
index 323048e..0000000
--- a/source_code/fpu_integration/fv/FPU_top_level/rtl_to_g1.do
+++ /dev/null
@@ -1,379 +0,0 @@
-// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-tclmode
-set env(RC_VERSION) "RC14.28 - v14.20-s067_1"
-vpxmode
-set dofile abort exit
-usage -auto -elapse
-set log file fv/FPU_top_level/rtl_to_g1.log -replace
-tclmode
-set ver [lindex [split [lindex [get_version_info] 0] "-"] 0]
-vpxmode
-tclmode
-set env(CDN_SYNTH_ROOT) /package/eda/cadence/RC142/tools
-set CDN_SYNTH_ROOT /package/eda/cadence/RC142/tools
-vpxmode
-tclmode
-if {$ver >= 08.10} {
-  vpx set naming style rc
-}
-vpxmode
-set naming rule "%s[%d]" -instance_array
-set naming rule "%s_reg" -register -golden
-set naming rule "%L.%s" "%L[%d].%s" "%s" -instance
-set naming rule "%L.%s" "%L[%d].%s" "%s" -variable
-set undefined cell black_box -noascend -both
-set hdl options -VERILOG_INCLUDE_DIR "sep:src:cwd"
-set undriven signal Z -golden
-
-add search path -library /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20
-read library -statetable -liberty -both  \
-	/package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/MITLL90_STDLIB_8T.tt1p2v25c.lib
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/FPU_top_level.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/FPU_top_level.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_8b.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_8b.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/mul_26b.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/mul_26b.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/left_shift.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/left_shift.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/subtract.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/subtract.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder_sub.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/rounder_sub.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_compare.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_compare.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/right_shift.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/right_shift.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/u_to_s.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/u_to_s.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_26b.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_26b.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/s_to_u.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/s_to_u.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step1.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step1.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step2.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step2.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step3.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/ADD_step3.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step1.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step1.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step2.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/MUL_step2.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step1.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step1.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step2.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step2.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sub_26b.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sub_26b.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sign_determine.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/sign_determine.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/c_to_cp.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/c_to_cp.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step3.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/SUB_step3.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_comparesub.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/int_comparesub.sv
-}
-vpxmode
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/determine_frac_status.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/determine_frac_status.sv
-}
-vpxmode
-
-elaborate design -golden -root FPU_top_level -rootonly
-
-tclmode
-if {$ver < 13.10} {
-vpx read design -verilog -revised -lastmod -noelab \
-	-unzip fv/FPU_top_level/g1.v.gz
-} else {
-vpx read design -verilog95 -revised -lastmod -noelab \
-	-unzip fv/FPU_top_level/g1.v.gz
-}
-vpxmode
-
-elaborate design -revised -root FPU_top_level
-
-tclmode
-set ver [lindex [split [lindex [get_version_info] 0] "-"] 0]
-if {$ver < 13.10} {
-vpx substitute blackbox model -golden
-}
-vpxmode
-report design data
-report black box
-
-uniquify -all -nolib
-set flatten model -seq_constant -seq_constant_x_to 0
-set flatten model -nodff_to_dlat_zero -nodff_to_dlat_feedback
-set parallel option -threads 4 -license xl -norelease_license
-set analyze option -auto
-
-write hier_compare dofile fv/FPU_top_level/hier_rtl_to_g1.do \
-	-noexact_pin_match -constraint -usage -replace -balanced_extraction -input_output_pin_equivalence \
-	-prepend_string "analyze datapath -module -verbose; usage; analyze datapath  -verbose"
-run hier_compare fv/FPU_top_level/hier_rtl_to_g1.do -dynamic_hierarchy
-// report hier_compare result -dynamicflattened
-set system mode lec
-tclmode
-puts "No of diff points    = [get_compare_points -NONequivalent -count]"
-if {[get_compare_points -NONequivalent -count] > 0} {
-    puts "------------------------------------"
-    puts "ERROR: Different Key Points detected"
-    puts "------------------------------------"
-#     foreach i [get_compare_points -NONequivalent] {
-#         vpx report test vector [get_keypoint $i]
-#         puts "     ----------------------------"
-#     }
-}
-vpxmode
-exit -force
diff --git a/source_code/fpu_integration/fv/adder_26b/dp_info.v b/source_code/fpu_integration/fv/adder_26b/dp_info.v
deleted file mode 100644
index ea6f726..0000000
--- a/source_code/fpu_integration/fv/adder_26b/dp_info.v
+++ /dev/null
@@ -1,383 +0,0 @@
-module add_unsigned_GENERIC_REAL(A, B, Z);
-// synthesis_equation add_unsigned
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  wire n_83, n_86, n_89, n_90, n_91, n_92, n_93, n_94;
-  wire n_96, n_97, n_98, n_99, n_100, n_102, n_103, n_104;
-  wire n_105, n_106, n_108, n_109, n_110, n_111, n_112, n_114;
-  wire n_115, n_116, n_117, n_118, n_120, n_121, n_122, n_123;
-  wire n_124, n_126, n_127, n_128, n_129, n_130, n_132, n_133;
-  wire n_134, n_135, n_136, n_138, n_139, n_140, n_141, n_142;
-  wire n_144, n_145, n_146, n_147, n_148, n_150, n_151, n_152;
-  wire n_153, n_154, n_156, n_157, n_158, n_159, n_160, n_162;
-  wire n_163, n_165, n_166, n_167, n_168, n_169, n_170, n_172;
-  wire n_174, n_176, n_177, n_179, n_180, n_182, n_184, n_186;
-  wire n_187, n_189, n_190, n_192, n_194, n_196, n_197, n_199;
-  wire n_200, n_202, n_204, n_206, n_207, n_209, n_210, n_212;
-  wire n_214, n_216, n_217, n_219, n_220, n_221, n_224, n_226;
-  wire n_228, n_229, n_230, n_232, n_233, n_234, n_236, n_237;
-  wire n_238, n_239, n_241, n_243, n_245, n_246, n_247, n_249;
-  wire n_250, n_251, n_253, n_254, n_256, n_258, n_260, n_261;
-  wire n_262, n_264, n_265, n_266, n_268, n_270, n_271, n_272;
-  wire n_274, n_275, n_277, n_278, n_279, n_280, n_281, n_282;
-  wire n_283, n_284, n_285, n_286, n_287, n_288, n_289, n_290;
-  wire n_291, n_293, n_296, n_303, n_305, n_306, n_307, n_309;
-  wire n_310, n_312, n_313, n_314, n_315, n_316, n_317, n_318;
-  wire n_319, n_320, n_321, n_322, n_323, n_325, n_326, n_327;
-  wire n_329, n_330, n_335, n_336, n_338, n_339, n_340, n_342;
-  wire n_343, n_344, n_345, n_347, n_348, n_349, n_351, n_352;
-  wire n_353, n_354, n_356, n_357, n_359, n_360, n_362, n_363;
-  wire n_364, n_365, n_367, n_368, n_369, n_371, n_372, n_373;
-  wire n_374, n_376, n_377, n_379, n_380, n_382, n_383, n_384;
-  wire n_385, n_387, n_388, n_389, n_390, n_392, n_393, n_394;
-  wire n_395;
-  xor g1 (Z[0], A[0], B[0]);
-  nand g2 (n_83, A[0], B[0]);
-  nor g6 (n_86, A[1], B[1]);
-  nand g7 (n_89, A[1], B[1]);
-  nor g8 (n_96, A[2], B[2]);
-  nand g9 (n_91, A[2], B[2]);
-  nor g10 (n_92, A[3], B[3]);
-  nand g11 (n_93, A[3], B[3]);
-  nor g12 (n_102, A[4], B[4]);
-  nand g13 (n_97, A[4], B[4]);
-  nor g14 (n_98, A[5], B[5]);
-  nand g15 (n_99, A[5], B[5]);
-  nor g16 (n_108, A[6], B[6]);
-  nand g17 (n_103, A[6], B[6]);
-  nor g18 (n_104, A[7], B[7]);
-  nand g19 (n_105, A[7], B[7]);
-  nor g20 (n_114, A[8], B[8]);
-  nand g21 (n_109, A[8], B[8]);
-  nor g22 (n_110, A[9], B[9]);
-  nand g23 (n_111, A[9], B[9]);
-  nor g24 (n_120, A[10], B[10]);
-  nand g25 (n_115, A[10], B[10]);
-  nor g26 (n_116, A[11], B[11]);
-  nand g27 (n_117, A[11], B[11]);
-  nor g28 (n_126, A[12], B[12]);
-  nand g29 (n_121, A[12], B[12]);
-  nor g30 (n_122, A[13], B[13]);
-  nand g31 (n_123, A[13], B[13]);
-  nor g32 (n_132, A[14], B[14]);
-  nand g33 (n_127, A[14], B[14]);
-  nor g34 (n_128, A[15], B[15]);
-  nand g35 (n_129, A[15], B[15]);
-  nor g36 (n_138, A[16], B[16]);
-  nand g37 (n_133, A[16], B[16]);
-  nor g38 (n_134, A[17], B[17]);
-  nand g39 (n_135, A[17], B[17]);
-  nor g40 (n_144, A[18], B[18]);
-  nand g41 (n_139, A[18], B[18]);
-  nor g42 (n_140, A[19], B[19]);
-  nand g43 (n_141, A[19], B[19]);
-  nor g44 (n_150, A[20], B[20]);
-  nand g45 (n_145, A[20], B[20]);
-  nor g46 (n_146, A[21], B[21]);
-  nand g47 (n_147, A[21], B[21]);
-  nor g48 (n_156, A[22], B[22]);
-  nand g49 (n_151, A[22], B[22]);
-  nor g50 (n_152, A[23], B[23]);
-  nand g51 (n_153, A[23], B[23]);
-  nor g52 (n_162, A[24], B[24]);
-  nand g53 (n_157, A[24], B[24]);
-  nor g54 (n_158, A[25], B[25]);
-  nand g55 (n_159, A[25], B[25]);
-  nor g56 (n_219, A[26], B[26]);
-  nand g57 (n_221, A[26], B[26]);
-  nand g60 (n_163, n_89, n_90);
-  nor g61 (n_94, n_91, n_92);
-  nor g64 (n_166, n_96, n_92);
-  nor g65 (n_100, n_97, n_98);
-  nor g68 (n_172, n_102, n_98);
-  nor g69 (n_106, n_103, n_104);
-  nor g72 (n_174, n_108, n_104);
-  nor g73 (n_112, n_109, n_110);
-  nor g76 (n_182, n_114, n_110);
-  nor g77 (n_118, n_115, n_116);
-  nor g80 (n_184, n_120, n_116);
-  nor g81 (n_124, n_121, n_122);
-  nor g84 (n_192, n_126, n_122);
-  nor g85 (n_130, n_127, n_128);
-  nor g88 (n_194, n_132, n_128);
-  nor g89 (n_136, n_133, n_134);
-  nor g92 (n_202, n_138, n_134);
-  nor g93 (n_142, n_139, n_140);
-  nor g96 (n_204, n_144, n_140);
-  nor g97 (n_148, n_145, n_146);
-  nor g100 (n_212, n_150, n_146);
-  nor g101 (n_154, n_151, n_152);
-  nor g104 (n_214, n_156, n_152);
-  nor g105 (n_160, n_157, n_158);
-  nor g108 (n_224, n_162, n_158);
-  nand g111 (n_338, n_91, n_165);
-  nand g112 (n_168, n_166, n_163);
-  nand g113 (n_226, n_167, n_168);
-  nor g114 (n_170, n_108, n_169);
-  nand g123 (n_234, n_172, n_174);
-  nor g124 (n_180, n_120, n_179);
-  nand g133 (n_241, n_182, n_184);
-  nor g134 (n_190, n_132, n_189);
-  nand g143 (n_249, n_192, n_194);
-  nor g144 (n_200, n_144, n_199);
-  nand g153 (n_256, n_202, n_204);
-  nor g154 (n_210, n_156, n_209);
-  nand g163 (n_264, n_212, n_214);
-  nand g171 (n_342, n_97, n_228);
-  nand g172 (n_229, n_172, n_226);
-  nand g173 (n_344, n_169, n_229);
-  nand g176 (n_347, n_232, n_233);
-  nand g179 (n_268, n_236, n_237);
-  nor g180 (n_239, n_126, n_238);
-  nor g183 (n_278, n_126, n_241);
-  nor g189 (n_247, n_245, n_238);
-  nor g192 (n_284, n_241, n_245);
-  nor g193 (n_251, n_249, n_238);
-  nor g196 (n_287, n_241, n_249);
-  nor g197 (n_254, n_150, n_253);
-  nor g200 (n_313, n_150, n_256);
-  nor g206 (n_262, n_260, n_253);
-  nor g209 (n_319, n_256, n_260);
-  nor g210 (n_266, n_264, n_253);
-  nor g213 (n_293, n_256, n_264);
-  nand g216 (n_351, n_109, n_270);
-  nand g217 (n_271, n_182, n_268);
-  nand g218 (n_353, n_179, n_271);
-  nand g221 (n_356, n_274, n_275);
-  nand g224 (n_359, n_238, n_277);
-  nand g225 (n_280, n_278, n_268);
-  nand g226 (n_362, n_279, n_280);
-  nand g227 (n_283, n_281, n_268);
-  nand g228 (n_364, n_282, n_283);
-  nand g229 (n_286, n_284, n_268);
-  nand g230 (n_367, n_285, n_286);
-  nand g231 (n_289, n_287, n_268);
-  nand g232 (n_303, n_288, n_289);
-  nor g233 (n_291, n_162, n_290);
-  nand g242 (n_327, n_224, n_293);
-  nand g250 (n_371, n_133, n_305);
-  nand g251 (n_306, n_202, n_303);
-  nand g252 (n_373, n_199, n_306);
-  nand g255 (n_376, n_309, n_310);
-  nand g258 (n_379, n_253, n_312);
-  nand g259 (n_315, n_313, n_303);
-  nand g260 (n_382, n_314, n_315);
-  nand g261 (n_318, n_316, n_303);
-  nand g262 (n_384, n_317, n_318);
-  nand g263 (n_321, n_319, n_303);
-  nand g264 (n_387, n_320, n_321);
-  nand g265 (n_322, n_293, n_303);
-  nand g266 (n_389, n_290, n_322);
-  nand g269 (n_392, n_325, n_326);
-  nand g272 (n_394, n_329, n_330);
-  xnor g279 (Z[2], n_163, n_336);
-  xnor g282 (Z[3], n_338, n_339);
-  xnor g284 (Z[4], n_226, n_340);
-  xnor g287 (Z[5], n_342, n_343);
-  xnor g289 (Z[6], n_344, n_345);
-  xnor g292 (Z[7], n_347, n_348);
-  xnor g294 (Z[8], n_268, n_349);
-  xnor g297 (Z[9], n_351, n_352);
-  xnor g299 (Z[10], n_353, n_354);
-  xnor g302 (Z[11], n_356, n_357);
-  xnor g305 (Z[12], n_359, n_360);
-  xnor g308 (Z[13], n_362, n_363);
-  xnor g310 (Z[14], n_364, n_365);
-  xnor g313 (Z[15], n_367, n_368);
-  xnor g315 (Z[16], n_303, n_369);
-  xnor g318 (Z[17], n_371, n_372);
-  xnor g320 (Z[18], n_373, n_374);
-  xnor g323 (Z[19], n_376, n_377);
-  xnor g326 (Z[20], n_379, n_380);
-  xnor g329 (Z[21], n_382, n_383);
-  xnor g331 (Z[22], n_384, n_385);
-  xnor g334 (Z[23], n_387, n_388);
-  xnor g336 (Z[24], n_389, n_390);
-  xnor g339 (Z[25], n_392, n_393);
-  xnor g341 (Z[26], n_394, n_395);
-  or g344 (n_90, n_83, n_86);
-  and g345 (n_167, wc, n_93);
-  not gc (wc, n_94);
-  and g346 (n_169, wc0, n_99);
-  not gc0 (wc0, n_100);
-  and g347 (n_176, wc1, n_105);
-  not gc1 (wc1, n_106);
-  and g348 (n_179, wc2, n_111);
-  not gc2 (wc2, n_112);
-  and g349 (n_186, wc3, n_117);
-  not gc3 (wc3, n_118);
-  and g350 (n_189, wc4, n_123);
-  not gc4 (wc4, n_124);
-  and g351 (n_196, wc5, n_129);
-  not gc5 (wc5, n_130);
-  and g352 (n_199, wc6, n_135);
-  not gc6 (wc6, n_136);
-  and g353 (n_206, wc7, n_141);
-  not gc7 (wc7, n_142);
-  and g354 (n_209, wc8, n_147);
-  not gc8 (wc8, n_148);
-  and g355 (n_216, wc9, n_153);
-  not gc9 (wc9, n_154);
-  and g356 (n_220, wc10, n_159);
-  not gc10 (wc10, n_160);
-  or g357 (n_230, wc11, n_108);
-  not gc11 (wc11, n_172);
-  or g358 (n_272, wc12, n_120);
-  not gc12 (wc12, n_182);
-  or g359 (n_245, wc13, n_132);
-  not gc13 (wc13, n_192);
-  or g360 (n_307, wc14, n_144);
-  not gc14 (wc14, n_202);
-  or g361 (n_260, wc15, n_156);
-  not gc15 (wc15, n_212);
-  or g362 (n_335, wc16, n_86);
-  not gc16 (wc16, n_89);
-  or g363 (n_336, wc17, n_96);
-  not gc17 (wc17, n_91);
-  or g364 (n_339, wc18, n_92);
-  not gc18 (wc18, n_93);
-  or g365 (n_340, wc19, n_102);
-  not gc19 (wc19, n_97);
-  or g366 (n_343, wc20, n_98);
-  not gc20 (wc20, n_99);
-  or g367 (n_345, wc21, n_108);
-  not gc21 (wc21, n_103);
-  or g368 (n_348, wc22, n_104);
-  not gc22 (wc22, n_105);
-  or g369 (n_349, wc23, n_114);
-  not gc23 (wc23, n_109);
-  or g370 (n_352, wc24, n_110);
-  not gc24 (wc24, n_111);
-  or g371 (n_354, wc25, n_120);
-  not gc25 (wc25, n_115);
-  or g372 (n_357, wc26, n_116);
-  not gc26 (wc26, n_117);
-  or g373 (n_360, wc27, n_126);
-  not gc27 (wc27, n_121);
-  or g374 (n_363, wc28, n_122);
-  not gc28 (wc28, n_123);
-  or g375 (n_365, wc29, n_132);
-  not gc29 (wc29, n_127);
-  or g376 (n_368, wc30, n_128);
-  not gc30 (wc30, n_129);
-  or g377 (n_369, wc31, n_138);
-  not gc31 (wc31, n_133);
-  or g378 (n_372, wc32, n_134);
-  not gc32 (wc32, n_135);
-  or g379 (n_374, wc33, n_144);
-  not gc33 (wc33, n_139);
-  or g380 (n_377, wc34, n_140);
-  not gc34 (wc34, n_141);
-  or g381 (n_380, wc35, n_150);
-  not gc35 (wc35, n_145);
-  or g382 (n_383, wc36, n_146);
-  not gc36 (wc36, n_147);
-  or g383 (n_385, wc37, n_156);
-  not gc37 (wc37, n_151);
-  or g384 (n_388, wc38, n_152);
-  not gc38 (wc38, n_153);
-  or g385 (n_390, wc39, n_162);
-  not gc39 (wc39, n_157);
-  or g386 (n_393, wc40, n_158);
-  not gc40 (wc40, n_159);
-  or g387 (n_395, wc41, n_219);
-  not gc41 (wc41, n_221);
-  and g388 (n_177, wc42, n_174);
-  not gc42 (wc42, n_169);
-  and g389 (n_187, wc43, n_184);
-  not gc43 (wc43, n_179);
-  and g390 (n_197, wc44, n_194);
-  not gc44 (wc44, n_189);
-  and g391 (n_207, wc45, n_204);
-  not gc45 (wc45, n_199);
-  and g392 (n_217, wc46, n_214);
-  not gc46 (wc46, n_209);
-  and g393 (n_281, wc47, n_192);
-  not gc47 (wc47, n_241);
-  and g394 (n_316, wc48, n_212);
-  not gc48 (wc48, n_256);
-  xor g395 (Z[1], n_83, n_335);
-  or g396 (n_165, wc49, n_96);
-  not gc49 (wc49, n_163);
-  and g397 (n_232, wc50, n_103);
-  not gc50 (wc50, n_170);
-  and g398 (n_236, wc51, n_176);
-  not gc51 (wc51, n_177);
-  and g399 (n_274, wc52, n_115);
-  not gc52 (wc52, n_180);
-  and g400 (n_238, wc53, n_186);
-  not gc53 (wc53, n_187);
-  and g401 (n_246, wc54, n_127);
-  not gc54 (wc54, n_190);
-  and g402 (n_250, wc55, n_196);
-  not gc55 (wc55, n_197);
-  and g403 (n_309, wc56, n_139);
-  not gc56 (wc56, n_200);
-  and g404 (n_253, wc57, n_206);
-  not gc57 (wc57, n_207);
-  and g405 (n_261, wc58, n_151);
-  not gc58 (wc58, n_210);
-  and g406 (n_265, wc59, n_216);
-  not gc59 (wc59, n_217);
-  or g407 (n_323, wc60, n_162);
-  not gc60 (wc60, n_293);
-  and g408 (n_243, wc61, n_192);
-  not gc61 (wc61, n_238);
-  and g409 (n_258, wc62, n_212);
-  not gc62 (wc62, n_253);
-  or g410 (n_228, wc63, n_102);
-  not gc63 (wc63, n_226);
-  or g411 (n_233, n_230, wc64);
-  not gc64 (wc64, n_226);
-  or g412 (n_237, n_234, wc65);
-  not gc65 (wc65, n_226);
-  and g413 (n_279, wc66, n_121);
-  not gc66 (wc66, n_239);
-  and g414 (n_282, wc67, n_189);
-  not gc67 (wc67, n_243);
-  and g415 (n_285, n_246, wc68);
-  not gc68 (wc68, n_247);
-  and g416 (n_288, n_250, wc69);
-  not gc69 (wc69, n_251);
-  and g417 (n_314, wc70, n_145);
-  not gc70 (wc70, n_254);
-  and g418 (n_317, wc71, n_209);
-  not gc71 (wc71, n_258);
-  and g419 (n_320, n_261, wc72);
-  not gc72 (wc72, n_262);
-  and g420 (n_290, n_265, wc73);
-  not gc73 (wc73, n_266);
-  and g421 (n_296, wc74, n_224);
-  not gc74 (wc74, n_290);
-  or g422 (n_270, wc75, n_114);
-  not gc75 (wc75, n_268);
-  or g423 (n_275, n_272, wc76);
-  not gc76 (wc76, n_268);
-  or g424 (n_277, wc77, n_241);
-  not gc77 (wc77, n_268);
-  and g425 (n_325, wc78, n_157);
-  not gc78 (wc78, n_291);
-  and g426 (n_329, wc79, n_220);
-  not gc79 (wc79, n_296);
-  or g427 (n_305, wc80, n_138);
-  not gc80 (wc80, n_303);
-  or g428 (n_310, n_307, wc81);
-  not gc81 (wc81, n_303);
-  or g429 (n_312, wc82, n_256);
-  not gc82 (wc82, n_303);
-  or g430 (n_326, n_323, wc83);
-  not gc83 (wc83, n_303);
-  or g431 (n_330, n_327, wc84);
-  not gc84 (wc84, n_303);
-endmodule
-
-module add_unsigned_GENERIC(A, B, Z);
-  input [26:0] A, B;
-  output [26:0] Z;
-  wire [26:0] A, B;
-  wire [26:0] Z;
-  add_unsigned_GENERIC_REAL g1(.A (A), .B (B), .Z (Z));
-endmodule
-
diff --git a/source_code/fpu_integration/fv/adder_26b/g1.v.gz b/source_code/fpu_integration/fv/adder_26b/g1.v.gz
deleted file mode 100644
index 08eb2cb..0000000
Binary files a/source_code/fpu_integration/fv/adder_26b/g1.v.gz and /dev/null differ
diff --git a/source_code/fpu_integration/fv/adder_26b/rtl_to_g1.do b/source_code/fpu_integration/fv/adder_26b/rtl_to_g1.do
deleted file mode 100644
index c84970d..0000000
--- a/source_code/fpu_integration/fv/adder_26b/rtl_to_g1.do
+++ /dev/null
@@ -1,118 +0,0 @@
-// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1
-tclmode
-set env(RC_VERSION) "RC14.28 - v14.20-s067_1"
-vpxmode
-set dofile abort exit
-usage -auto -elapse
-set log file fv/adder_26b/rtl_to_g1.log -replace
-tclmode
-set ver [lindex [split [lindex [get_version_info] 0] "-"] 0]
-vpxmode
-tclmode
-set env(CDN_SYNTH_ROOT) /package/eda/cadence/RC142/tools
-set CDN_SYNTH_ROOT /package/eda/cadence/RC142/tools
-vpxmode
-tclmode
-if {$ver >= 08.10} {
-  vpx set naming style rc
-}
-vpxmode
-set naming rule "%s[%d]" -instance_array
-set naming rule "%s_reg" -register -golden
-set naming rule "%L.%s" "%L[%d].%s" "%s" -instance
-set naming rule "%L.%s" "%L[%d].%s" "%s" -variable
-set undefined cell black_box -noascend -both
-set hdl options -VERILOG_INCLUDE_DIR "sep:src:cwd"
-set undriven signal Z -golden
-
-add search path -library /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20
-read library -statetable -liberty -both  \
-	/package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/MITLL90_STDLIB_8T.tt1p2v25c.lib
-
-delete search path -all
-add search path -design ./src ./include ./tb_include
-tclmode
-if {$ver < 13.10} {
-vpx read design -enumconstraint  -define SYNTHESIS  -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_26b.sv
-} else {
-vpx read design -enumconstraint  -define SYNTHESIS  -merge bbox -golden -lastmod -noelab -systemverilog \
-	/local/scratch/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit/source/adder_26b.sv
-}
-vpxmode
-
-elaborate design -golden -root adder_26b -rootonly
-
-tclmode
-if {$ver < 13.10} {
-vpx read design -verilog -revised -lastmod -noelab \
-	-unzip fv/adder_26b/g1.v.gz
-} else {
-vpx read design -verilog95 -revised -lastmod -noelab \
-	-unzip fv/adder_26b/g1.v.gz
-}
-vpxmode
-
-elaborate design -revised -root adder_26b
-
-tclmode
-set ver [lindex [split [lindex [get_version_info] 0] "-"] 0]
-if {$ver < 13.10} {
-vpx substitute blackbox model -golden
-}
-vpxmode
-report design data
-report black box
-
-uniquify -all -nolib
-set flatten model -seq_constant -seq_constant_x_to 0
-set flatten model -nodff_to_dlat_zero -nodff_to_dlat_feedback
-set parallel option -threads 4 -license xl -norelease_license
-set analyze option -auto
-
-set system mode lec
-analyze datapath -module -verbose
-usage
-analyze datapath  -verbose
-// report mapped points
-report unmapped points -summary
-report unmapped points -extra -unreachable -notmapped
-add compared points -all
-// report compared points
-compare
-usage
-// report compare data
-report compare data -class nonequivalent -class abort -class notcompared
-report verification -verbose
-report statistics
-tclmode
-puts "No of compare points = [get_compare_points -count]"
-puts "No of diff points    = [get_compare_points -NONequivalent -count]"
-puts "No of abort points   = [get_compare_points -abort -count]"
-puts "No of unknown points = [get_compare_points -unknown -count]"
-if {[get_compare_points -count] == 0} {
-    puts "---------------------------------"
-    puts "ERROR: No compare points detected"
-    puts "---------------------------------"
-}
-if {[get_compare_points -NONequivalent -count] > 0} {
-    puts "------------------------------------"
-    puts "ERROR: Different Key Points detected"
-    puts "------------------------------------"
-#     foreach i [get_compare_points -NONequivalent] {
-#         vpx report test vector [get_keypoint $i]
-#         puts "     ----------------------------"
-#     }
-}
-if {[get_compare_points -abort -count] > 0} {
-    puts "-----------------------------"
-    puts "ERROR: Abort Points detected "
-    puts "-----------------------------"
-}
-if {[get_compare_points -unknown -count] > 0} {
-    puts "----------------------------------"
-    puts "ERROR: Unknown Key Points detected"
-    puts "----------------------------------"
-}
-vpxmode
-exit -force
diff --git a/source_code/fpu_integration/include/FPU_if.vh b/source_code/fpu_integration/include/FPU_if.vh
deleted file mode 100644
index f5062c9..0000000
--- a/source_code/fpu_integration/include/FPU_if.vh
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Zhengsen Fu, Xinlue Liu
-//Description   : Interface connect top-level to FPU
-//Last Updated  : 7/21/20
-
-`ifndef FPU_IF_VH
-`define FPU_IF_VH
-interface FPU_if(input logic n_rst, clk);
-  //signals to and out of FPU and FPU register file
-  logic f_LW; //load. Load from memory to register
-  logic f_SW; //save. Save from rs2 to memory 
-  //logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-
-  logic [4:0] f_rs1; //register selection 1. Select operand 1 from a register
-  logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  logic [4:0] f_rd; //register destination. Select which register to be written
-
-  logic [2:0] f_frm_in; //input rounding method.
-  logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [7:0] f_funct_7; //operation selection of FPU
-  logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  logic [31:0] dload_ext; //TODO: confirm the identifier
-  logic [31:0] FPU_all_out; //output when f_SW is asserted
-
-  // logic f_ready; //asserted when calculation finished by FPU
-
-  int transaction_number; //waveform debug purpose
-
-  modport fp ( //to FPU_all
-  input n_rst, clk, f_rd, f_rs1, f_rs2, f_frm_in, f_LW, f_SW, f_funct_7, dload_ext,
-  output FPU_all_out, f_flags, f_frm_out
-  );
-  
-endinterface //FPU_if
-
-
-`endif
diff --git a/source_code/fpu_integration/include/f_register_file_if.vh b/source_code/fpu_integration/include/f_register_file_if.vh
deleted file mode 100644
index 4844435..0000000
--- a/source_code/fpu_integration/include/f_register_file_if.vh
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     f_register_file_if.vh
-*   
-*   Created by:   Sean Hsu	
-*   Email:        hsu151@purdue.edu
-*   Date Created: 02/24/2020
-*   Description:  floating point register file header for the FPU; based on integer reg file header
-*/
-
-`ifndef F_REGISTER_FILE_IF_VH
-`define F_REGISTER_FILE_IF_VH
-
-`include "rv32i_types_pkg.sv"
-interface f_register_file_if();
-
-  import rv32i_types_pkg::*;
-
-  word_t        f_w_data, f_rs1_data, f_rs2_data;
-  logic clk, n_rst;
-  logic   [4:0] f_rs1, f_rs2, f_rd;
-  logic         f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX;
-  logic [2:0] f_frm_in;
-  logic [2:0] f_frm;
-  logic [4:0] f_flags;
-
-  modport rf (
-    input clk, n_rst, f_w_data, f_rs1, f_rs2, f_rd, f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX, f_frm_in, 
-    output f_rs1_data, f_rs2_data, f_frm, f_flags
-  );
-
-  modport cu (
-    output f_rs1, f_rs2, f_rd
-  );
-
-endinterface
-
-`endif //F_REGISTER_FILE_IF_VH
diff --git a/source_code/fpu_integration/include/rv32i_reg_file_if.vh b/source_code/fpu_integration/include/rv32i_reg_file_if.vh
deleted file mode 100644
index 39fc6cb..0000000
--- a/source_code/fpu_integration/include/rv32i_reg_file_if.vh
+++ /dev/null
@@ -1,47 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*
-*
-*   Filename:     include/rv32i_reg_file_if.vh
-*
-*   Created by:   John Skubic
-*   Email:        jskubic@purdue.edu
-*   Date Created: 06/14/2016
-*   Description:  Interface for the Register File 
-*/
-
-`ifndef RV32I_REG_FILE_IF_VH
-`define RV32I_REG_FILE_IF_VH
-
-interface rv32i_reg_file_if();
-
-  import rv32i_types_pkg::*;
-
-  word_t        w_data, rs1_data, rs2_data;
-  logic   [4:0] rs1, rs2, rd;
-  logic         wen;
-
-  modport rf (
-    input w_data, rs1, rs2, rd, wen,
-    output rs1_data, rs2_data
-  );
-
-  modport cu (
-    output rs1, rs2, rd
-  );
-
-endinterface
-
-`endif //RV32I_REG_FILE_IF_VH
diff --git a/source_code/fpu_integration/irun.history b/source_code/fpu_integration/irun.history
deleted file mode 100644
index bd1764d..0000000
--- a/source_code/fpu_integration/irun.history
+++ /dev/null
@@ -1,25 +0,0 @@
-s1(28Jun2020:20:30:14):  irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s2(28Jun2020:20:30:59):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s3(28Jun2020:20:32:03):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s4(01Jul2020:15:52:11):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s5(01Jul2020:15:55:03):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s6(01Jul2020:16:06:37):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s7(01Jul2020:16:16:03):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s8(01Jul2020:16:49:08):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s9(04Jul2020:15:46:26):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s10(04Jul2020:16:21:13):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s11(04Jul2020:16:21:29):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s12(04Jul2020:16:22:16):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s13(04Jul2020:16:25:51):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s14(04Jul2020:16:29:20):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s15(04Jul2020:16:29:37):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s16(04Jul2020:16:32:05):  /package/eda/cadence/INCISIVE152/tools/bin/64bit/irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv -input restore.tcl 
-s17(04Jul2020:16:37:19):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s18(04Jul2020:16:51:02):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s19(04Jul2020:17:02:58):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s20(04Jul2020:17:08:47):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s21(04Jul2020:17:24:43):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s22(04Jul2020:17:28:14):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s23(04Jul2020:17:31:51):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s24(08Jul2020:17:03:02):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-s25(08Jul2020:17:18:31):  irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
diff --git a/source_code/fpu_integration/irun.key b/source_code/fpu_integration/irun.key
deleted file mode 100644
index f5bdd21..0000000
--- a/source_code/fpu_integration/irun.key
+++ /dev/null
@@ -1 +0,0 @@
-run
diff --git a/source_code/fpu_integration/make.sh b/source_code/fpu_integration/make.sh
deleted file mode 100755
index 42b003e..0000000
--- a/source_code/fpu_integration/make.sh
+++ /dev/null
@@ -1,2 +0,0 @@
-#!/bin/bash
-make -f Makefile_hdl $1
diff --git a/source_code/fpu_integration/makefile b/source_code/fpu_integration/makefile
deleted file mode 100755
index 0bb0177..0000000
--- a/source_code/fpu_integration/makefile
+++ /dev/null
@@ -1,371 +0,0 @@
-##############################################################################
-# ECE 337 General Makefile
-# 
-# Set tab spacing to 2 spaces per tab for best viewing results
-##############################################################################
-
-# Include the common/shared variables for the course to minimize potentially stale values
-# Note: the release_make_vars already includes the common/public ones
-include /home/ecegrid/a/ece337/Course_Prod/course_make_vars
-
-##############################################################################
-# File Related Variables
-##############################################################################
-# List internal component/block files here (separate the filenames with spaces)
-# (do not include the source folder in the name)
-# NOTE: YOU WILL NEED TO SET THIS VARIABLE'S VALUE WHEN WORKING WITH HEIRARCHICAL DESIGNS
-# AND THE AUTOMATED GRADING SYSTEM
-COMPONENT_FILES	:= adder_8b.sv mul_26b.sv left_shift.sv subtract.sv rounder.sv rounder_sub.sv int_compare.sv right_shift.sv u_to_s.sv adder_26b.sv s_to_u.sv ADD_step1.sv ADD_step2.sv ADD_step3.sv MUL_step1.sv MUL_step2.sv SUB_step1.sv SUB_step2.sv sub_26b.sv sign_determine.sv subtracter_8b.sv c_to_cp.sv right_shift_minus.sv SUB_step3.sv int_comparesub.sv determine_frac_status.sv FPU_top_level.sv
-
-# Specify the name of the top level file (do not include the source folder in the name)
-# NOTE: YOU WILL NEED TO SET THIS VARIABLE'S VALUE WHEN WORKING WITH HEIRARCHICAL DESIGNS
-# AND THE AUTOMATED GRADING SYSTEM
-TOP_LEVEL_FILE	:= FPU_all.sv
-
-# Specify the filepath of the test bench you want to use (ie. tb_top_level.sv)
-# (do not include the source folder in the name)
-TEST_BENCH	:= tb_$(TOP_LEVEL_FILE)
-
-# Fill in the names of any test bench helper code files (code files referenced by your testbenches
-# other than the actual design files)( do not include the 'source/')
-TB_HELPER_FILES	:= 
-
-# Get the top level design and test_bench module names
-TB_MODULE		:= $(notdir $(basename $(TEST_BENCH)))
-TOP_MODULE	:= $(notdir $(basename $(TOP_LEVEL_FILE)))
-
-# Select the Cell Library to use with simulations
-GATE_LIB		:= $(AMI_05_LIB)
-
-S_WORK_LIB := source_work
-M_WORK_LIB := mapped_work
-
-LIB_CREATE	:= vlib
-COMPILE 		:= vlog -sv
-SIMULATE		:= vsim -Lf $(LABS_IP_LIB) -L $(GATE_LIB) -L $(GOLD_LIB) +no_glitch_msg -coverage -voptargs="+acc"
-DC_SHELL		:= dc_shell-t
-
-##############################################################################
-# Designate that all "intermediate" files created during chaing make rules
-# should not be deleted (otherwise automatically compiled or synthesized files
-# will be automatically deleted by make after it's done with them).
-##############################################################################
-.SECONDARY:
-
-##############################################################################
-# Designate targets that do not correspond directly to files so that they are
-# run every time they are called
-##############################################################################
-.PHONY: help clean veryclean
-.PHONY: print_vars
-.PHONY: sim_full_source sim_full_mapped
-.PHONY: syn_mapped
-
-##############################################################################
-# Make the default target (the one called when no specific one is invoked) to
-# output the proper usage of this makefile
-##############################################################################
-help:
-	@echo "----------------------------------------------------------------"
-	@echo "Administrative targets:"
-	@echo "  clean         - removes the temporary files"
-	@echo	"  veryclean     - removes the mapped files as well"
-	@echo	"  print_vars    - prints the contents of the variables"
-	@echo
-	@echo "Compilation targets:"
-	@echo "  source_%     - compiles the source version of an indivudal file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo "  mapped_%     - compiles the mapped version of an indivudal file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo "  mapped_tb_%  - compiles the testbench for an indivudal mapped file"
-	@echo "                 with the basename of % and outputs the feedback"
-	@echo "                 to the terminal instead of to a log file"
-	@echo
-	@echo "Simulation targets:"
-	@echo "  sim_full_source   - compiles and simulates the source version"
-	@echo "                      of a full design including its top level"
-	@echo "                      test bench"
-	@echo "  sim_full_mapped   - compiles and simulates the mapped version"
-	@echo "                      of a full design including its top level"
-	@echo "                      test bench"
-	@echo "  sim_%_source      - compiles and simulates the source version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      without a testbench"
-	@echo "  sim_%_mapped      - compiles and simulates the mapped version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      without a testbench"
-	@echo "  tbsim_%_source    - compiles and simulates the source version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      with its testbench"
-	@echo "  tbsim_%_mapped    - compiles and simulates the mapped version"
-	@echo "                      of an individual file with basename %"
-	@echo "                      with its testbench"
-	@echo 
-	@echo "Synthesis targets:"
-	@echo "  mapped/%.v - synthesizes the mapped version of an individual file"
-	@echo "               additionally the DEP_SUB_FILES variabl can be used "
-	@echo "               to define dependant submodule files needed for "
-	@echo "               synthesis and the CLOCK_NAME variable can be used"
-	@echo "               to define the clock signal name to use for synthesis"
-	@echo "               of sequential/clocked designs"
-	@echo "----------------------------------------------------------------"
-
-##############################################################################
-# Administrative Targets
-##############################################################################
-
-clean:
-	@echo -e "Removing temporary files"
-	@rm -rf *_work
-	@rm -rf analyzed/ARCH analyzed/ENTI
-	@rm -f analyzed/*
-	@rm -f schematic/*
-	@rm -f *.wlf *.svf transcript
-	@rm -f *.*tran
-	@rm -f *.*comp
-	@rm -f do_mapping.tcl
-	@echo -e "Done\n\n"
-
-veryclean:
-	@$(MAKE) --no-print-directory clean
-	@echo -e "Removing synthesized files, synthesis logs, and synthesis reports"
-	@rm -f mapped/*
-	@rm -f reports/*
-	@rm -f *.log
-	@rm -f rc.*
-	@echo -e "Done\n\n"
-
-print_vars:
-	@echo -e "Component Files: \n $(foreach file, $(COMPONENT_FILES), $(file)\n)"
-	@echo -e "Top level File: $(TOP_LEVEL_FILE)"
-	@echo -e "Testbench: $(TEST_BENCH)"
-	@echo -e "Top level module: $(TOP_MODULE)"
-	@echo -e "Testbench module: $(TB_MODULE)"
-	@echo -e "Gate Library: '$(GATE_LIB)'"
-	@echo -e "Gold Library: '$(GOLD_LIB)'"
-	@echo -e "Course Library: '$(LABS_IP_LIB)'"
-	@echo -e "Source work library: '$(S_WORK_LIB)'"
-	@echo -e "Mapped work library: '$(M_WORK_LIB)'"
-
-##############################################################################
-# General Compilation Targets
-##############################################################################
-
-# Define a pattern rule to automatically create the work library for a design source compile
-$(S_WORK_LIB):
-	@echo -e "Creating work library: $@"
-	@rm -rf $@
-	@$(LIB_CREATE) $@
-
-# Define a pattern rule to automatically compile updated source files for a design
-$(S_WORK_LIB)/%: source/%.sv | $(S_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(S_WORK_LIB)'"
-	@$(COMPILE) -work $(S_WORK_LIB) $< | tee $*.scomp ; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(S_WORK_LIB)'"
-
-# Define a pattern rule to for use at commandline to compile source versions
-source_%: $(S_WORK_LIB)/%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-# Define a pattern rule to automatically create the work library for a full design mapped compile
-$(M_WORK_LIB):
-	@echo -e "Creating work library: $@"
-	@rm -rf $@
-	@$(LIB_CREATE) $@
-
-# Define a pattern rule to automatically compile updated mapped design files for a full mapped design
-$(M_WORK_LIB)/%: mapped/%.v | $(M_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(M_WORK_LIB)'"
-	@$(COMPILE) -work $(M_WORK_LIB) $< | tee $*.mcomp ; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(M_WORK_LIB)'"
-
-# Define a pattern rule to automatically compile updated test bench files for a full mapped design
-$(M_WORK_LIB)/tb_%: source/tb_%.sv | $(M_WORK_LIB)
-	@echo -e "Compiling '$<' into work library '$(M_WORK_LIB)'"
-	@$(COMPILE) -work $(M_WORK_LIB) $< | tee $*.mcomp; exit "$${PIPESTATUS[0]}"
-	@touch $@
-	@echo -e "Done compiling '$<' into work library '$(M_WORK_LIB)'"
-
-# Define a pattern rule to for use at commandline to compile mapped versions
-mapped_%: $(M_WORK_LIB)/%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-# Define a pattern rule to for use at commandline to compile testbenches
-mapped_tb_%: $(M_WORK_LIB)/tb_%
-	@exit 0 # We cannot have an empty pattern rule in a makefile
-
-##############################################################################
-# General Simulation Targets
-##############################################################################
-define CONSOLE_SIM_CMDS
-"run 15 us;	\
- quit -f"
-endef
-
-# This rule defines how to simulate the source form of the full design
-sim_full_source: $(addprefix $(S_WORK_LIB)/, $(notdir $(basename $(TOP_LEVEL_FILE) $(TEST_BENCH) $(TB_HELPER_FILES) $(COMPONENT_FILES))))
-	@echo -e "Simulating Source Design"
-# Uncomment below if you want to just run the simulation as a console command
-# using the commands listed in the CONSOLE_SIM_CMDS definition above instead of 
-# .do file and have the transcript contents to be saved to a file
-#	@$(SIMULATE) -c -t ps -do $(CONSOLE_SIM_CMDS) $(S_WORK_LIB).$(TB_MODULE) > source.tran
-
-# Uncomment below if you want run the simulation the normal way and have it
-# run the specified .do file
-#	@$(SIMULATE) -t ps -do s_waves.do $(S_WORK_LIB).$(TB_MODULE)
-
-# This way just runs it like normal and only sets up the simulation but doesn't
-# run it or add any waveforms
-	@$(SIMULATE) -i -t ps $(S_WORK_LIB).$(TB_MODULE)
-	@cp -f transcript $(basename $(TOP_LEVEL_FILE)).stran
-	@echo -e "Done simulating the source design\n\n"
-
-# This rule defines how to simulate the mapped form of the full design
-sim_full_mapped: $(addprefix $(M_WORK_LIB)/, $(notdir $(basename $(TOP_LEVEL_FILE) $(TEST_BENCH) $(TB_HELPER_FILES))))
-	@echo -e "Simulating Mapped Design"
-# Uncomment below if you want to just run the simulation as a console command
-# using the commands listed in the CONSOLE_SIM_CMDS definition above instead of 
-# .do file and have the transcript contents to be saved to a file
-#	@$(SIMULATE) -c -t ps -do $(CONSOLE_SIM_CMDS) $(M_WORK_LIB).$(TB_MODULE) > mapped.tran
-
-# Uncomment below if you want run the simulation the normal way and have it
-# run the specified .do file
-#	@$(SIMULATE) -t ps -do s_waves.do $(M_WORK_LIB).$(TB_MODULE)
-
-# This way just runs it like normal and only sets up the simulation but doesn't
-# run it or add any waveforms
-	@$(SIMULATE) -i -t ps $(M_WORK_LIB).$(TB_MODULE)
-	@cp -f transcript $(basename $(TOP_LEVEL_FILE)).mtran
-	@echo -e "Done simulating the mapped design\n\n"
-
-# Define a pattern rule for simulating the source version of individual files	without a testbench
-sim_%_source: $(S_WORK_LIB)/%
-	@$(SIMULATE) -i -t ps $(dir $<).$*
-	@cp -f transcript $*.stran
-
-# Define a pattern rule for simulating the mapped version of individual files	without a testbench
-sim_%_mapped: $(M_WORK_LIB)/%
-	@$(SIMULATE) -i -t ps $(dir $<).$*
-	@cp -f transcript $*.mtran
-
-# Define a pattern rule for simulating the source version of individual files	with a testbench
-tbsim_%_source: $(S_WORK_LIB)/% $(S_WORK_LIB)/tb_%
-	@$(SIMULATE) -i -t ps $(dir $<).tb_$*
-	@cp -f transcript $*.stran
-
-# Define a pattern rule for simulating the mapped version of individual files	with a testbench
-tbsim_%_mapped: $(M_WORK_LIB)/% $(M_WORK_LIB)/tb_%
-	@$(SIMULATE) -i -t ps $(dir $<).tb_$*
-	@cp -f transcript $*.mtran
-
-##############################################################################
-# Define the synthesis target specific variables to use
-##############################################################################
-
-# Set the default value of the clock name and clock period to an empty string so that clock timing will
-# only be activated in the SYN_CMDS definition if they were overwritten at invocation
-CLOCK_NAME 		:= clk
-CLOCK_PERIOD	:= 10
-
-# Set the default value of the source files for sub modules to be an empty string so that
-# it will only be used if overwritten at invocation
-DEP_SUB_FILES :=
-
-# Set the default value of the main source file to an empty string since it will be
-# overwritten by each rule where it is used anyways
-MAIN_FILE :=
-
-# Set the module's name to always be the same as the basename of the file
-# (a.k.a. the file name without the file extension)
-MOD_NAME := $(basename $(MAIN_FILE))
-
-##############################################################################
-# Synthesis Targets
-##############################################################################
-
-# A customized make target for the top level file for complex designs
-# Note: The CLOCK_NAME variable override below will need to be set to the actual
-# clock signal name for sequential/clocked designs.
-# Also have to specify to run with the c shell to force it to use the course config (.cshrc) and call course scripts 
-mapped/$(TOP_MODULE).v: SHELL := /usr/local/bin/tcsh
-$(addsuffix .v, $(addprefix mapped/, $(TOP_MODULE))): mapped/%.v : source/%.sv $(addprefix source/,$(COMPONENT_FILES))
-	@echo "Synthesizing design: $@\n"
-	@$(MAKE) --no-print-directory syn_mapped MAIN_FILE='$(notdir $<)' DEP_SUB_FILES='$(COMPONENT_FILES)' CLOCK_NAME='$(CLOCK_NAME)' CLOCK_PERIOD='$(CLOCK_PERIOD)' > $(notdir $(basename $@)).log
-	@echo "Synthesis run attempt for $@ complete"
-	@echo "Checking synthesis attempt for errors"
-	@syschk -w $(notdir $(basename $@))
-	@echo "\nCheck for synthesis attempt errors complete, open $(notdir $(basename $@)).log for details if errors were found"
-	@echo "\nRemember to check $(TOP_MODULE).log for latches and timing arcs"
-	@echo "Synthesis run complete for design: $@\n\n"
-
-# A pattern rule target to synthesize any design that does not already have one defined earlier,
-# as long as the desired mapped file has a corresponding source file with the same basename,
-# (which is grabbed by the '%' and accessed via the $* automatic variable).
-# Additionally it will include any specified dependant submodule source files in the target's
-# dependencies and thus will resynthesize if any of them are newer as well.
-# It will pass on any of the related variables values if they were overwritten at runtime.
-# Also have to specify to run with the c shell to force it to use the course config (.cshrc) and call course scripts 
-mapped/%.v: SHELL := /usr/local/bin/tcsh
-mapped/%.v: source/%.sv $(addprefix source/,$(DEP_SUB_FILES))
-	@echo "Synthesizing and Compiling design: $@\n"
-	@$(MAKE) --no-print-directory syn_mapped MAIN_FILE='$*.sv' DEP_SUB_FILES='$(DEP_SUB_FILES)' CLOCK_NAME='$(CLOCK_NAME)' CLOCK_PERIOD='$(CLOCK_PERIOD)' > $*.log
-	@echo "Synthesis run attempt for $@ complete"
-	@echo "Checking synthesis attempt for errors (errors will be printed if found)"
-	@syschk -w $*
-	@echo "\nCheck for synthesis attempt errors complete, open $*.log for details if errors were found"
-	@echo "\nRemember to check $*.log for latches and timing arcs"
-	@echo "Synthesis run complete for design: $@\n\n"
-
-##############################################################################
-# Define the synthesis commands to use
-##############################################################################
-define newline
-
-
-endef
-
-define SYN_CMDS
-# Step 1:  Read in the source file
-analyze -format sverilog -lib WORK {$(DEP_SUB_FILES) $(MAIN_FILE)}
-elaborate $(MOD_NAME) -lib WORK
-uniquify
-# Step 2: Set design constraints
-# Uncomment below to set timing, area, power, etc. constraints
-# set_max_delay <delay> -from "<input>" -to "<output>"
-# set_max_area <area>
-# set_max_total_power <power> mW
-$(if $(and $(CLOCK_NAME), $(CLOCK_PERIOD)), create_clock "$(CLOCK_NAME)" -name "$(CLOCK_NAME)" -period $(CLOCK_PERIOD))
-
-# Step 3: Compile the design
-compile -map_effort medium
-
-# Step 4: Output reports
-report_timing -path full -delay max -max_paths 1 -nworst 1 > reports/$(MOD_NAME).rep
-report_area >> reports/$(MOD_NAME).rep
-report_power -hier >> reports/$(MOD_NAME).rep
-
-# Step 5: Output final VHDL and Verilog files
-write_file -format verilog -hierarchy -output "mapped/$(MOD_NAME).v"
-echo "\nScript Done\n"
-echo "\nChecking Design\n"
-check_design
-quit
-endef
-
-# Define the target that will actually invoke the synthesis commands through design compiler
-syn_mapped do_mapping.tcl:
-	@echo -e "Synthesizing design: $(MAIN_FILE)"
-	@echo -e '$(subst $(newline),\n,$(subst \n,\\n,${SYN_CMDS}))' > do_mapping.tcl
-	$(DC_SHELL) -x "source -echo do_mapping.tcl"
-	@echo -e "Done\n\n"
-
-
-MITROOT := /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20/
-
-syn_test: 
-	@irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED $(MITROOT)/MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv 
-
diff --git a/source_code/fpu_integration/restore.tcl b/source_code/fpu_integration/restore.tcl
deleted file mode 100644
index 286bfb0..0000000
--- a/source_code/fpu_integration/restore.tcl
+++ /dev/null
@@ -1,55 +0,0 @@
-
-# NC-Sim Command File
-# TOOL:	ncsim(64)	15.20-s030
-#
-#
-# You can restore this configuration with:
-#
-#      irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv -input restore.tcl
-#
-
-set tcl_prompt1 {puts -nonewline "ncsim> "}
-set tcl_prompt2 {puts -nonewline "> "}
-set vlog_format %h
-set vhdl_format %v
-set real_precision 6
-set display_unit auto
-set time_unit module
-set heap_garbage_size -200
-set heap_garbage_time 0
-set assert_report_level note
-set assert_stop_level error
-set autoscope yes
-set assert_1164_warnings yes
-set pack_assert_off {}
-set severity_pack_assert_off {note warning}
-set assert_output_stop_level failed
-set tcl_debug_level 0
-set relax_path_name 1
-set vhdl_vcdmap XX01ZX01X
-set intovf_severity_level ERROR
-set probe_screen_format 0
-set rangecnst_severity_level ERROR
-set textio_severity_level ERROR
-set vital_timing_checks_on 1
-set vlog_code_show_force 0
-set assert_count_attempts 1
-set tcl_all64 false
-set tcl_runerror_exit false
-set assert_report_incompletes 0
-set show_force 1
-set force_reset_by_reinvoke 0
-set tcl_relaxed_literal 0
-set probe_exclude_patterns {}
-set probe_packed_limit 4k
-set probe_unpacked_limit 16k
-set assert_internal_msg no
-set svseed 1
-set assert_reporting_mode 0
-alias . run
-alias iprof profile
-alias quit exit
-database -open -shm -into waves.shm waves -default
-probe -create -database waves tb_FPU_top_level.clk tb_FPU_top_level.flags tb_FPU_top_level.floating_point1 tb_FPU_top_level.floating_point2 tb_FPU_top_level.floating_point_out tb_FPU_top_level.fp1_real tb_FPU_top_level.fp2_real tb_FPU_top_level.fp_exp tb_FPU_top_level.fp_frac tb_FPU_top_level.fp_out_real tb_FPU_top_level.frm tb_FPU_top_level.funct7 tb_FPU_top_level.i tb_FPU_top_level.j tb_FPU_top_level.nrst tb_FPU_top_level.result_binary tb_FPU_top_level.result_real tb_FPU_top_level.DUT.add_carry_out tb_FPU_top_level.DUT.add_exp_max tb_FPU_top_level.DUT.add_floating_point_out tb_FPU_top_level.DUT.add_sign_out tb_FPU_top_level.DUT.add_sum tb_FPU_top_level.DUT.clk tb_FPU_top_level.DUT.cmp_out tb_FPU_top_level.DUT.exp_max tb_FPU_top_level.DUT.exp_max_minus tb_FPU_top_level.DUT.flag_add tb_FPU_top_level.DUT.flag_sub tb_FPU_top_level.DUT.flags tb_FPU_top_level.DUT.floating_point1 tb_FPU_top_level.DUT.floating_point2 tb_FPU_top_level.DUT.floating_point_out tb_FPU_top_level.DUT.frac_not_shifted tb_FPU_top_level.DUT.frac_not_shifted_minus tb_FPU_top_level.DUT.frac_shifted tb_FPU_top_level.DUT.frac_shifted_minus tb_FPU_top_level.DUT.frm tb_FPU_top_level.DUT.frm2 tb_FPU_top_level.DUT.frm3 tb_FPU_top_level.DUT.funct7 tb_FPU_top_level.DUT.funct7_2 tb_FPU_top_level.DUT.funct7_3 tb_FPU_top_level.DUT.inexact tb_FPU_top_level.DUT.inexact_sub tb_FPU_top_level.DUT.inv3 tb_FPU_top_level.DUT.minus_carry_out tb_FPU_top_level.DUT.minus_exp_max tb_FPU_top_level.DUT.minus_sign_out tb_FPU_top_level.DUT.minus_sum tb_FPU_top_level.DUT.mul_carry_out tb_FPU_top_level.DUT.mul_ovf tb_FPU_top_level.DUT.mul_sign_out tb_FPU_top_level.DUT.mul_unf tb_FPU_top_level.DUT.negmul_floating_point_out tb_FPU_top_level.DUT.nrst tb_FPU_top_level.DUT.o tb_FPU_top_level.DUT.outallone tb_FPU_top_level.DUT.outallzero tb_FPU_top_level.DUT.ovf tb_FPU_top_level.DUT.ovf_sub tb_FPU_top_level.DUT.product tb_FPU_top_level.DUT.sign_not_shifted tb_FPU_top_level.DUT.sign_not_shifted_minus tb_FPU_top_level.DUT.sign_shifted tb_FPU_top_level.DUT.sign_shifted_minus tb_FPU_top_level.DUT.signout tb_FPU_top_level.DUT.step1_to_step2 tb_FPU_top_level.DUT.step2_to_step3 tb_FPU_top_level.DUT.sum_exp tb_FPU_top_level.DUT.sum_init tb_FPU_top_level.DUT.unf tb_FPU_top_level.DUT.unf_sub tb_FPU_top_level.DUT.unsigned_exp_diff tb_FPU_top_level.DUT.wm
-
-simvision -input restore.tcl.svcf
diff --git a/source_code/fpu_integration/restore.tcl.svcf b/source_code/fpu_integration/restore.tcl.svcf
deleted file mode 100644
index 70987af..0000000
--- a/source_code/fpu_integration/restore.tcl.svcf
+++ /dev/null
@@ -1,244 +0,0 @@
-# SimVision Command Script (Sat Jul 04 04:17:51 PM EDT 2020)
-#
-# Version 15.20.s030
-#
-# You can restore this configuration with:
-#
-#      irun -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv -input restore.tcl
-#
-
-
-#
-# Preferences
-#
-preferences set plugin-enable-svdatabrowser-new 1
-preferences set toolbar-sendToIndago-WaveWindow {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Standard-Console {
-  usual
-  position -pos 1
-}
-preferences set toolbar-Search-Console {
-  usual
-  position -pos 2
-}
-preferences set plugin-enable-groupscope 0
-preferences set plugin-enable-interleaveandcompare 0
-preferences set plugin-enable-waveformfrequencyplot 0
-preferences set whats-new-dont-show-at-startup 1
-
-#
-# Simulator
-#
-database require simulator -hints {
-	simulator "irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv -input restore.tcl"
-}
-#
-# Groups
-#
-catch {group new -name top_level -overlay 0}
-catch {group new -name dut -overlay 0}
-group using top_level
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_FPU_top_level.clk}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.flags[4:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.floating_point1[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.floating_point2[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.floating_point_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.fp1_real}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.fp2_real}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.fp_exp}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.fp_frac}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.fp_out_real}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.frm[2:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.funct7[6:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.i}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.j}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.nrst}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.result_binary[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.result_real}]} ]
-group using dut
-group set -overlay 0
-group set -comment {}
-group clear 0 end
-
-group insert \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.add_carry_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.add_exp_max[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.add_floating_point_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.add_sign_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.add_sum[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.clk}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.cmp_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.exp_max[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.exp_max_minus[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.flag_add[4:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.flag_sub[4:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.flags[4:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.floating_point1[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.floating_point2[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.floating_point_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frac_not_shifted[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frac_not_shifted_minus[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frac_shifted[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frac_shifted_minus[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frm[2:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frm2[2:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.frm3[2:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.funct7[6:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.funct7_2[6:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.funct7_3[6:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.inexact}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.inexact_sub}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.inv3}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.minus_carry_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.minus_exp_max[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.minus_sign_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.minus_sum[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.mul_carry_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.mul_ovf}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.mul_sign_out}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.mul_unf}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.negmul_floating_point_out[31:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.nrst}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.o}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.outallone}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.outallzero}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.ovf}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.ovf_sub}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.product[25:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sign_not_shifted}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sign_not_shifted_minus}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sign_shifted}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sign_shifted_minus}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.signout}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.step1_to_step2[61:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.step2_to_step3[37:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sum_exp[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.sum_init}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.unf}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.unf_sub}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.unsigned_exp_diff[7:0]}]} ] \
-    [subst  {simulator::[format {tb_FPU_top_level.DUT.wm[2:0]}]} ]
-
-#
-# Mnemonic Maps
-#
-mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
-{%c=TRUE -edgepriority 1 -shape high}}
-mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
-{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
-{%x=* -label %x -linecolor gray -shape bus}}
-
-#
-# Design Browser windows
-#
-if {[catch {window new WatchList -name "Design Browser 1" -geometry 1720x1376+-10+19}] != ""} {
-    window geometry "Design Browser 1" 1720x1376+-10+19
-}
-window target "Design Browser 1" on
-browser using {Design Browser 1}
-browser set -scope [subst  {simulator::[format {tb_FPU_top_level.DUT}]} ]
-browser set \
-    -signalsort name
-browser yview see [subst  {simulator::[format {tb_FPU_top_level.DUT}]} ]
-browser timecontrol set -lock 0
-
-#
-# Waveform windows
-#
-if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1720x1376+1710+19}] != ""} {
-    window geometry "Waveform 1" 1720x1376+1710+19
-}
-window target "Waveform 1" on
-waveform using {Waveform 1}
-waveform sidebar visibility partial
-waveform set \
-    -primarycursor TimeA \
-    -signalnames name \
-    -signalwidth 175 \
-    -units ps \
-    -valuewidth 75
-waveform baseline set -time 0
-
-
-set groupId0 [waveform add -groups top_level]
-set gpGlist0 [waveform hierarchy contents $groupId0]
-set gpID0 [lindex $gpGlist0 0]
-foreach {name attrs} [subst  {
-    {simulator::[format {tb_FPU_top_level.clk}]} {}
-    {simulator::[format {tb_FPU_top_level.flags[4:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.floating_point1[31:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.floating_point2[31:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.floating_point_out[31:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.fp1_real}]} {-trace analogLinear}
-    {simulator::[format {tb_FPU_top_level.fp2_real}]} {-trace analogLinear}
-    {simulator::[format {tb_FPU_top_level.fp_exp}]} {-trace analogLinear}
-    {simulator::[format {tb_FPU_top_level.fp_frac}]} {-trace analogLinear}
-    {simulator::[format {tb_FPU_top_level.fp_out_real}]} {-trace analogLinear}
-    {simulator::[format {tb_FPU_top_level.frm[2:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.funct7[6:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.i}]} {}
-    {simulator::[format {tb_FPU_top_level.j}]} {}
-    {simulator::[format {tb_FPU_top_level.nrst}]} {}
-    {simulator::[format {tb_FPU_top_level.result_binary[31:0]}]} {}
-    {simulator::[format {tb_FPU_top_level.result_real}]} {-trace analogLinear}
-}] childcmds {
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-    {}
-} {
-    set expected [ join [waveform signals -format fullpath $gpID0] ]
-    if {[string equal $name $expected] || $name == "cdivider"} {
-        if {$attrs != ""} {
-            eval waveform format $gpID0 $attrs
-        }
-        if { $childcmds != ""} {
-            eval $childcmds
-        }
-    }
-    set gpGlist0 [lrange $gpGlist0 1 end]
-    set gpID0 [lindex $gpGlist0 0]
-}
-
-
-set groupId0 [waveform add -groups dut]
-
-
-waveform xview limits 0 366000ps
-
-#
-# Waveform Window Links
-#
-
-#
-# Console windows
-#
-console set -windowname Console
-window geometry Console 1634x800+-9+203
-
-#
-# Layout selection
-#
-
diff --git a/source_code/fpu_integration/script.sh b/source_code/fpu_integration/script.sh
deleted file mode 100755
index bfdc133..0000000
--- a/source_code/fpu_integration/script.sh
+++ /dev/null
@@ -1,9 +0,0 @@
-#!/bin/bash
-mkdir testbench
-for i in source/tb_*
-do
-        dest=$(echo $i | cut -d '/' -f2)
-        cp $i testbench/$dest
-        new_dest=$(echo $dest | cut -d '_' --fields=2- | cut -d '.' -f1)"_tb.sv"
-        mv testbench/$dest testbench/$new_dest
-done
diff --git a/source_code/fpu_integration/simvision8811.diag b/source_code/fpu_integration/simvision8811.diag
deleted file mode 100644
index 744bcb2..0000000
--- a/source_code/fpu_integration/simvision8811.diag
+++ /dev/null
@@ -1,102 +0,0 @@
-*** Message Type: info ***
-When: Sat Jul 04 05:08:49 PM EDT 2020
-SimVision started.
-Version: TOOL:  simvision(64)   15.20-s030
-User: socet19
-Host: asicfab.ecn.purdue.edu
-Platform: Linux/x86_64/3.10.0-1062.18.1.el7.x86_64
-Started: Sat Jul 04 05:08:49 PM EDT 2020
-Command: /package/eda/cadence/INCISIVE152/tools.lnx86/simvision/bin/64bit/simvision.exe -connect dc:asicfab.ecn.purdue.edu:49065 -64BIT -nocopyright
-Work Directory: /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:08:50 PM EDT 2020
-Create browser window: "Design Browser 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:08:56 PM EDT 2020
-Create console window: "Console"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:09:00 PM EDT 2020
-Connect to Simulator
-      Design: worklib.ao21_4x:v
-   Languages: verilog assertion
-   Simulator: NC-Sim
-     Version: TOOL:        ncsim(64)       15.20-s030
-        User: socet19
-        Host: asicfab.ecn.purdue.edu
-Time Started: Sat Jul 04 05:08:47 PM EDT 2020
-  Process ID: 8806
-   Directory: /home/asicfab/a/socet19/RISCVBusiness/source_code/Floating_Point_Unit
-     Command: irun -gui -access +rwc +nctimescale+1ns/1ns -coverage all -covoverwrite -define MAPPED /package/asicfab/MITLL_90_Dec2019/MITLL90_STDLIB_8T/2019.12.20//MITLL90_STDLIB_8T.v fpu.v source/tb_FPU_top_level.sv
-
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:09:03 PM EDT 2020
-Create utility window: "Properties"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:09:13 PM EDT 2020
-Create waveform window: "Waveform 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:12:14 PM EDT 2020
-Create source window: "Source Browser 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:12:24 PM EDT 2020
-Delete source window: "Source Browser 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:12:31 PM EDT 2020
-Create source window: "Source Browser 2"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:12:39 PM EDT 2020
-Delete source window: "Source Browser 2"
- 
-*** Message Type: error ***
-When: Sat Jul 04 05:12:39 PM EDT 2020
-invalid command name ".srcBrowser1"
-    while executing
-"$srcb activateScope $scopeH -file $file -line $line -hilite $hilite -reloadifneeded $reload"
-    (object "::windows" method "::Windows::showsource" body line 70)
-    invoked from within
-"::windows showsource -file $filename -line $line -scope $objHdl -raise 1"
-    ("location" arm line 31)
-    invoked from within
-"switch -- $op {
-        location_time {
-            if {![info exists argsIn(location)] || ! [info exists argsIn(time)]} {
-             dputs "Need location and time arguments..."
-    (object "::.console0.work.user.tabnotebook.1.shellframe.scrollframe.sh" method "::cwidgets::Shell::_sendToWindow" body line 38)
-    invoked from within
-"_sendToWindow source location location $attrs(file):$attrs(line) object $objName"
-    ("clickFile" arm line 14)
-    invoked from within
-"switch -- $fromWhere {
-       clickFile {
-        # Perform the default actions if somebody clicks the file/line/time
-            set sim [::taskmaster slave find]
-   ..."
-    (object "::.console0.work.user.tabnotebook.1.shellframe.scrollframe.sh" method "::cwidgets::Shell::assertLineAction" body line 8)
-    invoked from within
-"::.console0.work.user.tabnotebook.1.shellframe.scrollframe.sh assertLineAction .console0.work.user.tabnotebook.1.shellframe.scrollframe.sh.text 275 17..."
-    (in namespace inscope "::cwidgets::Shell" script line 1)
-    invoked from within
-"namespace inscope ::cwidgets::Shell {::.console0.work.user.tabnotebook.1.shellframe.scrollframe.sh assertLineAction .console0.work.user.tabnotebook.1...."
-    (command bound to event)
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:14:40 PM EDT 2020
-Delete waveform window: "Waveform 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:14:41 PM EDT 2020
-Delete browser window: "Design Browser 1"
- 
-*** Message Type: info ***
-When: Sat Jul 04 05:14:48 PM EDT 2020
-SimVision Exit.
- 
diff --git a/source_code/fpu_integration/source/ADD_step1.sv b/source_code/fpu_integration/source/ADD_step1.sv
deleted file mode 100755
index 596af49..0000000
--- a/source_code/fpu_integration/source/ADD_step1.sv
+++ /dev/null
@@ -1,82 +0,0 @@
-//By            : Joe Nasti
-//edited by     : Xinlue Liu
-//Last updated  : 6/1/20
-//
-//Module summary:
-//    First step for addition operation in three-step pipline.
-//    Shifts smaller fraction by difference in exponents
-//
-//Inputs:
-//    floating_point1/2_in - single precision floating point values
-//Outputs:
-//    sign_shifted         - sign of the floating point that gets shifted
-//    frac_shifted         - fraction of the floating point that gets shifted
-//    sign_not_shifted     - sign of the floating point that does not get shifted
-//    frac_not_shifted     - fraction of the floating point that does not get shifted
-//    exp_max              - max exponent of the two given floating points
-module ADD_step1
-  (
-   input  [6:0]  funct7,
-   input  [31:0] floating_point1_in,
-   input  [31:0] floating_point2_in,
-   output 	 sign_shifted,
-   output [25:0] frac_shifted,
-   output 	 sign_not_shifted,
-   output [25:0] frac_not_shifted,
-   output reg [7:0]  exp_max
-   );
-
-   reg  [7:0] 	 unsigned_exp_diff;
-   reg 		 cmp_out; //exp1 >= exp2 -> cmp_out == 0
-                          //exp1 <  exp2 -> cmp_out == 1
-   reg [31:0] 	 floating_point_shift;
-   reg [31:0] 	 floating_point_not_shift;
-   
-   //compare the exponents of two floating points
-   int_compare cmp_exponents (
-			      .funct7(funct7),
-			      .exp1(floating_point1_in[30:23]), 
-			      .exp2(floating_point2_in[30:23]),
-			      .u_diff(unsigned_exp_diff),
-			      .cmp_out(cmp_out)
-			      );
-   //determine which one to shift
-   //shift the smaller exponent
-	always_comb begin
-		floating_point_shift = 0;
-		if (cmp_out ==1) begin
-			floating_point_shift = floating_point1_in;
-		end else begin
-			floating_point_shift = floating_point2_in;
-		end
-	end
-	always_comb begin
-		floating_point_not_shift = 0;
-		if (cmp_out == 1) begin
-			floating_point_not_shift = floating_point2_in;
-		end else begin
-			floating_point_not_shift = floating_point1_in;
-		end
-	end
-	always_comb begin
-		exp_max = 0;
-		if (cmp_out == 1) begin
-			exp_max = floating_point2_in[30:23];
-		end else begin
-			exp_max = floating_point1_in[30:23];
-		end
-	end
-   
-   //right shift the smaller fp the amount of the difference of two fps.
-   right_shift shift_frac_with_smaller_exp (
-	       .fraction({1'b1, floating_point_shift[22:0], 2'b0}),
-	       .shift_amount(unsigned_exp_diff),
-	       .result(frac_shifted)
-	       );
-
-   assign frac_not_shifted = {1'b1, floating_point_not_shift[22:0], 2'b0};
-   assign sign_not_shifted = floating_point_not_shift[31];
-   assign sign_shifted     = floating_point_shift[31];
-   
-
-endmodule
diff --git a/source_code/fpu_integration/source/ADD_step2.sv b/source_code/fpu_integration/source/ADD_step2.sv
deleted file mode 100755
index cd6e2d3..0000000
--- a/source_code/fpu_integration/source/ADD_step2.sv
+++ /dev/null
@@ -1,67 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary:
-//    Second Step for addition operation in three-step pipeline
-//    Adds the fractions with sign bit from ADD_step1
-//
-//Inputs:
-//    frac1/2    - magnitudes of fractions to be added
-//    sign1/2    - signs of fractions to be added
-//    exp_max_in - max exponent from step1 (if the sum is zero the exponent is set to zero)
-//Outputs:
-//    sign_out    - sign of the result 
-//    sum         - magnitude of the result regardless of any carry out
-//    carry_out   - signal if there is an oveflow from the addition
-//    exp_max_out - if sum is non-zero, this is equal to exp_max_in
-
-module ADD_step2
-  (
-   input  [25:0] frac1,
-   input         sign1,
-   input  [25:0] frac2,
-   input         sign2,
-   input  [7:0]  exp_max_in, //
-   output        sign_out,
-   output [25:0] sum,
-   output        carry_out,
-   output reg [7:0]  exp_max_out//
-   );
-
-   reg [26:0] 	 frac1_signed;
-   reg [26:0] 	 frac2_signed;
-   reg [26:0] 	 sum_signed;
-   
-   always_comb begin : exp_max_assignment
-      if(sum_signed == 0) exp_max_out = 8'b00000000;
-      else exp_max_out = exp_max_in;
-   end
-   //change unsigned number to signed number
-   u_to_s change_to_signed1(
-			    .sign(sign1),
-			    .frac_unsigned(frac1),
-			    .frac_signed(frac1_signed)
-			    );
-   
-   u_to_s change_to_signed2(
-			    .sign(sign2),
-			    .frac_unsigned(frac2),
-			    .frac_signed(frac2_signed)
-			    );
-   //perform addition
-   adder_26b add_signed_fracs(
-			     .frac1(frac1_signed),
-			     .frac2(frac2_signed),
-			     .sum(sum_signed),
-			     .ovf(carry_out)
-			     );
-   //change signed to unsigned number
-   s_to_u change_to_unsigned(
-			     .frac_signed(sum_signed),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );
-   
-   
-endmodule
-			    
diff --git a/source_code/fpu_integration/source/ADD_step3.sv b/source_code/fpu_integration/source/ADD_step3.sv
deleted file mode 100755
index 633dd99..0000000
--- a/source_code/fpu_integration/source/ADD_step3.sv
+++ /dev/null
@@ -1,110 +0,0 @@
-
-module ADD_step3
-  (
-   input logic out_of_range,
-   input    reg        mul_ovf,
-   input reg         mul_carry_out,
-   input [6:0] 	 function_mode,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   input 	 ovf_in,
-   input 	 unf_in,
-   input 	 dz, // divide by zero flag
-   input 	 inv,
-   input [2:0] 	 frm,
-   input [7:0] 	 exponent_max_in,
-   input 	 sign_in,
-   input [25:0]  frac_in,
-   input 	 carry_out,
-   output [31:0] add_floating_point_out,
-   output reg ovf,
-   output reg unf,
-   output reg inexact
-   );
-   localparam quietNaN = 32'b01111111110000000000000000000000;
-   localparam signalNaN = 32'b01111111101000000000000000000000;
-   localparam Inf = 32'b01111111100000000000000000000000;
-   localparam NegInf = 32'b11111111100000000000000000000000;
-   localparam zero = 32'b00000000000000000000000000000000;
-   localparam NegZero = 32'b10000000000000000000000000000000;
-   //reg        inexact;
-   wire        sign;
-   wire [7:0]  exponent;
-   wire [22:0] frac;
-   
-   assign {sign, exponent, frac} = add_floating_point_out;
-   reg [31:0] dummy_floating_point_out;
-   reg [7:0] exp_minus_shift_amount;
-   reg [25:0] shifted_frac;
-   reg [7:0]  shifted_amount;
-   reg [7:0]  exp_out;
-   //reg        ovf;
-   //reg        unf;
-   
-   //normalize fraction
-   left_shift shift_left (
-			  .fraction(frac_in),
-			  .result(shifted_frac),
-			  .shifted_amount(shifted_amount)
-			  );
-
-   //subtract exponent if fraction is normalized 
-   subtract SUB (
-		 .exp1(exponent_max_in),
-		 .shifted_amount(shifted_amount),
-		 .result(exp_minus_shift_amount)
-		 );
-
-   
-   reg [24:0] round_this;
-   
-   always_comb begin
-      ovf = 0;
-      unf = 0;
-      if(carry_out == 1) begin
-	      round_this = frac_in[25:1] + 1'b1;
-	      exp_out    = exponent_max_in + 1;
-	      if((exponent_max_in == 8'b11111110) && (~unf_in)) ovf = 1;
-      end
-      else begin
-	      round_this = shifted_frac[24:0];
-	      exp_out    = exp_minus_shift_amount;
-	      if(({1'b0, exponent_max_in} < shifted_amount) && (~ovf_in)) unf = 1;
-      end
-   end
-
-   reg [31:0] fp_option;
-   reg [31:0] round_out;
-   
-   rounder ROUND (
-		  .frm(frm),
-		  .sign(sign_in),
-		  .exp_in(exp_out),
-		  .fraction(round_this),
-		  .round_out(round_out),
-		  .rounded(round_flag)
-		  );
-   
-   assign inexact                  = ovf_in | ovf | unf_in | unf | round_flag;
-   //assign flags                    = {inv, dz, (ovf | ovf_in), (unf | unf_in), inexact};
-   assign dummy_floating_point_out[31]   = round_out[31];
-   assign dummy_floating_point_out[30:0] = inv    ? 31'b1111111101111111111111111111111 :
-				     ovf_in ? 31'b1111111100000000000000000000000 :
-				     ovf    ? 31'b1111111100000000000000000000000 :
-				     unf_in ? 31'b0000000000000000000000000000000 :
-				     unf    ? 31'b0000000000000000000000000000000 :
-				     round_out[30:0];
- always_comb begin
-	fp_option = dummy_floating_point_out;
-	if (function_mode == 7'b0001000) begin
-	 	/*if ((exponent_max_in == 8'b11111111) & (mul_carry_out == 1'b1)) begin
-		fp_option = {round_out[31],31'b1111111100000000000000000000000};
-		end*/ //(exponent_max_in == 8'b11111111)
-		if ((out_of_range == 1'b1)) begin
-		fp_option = {round_out[31],31'b1111111100000000000000000000000};
-		end
-	end
-  end
-
-assign add_floating_point_out = fp_option;
-endmodule
diff --git a/source_code/fpu_integration/source/FPU_all.sv b/source_code/fpu_integration/source/FPU_all.sv
deleted file mode 100644
index 86c44f9..0000000
--- a/source_code/fpu_integration/source/FPU_all.sv
+++ /dev/null
@@ -1,58 +0,0 @@
-
-//created by Sean Hsu
-//Modified by Xinlue Liu, Zhengsen Fu
-//Last Updated  : 7/21/20
-
-`include "FPU_if.vh"
-`include "f_register_file_if.vh"
-
-module FPU_all(FPU_if.fp fpu_if);
-
-  /*register_FPU_if frf_if(
-    .n_rst(fpu_if.n_rst), 
-    .clk(fpu_if.clk),
-    .f_rs1(fpu_if.f_rs1),
-    .f_rs2(fpu_if.f_rs2),
-    .f_rd(fpu_if.f_rd),
-    .f_LW(fpu_if.f_LW),
-    .f_SW(fpu_if.f_SW),
-    .f_flags(fpu_if.f_flags), //??
-    .f_frm_out(fpu_if.f_frm_out),
-    .f_frm_in(fpu_if.f_frm_in),
-    .funct_7(fpu_if.f_funct_7)
-  ); */
-  //FPU register file interface
-  f_register_file_if frf_if();
-
-//fpu load. 2 to 1 multiplexer choose between dload_ext[31:0] and FPU_out[31:0] from fpu
-assign frf_if.f_w_data = fpu_if.f_LW ? fpu_if.dload_ext : frf_if.FPU_out;
-assign fpu_if.FPU_all_out = fpu_if.f_SW ? frf_if.f_rs2_data : '0; 
-assign frf_if.f_frm_in = fpu_if.f_frm_in;
-assign frf_if.clk = fpu_if.clk;
-assign frf_if.n_rst = fpu_if.n_rst;
-assign fpu_if.f_flags = frf_if.f_flags;
-assign frf_if.f_wen = fpu_if.f_wen;
-assign frf_if.f_rs1 = fpu_if.f_rs1;
-assign frf_if.f_rs2 = fpu_if.f_rs2;
-assign frf_if.f_rd = fpu_if.f_rd;
-assign frf_if.f_LW = fpu_if.f_LW;
-assign frf_if.f_SW = fpu_if.f_SW;
-    
-
-clock_counter cc(frf_if.cc);
-
-FPU_top_level FPU(
-.clk(frf_if.clk), 
-.nrst(frf_if.n_rst),
-.floating_point1(frf_if.f_rs1_data),
-.floating_point2(frf_if.f_rs2_data),
-.frm(frf_if.frm),
-.funct7(frf_if.funct_7),
-.floating_point_out(frf_if.FPU_out),
-.flags(frf_if.flags)
-);
-
-f_register_file f_rf(frf_if.rf);
-
-endmodule
-
diff --git a/source_code/fpu_integration/source/FPU_if.svh b/source_code/fpu_integration/source/FPU_if.svh
deleted file mode 100644
index 3277578..0000000
--- a/source_code/fpu_integration/source/FPU_if.svh
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Zhengsen Fu, Xinlue Liu
-//Description   : Interface connect top-level to FPU
-//Last Updated  : 7/21/20
-
-`ifndef FPU_IF_SVH
-`define FPU_IF_SVH
-interface FPU_if(input logic n_rst, clk);
-  //signals to and out of FPU and FPU register file
-  logic f_LW; //load. Load from memory to register
-  logic f_SW; //save. Save from rs2 to memory 
-  //logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-
-  logic [4:0] f_rs1; //register selection 1. Select operand 1 from a register
-  logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  logic [4:0] f_rd; //register destination. Select which register to be written
-
-  logic [2:0] f_frm_in; //input rounding method.
-  logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [7:0] f_funct_7; //operation selection of FPU
-  logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  logic [31:0] dload_ext; //TODO: confirm the identifier
-  logic [31:0] FPU_all_out; //output when f_SW is asserted
-
-  // logic f_ready; //asserted when calculation finished by FPU
-
-  int transaction_number; //waveform debug purpose
-
-  modport fp ( //to FPU_all
-  input n_rst, clk, f_rd, f_rs1, f_rs2, f_frm_in, f_LW, f_SW, f_funct_7, dload_ext,
-  output FPU_all_out, f_flags, f_frm_out
-  );
-  
-endinterface //FPU_if
-
-
-`endif
diff --git a/source_code/fpu_integration/source/FPU_top_level.sv b/source_code/fpu_integration/source/FPU_top_level.sv
deleted file mode 100755
index a5aacaa..0000000
--- a/source_code/fpu_integration/source/FPU_top_level.sv
+++ /dev/null
@@ -1,499 +0,0 @@
-//By            : Joe Nasti
-//Edited by 		: Xinlue Liu, Zhengsen Fu
-//Last Updated  : 7/15/2020
-//
-//Module Summary:
-//    Three-stage floating point unit supporting operations:
-//    addition
-//    subtraction (in progress)
-//    multiplication 
-//
-//Inputs:
-//    clk                - system clock
-//    nrst               - active low reset
-//    floating_point1/2  - floating points to be operated on
-//    frm                - rounding mode
-//    funct7             - 7 bit operation code
-//Outputs:
-//    floating_point_out - result of operation 
-//    flags              - 5 error flags (overflow,  underflow, divide by zero, inexact result, invalid operation)
-
-module FPU_top_level
-(
- input 	       clk,
- input 	       nrst,
- input  [31:0] floating_point1,
- input  [31:0] floating_point2,
- input  [2:0]  frm,
- input  [6:0]  funct7,
- output [31:0] floating_point_out,
-	output 			 f_stall,
- output [4:0]  flags
- );
-   //reg [2:0]   cycle_count;
-   reg [2:0]   frm2;
-   reg [2:0]   frm3;
-   reg [6:0]   funct7_2;
-   reg [6:0]   funct7_3;
-
-   //funct7 definitions
-   localparam ADD = 7'b0000000;
-   localparam MUL = 7'b0001000;
-   localparam SUB = 7'b0000100; 
-
-
-   
-   reg 	       sign_shifted;
-   reg         sign_shifted_minus;
-   reg [25:0]  frac_shifted;
-   reg [25:0]  frac_shifted_minus;
-   
-   reg 	       sign_not_shifted;
-   reg         sign_not_shifted_minus;
-   reg [25:0]  frac_not_shifted;
-   reg [25:0]  frac_not_shifted_minus;
-   reg [7:0]   exp_max;
-   reg [7:0]   exp_max_minus;
-   
-   reg         mul_sign1;
-   reg         mul_sign2;
-   reg [7:0]   mul_exp1;
-   reg [7:0]   mul_exp2;
-   reg [25:0]  product;
-   reg         mul_carry_out;
-   logic 		   out_of_range;
-   
-   reg [61:0]  step1_to_step2;
-   reg [61:0]  nxt_step1_to_step2;
-   
-   
-   reg        add_sign_out;
-   reg [25:0] add_sum;
-   reg 	      add_carry_out;
-   reg [7:0]  add_exp_max;
-
-
-   reg        minus_sign_out;
-   reg [25:0] minus_sum;
-   reg        minus_carry_out;
-   reg [7:0]  minus_exp_max;
-   reg        cmp_out;
-   reg 	      cmp_out_det;
-   reg        fp1_sign;
-   reg [25:0] fp1_frac;
-   reg        fp2_sign;
-   reg [25:0] fp2_frac;
-
-   // MUL step2 outputs -> step3 inputs
-   reg        mul_sign_out;
-   reg [7:0]  sum_exp;
-   reg        mul_ovf;
-   reg        mul_unf;
-
-   // invalid operation flag
-   reg        inv;
-   reg        inv2;
-   reg        inv3;  
-
-   reg [37:0] step2_to_step3;
-   reg [37:0] nxt_step2_to_step3;
-   reg exp_determine;
-   reg bothnegsub;
-   reg bothpossub;
-   reg 	      n1p2;
-   reg 	      n1p2r;
-   reg 	      signout;
-   reg 	      same_compare;
-   reg 	      shifted_check_allone;
-   reg 	      shifted_check_onezero;
-   reg  [7:0] 	 unsigned_exp_diff;
-   reg        frac_same;
-   reg [2:0] wm;
-   reg        ovf;
-   reg        unf;
-   reg        inexact;
-   reg        ovf_sub;
-   reg        unf_sub;
-   reg        inexact_sub;
-   reg [4:0] flag_add;
-   reg [4:0] flag_sub;
-   reg sum_init;
-
-	determine_frac_status determine_frac_status (
-			      .fp1_frac1(floating_point1[22:0]),
-			      .fp2_frac2(floating_point2[22:0]),
-			      .frac_same(frac_same)
-				);
-
- 	int_comparesub cmp_exponent (
-			      .exp1(floating_point1[30:23]), 
-			      .exp2(floating_point2[30:23]),
-			      .cmp_out(cmp_out_det),
-			      .same_compare(same_compare)
-			      );
-
-	sign_determine sign_determine (
-					.same_compare(same_compare),
-				        .frac_same(frac_same),
-					.cmp_out(cmp_out_det),
-					.floating_point1(floating_point1),
-					.floating_point2(floating_point2),
-					.signout(signout)
-					);
-
-	always_comb begin : check_neg_size
-		bothnegsub = 0;
-		if (((floating_point1[31]==1) && (floating_point2[31]==1) && (cmp_out_det==1) && (funct7 == SUB)) | ((funct7 == SUB) & ((floating_point1[31] == 1) & (floating_point2[31] == 1) & (same_compare == 1)) 
-	& (frac_same == 1))) begin
-			bothnegsub = 1;
-		end
-	end
-
-	always_comb begin : check_pos_size
-		bothpossub = 0;
-		if ((floating_point1[31]==0) && (floating_point2[31]==0) && (cmp_out_det==1) && (funct7 == SUB)) begin
-			bothpossub = 1;
-		end
-	end
-
-always_comb begin : check_n1p2_size
-		n1p2 = 0; 
-		if (((floating_point1[31]==0) && (floating_point2[31]==1) && (cmp_out_det==1) && (funct7 == SUB))) begin
-			n1p2 = 1;
-		end
-	end
-
-always_comb begin : check_n1p2r_size
-		n1p2r = 0; 
-		if ((floating_point1[31]==1) && (floating_point2[31]==0) && (cmp_out_det==1) && (funct7 == SUB)) begin
-			n1p2r = 1;
-		end
-	end
-
-
-        //first step of addition. determine the exponent and fraction of the floating point that needs to be shifted
-	ADD_step1 addStep1(
-			   .funct7(funct7),
-			   .floating_point1_in(floating_point1),
-			   .floating_point2_in(floating_point2),
-			   .sign_shifted(sign_shifted),
-			   .frac_shifted(frac_shifted),
-			   .sign_not_shifted(sign_not_shifted),
-			   .frac_not_shifted(frac_not_shifted),
-			   .exp_max(exp_max)
-			   );
-
-	//first step of subtraction. determine the exponent and fraction of the floating point that needs to be shifted
-        SUB_step1 substep1(
-			   .funct7(funct7),
-			   .bothnegsub(bothnegsub),
-		      	   .floating_point1_in(floating_point1),
-			   //.floating_point2_in({~floating_point2[31], floating_point2[30:0]}),
-			   .floating_point2_in(floating_point2),
-			   .sign_shifted(sign_shifted_minus),
-			   .frac_shifted(frac_shifted_minus),
-			   .sign_not_shifted(sign_not_shifted_minus),
-			   .frac_not_shifted(frac_not_shifted_minus),
-			   .exp_max(exp_max_minus),
-			   .cmp(cmp_out),
-			   .unsigned_exp_diff(unsigned_exp_diff)
-		           );
-
-   
-// first step of multiplication. multiply two floating points
-        MUL_step1 mulStep1(
-			   .fp1_in(floating_point1),
-			   .fp2_in(floating_point2),
-			   .sign1(mul_sign1),
-			   .sign2(mul_sign2),
-			   .exp1(mul_exp1),
-			   .exp2(mul_exp2),
-			   .product(product),
-			   .carry_out(mul_carry_out),
-			   .out_of_range(out_of_range)
-			   );
-   
-   
-   always_comb begin : check_for_invalid_op
-      inv = 0;
-      // checking for invalid operation. Subject to change
-      if ((funct7 == ADD) || (funct7 == SUB)) begin
-	 if((floating_point1[30:0] == 31'h7F800000) && 
-	    (floating_point2[30:0] == 31'h7F800000) && 
-	    (floating_point1[31] ^ floating_point2[31])) begin
-	        inv = 1;
-	 end
-      end
-      
-      if(funct7 == MUL) begin
-	 if(((floating_point1[30:0] == 31'h00000000)  &&
-	     (floating_point2[30:0] == 31'h7F800000)) ||
-	    ((floating_point1[30:0] == 31'h7F800000)  &&
-	     (floating_point2[30:0] == 31'h00000000))) begin
-	        inv = 1;
-	 end
-      end
-   end // block: check_for_invalid_op
-
-	// add signal indicator that indicates which subtraction operation it is going to perform
-	always_comb begin: determine_exp
-	if (cmp_out == 0) begin //fp1 > fp2.
-		exp_determine = 1'b1;
-	end else if (cmp_out == 1) begin
-		exp_determine = 1'b0;
-	end
-	end
-
-   //reorder the two floating points to pass into the second block of the subtraction routine
-   always_comb begin: reorder_the_subtraction
-	fp1_sign = 0;
-	fp1_frac = 0;
-	fp2_sign = 0;
-	fp2_frac = 0;
-   //if (bothnegsub == 0) begin
-   	if (cmp_out == 0) begin //if fp1 >= fp2
-      		fp1_sign = sign_not_shifted_minus;
-      		fp1_frac = frac_not_shifted_minus;
-      		fp2_sign = sign_shifted_minus;
-      		fp2_frac = frac_shifted_minus;
-   	end else if (cmp_out == 1) begin
-      		fp1_sign = sign_shifted_minus;
-      		fp1_frac = frac_shifted_minus;
-      		fp2_sign = sign_not_shifted_minus;
-      		fp2_frac = frac_not_shifted_minus; 
-   	end
-   end
-	always_comb begin : check_shifted_frac_allone
-		shifted_check_allone = 0;
-		if ((floating_point1[31]==1) && (floating_point2[31]== 1) && (frac_shifted_minus==0) && (funct7 == SUB)) 	begin
-			shifted_check_allone = 1;
-		end
-	end
-
-always_comb begin : check_shifted_frac_onezero
-		shifted_check_onezero = 0;
-		if ((floating_point1[31]==1) && (floating_point2[31]== 0) && (frac_shifted_minus==0) && (funct7 == SUB)) 	begin
-			shifted_check_onezero = 1;
-		end
-	end
-
-   always_comb begin : select_op_step1to2
-	nxt_step1_to_step2 = 0;
-      case(funct7)
-	ADD: begin
-	   nxt_step1_to_step2[61]    = sign_shifted;
-	   nxt_step1_to_step2[60:35] = frac_shifted;
-	   nxt_step1_to_step2[34]    = sign_not_shifted;
-	   nxt_step1_to_step2[33:8]  = frac_not_shifted; 
-	   nxt_step1_to_step2[7:0]   = exp_max;
-	end
-	SUB: begin
-	   nxt_step1_to_step2[61]   = fp1_sign;
-	   nxt_step1_to_step2[60:35] = fp1_frac;
-	   nxt_step1_to_step2[34]    = fp2_sign;
-	   nxt_step1_to_step2[33:8]  = fp2_frac;
-	   nxt_step1_to_step2[7:0]   = exp_max_minus;
-	end
-	MUL: begin
-	   nxt_step1_to_step2[61]    = mul_sign1;
-	   nxt_step1_to_step2[60]    = mul_sign2;
-           nxt_step1_to_step2[59:52] = mul_exp1;
-	   nxt_step1_to_step2[51:44] = mul_exp2;
-	   nxt_step1_to_step2[43:18] = product;
-	   nxt_step1_to_step2[17]    = mul_carry_out;
-	end
-     
-      endcase // case (funct7)
-   end // block: select_op
-   			       
-   always_ff @ (posedge clk, negedge nrst) begin : STEP1_to_STEP2
-      if(nrst == 0) begin
-        frm2           <= 0;
-	 			step1_to_step2 <= 0;
-        funct7_2       <= 0;
-	 			inv2           <= 0;
-      end
-      else begin
-        frm2           <= frm;
-	 			step1_to_step2 <= nxt_step1_to_step2;
-	 			funct7_2       <= funct7;
-	 			inv2           <= inv;
-      end
-   end 
-	 //perform addition
-	  ADD_step2 add_step2 (
-			      .frac1(step1_to_step2[60:35]),    // frac_shifted
-			      .sign1(step1_to_step2[61]),       // sign_shifted
-			      .frac2(step1_to_step2[33:8]),     // frac_not_shhifted
-			      .sign2(step1_to_step2[34]),       // sign_not_shifted
-			      .exp_max_in(step1_to_step2[7:0]), // exp_max
-			      .sign_out(add_sign_out),
-			      .sum(add_sum),
-			      .carry_out(add_carry_out),
-			      .exp_max_out(add_exp_max)
-			      );
-	 //perform subtraction
-          SUB_step2 sub_step2 (
-			      .n1p2r(n1p2r),
-			      .shifted_check_onezero(shifted_check_onezero),
-			      .fp1(floating_point1),
-			      .fp2(floating_point2),
-	 		      .cmp_out(cmp_out),
-	   		      .n1p2(n1p2),
-		  	      .bothnegsub(bothnegsub),
-			      .bothpossub(bothpossub),
-			      .frac1(step1_to_step2[60:35]),    // frac_shifted
-			      .sign1(step1_to_step2[61]),       // sign_shifted
-			      .frac2(step1_to_step2[33:8]),     // frac_not_shhifted
-			      .sign2(step1_to_step2[34]),       // sign_not_shifted
-			      .exp_max_in(step1_to_step2[7:0]), // exp_max
-			      .sign_out(minus_sign_out),
-			      .sum(minus_sum),
-			      .carry_out(minus_carry_out),
-			      .exp_max_out(minus_exp_max),
-			      .exp_determine(exp_determine),
-			      .outallone(outallone),
-			      .outallzero(outallzero),
-			      .wm(wm),
-			      .sum_init(sum_init)
-			      );
-   
-         MUL_step2 mul_step2 (
-			      .sign1(step1_to_step2[61]),   // mul_sign1
-			      .sign2(step1_to_step2[60]),   // mul_sign2
-			      .exp1(step1_to_step2[59:52]), // mul_exp1
-			      .exp2(step1_to_step2[51:44]), // mul_exp2
-			      .sign_out(mul_sign_out),
-			      .sum_exp(sum_exp),
-			      .ovf(mul_ovf),
-			      .unf(mul_unf),
-			      .carry(step1_to_step2[17])
-			      );
-   
-   always_comb begin : select_op_step2to3
-      nxt_step2_to_step3 = 0;
-      case(funct7_2)
-	ADD: begin
-	   nxt_step2_to_step3[37:36]= 2'b00;
-	   nxt_step2_to_step3[35]   = add_sign_out;
-	   nxt_step2_to_step3[34:9] = add_sum;
-	   nxt_step2_to_step3[8]    = add_carry_out;
-	   nxt_step2_to_step3[7:0]  = add_exp_max;
-	end
-	MUL: begin
-	   nxt_step2_to_step3[37]   = mul_ovf;
-       	   nxt_step2_to_step3[36]   = mul_unf;	      
-	   nxt_step2_to_step3[35]   = mul_sign_out;
-	   nxt_step2_to_step3[34:9] = step1_to_step2[43:18]; // product from MUL_step1
-	   nxt_step2_to_step3[8]    = step1_to_step2[17];    // mul_carry_out;
-	   nxt_step2_to_step3[7:0]  = sum_exp;
-	end
-	SUB: begin
-	   nxt_step2_to_step3[37:36]= 2'b00;
-	   nxt_step2_to_step3[35]   = minus_sign_out;
-	   nxt_step2_to_step3[34:9] = minus_sum;
-	   nxt_step2_to_step3[8]    = minus_carry_out;
-	   nxt_step2_to_step3[7:0]  = minus_exp_max;
-	end
-      endcase // case (funct7_2)
-   end // block: select_op_step2to3
-   
-   
-   always_ff @ (posedge clk, negedge nrst) begin : STEP2_to_STEP3
-      if(nrst == 0) begin
-	 				funct7_3       <= 0;
-   	      step2_to_step3 <= 0;
-	 				frm3           <= 0;
-	 				inv3           <= 0;
-      end
-      else begin
-	 				funct7_3       <= funct7_2;
-	 				step2_to_step3 <= nxt_step2_to_step3;
-	 				frm3           <= frm2;
-	 				inv3           <= inv2;
-      end 
-   end  
-   reg o;
-
-   always_comb begin
-      o = 0;
-      if((step2_to_step3[7:0] == 8'b11111111) && (step2_to_step3[36] == 1'b0) && (step2_to_step3[8] == 0)) o = 1;
-      else o = step2_to_step3[37]; 
-   end
-
-   reg [31:0] negmul_floating_point_out;
-   reg [31:0] add_floating_point_out;
-   //round the results and perform special case checking
-   SUB_step3 sub_step3 (
-		    .sum_init(sum_init),
-		    .unsigned_exp_diff(unsigned_exp_diff),
-		    .n1p2r(n1p2r),
-		    .wm(wm),
-		    .clk(clk),
-		    .nrst(nrst),
-		    .frac_shifted_minus(frac_shifted_minus),
-		    .outallzero(outallzero),
-	 	    .outallone(outallone),
-		    .same_compare(same_compare),
-		    .shifted_check_allone(shifted_check_allone),
-		    .shifted_check_onezero(shifted_check_onezero),
-	 	    //.signout(signout),
-		    .bothnegsub(bothnegsub),
-		    .cmp_out(cmp_out),
-		    .floating_point1(floating_point1),
-		    .floating_point2(floating_point2),
-		    .function_mode(funct7_3[6:0]),
-		    .ovf_in(o),
-		    .unf_in(step2_to_step3[36]),
-		    .dz(1'b0),
-		    .inv(inv3),
-		    .frm(frm3),
-		    .exponent_max_in(step2_to_step3[7:0]),
-		    //.sign_in(step2_to_step3[35]),
-		    .sign_in(signout),
-		    .frac_in(step2_to_step3[34:9]),
-		    .carry_out(step2_to_step3[8]),
-		    .before_floating_point_out(negmul_floating_point_out),
-		    .ovf(ovf_sub),
-		    .unf(unf_sub),
-		    .inexact(inexact_sub)
-		    //.flags(flags)
-		    );
-//round the results 
-   ADD_step3 add_step3 (
-	   		.out_of_range(out_of_range),
-		    .mul_ovf(mul_ovf),
-		    .mul_carry_out(mul_carry_out),
-		    .function_mode(funct7_3[6:0]),
-		    .floating_point1(floating_point1),
-		    .floating_point2(floating_point2),
-		    .ovf_in(o),
-		    .unf_in(step2_to_step3[36]),
-		    .dz(1'b0),
-		    .inv(inv3),
-		    .frm(frm3),
-		    .exponent_max_in(step2_to_step3[7:0]),
-		    .sign_in(step2_to_step3[35]),
-		    .frac_in(step2_to_step3[34:9]),
-		    .carry_out(step2_to_step3[8]),
-		    .add_floating_point_out(add_floating_point_out),
-		    .ovf(ovf),
-		    .unf(unf),
-		    .inexact(inexact)
-		    );
-
-
-always_ff @ (posedge clk, negedge nrst) begin: delay_flags
-	if (nrst == 0) begin
-		flag_add <= 0;
-		flag_sub <= 0;
-	end else begin
-		flag_add   <= {inv, 1'b0, (ovf | o), (unf | o), inexact};
-		flag_sub   <= {inv, 1'b0, (ovf_sub | o), (unf_sub | o), inexact_sub};
-	end
-end
-
-assign floating_point_out = (funct7 == SUB) ? negmul_floating_point_out : add_floating_point_out;
-assign flags = (funct7 == SUB) ? flag_sub : flag_add;
-
-endmodule
diff --git a/source_code/fpu_integration/source/MUL_step1.sv b/source_code/fpu_integration/source/MUL_step1.sv
deleted file mode 100755
index 837b23b..0000000
--- a/source_code/fpu_integration/source/MUL_step1.sv
+++ /dev/null
@@ -1,57 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary:
-//    First step of multiplication in three-step pipeline.
-//    multiplies 26 bit fractions
-//
-//Inputs:
-//    fp1/2     - single precision floating points
-//Outputs:
-//    sign1/2   - signs of floating points
-//    exp1/2    - exponents of floating points
-//    product   - result of fraction multiplication
-//    carry_out - signal if there is a carry out of the multiplication
-
-module MUL_step1
-  (
-   input  [31:0] fp1_in,
-   input  [31:0] fp2_in,
-   output        sign1,
-   output        sign2,
-   output [7:0]  exp1,
-   output [7:0]  exp2,
-   output [25:0] product,
-   output        carry_out,
-   output reg out_of_range
-   );
-
-   assign sign1 = fp1_in[31];
-   assign sign2 = fp2_in[31];
-   assign exp1  = fp1_in[30:23];
-   assign exp2  = fp2_in[30:23];
-   //multiply the two numbers
-
-   reg [28:0] test_mul_frac;
-   assign test_mul_frac = fp1_in[22:0] * fp2_in[22:0];
-   reg [9:0] test_mul_exp;
-   assign test_mul_exp = fp1_in[30:23] + fp2_in[30:23];
-   //reg out_of_range;
-
-   always_comb begin
-     out_of_range = 1'b0;
-     if (test_mul_exp == 9'b0101111111)
-      out_of_range = 1'b1;
-   end
-
-   mul_26b MUL (
-		.frac_in1({1'b1, fp1_in[22:0], 2'b00}),
-		.frac_in2({1'b1, fp2_in[22:0], 2'b00}),
-		.frac_out(product),
-		.overflow(carry_out)
-		);
-
-endmodule // MUL_step1
-
-
-   
diff --git a/source_code/fpu_integration/source/MUL_step2.sv b/source_code/fpu_integration/source/MUL_step2.sv
deleted file mode 100755
index bf71671..0000000
--- a/source_code/fpu_integration/source/MUL_step2.sv
+++ /dev/null
@@ -1,42 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 9/3/18
-//
-//Module Summary:
-//    Second step of multiplication in three-step pipeline
-//    Adds exponents together and xor's sign bits
-//
-//Inputs:
-//    sign1/2 - signs to be xor'ed
-//    exp1/2  - exponents to be added together
-//Outputs:
-//    sign_out - result of xor operation
-//    sum_exp  - result of addition
-//    ovf      - signal if an overflow has occurred 
-//    unf      - signal if an undeflow has occurred
-
-module MUL_step2
-  (
-   input        sign1,
-   input        sign2,
-   input  [7:0] exp1,
-   input  [7:0] exp2,
-   output       sign_out,
-   output [7:0] sum_exp,
-   output reg   ovf,
-   output reg   unf,
-   input        carry
-   );
- 
-
-   adder_8b add_EXPs(
-		     .carry(carry),
-		     .exp1(exp1),
-		     .exp2(exp2),
-		     .sum(sum_exp),
-		     .ovf(ovf),
-		     .unf(unf)
-		     );
-   
-   assign sign_out = sign1 ^ sign2;
-
-endmodule
diff --git a/source_code/fpu_integration/source/SUB_step1.sv b/source_code/fpu_integration/source/SUB_step1.sv
deleted file mode 100755
index c15faa2..0000000
--- a/source_code/fpu_integration/source/SUB_step1.sv
+++ /dev/null
@@ -1,107 +0,0 @@
-//By            : Joe Nasti
-//Edited by	: Xinlue Liu
-//Last updated  : 6/1/20
-//
-//Module summary:
-//    First step for subtraction operation in three-step pipline.
-//    Shifts smaller fraction by difference in exponents
-//
-//Inputs:
-//    floating_point1/2_in - single precision floating point values
-//Outputs:
-//    sign_shifted         - sign of the floating point that gets shifted
-//    frac_shifted         - fraction of the floating point that gets shifted
-//    sign_not_shifted     - sign of the floating point that does not get shifted
-//    frac_not_shifted     - fraction of the floating point that does not get shifted
-//    exp_max              - max exponent of the two given floating points
-//    cmp		   - indicator of which floating point is bigger or smaller
-module SUB_step1
-  (
-   input  [6:0]  funct7,
-   input 	bothnegsub,
-   input [31:0]  floating_point1_in,
-   input [31:0]  floating_point2_in,
-   output 	 sign_shifted,
-   output [25:0] frac_shifted,
-   output 	 sign_not_shifted,
-   output [25:0] frac_not_shifted,
-   output reg [7:0]  exp_max,
-   output 	 cmp,
-   output  reg  [7:0] 	 unsigned_exp_diff
-   );
-   reg [31:0] floating_point1_in_temp;
-   reg [31:0] floating_point2_in_temp;
-   //reg  [7:0] 	 unsigned_exp_diff;
-   reg 		 cmp_out; //exp1 >= exp2 -> cmp_out == 0
-                          //exp1 <  exp2 -> cmp_out == 1
-   reg  [31:0] 	 floating_point_shift;
-   reg  [31:0] 	 floating_point_not_shift;
-
-   always_comb begin: determine_input
-	if (bothnegsub == 1'b1) begin
-		floating_point1_in_temp = floating_point2_in;
-		floating_point2_in_temp = floating_point1_in;
-	end else begin
-		floating_point1_in_temp = floating_point1_in;
-		floating_point2_in_temp = floating_point2_in;
-   	end
-   end
-   //compare the exponents of two floating points
-   int_compare cmp_exponents (
-			      .funct7(funct7),
-			      .exp1(floating_point1_in_temp[30:23]), 
-			      .exp2(floating_point2_in_temp[30:23]),
-			      .u_diff(unsigned_exp_diff),
-			      .cmp_out(cmp_out)
-			      );
-   //determine which one to shift
-   //shift the smaller exponent
-
-	always_comb begin
-		floating_point_shift = 0;
-		if (cmp_out ==1) begin
-			floating_point_shift = floating_point1_in_temp;
-		end else begin
-			floating_point_shift = floating_point2_in_temp;
-		end
-	end
-	always_comb begin
-		floating_point_not_shift = 0;
-		if (cmp_out == 1) begin
-			floating_point_not_shift = floating_point2_in_temp;
-		end else begin
-			floating_point_not_shift = floating_point1_in_temp;
-		end
-	end
-	always_comb begin
-		exp_max = 0;
-		if (cmp_out == 1) begin
-			exp_max = floating_point2_in_temp[30:23];
-		end else begin
-			exp_max = floating_point1_in_temp[30:23];
-		end
-	end
-   //assign floating_point_shift = cmp_out ? floating_point1_in_temp : floating_point2_in_temp;
-   //assign floating_point_not_shift = cmp_out ? floating_point2_in_temp : floating_point1_in_temp;
-   //set the result exponent to the bigger exponent between X and Y
-   //assign exp_max = cmp_out ? floating_point2_in_temp[30:23] : floating_point1_in_temp[30:23];
-
-   //right shift the smaller fp the amount of the difference of two fps.
-   //right_shift_minus shift_frac (
-   right_shift shift_frac(
-	       .fraction({1'b1, floating_point_shift[22:0], 2'b0}),
-	       .shift_amount(unsigned_exp_diff),
-	       //.result_final(temp_frac_shifted)
-	       .result(frac_shifted)
-	       );
-
-   assign frac_not_shifted = {1'b1, floating_point_not_shift[22:0], 2'b0};
-   //assign frac_not_shifted = floating_point_not_shift[22:0];
-   //assign frac_shifted = temp_frac_shifted;
-   assign sign_not_shifted = floating_point_not_shift[31];
-   //negate the sign bit
-           //assign sign_shifted     = ~floating_point_shift[31];
-   assign sign_shifted     = floating_point_shift[31];
-   assign cmp = cmp_out;
-
-endmodule
diff --git a/source_code/fpu_integration/source/SUB_step2.sv b/source_code/fpu_integration/source/SUB_step2.sv
deleted file mode 100755
index a2f09fc..0000000
--- a/source_code/fpu_integration/source/SUB_step2.sv
+++ /dev/null
@@ -1,97 +0,0 @@
-module SUB_step2
-  (
-   input reg     shifted_check_onezero,
-   input reg     n1p2r,
-   input         bothnegsub,
-   input  [31:0] fp1,
-   input  [31:0] fp2,
-   input  [25:0] frac1,
-   input         sign1,
-   input  [25:0] frac2,
-   input         sign2,
-   input  [7:0]  exp_max_in, //
-   input reg exp_determine,
-   input reg bothpossub,
-   input reg n1p2,
-   input cmp_out,
-   output        sign_out,
-   output [25:0] sum,
-   output        carry_out,
-   output reg [7:0]  exp_max_out,//
-   output reg outallone,
-   output reg outallzero,
-   output reg    [2:0]    wm,
-   output reg sum_init
-   );
-
-   reg [26:0] 	 frac1_signed;
-   reg [26:0] 	 frac2_signed;
-   reg [26:0] 	 sum_signed;
-   reg [26:0] 	 frac2_complement; //26
-   reg [26:0]	 frac2_signedout;
-	 
-   
-   always_comb begin : exp_max_assignment
-      if(sum_signed == 0) exp_max_out = 8'b00000000;
-      else exp_max_out = exp_max_in;
-   end
-
-   //change to signed value. either {0, frac} or {0, ~frac} if sign is 1
-   u_to_s change_to_signed1(
-			    .sign(sign1),
-			    .frac_unsigned(frac1),
-			    .frac_signed(frac1_signed)
-			    );
-   
-   u_to_s change_to_signed2(
-			    .sign(sign2),
-			    .frac_unsigned(frac2),
-			    .frac_signed(frac2_signed)
-			    );
-   
-   //change the floating points to its two's complement
-   c_to_cp change_to_complement(
-				.frac2_input({1'b0,frac2}),
-				.frac2_signedin(frac2_signed),
-				.frac2_output(frac2_complement),
-				.frac2_signedout(frac2_signedout)
-				);
-   //perform subtraction
-   sub_26b sub_signed_fracs(
-			     .n1p2r(n1p2r),
-			     .shifted_check_onezero(shifted_check_onezero),
-			     .fp1(fp1),
-			     .fp2(fp2),
-			     .cmp_out(cmp_out),
-	 		     .n1p2(n1p2),
-			     //.frac1({1'b0,frac1}),
-			     //.frac2({1'b0,frac2_complement}),
-			     .frac1_s({1'b0,frac1_signed[26:1]}),//26,1 
-			     .frac2_s(frac2_signedout),
-			     .bothpossub(bothpossub),
-			     //.exp_determine(exp_determine),
-			     .frac1(frac1_signed),
-			     .frac2(frac2_signedout),
-			     .sum(sum_signed),
-			     .ovf(carry_out),
-			     .outallone(outallone),
-			     .outallzero(outallzero),
-		   	     .wm(wm),
-			     .sum_init(sum_init)
-			     );
-
-   /*s_to_u_new change_to_unsigned_new(
-			     .frac_signed(sum_signed),
-			     .exp_determine(exp_determine),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );*/
-
-    s_to_u change_to_unsigned(
-			     .frac_signed(sum_signed),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );
-   
-endmodule
-		
diff --git a/source_code/fpu_integration/source/SUB_step3.sv b/source_code/fpu_integration/source/SUB_step3.sv
deleted file mode 100644
index 08fa561..0000000
--- a/source_code/fpu_integration/source/SUB_step3.sv
+++ /dev/null
@@ -1,178 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary: 
-//    Third step of addition operation in three-step pipeline.
-//    Rounds result based on rounding mode (frm) and left shifts fraction if needed
-//
-//Inputs:
-//    frm              - 3 bit rounding mode
-//    exponent_max_in  - exponent of result floating point
-//    sign_in          - sign of result floating point
-//    frac_in          - fraction of result floating point
-//    carry_out        - carry out from step 2
-//Outputs:
-//    floating_point_out - final floating point
-
-module SUB_step3
-  (
-   input reg sum_init,
-   input reg  [7:0] 	 unsigned_exp_diff,
-   input reg n1p2r,
-   input reg [2:0] wm,
-   input clk,
-   input nrst,
-   input 	   [25:0] frac_shifted_minus,
-   input reg outallzero,
-   input reg outallone,
-   input reg same_compare,
-   //input 	 signout,
-   input 	 bothnegsub,
-   input 	 cmp_out,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   input [6:0] 	 function_mode,
-   input 	 ovf_in,
-   input 	 unf_in,
-   input 	 dz, // divide by zero flag
-   input 	 inv,
-   input [2:0] 	 frm,
-   input [7:0] 	 exponent_max_in, //exponent 
-   input 	 sign_in,
-   input [25:0]  frac_in,
-   input 	 carry_out,
-   input reg     shifted_check_allone,
-   input reg     shifted_check_onezero,
-   output [31:0] before_floating_point_out,
-   output reg ovf,
-   output reg unf,
-   output reg inexact
-   );
-
-   localparam quietNaN = 32'b01111111110000000000000000000000;
-   localparam signalNaN = 32'b01111111101000000000000000000000;
-   localparam Inf = 32'b01111111100000000000000000000000;
-   localparam NegInf = 32'b11111111100000000000000000000000;
-   localparam zero = 32'b00000000000000000000000000000000;
-   localparam NegZero = 32'b10000000000000000000000000000000;
-
-   //reg        inexact;
-   wire        sign;
-   wire [7:0]  exponent;
-   wire [22:0] frac;
-
-   localparam ADD = 7'b0000000;
-   localparam MUL = 7'b0001000;
-   localparam SUB = 7'b0000100; //add sub mode
-   
-   //assign {sign, exponent, frac} = before_floating_point_out;
-   
-   //reg [7:0] exp_minus_shift_amount;
-   reg [25:0] shifted_frac;
-   reg [7:0]  shifted_amount;
-   reg [7:0]  exp_out;
-   //reg        ovf;
-   //reg        unf;
-   reg 	      temp_sign;
-   reg [31:0] dummy_floating_point_out;
-   reg [31:0] fp_option;
-   reg [31:0] hold_value;
-   reg [23:0] rounded_frac;
-// Left shifts an unsigned 26 bit value until the first '1' is the most significant bit and returns the amount shifted
-   left_shift shift_left (
-			  .fraction(frac_in),
-			  .result(shifted_frac),
-			  .shifted_amount(shifted_amount)
-			  );
-
-   assign 	 exp_out    = exponent_max_in;
-
-   
-   reg [24:0] round_this;
-   reg [2:0] log_de;
-//this comb logic is for rounding mode
-   always_comb begin
-      ovf = 0;
-      unf = 0;
-      log_de = 0;
-      //if ((carry_out == 0) & (((floating_point1[31] == 0)&(floating_point2[31] == 0) & (cmp_out == 1)))) begin
-      if (carry_out == 0) begin
-	 log_de = 2'b01;
-	 round_this = frac_in[24:0] + 1'b1;
-	 if(({1'b0, exponent_max_in} < shifted_amount) && (~ovf_in)) unf = 1;
-      end else begin
-	 round_this = frac_in[25:1] + 1'b1;
-	 log_de = 2'b10;
-	 if((exponent_max_in == 8'b11111110) && (~unf_in)) ovf = 1;
-   end
-   end
-
-   reg [31:0] round_out;
-   wire buf_determine;
-   assign buf_determine = ovf_in | ovf | unf_in | unf;
-   //round the result
-   rounder_sub ROUND (
-		  .sum_init(sum_init),
-		  .clk(clk),
-		  .nrst(nrst),
-		  .unsigned_exp_diff(unsigned_exp_diff),
-		  .frac_in(frac_in),
-		  .shifted_frac(shifted_frac),
-		  .n1p2r(n1p2r),
-		  .wm(wm),
-		  .shifted_amount(shifted_amount),
-		  .buf_determine(buf_determine),
-		  .frac_shifted_minus(frac_shifted_minus),
-		  .outallzero(outallzero),
-		  .outallone(outallone),
-		  .same_compare(same_compare),
-		  .shifted_check_onezero(shifted_check_onezero),
-		  .shifted_check_allone(shifted_check_allone),
-		  .bothnegsub(bothnegsub),
-		  .cmp_out(cmp_out),
-		  .fp1(floating_point1),
-		  .fp2(floating_point2),
-		  .frm(frm),
-		  .sign(sign_in),
-		  .exp_in(exp_out),
-		  .carry_out(carry_out),
-		  .fraction(round_this),
-		  .round_out(round_out),
-		  .rounded(round_flag),
-		  .sol_frac(rounded_frac)
-		  );
-   
-     assign inexact                  = ovf_in | ovf | unf_in | unf | round_flag;
-
-     assign dummy_floating_point_out[31]   = round_out[31];
-     assign dummy_floating_point_out[30:0] = inv    ? signalNaN :
-				     ovf_in ? 31'b1111111100000000000000000000000 :
-				     (unf & (function_mode != SUB)) ? 31'b1111111100000000000000000000000 :
-				     ovf    ? 31'b1111111100000000000000000000000 :
-				     unf_in ? 31'b0000000000000000000000000000000 :
-				     ((function_mode == SUB) & unf & ((round_out[30:23] == 8'b11111111) | (round_out[30:23] == 8'b11111110) | (round_out[30:23] == 8'b11111101) | (round_out[30:23] == 8'b11111100) | (round_out[30:23] == 8'b11111000) | (round_out[30:23] == 8'b11111001)))    ? 31'b0000000000000000000000000000000 :
-				     round_out[30:0];
-   
-   assign temp_sign = dummy_floating_point_out[31];
-   
-   always_comb begin
-         hold_value  = dummy_floating_point_out;
-      if (function_mode == SUB) begin
-	 hold_value = {sign_in,dummy_floating_point_out[30:0]};
-      end
-   end
-
-   always_comb begin
-      fp_option = hold_value;
-      if (hold_value[30:23] == 8'b11111111) begin
-	if (((floating_point1 == Inf) & (floating_point2 == Inf)) | ((floating_point1 == NegInf) & (floating_point2 == NegInf))) begin
-		fp_option = hold_value;
-        end else begin
-		fp_option = {hold_value[31:23], 23'd0};
-        end
-      end
-   end
-//determine special cases like operations between Infinity, negitive Infinity, zero, negative zero, quiet NaN, signaling NaN
-assign before_floating_point_out = fp_option;
-assign {sign, exponent, frac} = before_floating_point_out;
-endmodule
diff --git a/source_code/fpu_integration/source/adder_26b.sv b/source_code/fpu_integration/source/adder_26b.sv
deleted file mode 100755
index d38c3fb..0000000
--- a/source_code/fpu_integration/source/adder_26b.sv
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7.16.18
-//
-//Module Summary: 
-//    adds two signed 26 bit fraction values
-//
-//Inputs:
-//    frac1/2 - signed 26 bit values with decimal point fixed after second bit
-//Outputs:
-//    sum     - output of sum operation regardless of overflow
-//    ovf     - high if an overflow has occured 
- 
-module adder_26b(
-	input      [26:0] frac1,
-	input      [26:0] frac2, 
-	output reg [26:0] sum, 
-	output reg        ovf
-);
-
-always_comb begin 
-
-   sum = frac1 + frac2;
-   ovf = 0;
-   
-   if(frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-      ovf = 1;
-      sum[26] = 1;
-   end
-   
-   if(frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-      ovf = 1;
-      sum[26] = 0;
-   end
-  
-end
-endmodule
-
diff --git a/source_code/fpu_integration/source/adder_8b.sv b/source_code/fpu_integration/source/adder_8b.sv
deleted file mode 100755
index acfe381..0000000
--- a/source_code/fpu_integration/source/adder_8b.sv
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/31/2018
-//
-//Module summary:
-//    Adds two unsigned 8 bit integers with ofset of 128 and signals if there is an over/underflow
-//Inputs:
-//    exp1/2 - 8 bit values to be summed
-//Outputs:
-//    sum    - 8 bit result of addition regardless of ovf/unf
-//    ovf    - signal overflow has occurred
-//    unf    - signal underflow has occurred
-
-module adder_8b(
-	input carry,
-	input [7:0]  exp1,
-	input [7:0]  exp2, 
-	output [7:0] sum, 
-	output 	     ovf,
-	output 	     unf
-);
-
-   reg [7:0] 	     r_exp1;
-   reg [7:0] 	     r_exp2;
-   reg [7:0] 	     r_sum;
-   
-
-   always_comb begin
-      r_exp1 = exp1 - 8'b10000000;
-      r_exp2 = exp2 - 8'b10000000;
-      r_sum  = r_exp1 + r_exp2;
-   end
-   
-   assign sum = (exp1 + exp2) - 8'b10000000; // add with offset
-   assign ovf = r_sum[7] && ~r_exp1[7] && ~r_exp2[7];
-   assign unf = ((carry != 1) || (sum != 8'b11111111)) && (~r_sum[7] && r_exp1[7] && r_exp2[7]);
-
-endmodule
diff --git a/source_code/fpu_integration/source/c_to_cp.sv b/source_code/fpu_integration/source/c_to_cp.sv
deleted file mode 100755
index 4938912..0000000
--- a/source_code/fpu_integration/source/c_to_cp.sv
+++ /dev/null
@@ -1,16 +0,0 @@
-module c_to_cp
-  (
-   input [26:0] frac2_input,//25
-   input [26:0] frac2_signedin,
-   output reg [26:0] frac2_output,//25
-   output reg [26:0] frac2_signedout
-   );
- 
-   always_comb begin
-   //find the two's complement of the frac2
-      frac2_output[26:0] = (~frac2_input[26:0] + 1'b1);//25
-      frac2_signedout[26:0] = (~frac2_signedin[26:0] + 1'b1);
-   end
-   
-   
-endmodule // c_to_cp
diff --git a/source_code/fpu_integration/source/clock_counter.sv b/source_code/fpu_integration/source/clock_counter.sv
deleted file mode 100644
index 72d4439..0000000
--- a/source_code/fpu_integration/source/clock_counter.sv
+++ /dev/null
@@ -1,72 +0,0 @@
-module clock_counter (
-    f_register_file_if.cc frf_cc
-);
-  typedef enum bit[2:0] {IDLE, START, READY} stateType; //state machine to identify f_ready
-  stateType STATE;
-  stateType NXT_STATE;
-  reg [31:0] nxt_f_rs1_data, nxt_f_rs2_data;
-  reg [31:0] last_f_rs1_data, last_f_rs2_data;
-  
-  reg [7:0] nxt_f_funct_7;
-  reg [7:0] last_f_funct_7;
-
-  reg [2:0] nxt_frm;
-  reg [2:0] last_frm;
-
-  logic f_ready;
-  always_ff @ (negedge frf_cc.n_rst, posedge frf_cc.clk)
-    begin: REG_LOGIC
-    if (!frf_cc.n_rst) begin
-      STATE <= IDLE;
-      last_f_rs1_data <= 0;
-      last_f_rs2_data <= 0;
-      last_f_funct_7 <= 0;
-      last_frm <= 0;
-    end else begin
-      STATE <= NXT_STATE;
-      last_f_rs1_data <= nxt_f_rs1_data;
-      last_f_rs2_data <= nxt_f_rs2_data;
-      last_f_funct_7 <= nxt_f_funct_7;
-      last_frm <= nxt_frm;
-    end
-  end
-
-  always_comb begin: NXT_LOGIC
-    NXT_STATE = STATE;
-    case(STATE)
-    IDLE: begin
-      if ((last_f_rs1_data != frf_cc.f_rs1_data) || (last_f_rs2_data != frf_cc.f_rs2_data) || (last_f_funct_7 != frf_cc.funct_7) || (last_frm != frf_cc.frm)) begin
-        NXT_STATE = START;
-      end else begin
-        NXT_STATE = IDLE;
-      end
-    end
-    START: begin
-      NXT_STATE = READY;
-    end
-    READY: begin
-      NXT_STATE = IDLE;
-    end
-    endcase
-  end
-
-  always_comb begin: OUTPUT_LOGIC
-    frf_cc.f_ready = 1'b0;
-    nxt_f_rs1_data = last_f_rs1_data;
-    nxt_f_rs2_data = last_f_rs2_data;
-    nxt_f_funct_7 = last_f_funct_7;
-    nxt_frm = last_frm;
-    case (STATE) 
-    READY: begin
-    frf_cc.f_ready = 1'b1;
-    end
-    IDLE: begin
-      nxt_f_rs1_data = frf_cc.f_rs1_data;
-      nxt_f_rs2_data = frf_cc.f_rs2_data;
-      nxt_f_funct_7 = frf_cc.funct_7;
-      nxt_frm = frf_cc.frm;
-    end
-    endcase
-  end
-  
-endmodule
diff --git a/source_code/fpu_integration/source/compile.sh b/source_code/fpu_integration/source/compile.sh
deleted file mode 100755
index cdb092e..0000000
--- a/source_code/fpu_integration/source/compile.sh
+++ /dev/null
@@ -1 +0,0 @@
-vlog -L $QUESTA_HOME/uvm-1.2 tb_FPU_all.sv
diff --git a/source_code/fpu_integration/source/converter.sv b/source_code/fpu_integration/source/converter.sv
deleted file mode 100644
index 07a35f0..0000000
--- a/source_code/fpu_integration/source/converter.sv
+++ /dev/null
@@ -1,126 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     f_register_file.sv
-*   
-*   Created by:   Sean Hsu	
-*   Email:        hsu151@purdue.edu
-*   Date Created: 02/24/2020
-*   Description:  floating point to integer converter
-*/
-
-
-//`include "f_register_file_if.vh"
-
-module converter (
-  input CLK, nRST, 
-  input logic [31:0] integer_val, 
-  output [31:0] floating_val
-);
-
-//  import rv32i_types_pkg::*;
-
-  parameter NUM_REGS = 32;
-
-   real        result_real;
-   reg  [31:0] result_binary;
-   real        fp1_real;
-   real        fp2_real;
-   real        fp_out_real;
-   real        fp_exp;
-   real        fp_frac;
-
-   fp_convert(.val(integer_val), .fp(floating_val));
-
-   task real_to_fp;
-      input real r;
-      output reg [31:0] fp;
-      begin
-	 
-	 int fp_index;
-	 real MAX;
-	 real MIN;
-	 
-	 fp_convert(32'b01111111011111111111111111111111, MAX);
-	 fp_convert(32'b00000000000000000000000000000000, MIN);
-	 
-	 
-	 fp = 32'b01000000000000000000000000000000;
-
-	 if(r < 0) begin // set sign bit
-	    fp[31] = 1'b1;
-	    r = -r;
-	 end
-	 
-	 if(r < MIN) // ovf 
-	    fp[30:0] = 31'b0000000000000000000000000000000;
-	 
-         else if(r > MAX) // unf
-	    fp[30:0] = 31'b1111111100000000000000000000000;
-	 
-	 else begin // everything else
-	    if(r >= 2) begin 
-	       while(r >= 2) begin
-	          r /= 2;
-		  fp[30:23] += 1;
-	       end
-	    end
-	    else if(r < 1) begin
-	       while(r < 1) begin
-		  r *= 2;
-		  fp[30:23] -= 1;
-	       end
-	    end
-	    
-	    r -= 1;
-	    fp_index = 22;
-	    for(real i = 0.50; i != 2**-24; i /= 2) begin
-	       if(r >= i) begin
-		  r -= i;
-		  fp[fp_index] = 1'b1;
-	       end
-	       fp_index -= 1;
-	    end
-	 end // else: !if((r>(1.70141*(10**38))))
-      end
-   endtask // real_to_fp
-         
-   task fp_convert;
-      input [31:0] val;
-      output real  fp;
-      begin
-         
-	 fp_exp  = real'(val[30:23]);
-	 fp_frac = real'(val[22:0]);
-
-	 fp_exp = fp_exp - 128;
-	 
-	 for(int k = 0; k < 23; k = k + 1) begin
-	    fp_frac /= 2;
-	 end
-     	 fp_frac = fp_frac + 1;	 
-
-	 if(val[31]) 
-	   fp = -fp_frac * (2 ** fp_exp);
-	 else
-	   fp = fp_frac * (2 ** fp_exp);
-      end
-   endtask // fp_convert
-
-
-
-endmodule
-
diff --git a/source_code/fpu_integration/source/determine_frac_status.sv b/source_code/fpu_integration/source/determine_frac_status.sv
deleted file mode 100644
index 045635e..0000000
--- a/source_code/fpu_integration/source/determine_frac_status.sv
+++ /dev/null
@@ -1,26 +0,0 @@
-module determine_frac_status
-(
-   input [22:0]  fp1_frac1,
-   input [22:0]  fp2_frac2,
-   output reg frac_same
-);
-
-wire [23:0] temp_fp1_frac1 = {1'b0, fp1_frac1};
-wire [23:0] temp_fp2_frac2 = {1'b0, fp2_frac2};
-reg [23:0] diff_frac1_frac2;
-reg diff_determine;
-
-always_comb begin
-	diff_frac1_frac2 = temp_fp1_frac1 - temp_fp2_frac2;
-	case(diff_frac1_frac2[23])
-		1'b0: diff_determine = 1'b0;
-		1'b1: diff_determine = 1'b1;
-	endcase
-end
-always_comb begin
-	frac_same = 0;
-	if (diff_determine == 1'b1)
-		frac_same = 1'b1;
-end
-
-endmodule
diff --git a/source_code/fpu_integration/source/f_register_file.sv b/source_code/fpu_integration/source/f_register_file.sv
deleted file mode 100644
index be1422b..0000000
--- a/source_code/fpu_integration/source/f_register_file.sv
+++ /dev/null
@@ -1,82 +0,0 @@
-/*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     f_register_file.sv
-*   
-*   Created by:   Sean Hsu	
-*   Email:        hsu151@purdue.edu
-*   Date Created: 02/24/2020
-*   Description:  floating point register file for the FPU; based on integer reg file
-*/
-//Modified by Xinlue Liu, Zhengsen Fu
-//Last Updated  : 7/21/20
-
-//`include "f_register_file_if.vh"
-//`include "FPU_if.svh"
-`include "f_register_file_if.vh"
-module f_register_file (
-  // FPU_if.fp fpa_if,
-  // register_FPU_if.fp frf_fp
-  f_register_file_if.rf frf_rf
-);
-
-//  import rv32i_types_pkg::*;
-
-// rs1 and rs2: register locations of two calculation operands
-// rd: register location where f_w_data goes
-
-  parameter NUM_REGS = 32;
-
-  logic [31:0] fcsr_reg;
-  logic [31:0] [NUM_REGS-1:0] registers;
-  logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-  //logic [2:0] frm;
-
-  always_ff @ (posedge frf_rf.clk, negedge frf_rf.n_rst) begin
-    if (~frf_rf.n_rst) begin
-      fcsr_reg <= '0;
-      registers <= '0;
-      frf_rf.frm <= '0;
-    end else if (f_wen && (!frf_rf.f_SW)) begin 
-      registers[frf_rf.f_rd] <= frf_rf.f_w_data; //f_w_data: FPU_out or dload_ext
-      //frf_rf.frm <= frf_rf.f_frm_in;
-      fcsr_reg[7:5] <= frf_rf.f_frm_in;
-      fcsr_reg[4:0] <= frf_rf.flags;
-    end else begin
-      //frf_rf.frm <= frf_rf.f_frm_in;
-      fcsr_reg[7:5] <= frf_rf.f_frm_in;
-    end
-  end 
-
-  always_comb begin: f_wen_logic
-	f_wen = 1'b0; //f_wen default to be 0.
-	if (frf_rf.f_LW) // if f_lw is assert(choosing dload_ext)
-		f_wen = 1'b1; 
-	else begin //if f_lw is asserteds(choosing FPU_out)
-		if (!frf_rf.f_ready) //if not f_ready,
-			f_wen = 1'b0;
-		else	      //if f_ready,
-			f_wen = 1'b1;
-	end
-  end
-
-  assign frf_rf.f_rs1_data = registers[frf_rf.f_rs1];
-  assign frf_rf.f_rs2_data = registers[frf_rf.f_rs2];
-
-  assign frf_rf.f_frm_out = fcsr_reg[7:5];
-  // assign frf_rf.f_flags = {frf_rf.f_NV, frf_rf.f_DZ, frf_rf.f_OF, frf_rf.f_UF, frf_rf.f_NX};
-  assign frf_rf.f_flags = fcsr_reg[4:0];
-
-endmodule
diff --git a/source_code/fpu_integration/source/f_register_file_if.svh b/source_code/fpu_integration/source/f_register_file_if.svh
deleted file mode 100644
index 7af645e..0000000
--- a/source_code/fpu_integration/source/f_register_file_if.svh
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     f_register_file_if.vh
-*   
-*   Created by:   Sean Hsu	
-*   Email:        hsu151@purdue.edu
-*   Date Created: 02/24/2020
-*   Description:  floating point register file header for the FPU; based on integer reg file header
-*/
-
-`ifndef F_REGISTER_FILE_IF_VH
-`define F_REGISTER_FILE_IF_VH
-
-interface f_register_file_if();
-
-  import rv32i_types_pkg::*;
-
-  word_t        f_w_data, f_rs1_data, f_rs2_data;
-  logic   [4:0] f_rs1, f_rs2, f_rd;
-  logic         f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX;
-  logic [2:0] f_frm_in;
-  logic [2:0] f_frm_out;
-  logic [4:0] f_flags;
-
-  modport rf (
-    input f_w_data, f_rs1, f_rs2, f_rd, f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX, f_frm_in, 
-    output f_rs1_data, f_rs2_data, f_frm_out, f_flags
-  );
-
-  modport cu (
-    output f_rs1, f_rs2, f_rd
-  );
-
-endinterface
-
-`endif //F_REGISTER_FILE_IF_VH
diff --git a/source_code/fpu_integration/source/int_compare.sv b/source_code/fpu_integration/source/int_compare.sv
deleted file mode 100755
index f6081d6..0000000
--- a/source_code/fpu_integration/source/int_compare.sv
+++ /dev/null
@@ -1,43 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/18
-//
-//Module Summary:
-//    Compares magnitude of two unsigned 8 bit integers
-//
-//Inputs: 
-//    exp1/2 - 8 bit unsigned integers
-//Outputs:
-//    u_diff  - unsigned difference between exp1 and exp2
-//    cmp_out - exp1 < exp2 -> 1, exp1 >= exp2 -> 0
-
-module int_compare(
-        input  [6:0]  funct7,
-	input      [7:0] exp1,
-	input      [7:0] exp2,
-	output     [7:0] u_diff,
-	output reg       cmp_out
-);
-
-wire [8:0] u_exp1 = {1'b0, exp1};
-wire [8:0] u_exp2 = {1'b0, exp2}; 
-reg  [8:0] diff;
-
-assign u_diff = diff[7:0];
-
-always_comb begin 
-	diff = u_exp1 - u_exp2;
-	case(diff[8]) 
-		1'b0: cmp_out = 1'b0;
-		1'b1: begin
-		      cmp_out = 1'b1; 
-		      if (funct7 == 7'b0000100) begin
-		      	diff = ~diff;
-		      end else begin
-			diff = -diff;
-		      end
-		      end
-	endcase
-end 
-endmodule
-
-
diff --git a/source_code/fpu_integration/source/int_comparesub.sv b/source_code/fpu_integration/source/int_comparesub.sv
deleted file mode 100644
index ea9f72e..0000000
--- a/source_code/fpu_integration/source/int_comparesub.sv
+++ /dev/null
@@ -1,45 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/18
-//
-//Module Summary:
-//    Compares magnitude of two unsigned 8 bit integers
-//
-//Inputs: 
-//    exp1/2 - 8 bit unsigned integers
-//Outputs:
-//    u_diff  - unsigned difference between exp1 and exp2
-//    cmp_out - exp1 < exp2 -> 1, exp1 >= exp2 -> 0
-
-module int_comparesub(
-	input      [7:0] exp1,
-	input      [7:0] exp2,
-	output     [7:0] u_diff,
-	output reg       cmp_out,
-	output reg 	 same_compare
-);
-
-wire [8:0] u_exp1 = {1'b0, exp1};
-wire [8:0] u_exp2 = {1'b0, exp2}; 
-reg  [8:0] diff;
-
-assign u_diff = diff[7:0];
-
-always_comb begin 
-	diff = u_exp1 - u_exp2;
-	case(diff[8]) 
-		1'b0: cmp_out = 1'b0;
-		1'b1: begin
-		      cmp_out = 1'b1; 
-		      diff = ~diff;
-		      end
-	endcase
-end 
-always_comb begin
-	same_compare = 1'b0;
-	if (exp1 == exp2) begin
-		same_compare = 1'b1;
-	end
-end
-endmodule
-
-
diff --git a/source_code/fpu_integration/source/left_shift.sv b/source_code/fpu_integration/source/left_shift.sv
deleted file mode 100755
index ae2aeeb..0000000
--- a/source_code/fpu_integration/source/left_shift.sv
+++ /dev/null
@@ -1,49 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/2018
-//
-//Module Summary: 
-//    Left shifts an unsigned 26 bit value until the first '1' is the most significant bit and returns the amount shifted
-//
-//Inputs:
-//    fraction - 26 bit value to be shifted
-//Outputs:
-//    result   - resulting 26 bit value with a '1' in most significance and zeros shifted in from the right
-
-module left_shift(
-	input      [25:0] fraction,
-	output reg [25:0] result,
-	output reg [7:0] shifted_amount
-);
-
-	always_comb begin
-	        result = fraction; 
-	        shifted_amount = 0;
-		casez(fraction)
-			26'b01????????????????????????: begin result = {fraction[24:0], 1'd0}; shifted_amount = 1;  end
-			26'b001???????????????????????: begin result = {fraction[23:0], 2'd0}; shifted_amount = 2;  end
-			26'b0001??????????????????????: begin result = {fraction[22:0], 3'd0}; shifted_amount = 3;  end 
-			26'b00001?????????????????????: begin result = {fraction[21:0], 4'd0}; shifted_amount = 4;  end
-			26'b000001????????????????????: begin result = {fraction[20:0], 5'd0}; shifted_amount = 5;  end
-			26'b0000001???????????????????: begin result = {fraction[19:0], 6'd0}; shifted_amount = 6;  end
-			26'b00000001??????????????????: begin result = {fraction[18:0], 7'd0}; shifted_amount = 7;  end 
-			26'b000000001?????????????????: begin result = {fraction[17:0], 8'd0}; shifted_amount = 8;  end
-			26'b0000000001????????????????: begin result = {fraction[16:0], 9'd0}; shifted_amount = 9;  end
-			26'b00000000001???????????????: begin result = {fraction[15:0],10'd0}; shifted_amount = 10; end
-			26'b000000000001??????????????: begin result = {fraction[14:0],11'd0}; shifted_amount = 11; end
-			26'b0000000000001?????????????: begin result = {fraction[13:0],12'd0}; shifted_amount = 12; end
-			26'b00000000000001????????????: begin result = {fraction[12:0],13'd0}; shifted_amount = 13; end
-			26'b000000000000001???????????: begin result = {fraction[11:0],14'd0}; shifted_amount = 14; end
-			26'b0000000000000001??????????: begin result = {fraction[10:0],15'd0}; shifted_amount = 15; end
-			26'b00000000000000001?????????: begin result = {fraction[9:0], 16'd0}; shifted_amount = 16; end
-			26'b000000000000000001????????: begin result = {fraction[8:0], 17'd0}; shifted_amount = 17; end
-			26'b0000000000000000001???????: begin result = {fraction[7:0], 18'd0}; shifted_amount = 18; end
-			26'b00000000000000000001??????: begin result = {fraction[6:0], 19'd0}; shifted_amount = 19; end
-			26'b000000000000000000001?????: begin result = {fraction[5:0], 20'd0}; shifted_amount = 20; end
-			26'b0000000000000000000001????: begin result = {fraction[4:0], 21'd0}; shifted_amount = 21; end
-			26'b00000000000000000000001???: begin result = {fraction[3:0], 22'd0}; shifted_amount = 22; end
-			26'b000000000000000000000001??: begin result = {fraction[2:0], 23'd0}; shifted_amount = 23; end
-			26'b0000000000000000000000001?: begin result = {fraction[1:0], 24'd0}; shifted_amount = 24; end
-			26'b00000000000000000000000001: begin result = {fraction[0],   25'd0}; shifted_amount = 25; end
-		endcase
-	end
-endmodule
diff --git a/source_code/fpu_integration/source/max_select.sv b/source_code/fpu_integration/source/max_select.sv
deleted file mode 100755
index 804bf52..0000000
--- a/source_code/fpu_integration/source/max_select.sv
+++ /dev/null
@@ -1,23 +0,0 @@
-// not used
-
-module max_select(
-	input      [7:0] exp1,
-	input      [7:0] exp2,
-	output reg [7:0] max
-);
-
-reg [8:0] u_exp1;
-reg [8:0] u_exp2;
-reg [8:0] diff;
-
-   assign u_exp1 = {1'b0, exp1};
-   assign u_exp2 = {1'b0, exp2};
-   assign diff = u_exp1 - u_exp2;   
-
-always_comb begin
-	if(diff[8] == 0) 
-	  max = exp1;
-	else
-	  max = exp2;
-end
-endmodule
diff --git a/source_code/fpu_integration/source/mul_26b.sv b/source_code/fpu_integration/source/mul_26b.sv
deleted file mode 100755
index fb3cb91..0000000
--- a/source_code/fpu_integration/source/mul_26b.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary:
-//    multiplies two 26 bit fraction values with decimal point after the first bit
-//
-//Inputs:
-//    frac_in1/2 - 26 bit fractions with decimal point after first bit
-//Outputs: 
-//    frac_out   - 26 bit result of operation regardless of overflow occuring
-//    overflow   - flags if an overflow has occured
-
-module mul_26b
-(
- input  [25:0] frac_in1,
- input  [25:0] frac_in2,
- output [25:0] frac_out,
- output        overflow
- );
-
-   reg 	[51:0] frac_out_52b;
-
-   assign overflow = frac_out_52b[51];
-   assign frac_out = frac_out_52b[50:25];
-
-   always_comb begin : MULTIPLY
-      frac_out_52b = frac_in1 * frac_in2;
-      
-   end
-endmodule   
diff --git a/source_code/fpu_integration/source/rc.log b/source_code/fpu_integration/source/rc.log
deleted file mode 100644
index b9e28d0..0000000
--- a/source_code/fpu_integration/source/rc.log
+++ /dev/null
@@ -1,3 +0,0 @@
-Checking out license 'RTL_Compiler_Ultra'... (0 seconds elapsed)
-License 'RTL_Compiler_Ultra' (main version: 14.2, alternate version: 14.2) checkout failed.
-Checking out license 'Genus_Synthesis'... (0 seconds elapsed)
diff --git a/source_code/fpu_integration/source/right_shift.sv b/source_code/fpu_integration/source/right_shift.sv
deleted file mode 100755
index 0ed6f3b..0000000
--- a/source_code/fpu_integration/source/right_shift.sv
+++ /dev/null
@@ -1,51 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary: 
-//    right shifts a 26 bit value by a given amount
-//
-//Inputs:
-//    fraction     - 26 bit value to be shifted
-//    shift_amount - unsigned 8 bit value amount to shift fraction
-//Outputs:
-//    result       - 26 bit result of the shift
-
-module right_shift(
-	input      [25:0] fraction,
-	input      [7:0]  shift_amount,
-	output reg [25:0] result
-);
-
-	always_comb begin
-		case(shift_amount)
-			0 : result = fraction;
-			1 : result =  {1'd0, fraction[25:1]}; 
-			2 : result =  {2'd0, fraction[25:2]};
-			3 : result =  {3'd0, fraction[25:3]};
-			4 : result =  {4'd0, fraction[25:4]};
-			5 : result =  {5'd0, fraction[25:5]};
-			6 : result =  {6'd0, fraction[25:6]};
-			7 : result =  {7'd0, fraction[25:7]};
-			8 : result =  {8'd0, fraction[25:8]};
-			9 : result =  {9'd0, fraction[25:9]};
-			10: result = {10'd0, fraction[25:10]}; 
-			11: result = {11'd0, fraction[25:11]};
-			12: result = {12'd0, fraction[25:12]};
-			13: result = {13'd0, fraction[25:13]};
-			14: result = {14'd0, fraction[25:14]};
-			15: result = {15'd0, fraction[25:15]};
-			16: result = {16'd0, fraction[25:16]};
-			17: result = {17'd0, fraction[25:17]};
-			18: result = {18'd0, fraction[25:18]};
-			19: result = {19'd0, fraction[25:19]};
-			20: result = {20'd0, fraction[25:20]};
-			21: result = {21'd0, fraction[25:21]};
-			22: result = {22'd0, fraction[25:22]};
-			23: result = {23'd0, fraction[25:23]};
-			24: result = {24'd0, fraction[25:24]};
-			25: result = {25'd0, fraction[25]};
-		   default: result = 26'd0;
-	        endcase
-	end
-endmodule
-
diff --git a/source_code/fpu_integration/source/right_shift_minus.sv b/source_code/fpu_integration/source/right_shift_minus.sv
deleted file mode 100755
index f18b3aa..0000000
--- a/source_code/fpu_integration/source/right_shift_minus.sv
+++ /dev/null
@@ -1,40 +0,0 @@
-module right_shift_minus(
-	input      [25:0] fraction,
-	input      [7:0]  shift_amount,
-	output reg [22:0] result_final
-);
-   reg [25:0] 		  result;
-   	always_comb begin
-		case(shift_amount)
-			0 : result = fraction;
-			1 : result =  {1'd0, fraction[25:1]}; 
-			2 : result =  {2'd0, fraction[25:2]};
-			3 : result =  {3'd0, fraction[25:3]};
-			4 : result =  {4'd0, fraction[25:4]};
-			5 : result =  {5'd0, fraction[25:5]};
-			6 : result =  {6'd0, fraction[25:6]};
-			7 : result =  {7'd0, fraction[25:7]};
-			8 : result =  {8'd0, fraction[25:8]};
-			9 : result =  {9'd0, fraction[25:9]};
-			10: result = {10'd0, fraction[25:10]}; 
-			11: result = {11'd0, fraction[25:11]};
-			12: result = {12'd0, fraction[25:12]};
-			13: result = {13'd0, fraction[25:13]};
-			14: result = {14'd0, fraction[25:14]};
-			15: result = {15'd0, fraction[25:15]};
-			16: result = {16'd0, fraction[25:16]};
-			17: result = {17'd0, fraction[25:17]};
-			18: result = {18'd0, fraction[25:18]};
-			19: result = {19'd0, fraction[25:19]};
-			20: result = {20'd0, fraction[25:20]};
-			21: result = {21'd0, fraction[25:21]};
-			22: result = {22'd0, fraction[25:22]};
-			23: result = {23'd0, fraction[25:23]};
-			24: result = {24'd0, fraction[25:24]};
-			25: result = {25'd0, fraction[25]};
-		   default: result = 26'd0;
-	        endcase
-	end // always_comb
-   assign result_final = result[25:3];
-   
-endmodule
diff --git a/source_code/fpu_integration/source/rounder.sv b/source_code/fpu_integration/source/rounder.sv
deleted file mode 100755
index 42e7bac..0000000
--- a/source_code/fpu_integration/source/rounder.sv
+++ /dev/null
@@ -1,65 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary: 
-//    rounds floating point after the operation according to the frm (rounding mode)
-//
-//Inputs:
-//    frm       - rounding mode
-//    sign      - one bit sign of floating point
-//    exp_in    - 8 bit exponent of floating point
-//    fraction  - 25 bit fraction of floating point (2 extra least significant bits used for rounding)
-//Ouputs:
-//    rount_out - resulting floating point after rounding operation
-
-module rounder(
-	       input      [2:0]  frm,
-	       input 		 sign,
-	       input      [7:0]  exp_in,
-	       input      [24:0] fraction,
-	       output reg [31:0] round_out,
-	       output            rounded
-	       );
-   reg        round_amount;
-
-   localparam RNE = 3'b000;
-   localparam RZE = 3'b001;
-   localparam RDN = 3'b010;
-   localparam RUP = 3'b011;
-   localparam RMM = 3'b100;
-   
-   always_comb begin
-      round_amount = 0;
-      if(fraction[24:2] != '1) begin
-	      if(frm == RNE) begin
-	          if(fraction[1:0] == 2'b11) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RZE) begin
-	          round_amount = 0;
-	      end
-	      else if(frm == RDN) begin
-	          if(sign == 1 && ((fraction[0] == 1) || (fraction[1] == 1))) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RUP) begin
-	          if(sign == 0 && ((fraction[0] == 1) || (fraction[1] == 1))) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RMM) begin
-	          if(fraction[1] == 1) begin
-	              round_amount = 1;
-            end
-	      end
-      end // if (fraction[24:2] != '1)
-   end // always_comb
-
-   assign rounded   = round_amount;
-   assign round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   
-endmodule
-	    
-	    
diff --git a/source_code/fpu_integration/source/rounder_sub.sv b/source_code/fpu_integration/source/rounder_sub.sv
deleted file mode 100644
index 02474be..0000000
--- a/source_code/fpu_integration/source/rounder_sub.sv
+++ /dev/null
@@ -1,202 +0,0 @@
-//Module Summary: 
-//    rounds floating point after the operation according to the frm (rounding mode)
-//
-//Inputs:
-//    frm       - rounding mode
-//    sign      - one bit sign of floating point
-//    exp_in    - 8 bit exponent of floating point
-//    fraction  - 25 bit fraction of floating point (2 extra least significant bits used for rounding)
-//Ouputs:
-//    rount_out - resulting floating point after rounding operation
-
-module rounder_sub(
-		input sum_init,
-	 	input clk,
-   		input nrst,
-	       input reg  [7:0] 	 unsigned_exp_diff,
-	       input [25:0]  frac_in,
-	       input reg [25:0] shifted_frac,
-	       input reg n1p2r,
-	       input reg [2:0] wm,
-	       input reg [7:0]  shifted_amount,
-	       input buf_determine,
-   	       input [25:0] frac_shifted_minus,
-	       input reg  outallzero,
-	       input reg  outallone,
-	       input      same_compare,
-	       input 	  bothnegsub,
-	       input      cmp_out,
-	       input      [31:0] fp1,
-	       input      [31:0] fp2,
-	       input      [2:0]  frm,
-	       input 		 sign,
-	       input      [7:0]  exp_in,
-	       input      [24:0] fraction,
-	       input 	  carry_out,
-	       input reg  shifted_check_allone,
-	       input reg  shifted_check_onezero,
-	       output reg [31:0] round_out,
-	       output            rounded,
-	       output 	  [23:0] sol_frac
-	       );
-   reg        round_amount;
-   reg 	[31:0] temp_round_out;
-   reg  [22:0] temp_fraction;
-   reg  [7:0]  temp_exp;
-   localparam RNE = 3'b000;
-   localparam RZE = 3'b001;
-   localparam RDN = 3'b010;
-   localparam RUP = 3'b011;
-   localparam RMM = 3'b100;
-   reg [3:0] mod;
-   reg flag_inexact;
-always_comb begin
-	flag_inexact = 1'b0;
-	if (buf_determine == 1'b1) 
-		flag_inexact = 1'b1;
-		
-end
-   //assign diff_sign_determine = ((fp1[31] == 1) & (fp2[31] == 0)) ? 1:0;
-   //assign temp_fraction = fraction;
-   //assign same_sign_determine = (((fp1[31] == 0) & (fp2[31] == 0))) ? 1:0;
-   always_comb begin
-      round_amount = 1'b0;
-      if(fraction[24:2] != '1) begin
-	 if(frm == RNE) begin
-	    if(fraction[1:0] == 2'b11)
-	      round_amount = 1'b1;
-	 end
-	 else if(frm == RZE) begin
-	    round_amount = 1'b0;
-	 end
-	 else if(frm == RDN) begin
-	 if(sign == 1 && ((fraction[0] == 1) || (fraction[1] == 1)))
-	    round_amount = 1'b1;
-	 end
-	 else if(frm == RUP) begin
-	    if(sign == 0 && ((fraction[0] == 1) || (fraction[1] == 1)))
-	      round_amount = 1'b1;
-	 end
-	 else if(frm == RMM) begin
-	    if(fraction[1] == 1)
-	      round_amount = 1'b1;
-	 end
-      end // if (fraction[24:2] != '1)
-   end // always_comb
-
-   assign rounded   = round_amount;
-   assign temp_round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   //assign round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   assign sol_frac = fraction[24:2] + round_amount;
-   always_comb begin
-	temp_fraction = sol_frac[22:0];
-	temp_exp = exp_in;
-        mod = 4'b0000;
-	if (carry_out == 1) begin
-		temp_fraction = sol_frac[22:0];
-		temp_exp = exp_in + 1'b1;
-		mod = 4'b0001;
-	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000001)) begin
-		temp_fraction = fraction[23:1] + round_amount;;
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0010;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000010)) begin
-		temp_fraction = fraction[22:0] - 1'b1;
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0011;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001100)) begin
-		temp_fraction = {fraction[12:1], 11'b00000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001010)) begin
-		temp_fraction = {fraction[14:1], 9'b000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001001)) begin
-		temp_fraction = {fraction[15:1], 8'b00000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000110)) begin
-		temp_fraction = {fraction[18:1], 5'b00000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001000)) begin
-		temp_fraction = {fraction[16:1], 7'b0000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000111)) begin
-		temp_fraction = {fraction[17:1], 6'b000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001110)) begin
-		temp_fraction = {fraction[10:1], 13'b0000000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((cmp_out == 1'b1) & (fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (sum_init == 1'b1) & (frac_shifted_minus != 0)) begin
-		temp_fraction = sol_frac[23:1];
-		temp_exp = exp_in + 1'b1;
-		mod = 4'b0101;
-	end else if ((shifted_check_onezero == 1'b0)  & (fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (cmp_out == 1'b1)) begin
-		temp_fraction = ~fraction[24:2] + 1'b1;
-		temp_exp = exp_in;
-		mod = 4'b0110;
-	end else if ((frac_shifted_minus == 0)  & (round_amount == 1'b1)) begin
-		temp_fraction = fraction[24:2];
-		temp_exp = exp_in;
-		mod = 4'b0111;
-	end else if (shifted_amount == 8'd1) begin
-		temp_fraction = fraction[23:1];
-		temp_exp = exp_in - 1'b1;
-      		mod = 4'b1000;
-	end else if ((shifted_amount == 0) & (same_compare == 1'b0)) begin
-		temp_fraction = sol_frac - round_amount;
-		temp_exp = exp_in;
-      		mod = 4'b1001;
-	end else if ((fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (cmp_out == 1'b1) & (sign == 1'b1)) begin
-		temp_fraction = ~sol_frac + 1'b1;
-		temp_exp = exp_in;
-      		mod = 4'b1010;
-	end else if ((same_compare == 1'b0) & (shifted_amount == 8'b00000001)) begin
-		temp_fraction = fraction[23:1];
-		temp_exp = exp_in - 1'b1;
-      		mod = 4'b1011;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000011)) begin
-		temp_fraction = {fraction[21:1], 2'b00};
-		temp_exp = exp_in - 8'd3;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000110)) begin
-		temp_fraction = {fraction[18:1], 5'b00000};
-		temp_exp = exp_in - 8'd6;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000111)) begin
-		temp_fraction = {fraction[13:3], 12'b000000000000};
-		temp_exp = exp_in - 8'd3;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000010)) begin
-		temp_fraction = fraction[22:0] - 1'b1;
-		temp_exp = exp_in - 8'd2;
-		mod = 4'b1101;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000100)) begin
-		temp_fraction = {fraction[20:1], 3'b000};
-		temp_exp = exp_in - 8'd4;
-		mod = 4'b1110;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000101)) begin
-		temp_fraction = {fraction[19:1], 4'b000};
-		temp_exp = exp_in - 8'd5;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001000)) begin
-		temp_fraction = {fraction[16:1], 7'b0000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001011)) begin
-		temp_fraction = {fraction[13:1], 10'b0000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001101)) begin
-		temp_fraction = {fraction[11:1], 12'b000000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end
-	end
-   assign round_out = {sign, temp_exp, temp_fraction};
-endmodule
diff --git a/source_code/fpu_integration/source/run.sh b/source_code/fpu_integration/source/run.sh
deleted file mode 100755
index 98b9603..0000000
--- a/source_code/fpu_integration/source/run.sh
+++ /dev/null
@@ -1 +0,0 @@
-vsim -i tb_FPU_all -L $QUESTA_HOME/uvm-1.2 -novopt
diff --git a/source_code/fpu_integration/source/rv32f.sv b/source_code/fpu_integration/source/rv32f.sv
deleted file mode 100644
index 849759b..0000000
--- a/source_code/fpu_integration/source/rv32f.sv
+++ /dev/null
@@ -1,29 +0,0 @@
-//By            :  Owen Prince
-//Last Updated  : 3/8/21
-//
-//Module Summary:
-//  wrapper module to use interface with the FPU_top_level module 
-//
-
-/*
-module FPU_wrapper
-(
-  input 	       clk,
-  input 	       nrst,
-	rv32f_if.fpu   fpu_if
-);
-
-	FPU_top_level fpu(.clk(clk),
-										.nrst(nrst),
-										.floating_point1(fpu_if.floating_point1),
-										.floating_point2(fpu_if.floating_point2),
-										.frm(fpu_if.frm),
-										.funct7(fpu_if.funct7),
-										.floating_point_out(fpu_if.floating_point_out),
-										.flags(fpu_if.flags),
-										.f_stall(fpu_if.fstall)
-									 );
-
-
- endmodule 
-*/
diff --git a/source_code/fpu_integration/source/rv32i_reg_file_if.vh b/source_code/fpu_integration/source/rv32i_reg_file_if.vh
deleted file mode 100644
index 841ea28..0000000
--- a/source_code/fpu_integration/source/rv32i_reg_file_if.vh
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*
-*
-*   Filename:     include/rv32i_reg_file_if.vh
-*
-*   Created by:   John Skubic
-*   Email:        jskubic@purdue.edu
-*   Date Created: 06/14/2016
-*   Description:  Interface for the Register File 
-*/
-
-`ifndef RV32I_REG_FILE_IF_VH
-`define RV32I_REG_FILE_IF_VH
-
-interface rv32i_reg_file_if();
-
-  import rv32i_types_pkg::*;
-
-  word_t        w_data, rs1_data, rs2_data;
-  logic   [4:0] rs1, rs2, rd;
-  logic         wen;
-
-  modport rf (
-    input w_data, rs1, rs2, rd, wen,
-    output rs1_data, rs2_data
-  );
-
-  modport cu (
-    output rs1, rs2, rd
-  );
-
-endinterface
-
-`endif //RV32I_REG_FILE_IF_VH
-
diff --git a/source_code/fpu_integration/source/s_to_u.sv b/source_code/fpu_integration/source/s_to_u.sv
deleted file mode 100755
index 5c2abbc..0000000
--- a/source_code/fpu_integration/source/s_to_u.sv
+++ /dev/null
@@ -1,20 +0,0 @@
-
-module s_to_u(
-	input      [26:0] frac_signed,
-	output reg        sign,
-	output     [25:0] frac_unsigned
-);
-
-reg [26:0] rfrac_signed;
-
-assign frac_unsigned = rfrac_signed[25:0];
-   
-always_comb begin
-        sign = 0;
-	rfrac_signed = frac_signed;
-	if(frac_signed[26] == 1) begin
-		rfrac_signed = -frac_signed;
-		sign         = 1;
-	end
-end
-endmodule
diff --git a/source_code/fpu_integration/source/sign_determine.sv b/source_code/fpu_integration/source/sign_determine.sv
deleted file mode 100755
index 4843ad4..0000000
--- a/source_code/fpu_integration/source/sign_determine.sv
+++ /dev/null
@@ -1,58 +0,0 @@
-module sign_determine
-  (
-   //input 	 temp_sign,
-   //input [31:0]  temp_floating_point_out,
-   input 	 cmp_out,
-   input reg	 same_compare,
-   input reg     frac_same,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   output reg signout
-   );
-   //wire [30:0] 	 temp_result;
-   //reg 		 dummy;	 
-
-   //assign temp_result[30:0] = temp_floating_point_out[30:0];
-   
-   always_comb begin
-      signout = 1'b0;
-      if ((floating_point1[31] == 0) & (floating_point2[31] == 1)) begin
-	 signout = 1'b0;
-      end else if ((floating_point1[31] == 1) & (floating_point2[31] == 0)) begin
-	 signout = 1'b1;
-      end else begin //1 1 or 00
-	 if ((floating_point1[31] == 1) & (floating_point2[31] == 1) & (same_compare == 0)) begin
-	    if (cmp_out == 1) begin
-	       signout = 1'b0;
-	    end else if (cmp_out == 0) begin
-	       signout = 1'b1;
-	    end
-	 end else if ((floating_point1[31] == 1) & (floating_point2[31] == 1) & (same_compare == 1)) begin
-	    if (frac_same == 1'b1) begin
-		signout = 1'b0;
-	    end else begin
-		signout = 1'b1;
-	    end
-	 end else if ((floating_point1[31] == 0) & (floating_point2[31] == 0) & (same_compare == 0)) begin
-	    if (cmp_out == 1) begin
-	       signout = 1'b1;
-	    end else if (cmp_out == 0) begin
-	       signout = 1'b0;
-	    end
-	    // dummy  = cmp_out ? ~temp_sign : temp_sign;
-	 end else if ((floating_point1[31] == 0) & (floating_point2[31] == 0) & (same_compare == 1)) begin
-	    if (frac_same == 1'b1) begin
-		signout = 1'b1;
-	    end else begin
-		signout = 1'b0;
-	    end
-	  end
-      end
-   end // always_comb
-   
-   //assign temp_result[31]  = cmp_out ? ~temp_sign : temp_sign;
-
-   //assign floating_point_out[31:0] = {dummy, temp_result[30:0]};
-   
-endmodule // sign_determine
-
diff --git a/source_code/fpu_integration/source/sub_26b.sv b/source_code/fpu_integration/source/sub_26b.sv
deleted file mode 100755
index e980c73..0000000
--- a/source_code/fpu_integration/source/sub_26b.sv
+++ /dev/null
@@ -1,93 +0,0 @@
-//By            : Joe Nasti
-//Modified by   : Xinlue Liu
-//Last Updated  : 6/1/20
-//
-//Module Summary: 
-//    adds two signed 26 bit fraction values
-//
-//Inputs:
-//    frac1/2 - signed 26 bit values with decimal point fixed after second bit
-//    frac1_s/frac2_s - 2's complements of the two floating points
-//    exp_determine - signal indicator that indicates which subtraction operation it is going to perform
-//Outputs:
-//    sum     - output of sum operation regardless of overflow
-//    ovf     - high if an overflow has occured 
- 
-module sub_26b(
-	input reg n1p2r,
-	input reg shifted_check_onezero,
-	input      [31:0] fp1,
-	input      [31:0] fp2,
-	input 	   cmp_out,
-	input      [26:0] frac1,
-	input      [26:0] frac2,
-	input      [26:0] frac1_s,
-	input      [26:0] frac2_s,
-	input reg n1p2,
-	input reg  bothpossub,
-	//input reg exp_determine,
-	output reg [26:0] sum, 
-	output reg        ovf,
-	output reg        outallone,
-	output reg 	  outallzero,
-	output reg    [2:0]    wm,
-	output reg sum_init
-);
-   always_comb begin : check_frac1_one
-	outallone = 1'b0;
-	outallzero = 1'b0;
-	if (frac1 == 27'b111111111111111111111111111)
-		outallone = 1'b1;
-	if ((frac1 == 0) & (fp1[31] == 0) & (fp2[31] == 0)) 
-		outallzero = 1'b1;
-		  //tallzero = 1'b0;
-   end
-always_comb begin
-   wm = 0;
-   if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 0))begin
-   	sum = frac1 + frac2;
-  	wm = 3'b001;
-   end else begin
-   	sum = frac1_s + frac2_s;
-   	//sum = ~temp_sum + 1'b1;
-        wm = 3'b010;
-	//sum 00001101010011101110001110
-   end
-   sum_init = sum[26];
-   ovf = 0;
-   if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 0)) begin
-     //if (bothpossub == 0) begin
-  	 if(frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-     	 	ovf = 1;
-     	 	sum[26] = 1;
-   	 end
-   
-   	 if(frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-     		ovf = 1;
-     		sum[26] = 0;
-   	 end
-   /*end else if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 1))begin
-  	 if(frac1_s2[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-     	 	ovf = 1;
-     	 	sum[26] = 1;
-   	 end
-   
-   	 if(frac1_s2[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-     		ovf = 1;
-     		sum[26] = 0;
-   	 end*/
-   end else begin
-   	if(frac1_s[26] == 1 && frac2_s[26]== 1 && sum[26] == 0) begin
-      		ovf = 1;
-      		sum[26] = 1;
-   	end
-   
-   	if(frac1_s[26] == 0 && frac2_s[26]== 0 && sum[26] == 1) begin
-      		ovf = 1;
-      		sum[26] = 0;
-   	end
-  end
-end
-endmodule
-
-
diff --git a/source_code/fpu_integration/source/subtract.sv b/source_code/fpu_integration/source/subtract.sv
deleted file mode 100755
index 6df5d8f..0000000
--- a/source_code/fpu_integration/source/subtract.sv
+++ /dev/null
@@ -1,23 +0,0 @@
-// subtracts shifted amount from the exponent
-
-module subtract
-(
- input  [7:0] exp1,
- input  [7:0] shifted_amount,
- output [7:0] result
-);
-
-   //reg [8:0]  u_exp1 = {1'b0, exp1};
-   reg [8:0]  u_exp1;
-   reg [8:0]  u_shifted_amount; 
-   //reg [8:0]  u_shifted_amount = {1'b0,shifted_amount};
-   reg [8:0]  u_result;
-   
-always_comb   begin
-   u_exp1           = {1'b0, exp1};
-   u_shifted_amount = {1'b0,shifted_amount};
-   u_result         = u_exp1 - u_shifted_amount;
-end
-
-   assign result = u_result[7:0];
-endmodule // subtract
diff --git a/source_code/fpu_integration/source/subtracter_8b.sv b/source_code/fpu_integration/source/subtracter_8b.sv
deleted file mode 100755
index 3eb69a9..0000000
--- a/source_code/fpu_integration/source/subtracter_8b.sv
+++ /dev/null
@@ -1,26 +0,0 @@
-module subtracter_8b(
-	input carry,
-	input [7:0]  exp1,
-	input [7:0]  exp2, 
-	output [7:0] sum, 
-	output 	     ovf,
-	output 	     unf
-);
-
-   reg [7:0] 	     r_exp1;
-   reg [7:0] 	     r_exp2;
-   reg [7:0] 	     r_sum;
-   
-
-   always_comb begin
-      r_exp1 = exp1 - 8'b10000000;
-      r_exp2 = exp2 - 8'b10000000;
-      r_sum  = r_exp1 - r_exp2;
-   end
-   
-   assign sum = (exp1 - exp2) - 8'b10000000; // add with offset
-   
-   assign ovf = r_sum[7] && ~r_exp1[7] && ~r_exp2[7];
-   assign unf = ((carry != 1) || (sum != 8'b11111111)) && (~r_sum[7] && r_exp1[7] && r_exp2[7]);
-
-endmodule
diff --git a/source_code/fpu_integration/source/tb_ADD_step1.sv b/source_code/fpu_integration/source/tb_ADD_step1.sv
deleted file mode 100755
index 15e0af0..0000000
--- a/source_code/fpu_integration/source/tb_ADD_step1.sv
+++ /dev/null
@@ -1,62 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step1();
-
-   reg [31:0] floating_point1_in;   
-   reg [31:0] floating_point2_in;   
-   reg [2:0]  frm_in;   
-   reg [2:0]  frm_out;   
-   reg        sign_shifted;   
-   reg [25:0] frac_shifted;   
-   reg 	      sign_not_shifted;   
-   reg [25:0] frac_not_shifted;   
-   reg [7:0]  exp_max;
-
-   reg 	      sign1;
-   reg [7:0]  exp1;
-   reg [22:0] frac1;
-   reg 	      sign2;
-   reg [7:0]  exp2;
-   reg [22:0] frac2;
-
-   assign floating_point1_in[31]    = sign1;
-   assign floating_point1_in[30:23] = exp1;
-   assign floating_point1_in[22:0]  = frac1;
-   assign floating_point2_in[31]    = sign2;
-   assign floating_point2_in[30:23] = exp2;
-   assign floating_point2_in[22:0]  = frac2;
-   
-   ADD_step1 DUT (
-		  .floating_point1_in(floating_point1_in),
-		  .floating_point2_in(floating_point2_in),
-		  .frm_in(frm_in),
-		  .frm_out(frm_out),
-		  .sign_shifted(sign_shifted),
-		  .frac_shifted(frac_shifted),
-		  .sign_not_shifted(sign_not_shifted),
-		  .frac_not_shifted(frac_not_shifted),
-		  .exp_max(exp_max)
-		  );
-
-   initial begin
-      frm_in = 0;
-      sign1 = 0;
-      sign2 = 1;
-      exp1  = 0;
-      exp2  = 0;
-      frac1 = 0;
-      frac2 = 0;
-
-      for(int i = 0; i < 256; i++) begin
-	 exp1  = i;
-	 frac1 = i * (2 ** 15);
-	 for(int j = 0; j <= i; j++) begin
-	    exp2  = j;
-	    frac2 = j * (2 ** 10);
-	    #1;
-
-	 end
-      end
-   end // initial begin
-endmodule // tb_ADD_step1
-
-	    
diff --git a/source_code/fpu_integration/source/tb_ADD_step2.sv b/source_code/fpu_integration/source/tb_ADD_step2.sv
deleted file mode 100755
index e280224..0000000
--- a/source_code/fpu_integration/source/tb_ADD_step2.sv
+++ /dev/null
@@ -1,54 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step2();
-
-   reg [25:0] frac1;
-   reg        sign1;
-   reg [25:0] frac2;
-   reg        sign2;
-   reg [7:0]  exp_max_in;
-   reg [2:0]  frm_in;
-   reg        sign_out;
-   reg [25:0] sum;
-   reg        carry_out;
-   reg [7:0]  exp_max_out;
-   reg [2:0]  frm_out;
-
-
-   ADD_step2 DUT (
-		  .frac1(frac1),
-		  .sign1(sign1),
-		  .frac2(frac2),
-		  .sign2(sign2),
-		  .exp_max_in(exp_max_in),
-		  .frm_in(frm_in),
-		  .sign_out(sign_out),
-		  .sum(sum),
-		  .carry_out(carry_out),
-		  .exp_max_out(exp_max_out),
-		  .frm_out(frm_out)
-		  );
-
-   initial begin
-      frac1 = 0;
-      frac2 = 0;
-      sign1 = 0;
-      sign2 = 0;
-      exp_max_in = 0;
-      frm_in = 0;
-
-      for(int i = 0; 1; i++) begin
-	 frac1 = i * (2 ** 20);
-	 sign1 = ~sign1;
-	 for(int j = 0; j < 10; j++) begin
-	    frac2 = j * (2 ** 20) + i * (2 ** 18);
-	    sign2 = ~sign2;
-	    #1;
-	 end
-      end
-   end // initial begin
-endmodule // tb_ADD_step2
-
-	    
-
-   
-	      
diff --git a/source_code/fpu_integration/source/tb_ADD_step3.sv b/source_code/fpu_integration/source/tb_ADD_step3.sv
deleted file mode 100755
index 4723993..0000000
--- a/source_code/fpu_integration/source/tb_ADD_step3.sv
+++ /dev/null
@@ -1,34 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step3();
-   reg [2:0]  frm;
-   reg [7:0]  exponent_max_in;
-   reg        sign_in;
-   reg [25:0] frac_in;
-   reg        carry_out;
-   reg [31:0] floating_point_out;
-
-   ADD_step3 DUT (
-		  .frm(frm),
-		  .exponent_max_in(exponent_max_in),
-		  .sign_in(sign_in),
-		  .frac_in(frac_in),
-		  .carry_out(carry_out),
-		  .floating_point_out(floating_point_out)
-		  );
-
-   initial begin
-      frm = 0;
-      exponent_max_in = 10;
-      sign_in = 0;
-      frac_in = 26'b10000000000000000000101011;
-      carry_out = 1;
-      #1;
-      frm = 3'b100;
-      exponent_max_in = 20;
-      sign_in = 1;
-      frac_in = 26'b00001000000000000010100101;
-      carry_out = 0;
-   end // initial begin
-endmodule // tb_ADD_step3
-
- 
diff --git a/source_code/fpu_integration/source/tb_FPU_agent.svh b/source_code/fpu_integration/source/tb_FPU_agent.svh
deleted file mode 100644
index 1f66f66..0000000
--- a/source_code/fpu_integration/source/tb_FPU_agent.svh
+++ /dev/null
@@ -1,33 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-// `include "tb_FPU_sequencer.svh"
-`include "tb_FPU_driver.svh"
-`include "tb_FPU_monitor.svh"
-// `include "FPU_result_monitor.svh"
-
-class FPU_agent extends uvm_agent;
-  `uvm_component_utils(FPU_agent)
-
-  FPU_sequencer sqr;
-  FPU_driver drv;
-  FPU_monitor mon;
-
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-  endfunction
-
-  virtual function void build_phase(uvm_phase phase);   
-    sqr = FPU_sequencer::type_id::create("sqr", this);
-    drv = FPU_driver::type_id::create("drv", this);
-    mon = FPU_monitor::type_id::create("mon", this);
-    mon.set_report_verbosity_level_hier (UVM_NONE);
-  endfunction
-
-  virtual function void connect_phase(uvm_phase phase);
-    drv.seq_item_port.connect(sqr.seq_item_export);
-    uvm_report_info("FPU_agent::", "connect_phase, Connected driver to sequencer");
-  endfunction
-
-endclass: FPU_agent
-
-
diff --git a/source_code/fpu_integration/source/tb_FPU_all.sv b/source_code/fpu_integration/source/tb_FPU_all.sv
deleted file mode 100644
index 987fe90..0000000
--- a/source_code/fpu_integration/source/tb_FPU_all.sv
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
-`include "subtracter_8b.sv"
-`include "f_register_file.sv"
-`include "ADD_step2.sv"
-`include "rv32i_types_pkg.sv"
-`include "ADD_step3.sv"
-`include "int_compare.sv"
-`include "s_to_u.sv"
-`include "subtract.sv"
-`include "c_to_cp.sv"
-`include "MUL_step1.sv"
-`include "int_comparesub.sv"
-`include "sign_determine.sv"
-`include "u_to_s.sv"
-`include "SUB_step3.sv"
-`include "rounder_sub.sv"
-`include "converter.sv"
-`include "SUB_step2.sv"
-`include "SUB_step1.sv"
-`include "adder_26b.sv"
-`include "max_select.sv"
-`include "MUL_step2.sv"
-`include "determine_frac_status.sv"
-`include "FPU_all.sv"
-`include "rounder.sv"
-`include "adder_8b.sv"
-`include "FPU_top_level.sv"
-`include "sub_26b.sv"
-`include "right_shift_minus.sv"
-`include "mul_26b.sv"
-`include "left_shift.sv"
-`include "right_shift.sv"
-`include "ADD_step1.sv"
-`include "clock_counter.sv"
-// TODO: finishe the inclusion
-`include "tb_FPU_test.svh"
-
-module tb_FPU_all ();
-  import uvm_pkg::*;
-  logic clk; 
-  logic n_rst;
-  //Generates clock
-	initial begin
-		clk = 0;
-		forever #10 clk = !clk;
-	end
-
-  initial begin 
-    n_rst=0;
-    @(posedge clk);
-    n_rst=1;
-	end
-
-  FPU_if FPUif(n_rst, clk);
-
-  FPU_all DUT(FPUif.fp);
-
-
-  initial begin
-    uvm_config_db#(virtual FPU_if)::set( null, "", "vif", FPUif);
-
-    run_test("FPU_test");
-  end
-
-
-
-endmodule
-
-*/
diff --git a/source_code/fpu_integration/source/tb_FPU_comparator.svh b/source_code/fpu_integration/source/tb_FPU_comparator.svh
deleted file mode 100644
index 065f2d4..0000000
--- a/source_code/fpu_integration/source/tb_FPU_comparator.svh
+++ /dev/null
@@ -1,69 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_transaction.svh"
-`include "FPU_if.svh"
-
-class FPU_comparator extends uvm_scoreboard;
-  `uvm_component_utils(FPU_comparator)
-  // uvm_analysis_export #(FPU_transaction) transaction_export; // receive result from predictor
-  // uvm_tlm_analysis_fifo #(FPU_transaction) transaction_fifo;
-
-  uvm_analysis_export #(FPU_response) actual_export; //receive result from DUT
-  uvm_tlm_analysis_fifo #(FPU_response) actual_fifo;
-  registerFile sim_rf;
-  transactionSeq tx_seq;
-
-  int m_matches, m_mismatches;
-  function new( string name , uvm_component parent) ;
-		super.new( name , parent );
-	  	m_matches = 0;
-	  	m_mismatches = 0;
- 	endfunction
-
-  function void build_phase( uvm_phase phase );
-    // transaction_export = new("transaction_export", this);
-    actual_export = new("actual_export", this);
-    // transaction_fifo = new("transaction_fifo", this);
-    actual_fifo = new("actual_fifo", this);
-	endfunction
-
-  function void connect_phase(uvm_phase phase);
-    // transaction_export.connect(transaction_fifo.analysis_export);
-    actual_export.connect(actual_fifo.analysis_export);
-  endfunction
-
-  task run_phase(uvm_phase phase);
-    FPU_transaction err_tx;
-    FPU_response resp;
-    int index;
-    // FPU_transaction tx;
-    logic [31:0] expected_out;
-    forever begin
-      actual_fifo.get(resp);
-      // transaction_fifo.get(tx);
-      expected_out = sim_rf.read(resp.f_rs2);
-
-      uvm_report_info("FPU Comparator", $psprintf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsimulated register[%d]: %h\nactual register[%d]   : %h\n~~~~~~~~~~~~~~~~~~~~~~~~~~~", resp.f_rs2, expected_out, resp.f_rs2, resp.FPU_all_out));
-      if((resp.FPU_all_out == expected_out) || (resp.FPU_all_out == expected_out + 1)) begin
-        m_matches++;
-        uvm_report_info("FPU Comparator", "Data Match");
-      end else begin
-        m_mismatches++;
-        $info("Current time");
-        uvm_report_error("FPU Comparator", "Error: Data Mismatch");
-        //print out most recent transaction that goes wrong
-        err_tx = tx_seq.search(resp.f_rs2);
-        index = tx_seq.search_index(resp.f_rs2);
-        uvm_report_info("FPU Comparator",  $psprintf("\nCurrent transaction index: %d\nTransaction that went wrong index: %d\n", tx_seq.index, index));
-        err_tx.print();
-      end
-    end
-  endtask
-
-  function void report_phase(uvm_phase phase);
-    uvm_report_info("FPU Comparator", $sformatf("Matches:    %0d", m_matches));
-    uvm_report_info("FPU Comparator", $sformatf("Mismatches: %0d", m_mismatches));
-  endfunction
-
-endclass
diff --git a/source_code/fpu_integration/source/tb_FPU_driver.svh b/source_code/fpu_integration/source/tb_FPU_driver.svh
deleted file mode 100644
index 4b431ea..0000000
--- a/source_code/fpu_integration/source/tb_FPU_driver.svh
+++ /dev/null
@@ -1,49 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-
-class FPU_driver extends uvm_driver#(FPU_transaction);
-  `uvm_component_utils(FPU_driver)
-
-  protected virtual FPU_if vif;
-  int tx_number;
-
-  function new(string name, uvm_component parent);
-		super.new(name, parent);
-	endfunction: new
-
-  function void build_phase(uvm_phase phase);
-    super.build_phase(phase);
-    if( !uvm_config_db#(virtual FPU_if)::get(this, "", "vif", vif) ) begin
-      `uvm_fatal("FPU/DRV/NOVIF", "No virtual interface specified for this test instance");
-		end
-    tx_number = -1;
-  endfunction: build_phase
-
-  task run_phase(uvm_phase phase);
-    FPU_transaction req_item;
-
-    forever begin 
-      seq_item_port.get_next_item(req_item);
-      @(posedge vif.clk);
-      tx_number++;
-      vif.f_LW = req_item.f_LW;
-      vif.f_SW = req_item.f_SW;
-      vif.f_rs1 = req_item.f_rs1;
-      vif.f_rs2 = req_item.f_rs2;
-      vif.f_rd = req_item.f_rd;
-      vif.f_frm_in = req_item.f_frm_in;
-      vif.f_funct_7 = req_item.f_funct_7;
-      vif.dload_ext = req_item.dload_ext;
-      vif.transaction_number = tx_number;
-      //wait two clock cycle
-      @(posedge vif.clk);
-      @(posedge vif.clk);
-
-
-      seq_item_port.item_done();
-    end
-  endtask: run_phase
-
-endclass: FPU_driver
diff --git a/source_code/fpu_integration/source/tb_FPU_env.svh b/source_code/fpu_integration/source/tb_FPU_env.svh
deleted file mode 100644
index dd01f1a..0000000
--- a/source_code/fpu_integration/source/tb_FPU_env.svh
+++ /dev/null
@@ -1,46 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-`include "tb_FPU_agent.svh"
-`include "FPU_if.svh"
-`include "tb_FPU_comparator.svh"
-`include "tb_FPU_predictor.svh"
-`include "tb_FPU_transaction.svh"
-
-class FPU_env extends uvm_env;
-  `uvm_component_utils(FPU_env)
-  FPU_agent FPU_agt;
-
-  FPU_predictor FPU_pred;
-  FPU_comparator FPU_comp;
-
-  registerFile sim_rf; //simulated register file
-  transactionSeq tx_seq;
-  
-  function new(string name = "FPU_env", uvm_component parent = null);
-		super.new(name, parent);
-	endfunction
-
-  function void build_phase(uvm_phase phase);
-    sim_rf = new();
-    tx_seq = new();
-    sim_rf.initialize();
-    FPU_agt = FPU_agent::type_id::create("FPU_agt", this);
-    FPU_pred = FPU_predictor::type_id::create("FPU_pred", this);
-    FPU_comp = FPU_comparator::type_id::create("FPU_comp", this);
-    //connect simulated register file
-    FPU_pred.sim_rf = sim_rf;
-    FPU_comp.sim_rf = sim_rf;
-
-    //connect transaction queues
-    FPU_pred.tx_seq = tx_seq;
-    FPU_comp.tx_seq = tx_seq;
-  endfunction
-
-  function void connect_phase(uvm_phase phase);
-    FPU_agt.mon.FPU_ap.connect(FPU_pred.analysis_export); //connect monitor to predictor
-    // FPU_pred.ap_pred.connect(FPU_comp.transaction_export); //connect predictor to comparator
-    FPU_agt.mon.FPU_result_ap.connect(FPU_comp.actual_export); //connect monitor to comparator
-  endfunction
-
-
-endclass: FPU_env
diff --git a/source_code/fpu_integration/source/tb_FPU_monitor.svh b/source_code/fpu_integration/source/tb_FPU_monitor.svh
deleted file mode 100644
index d3181c0..0000000
--- a/source_code/fpu_integration/source/tb_FPU_monitor.svh
+++ /dev/null
@@ -1,64 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-
-
-class FPU_monitor extends uvm_monitor;
-  `uvm_component_utils(FPU_monitor)
-  virtual FPU_if vif;
-
-  uvm_analysis_port #(FPU_transaction) FPU_ap;
-  uvm_analysis_port #(FPU_response) FPU_result_ap;
-  FPU_transaction prev_tx; //to see if a new transaction has been sent
-  
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-    FPU_ap = new("FPU_ap", this);
-    FPU_result_ap = new("FPU_result_ap", this);
-  endfunction: new
-
-  //Build Phase - Get handle to virtual if from agent/config_db
-  virtual function void build_phase(uvm_phase phase);
-    virtual FPU_if FPU_if_temp;
-    if (!uvm_config_db#(virtual FPU_if)::get(this, "", "vif", FPU_if_temp)) begin
-      `uvm_fatal("FPU/MON/NOVIF", "No virtual interface specified for this monitor instance")
-    end
-    vif = FPU_if_temp;
-    prev_tx = FPU_transaction::type_id::create("prev_tx");
-  endfunction
-
-  virtual task run_phase(uvm_phase phase);
-    super.run_phase(phase);
-    forever begin
-      FPU_transaction tx;
-      FPU_response resp;
-      @(posedge vif.clk);
-      tx = FPU_transaction::type_id::create("tx");
-      tx.f_LW = vif.f_LW;
-      tx.f_SW = vif.f_SW;
-      tx.f_rs1 = vif.f_rs1;
-      tx.f_rs2 = vif.f_rs2;
-      tx.f_rd = vif.f_rd;
-      tx.f_frm_in = vif.f_frm_in;
-      tx.f_funct_7 = vif.f_funct_7;
-      tx.dload_ext = vif.dload_ext;
-
-
-      if (!tx.compare(prev_tx)) begin
-        FPU_ap.write(tx);
-        @(posedge vif.clk);
-        @(posedge vif.clk);
-        if(tx.f_SW) begin
-          resp = FPU_response::type_id::create("resp");
-          resp.FPU_all_out = vif.FPU_all_out;
-          resp.f_rs2 = vif.f_rs2;
-          FPU_result_ap.write(resp);
-        end
-        prev_tx.copy(tx);
-      end
-    end
-  endtask: run_phase
-
-
-endclass: FPU_monitor
diff --git a/source_code/fpu_integration/source/tb_FPU_predictor.svh b/source_code/fpu_integration/source/tb_FPU_predictor.svh
deleted file mode 100644
index 7c1624a..0000000
--- a/source_code/fpu_integration/source/tb_FPU_predictor.svh
+++ /dev/null
@@ -1,140 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-`include "tb_FPU_transaction.svh"
-
-class FPU_predictor extends uvm_subscriber #(FPU_transaction);
-  `uvm_component_utils(FPU_predictor) 
-  // uvm_analysis_port #(FPU_transaction) ap_pred;
-  
-  registerFile sim_rf;
-  transactionSeq tx_seq;
-
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-  endfunction: new
-
-  // function void build_phase(uvm_phase phase);
-  //   ap_pred = new("ap_pred", this);
-  // endfunction
-
-  function void write(FPU_transaction t);
-
-    localparam ADD = 7'b0000000;
-    localparam MUL = 7'b0001000;
-    localparam SUB = 7'b0000100; 
-    real real_val1; //first real operand
-    real real_val2; //second real operand
-    real real_result; //result of the operation
-    logic [31:0] fp_result;
-    logic [31:0] fp1;
-    logic [31:0] fp2;
-    tx_seq.push(t);
-
-    fp1 = sim_rf.read(t.f_rs1);
-    fp2 = sim_rf.read(t.f_rs2);
-
-    if(t.f_LW) begin
-      sim_rf.write(t.f_rd, t.dload_ext);
-    end else if(t.f_SW) begin
-      ;
-    end else if(t.f_funct_7 == ADD) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 + real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end else if (t.f_funct_7 == MUL) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 * real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end else if (t.f_funct_7 == SUB) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 - real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end
-    // ap_pred.write(t);
-  endfunction: write
-
-  // conversion function copied directly from the previous test bench
-  // input: val   -   32bit floating point value according to IEEE 754
-  // output: fp   -   converted value in real
-  function real fp_to_real(logic [31:0] val);
-    real fp;
-    real fp_exp;
-    real fp_frac;
-    fp_exp  = real'(val[30:23]);
-    fp_frac = real'(val[22:0]);
-
-    fp_exp = fp_exp - 128;
-	 
-    for(int k = 0; k < 23; k = k + 1) begin
-        fp_frac /= 2;
-    end
-    fp_frac = fp_frac + 1;	 
-
-	  if(val[31]) 
-	   fp = -fp_frac * (2 ** fp_exp);
-	  else
-	   fp = fp_frac * (2 ** fp_exp);
-    return fp;
-  endfunction
-
-  // conversion function copied directly from the previous test bench
-  // input: r     -   real deciaml value
-  // output: fp   -   converted 32 bit floating point value specified by IEEE 754
-  function logic [31:0] real_to_fp(real r);
-    logic [31:0] fp;
-    int fp_index;
-	  real MAX;
-	  real MIN;
-	 
-    MAX = fp_to_real(32'b01111111011111111111111111111111);
-    MIN = fp_to_real(32'b00000000000000000000000000000000);
-	 
-	  fp = 32'b01000000000000000000000000000000;
-
-    if(r < 0) begin // set sign bit
-      fp[31] = 1'b1;
-      r = -r;
-    end
-	 
-    if(r < MIN) // ovf 
-      fp[30:0] = 31'b0000000000000000000000000000000;
-
-    else if(r > MAX) // unf
-      fp[30:0] = 31'b1111111100000000000000000000000;
-    
-    else begin // everything else
-	    if(r >= 2) begin 
-        while(r >= 2) begin
-          r /= 2;
-		      fp[30:23] += 1;
-        end
-	    end
-	    else if(r < 1) begin
-        while(r < 1) begin
-          r *= 2;
-          fp[30:23] -= 1;
-        end
-	    end
-	    
-	    r -= 1;
-	    fp_index = 22;
-	    for(real i = 0.50; i != 2**-24; i /= 2) begin
-	       if(r >= i) begin
-		  r -= i;
-		  fp[fp_index] = 1'b1;
-	       end
-	       fp_index -= 1;
-	    end
-	  end // else: !if((r>(1.70141*(10**38))))
-    return fp;
-  endfunction
-
-endclass: FPU_predictor
diff --git a/source_code/fpu_integration/source/tb_FPU_sequencer.svh b/source_code/fpu_integration/source/tb_FPU_sequencer.svh
deleted file mode 100644
index ab80fbb..0000000
--- a/source_code/fpu_integration/source/tb_FPU_sequencer.svh
+++ /dev/null
@@ -1,304 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_transaction.svh"
-
-class FPU_sequence extends uvm_sequence #(FPU_transaction);
-  `uvm_object_utils(FPU_sequence)
-
-  localparam ADD = 7'b0000000;
-  localparam MUL = 7'b0001000;
-  localparam SUB = 7'b0000100; 
-
-  function new(string name = "");
-    super.new(name);
-  endfunction: new
-
-  task body();
-    FPU_transaction req_item;
-    req_item = FPU_transaction::type_id::create("req_item");
-    //~~~~~~~~~~~~~~~~
-    //load to register 0 and read test case
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //add test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //add operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = ADD;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //mul test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //mul operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = MUL;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //sub test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //add operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = ADD;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //mul test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //mul operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = SUB;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //random test case
-
-    repeat(5000) begin
-      logic [4:0] rs1; //register selection 1. Select operand 1 from a register
-      logic [4:0] rs2; //register selection 2. Select operand 2 from a register
-      logic [4:0] rd;  // register destination. Select which register to be written
-    
-      // load 1
-      start_item(req_item);
-      req_item.mode = req_item.LOAD;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      rs1 = req_item.f_rd;
-      finish_item(req_item);
-
-      // load 2
-      start_item(req_item);
-      req_item.mode = req_item.LOAD;
-      while(req_item.f_rd == rs1) begin
-        if(!req_item.randomize()) begin
-          `uvm_fatal("FPU_seq", "not able to randomize")
-        end
-      end
-      rs2 = req_item.f_rd;
-      finish_item(req_item);
-
-      // operation
-      start_item(req_item);
-      req_item.mode = req_item.OP;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      req_item.f_rs1 = rs1;
-      req_item.f_rs2 = rs2;
-      rd = req_item.f_rd;
-      finish_item(req_item);
-
-      // store
-      start_item(req_item);
-      req_item.mode = req_item.STR;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      req_item.f_rs2 = rd;
-      finish_item(req_item);
-    end
-
-  endtask: body
-endclass //FPU_sequence
-
-class FPU_sequencer extends uvm_sequencer#(FPU_transaction);
-
-   `uvm_component_utils(FPU_sequencer)
- 
-   function new(input string name= "FPU_sequencer", uvm_component parent=null);
-      super.new(name, parent);
-   endfunction : new
-
-endclass : FPU_sequencer
diff --git a/source_code/fpu_integration/source/tb_FPU_test.svh b/source_code/fpu_integration/source/tb_FPU_test.svh
deleted file mode 100644
index b7b78bb..0000000
--- a/source_code/fpu_integration/source/tb_FPU_test.svh
+++ /dev/null
@@ -1,41 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_sequencer.svh"
-`include "tb_FPU_env.svh"
-
-
-class FPU_test extends uvm_test;
-  `uvm_component_utils(FPU_test)
-
-  FPU_env env;
-  virtual FPU_if vif;
-  FPU_sequence seq;
-
-  function new(string name = "FPU_test", uvm_component parent);
-		super.new(name, parent);
-	endfunction: new
-
-  function void build_phase(uvm_phase phase);
-    super.build_phase(phase);
-		env = FPU_env::type_id::create("env",this);
-    seq = FPU_sequence::type_id::create("seq");
-
-    // send the interface down
-    if (!uvm_config_db#(virtual FPU_if)::get(this, "", "vif", vif)) begin
-		   `uvm_fatal("TEST", "No virtual interface specified for this test instance")
-		end 
-
-		uvm_config_db#(virtual FPU_if)::set(this, "env.agt*", "vif", vif);
-
-  endfunction: build_phase
-  
-  task run_phase(uvm_phase phase);
-    phase.raise_objection( this, "Starting apb_base_seq in main phase" );
-		$display("%t Starting sequence FPU_seq run_phase",$time);
- 		seq.start(env.FPU_agt.sqr);
-		#100ns;
-		phase.drop_objection( this , "Finished apb_seq in main phase" );
-  endtask
-
-endclass //FPU_test
\ No newline at end of file
diff --git a/source_code/fpu_integration/source/tb_FPU_top_level.sv b/source_code/fpu_integration/source/tb_FPU_top_level.sv
deleted file mode 100755
index 5f3b14e..0000000
--- a/source_code/fpu_integration/source/tb_FPU_top_level.sv
+++ /dev/null
@@ -1,208 +0,0 @@
-`timescale 1ns/100ps
-module tb_FPU_top_level();
-   reg clk = 0;
-   reg nrst;
-   reg [31:0] floating_point1;
-   reg [31:0] floating_point2;
-   reg [2:0]  frm;
-   reg [31:0] floating_point_out;
-   reg [6:0]  funct7;
-   reg [4:0]  flags;
-   reg start_sig;
-   reg f_ready;
-   
-   always begin
-      clk = ~clk;
-      #1;
-   end
-
-   FPU_top_level DUT (
-		      .clk(clk),
-		      .nrst(nrst),
-		      .floating_point1(floating_point1),
-		      .floating_point2(floating_point2),
-		      .frm(frm),
-		      .funct7(funct7),
-		      .floating_point_out(floating_point_out),
-		      .flags(flags)
-		      );
-   
-   shortreal        result_real;
-   reg  [31:0] result_binary;
-   shortreal        fp1_real;
-   shortreal        fp2_real;
-   shortreal        fp_out_real;
-   shortreal        fp_exp;
-   shortreal        fp_frac;
-   int       i;
-   int       j = 0;
-   //real val1;
-   //shortreal val2;
-   task random_check;
-      begin
-         //$display($bits(val1));
-   	 //$display($bits(val2));
-         //subnormal number
-	 frm = $random() % 8;
-	 funct7 = 7'b0001000;
-	 floating_point1 = $random();
-	 floating_point2 = $random();
-
-	 if(floating_point1[30:23] == 8'b11111111) 
-	   floating_point1[30:23] = 8'b11111110;
-	 if(floating_point2[30:23] == 8'b11111111) 
-	   floating_point2[30:23] = 8'b11111110;
-
-	 //convert from floating point to 2 real values
-	 fp_convert(.val(floating_point1), .fp(fp1_real));
-	 fp_convert(.val(floating_point2), .fp(fp2_real));
-
-	 //performing real number arithemetic
-	 //
-	 if(funct7 == 7'b0000000) begin
-	    result_real = fp1_real + fp2_real; //addition
-	 end else if (funct7 == 7'b0001000) begin
-	    result_real = fp1_real * fp2_real; //multiplication
-         end else if (funct7 == 7'b0000100) begin
-	    result_real = fp1_real - fp2_real; //subtraction
-	 end
-	 
-	 else result_real = 'x;
-	 
-	 real_to_fp(.r(result_real), .fp(result_binary)); //convert the real number back to floating point
-	 @(negedge clk);
-	 @(negedge clk);
-	 
-	 @(negedge clk);
-	 fp_convert(.val(floating_point_out), .fp(fp_out_real));
-	 #1;
-	 assert((floating_point_out == result_binary) || (floating_point_out == result_binary + 1) || (floating_point_out == result_binary - 1)) 
-	   else begin
-	      j = j + 1;
-	      $error("expected = %b, calculated = %b, wrong case = %d, number = %d, fp1 is = %b, fp2 is = %b, result_real is %d", result_binary, floating_point_out, i, j, floating_point1, floating_point2, result_real);
-	//$error("expected = %b, calculated = %b, wrong case = %d, number = %d", result_binary, floating_point_out, i, j);
-	      //$display(fp1_real);//
-	      //$display(fp2_real);//
-	      //$display(result_real); //expected
-	      //$display(fp_out_real); //computed
-	   end
-	 //if((flags[1] == 0) & (flags[2] == 0)) begin
-	   // assert(flags[0] == 0) else $error("asdklfj;as");
-	 //end
-	 @(negedge clk);
-	 floating_point1 = '0;
-	 floating_point2 = '0;
-	 frm             = '0;
-	 funct7          = '0;
-	 result_real     = '0;
-	 fp1_real        = '0;
-	 fp2_real        = '0;
-	 fp_exp          = '0;
-	 fp_frac         = '0;
-	 @(negedge clk);
-	 
-      end
-   endtask // random_check
-   
-   task real_to_fp;
-      input shortreal r;
-      output reg [31:0] fp;
-      begin
-	 
-	 int fp_index;
-	 shortreal MAX;
-	 shortreal MIN;
-	 
-	 fp_convert(32'b01111111011111111111111111111111, MAX);
-	 fp_convert(32'b00000000000000000000000000000000, MIN);
-	 
-	 
-	 fp = 32'b01000000000000000000000000000000;
-
-	 if(r < 0) begin // set sign bit
-	    fp[31] = 1'b1;
-	    r = -r;
-	 end
-	 
-	 if(r < MIN) // ovf 
-	    fp[30:0] = 31'b0000000000000000000000000000000;
-	 
-         else if(r > MAX) // unf
-	    fp[30:0] = 31'b1111111100000000000000000000000;
-	 
-	 else begin // everything else
-	    if(r >= 2) begin 
-	       while(r >= 2) begin
-	          r /= 2;
-		  fp[30:23] += 1;
-	       end
-	    end
-	    else if(r < 1) begin
-	       while(r < 1) begin
-		  r *= 2;
-		  fp[30:23] -= 1;
-	       end
-	    end
-	    
-	    r -= 1;
-	    fp_index = 22;
-	    for(shortreal i = 0.50; i != 2**-24; i /= 2) begin
-	       if(r >= i) begin
-		  r -= i;
-		  fp[fp_index] = 1'b1;
-	       end
-	       fp_index -= 1;
-	    end
-	 end // else: !if((r>(1.70141*(10**38))))
-      end
-   endtask // real_to_fp
-         
-   task fp_convert;
-      input [31:0] val;
-      output shortreal  fp;
-      begin
-         
-	 fp_exp  = shortreal'(val[30:23]);
-	 fp_frac = shortreal'(val[22:0]);
-
-	 fp_exp = fp_exp - 128;
-	 
-	 for(int k = 0; k < 23; k = k + 1) begin
-	    fp_frac /= 2;
-	 end
-     	 fp_frac = fp_frac + 1;	 
-
-	 if(val[31]) 
-	   fp = -fp_frac * (2 ** fp_exp);
-	 else
-	   fp = fp_frac * (2 ** fp_exp);
-      end
-   endtask // fp_convert
-
-task reset_dut;
-  begin
-  nrst = 1'b0;
-
-  @(posedge clk);
-  @(posedge clk);
-
-  @(negedge clk);
-  nrst = 1'b1;
-
-  @(negedge clk);
-  @(negedge clk);
-  end
-endtask
-
-initial begin
-   reset_dut();
-   i = 0;
-//random_check();
-   while (1) begin
-	reset_dut();
-	i = i + 1;
-	random_check();
-  end //
-end
-   
-endmodule // tb_FPU_top_level
diff --git a/source_code/fpu_integration/source/tb_FPU_transaction.svh b/source_code/fpu_integration/source/tb_FPU_transaction.svh
deleted file mode 100644
index 8c0b4f4..0000000
--- a/source_code/fpu_integration/source/tb_FPU_transaction.svh
+++ /dev/null
@@ -1,134 +0,0 @@
-`ifndef TRANSACTION_SV
-`define TRANSACTION_SV
-
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-class FPU_transaction extends uvm_sequence_item;
-  localparam LOAD = 2'd0;
-  localparam OP = 2'd1;
-  localparam STR = 2'd2;
-
-  logic [1:0] mode; // choose load, operation, or store
-  rand logic f_LW; //load. Load from memory to register
-  rand logic f_SW; //save. Save from rs2 to memory 
-
-  rand logic [4:0] f_rs1; //register selection 1. Select operand 1 from a register
-  rand logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  rand logic [4:0] f_rd; //register destination. Select which register to be written
-
-  rand logic [2:0] f_frm_in; //input rounding method.
-  rand logic [6:0] f_funct_7; //operation selection of FPU
-  
-  rand logic [31:0] dload_ext; //TODO: confirm the identifier
-
-  `uvm_object_utils_begin(FPU_transaction)
-    `uvm_field_int(f_LW, UVM_DEFAULT)
-    `uvm_field_int(f_SW, UVM_DEFAULT)
-    `uvm_field_int(f_rs1, UVM_DEFAULT)
-    `uvm_field_int(f_rs2, UVM_DEFAULT)
-    `uvm_field_int(f_rd, UVM_DEFAULT)
-    `uvm_field_int(f_frm_in, UVM_DEFAULT)
-    `uvm_field_int(f_funct_7, UVM_DEFAULT)
-    `uvm_field_int(dload_ext, UVM_DEFAULT)
-  `uvm_object_utils_end
-
-  localparam ADD = 7'b0000000;
-  localparam MUL = 7'b0001000;
-  localparam SUB = 7'b0000100; 
-
-  localparam RNE = 3'b000;
-  localparam RZE = 3'b001;
-  localparam RDN = 3'b010;
-  localparam RUP = 3'b011;
-  localparam RMM = 3'b100;
-
-  constraint c_mode {mode == LOAD -> f_LW == 1; mode == OP -> (f_SW == 0 && f_LW == 0); mode == STR -> f_SW == 1;}
-  constraint LW_SW {!(f_LW && f_SW);}
-  constraint calculation_method {f_funct_7 == ADD || f_funct_7 == MUL || f_funct_7 == SUB;}
-  constraint operand {dload_ext[30:23] != 8'b11111111;}
-  constraint destination {f_rd != f_rs1; f_rd != f_rs2;}
-  constraint rounding {f_frm_in == RNE || f_frm_in == RZE || f_frm_in == RDN || f_frm_in == RUP || f_frm_in == RMM;}
-
-  function new(string name = "FPU_transaction");
-    super.new(name);
-  endfunction: new
-
-endclass //FPU_transaction
-
-class FPU_response extends uvm_sequence_item;
-  // logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  logic [31:0] FPU_all_out; //output when f_SW is asserted
-  // logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  `uvm_object_utils_begin(FPU_response)
-    // `uvm_field_int(f_flags, UVM_DEFAULT)
-    `uvm_field_int(FPU_all_out, UVM_DEFAULT)
-    `uvm_field_int(f_rs2, UVM_DEFAULT)
-    // `uvm_field_int(f_frm_out, UVM_DEFAULT)
-  `uvm_object_utils_end
-
-  function new(string name = "FPU_response");
-    super.new(name);
-  endfunction: new
-
-endclass //FPU_response
-
-class registerFile;
-  parameter NUM_REGS = 32;
-  logic [31:0] [NUM_REGS-1:0] registers;
-
-  function void write(logic[4:0]rd, logic[31:0] val);
-    registers[rd] = val;
-  endfunction
-
-  function logic[31:0] read(logic[4:0]rd);
-    return registers[rd];
-  endfunction
-
-  function void initialize();
-    for(int lcv = 0; lcv < 32; lcv++) begin
-      registers[lcv] = '0;
-    end
-  endfunction
-endclass //registerFile
-
-class transactionSeq; //transaction sequence
-  localparam MAX_SIZE = 100000;
-  FPU_transaction arr[MAX_SIZE - 1:0];
-  int index; //points to most recent transactoin
-  function new();
-    index = -1;
-  endfunction //new()
-
-  //push one transaction into the arr
-  function void push(FPU_transaction item);
-    if(index == MAX_SIZE) begin //can be implemented as a queue is needed in the future
-      $fatal("transactionSeq: sequence cannot hold more items"); 
-    end
-    index++;
-    arr[index] = item;
-  endfunction
-
-  //search for the most recent transaction that used dest as f_rd
-  function FPU_transaction search(logic[4:0] dest);
-    for(int lcv = index; lcv > 0; lcv--) begin
-      if(arr[lcv].f_rd == dest && arr[lcv].f_SW != 1) begin
-        return arr[lcv];
-      end
-    end
-    $fatal("transaction not found!\n");
-  endfunction
-
-  function int search_index(logic[4:0] dest);
-    for(int lcv = index; lcv > 0; lcv--) begin
-      if(arr[lcv].f_rd == dest && arr[lcv].f_SW != 1) begin
-        return lcv;
-      end
-    end
-    $fatal("transaction not found!\n");
-  endfunction
-endclass //transactionSeq
-
-`endif
diff --git a/source_code/fpu_integration/source/tb_adder_26b.sv b/source_code/fpu_integration/source/tb_adder_26b.sv
deleted file mode 100755
index 2e07412..0000000
--- a/source_code/fpu_integration/source/tb_adder_26b.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-// functional test bench
-
-`timescale 1ns/100ps
-module tb_adder_26b();
-
-reg [26:0] frac1;
-reg [26:0] frac2;
-reg [26:0] sum;
-reg 	   carry_out;
-
-adder_26b DUT (.frac1(frac1), .frac2(frac2), .sum(sum), .ovf(carry_out));
-
-initial begin
-        frac1 = 0;
-        frac2 = 0;
-	// check some inputs of frac1 and frac2
-	for(int i = 0; i < 2 ** 27; i = i + 2 ** 20) begin 
-		for(int j = 0; j < 2 ** 27; j = j + 2 ** 20) begin
-		    #1;
-	      	    assert(sum == (frac1 + frac2)) else $error("incorrect sum");
-		    if((frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) || (frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1)) assert(carry_out == 1) else $error("incorrect 0 ovf. Expected 1"); 
-	            else assert(carry_out == 0) else $error("incorrect 1 ovf. Expeected 0");
-		    frac2 = frac2 + 2 ** 20;
-		  
-		end
-	   frac1 = frac1 + 2 ** 20;
-	   frac2 = 0;
-	end
-end
-endmodule
diff --git a/source_code/fpu_integration/source/tb_adder_8b.sv b/source_code/fpu_integration/source/tb_adder_8b.sv
deleted file mode 100755
index b71b1e1..0000000
--- a/source_code/fpu_integration/source/tb_adder_8b.sv
+++ /dev/null
@@ -1,46 +0,0 @@
-`timescale 1ps/1ps
-module tb_adder_8b();
-
-reg [7:0] exp1;
-reg [7:0] exp2;
-reg [7:0] sum;
-reg       ovf;
-reg 	  unf;
-   
-	  
-adder_8b DUT (
-	      .exp1(exp1), 
-	      .exp2(exp2), 
-	      .sum(sum), 
-	      .ovf(ovf), 
-	      .unf(unf)
-	      );
-
-   reg [7:0] r_j;
-   reg [7:0] r_i;
-   reg [7:0] r_sum;
-
-   assign r_sum = r_i + r_j - 8'b10000000;
-   
-initial begin
-        exp1 = 0;
-        exp2 = 0;
-	for(int i = 0; i != 256; i = i + 1) begin 
-		for(int j = 0; j != 256; j = j + 1) begin
-		        r_j = j;
-		        r_i = i;
-		   #1;
-		   assert(sum == ((r_i + r_j) - 8'b10000000))
-		   else $error("incorrect sum: expected = %d | calculated = %d", (r_i + r_j - 8'b10000000), sum);
-		   if((i + j) < 128) assert(unf == 1) else $error("incorrect 1 unf");
-		   if((i + j) > 383) assert(ovf == 1) else $error("incorrect 1 ovf");
-		   #1000;
-		   
-		   exp2 = exp2 + 1;
-		  
-		end
-	   exp1 = exp1 + 1;
-	   exp2 = 0;
-	end
-end
-endmodule
diff --git a/source_code/fpu_integration/source/tb_f_register_file.sv b/source_code/fpu_integration/source/tb_f_register_file.sv
deleted file mode 100644
index b63ae87..0000000
--- a/source_code/fpu_integration/source/tb_f_register_file.sv
+++ /dev/null
@@ -1,45 +0,0 @@
-`timescale 1ps/1ps
-module tb_f_register_file();
-
-
-   logic [7:0] f_w_data, f_rs1_data, f_rs2_data;
-  logic   [4:0] f_rs1, f_rs2, f_rd;
-  logic         f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX;
-  logic [2:0] f_frm_in;
-  logic [2:0] f_frm_out;
-  logic [4:0] f_flags;
- 
-  
-   reg clk = 0;
-   reg nrst;
-    
-   always begin
-      clk = ~clk;
-      #1;
-   end
-
-   FPU_top_level DUT (
-		      .clk(clk),
-		      .nrst(nrst),
-		      .f_w_data(f_w_data),
-		      .f_rs1_data(f_rs1_data),
-		      .f_rs2_data(f_rs2_data),
-		      .f_rs1(f_rs1),
-		      .f_rs2(f_rs2),
-		      .f_rd(f_rd),
-		      .f_wen(f_wen),
-		      .f_NV(f_NV),
-		      .f_DZ(f_DZ),
-		      .f_OF(f_OF),
-		      .f_UF(f_NX),
-		      .f_frm_in(f_frm_in),
-		      .f_frm_out(f_frm_out),
-		      .f_flags(f_flags)
-		      );
-   
-
-   
-initial begin
-
-end
-endmodule
diff --git a/source_code/fpu_integration/source/tb_int_compare.sv b/source_code/fpu_integration/source/tb_int_compare.sv
deleted file mode 100755
index 902397a..0000000
--- a/source_code/fpu_integration/source/tb_int_compare.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-`timescale 1ns/100ps
-module tb_int_compare();
-
-   reg [7:0] exp1    = 0;
-   reg [7:0] exp2    = 0;
-   reg [7:0] u_diff;
-   reg       cmp_out;
-   int 	     i       = 0;
-   
-   int_compare DUT (.exp1(exp1), .exp2(exp2), .u_diff(u_diff), .cmp_out(cmp_out));
-
-   initial begin
-      
-      for(exp2 = 0; i <= 255; exp2++) begin
-	 for(exp1 = 0; exp1 < exp2; exp1++) begin
-	    #1;
-	    assert(cmp_out == 1'b1) else $error("incorrect cmp_out of 1");
-	 end
-	 i = i + 1;
-      end
-
-      for(exp1 = 0; exp1 <= 255; exp1++) begin
-	 for(exp2 = 0; exp1 >= exp2; exp2++) begin
-	    #1;
-	    assert(cmp_out == 1'b0) else $error("incorrect cmp_out of 0");
-	 end
-      end
-   end // initial begin
-   
-endmodule
diff --git a/source_code/fpu_integration/source/tb_left_shift.sv b/source_code/fpu_integration/source/tb_left_shift.sv
deleted file mode 100755
index 88ca081..0000000
--- a/source_code/fpu_integration/source/tb_left_shift.sv
+++ /dev/null
@@ -1,22 +0,0 @@
-`timescale 1ns/100ps 
-module tb_left_shift();
-
-   reg [25:0] fraction = 1;
-   reg [25:0] result;
-   reg [7:0]  shifted_amount;
-
-   left_shift DUT (.fraction(fraction), .result(result), .shifted_amount(shifted_amount));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 26; i++) begin
-	 #1;
-	 assert(result == 26'b10000000000000000000000000) else $error("incorect result");
-	 assert(shifted_amount == (25 - i)) else $error("incorrect shifted_amount");
-	 
-	 fraction = fraction << 1;
-      end
-   end
-   
-endmodule
diff --git a/source_code/fpu_integration/source/tb_max_select.sv b/source_code/fpu_integration/source/tb_max_select.sv
deleted file mode 100755
index beb7159..0000000
--- a/source_code/fpu_integration/source/tb_max_select.sv
+++ /dev/null
@@ -1,32 +0,0 @@
-`timescale 1ns/10ps
-module tb_max_select();
-
-   reg [7:0] exp1 = 0;
-   reg [7:0] exp2 = 0;
-   reg [7:0] max;
-   int       i    = 0;
-   
-   max_select DUT (.exp1(exp1), .exp2(exp2), .max(max));
-
-   initial begin
-      for(exp1 = 0; i <= 255; i++) begin
-	 for(exp2 = 0; exp2 < i; exp2++) begin
-	    #1;
-	    assert(max == exp1) else $error("Wrong max output");
-	 end
-	 exp1++;
-      end
-					    
-      i = 0;
-      for(exp2 = 0; i <= 255; i++) begin
-	 for(exp1 = 0; exp1 < i; exp1++) begin
-	    #1;
-	    assert(max == exp2) else $error("Wrong max output");
-	 end
-	 exp2++;
-      end
-      
-   end
-      
-	 
-endmodule
diff --git a/source_code/fpu_integration/source/tb_mul_26b.sv b/source_code/fpu_integration/source/tb_mul_26b.sv
deleted file mode 100755
index f2efa32..0000000
--- a/source_code/fpu_integration/source/tb_mul_26b.sv
+++ /dev/null
@@ -1,29 +0,0 @@
-`timescale 1ns/100ps
-module tb_mul_26b();
-   reg [25:0] frac_in1;
-   reg [25:0] frac_in2;
-   reg [25:0] frac_out;
-   reg        overflow;
-
-   mul_26b DUT (
-		.frac_in1(frac_in1),
-		.frac_in2(frac_in2),
-		.frac_out(frac_out),
-		.overflow(overflow)
-		);
-
-   initial begin
-      frac_in1 = 26'b10101010101010101010101010;
-      frac_in2 = 26'b10000000000000000000000000;
-      #1;
-      frac_in1 = 26'b01010101010101010101010101;
-      #1;
-      frac_in1 = 26'b11111111111111111111111111;
-      frac_in2 = 26'b10000000000000000000000001;
-      #1;
-      frac_in1 = 26'b00000000000000000000000000;
-      #1;
-   end
-endmodule // tb_mul_26b
-
-      
diff --git a/source_code/fpu_integration/source/tb_right_shift.sv b/source_code/fpu_integration/source/tb_right_shift.sv
deleted file mode 100755
index eeaa6c1..0000000
--- a/source_code/fpu_integration/source/tb_right_shift.sv
+++ /dev/null
@@ -1,29 +0,0 @@
-`timescale 1ns/100ps
-module tb_right_shift();
-
-   reg [24:0] fraction;
-   reg [7:0]  shift_amount = 8'b00000000;
-   reg [24:0] result;
-   int        i;
-   
-   right_shift DUT (.fraction(fraction), .shift_amount(shift_amount), .result(result));
-
-   initial begin
-      i = 0;
-      
-	for(fraction = 0; i < 32; i++) begin
-	   for(shift_amount = 0; shift_amount < 230; shift_amount = shift_amount + 1) begin
-	      #1;
-	      //if(shift_amount < 20) begin
-	      //   assert(fraction[24:20] == result[24 - shift_amount:20 - shift_amount]) else $error("incorrect result");              
-	      //end
-	   end
-	   fraction = fraction + 2 ** 20;
-	end
-   end
-  
-
-
-
-
-endmodule
diff --git a/source_code/fpu_integration/source/tb_rounder.sv b/source_code/fpu_integration/source/tb_rounder.sv
deleted file mode 100755
index e69de29..0000000
diff --git a/source_code/fpu_integration/source/tb_s_to_u.sv b/source_code/fpu_integration/source/tb_s_to_u.sv
deleted file mode 100755
index 7eeafa2..0000000
--- a/source_code/fpu_integration/source/tb_s_to_u.sv
+++ /dev/null
@@ -1,21 +0,0 @@
-`timescale 1ns/100ps
-module tb_s_to_u();
-
-   reg        sign;
-   reg [24:0] frac_unsigned;
-   reg [25:0] frac_signed = 0;
-   
-   s_to_u DUT (.sign(sign), .frac_unsigned(frac_unsigned), .frac_signed(frac_signed));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 2 ** 26; i++) begin
-	 #1;
-	 
-	 frac_signed++;
-
-      end
-   end
-
-endmodule
diff --git a/source_code/fpu_integration/source/tb_subtract.sv b/source_code/fpu_integration/source/tb_subtract.sv
deleted file mode 100755
index 0376bc1..0000000
--- a/source_code/fpu_integration/source/tb_subtract.sv
+++ /dev/null
@@ -1,25 +0,0 @@
-`timescale 1ns/100ps
-module tb_subtract();
-
-   reg [7:0] exp1 = 0;
-   reg [7:0] shifted_amount = 0;
-   reg [7:0] result;
-
-   subtract DUT (.exp1(exp1), .shifted_amount(shifted_amount), .result(result));
-
-   int 	     i;
-   int 	     j;
-   
-   initial begin
-      
-      for(i = 0; i < 256; i++) begin
-	 shifted_amount = 0;
-	 for(j = 0; j <= i; j++) begin
-	    if(j < 26) #1;
-	    shifted_amount = shifted_amount + 1;
-	 end
-	 exp1 = exp1 + 1;
-      end
-   end
-   
-endmodule
diff --git a/source_code/fpu_integration/source/tb_u_to_s.sv b/source_code/fpu_integration/source/tb_u_to_s.sv
deleted file mode 100755
index 24f6528..0000000
--- a/source_code/fpu_integration/source/tb_u_to_s.sv
+++ /dev/null
@@ -1,21 +0,0 @@
-`timescale 1ns/100ps
-module tb_u_to_s();
-
-   reg        sign = 0;
-   reg [24:0] frac_unsigned = 0;
-   reg [25:0] frac_signed;
-   
-   u_to_s DUT (.sign(sign), .frac_unsigned(frac_unsigned), .frac_signed(frac_signed));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 2 ** 26; i++) begin
-	 #1;
-	 
-	 {sign, frac_unsigned} = {sign, frac_unsigned} + 1;
-
-      end
-   end
-
-endmodule
diff --git a/source_code/fpu_integration/source/u_to_s.sv b/source_code/fpu_integration/source/u_to_s.sv
deleted file mode 100755
index b8364bf..0000000
--- a/source_code/fpu_integration/source/u_to_s.sv
+++ /dev/null
@@ -1,51 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/21/18
-//
-//Module Summary: 
-//    Converts a one bit sign and 26 bit magnitude to a 27 bit signed value
-//
-//Inputs:
-//    sign          - one bit value to represent the sign (0 -> +, 1 -> -)
-//    frac_unsigned - 26 bit unsigned magnitude
-//Outputs:
-//    frac_signed   - 27 bit signed result of conversion
-/*
-module u_to_s(
-	input             sign,
-	input      [25:0] frac_unsigned,
-	output reg [26:0] frac_signed
-);
-
-always_comb begin
-	frac_signed = {1'b0, frac_unsigned};
-	if(sign == 1) begin
-		frac_signed = ~frac_signed;
-	end
-end
-endmodule*/
-//By            : Joe Nasti
-//Last Updated  : 7/21/18
-//
-//Module Summary: 
-//    Converts a one bit sign and 26 bit magnitude to a 27 bit signed value
-//
-//Inputs:
-//    sign          - one bit value to represent the sign (0 -> +, 1 -> -)
-//    frac_unsigned - 26 bit unsigned magnitude
-//Outputs:
-//    frac_signed   - 27 bit signed result of conversion
-
-module u_to_s(
-	input             sign,
-	input      [25:0] frac_unsigned,
-	output reg [26:0] frac_signed
-);
-
-always_comb begin
-	frac_signed = {1'b0, frac_unsigned};
-	if(sign == 1) begin
-		frac_signed = -frac_signed;
-	end
-end
-endmodule
-
diff --git a/source_code/fpu_integration/testbench/ADD_step1_tb.sv b/source_code/fpu_integration/testbench/ADD_step1_tb.sv
deleted file mode 100755
index 15e0af0..0000000
--- a/source_code/fpu_integration/testbench/ADD_step1_tb.sv
+++ /dev/null
@@ -1,62 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step1();
-
-   reg [31:0] floating_point1_in;   
-   reg [31:0] floating_point2_in;   
-   reg [2:0]  frm_in;   
-   reg [2:0]  frm_out;   
-   reg        sign_shifted;   
-   reg [25:0] frac_shifted;   
-   reg 	      sign_not_shifted;   
-   reg [25:0] frac_not_shifted;   
-   reg [7:0]  exp_max;
-
-   reg 	      sign1;
-   reg [7:0]  exp1;
-   reg [22:0] frac1;
-   reg 	      sign2;
-   reg [7:0]  exp2;
-   reg [22:0] frac2;
-
-   assign floating_point1_in[31]    = sign1;
-   assign floating_point1_in[30:23] = exp1;
-   assign floating_point1_in[22:0]  = frac1;
-   assign floating_point2_in[31]    = sign2;
-   assign floating_point2_in[30:23] = exp2;
-   assign floating_point2_in[22:0]  = frac2;
-   
-   ADD_step1 DUT (
-		  .floating_point1_in(floating_point1_in),
-		  .floating_point2_in(floating_point2_in),
-		  .frm_in(frm_in),
-		  .frm_out(frm_out),
-		  .sign_shifted(sign_shifted),
-		  .frac_shifted(frac_shifted),
-		  .sign_not_shifted(sign_not_shifted),
-		  .frac_not_shifted(frac_not_shifted),
-		  .exp_max(exp_max)
-		  );
-
-   initial begin
-      frm_in = 0;
-      sign1 = 0;
-      sign2 = 1;
-      exp1  = 0;
-      exp2  = 0;
-      frac1 = 0;
-      frac2 = 0;
-
-      for(int i = 0; i < 256; i++) begin
-	 exp1  = i;
-	 frac1 = i * (2 ** 15);
-	 for(int j = 0; j <= i; j++) begin
-	    exp2  = j;
-	    frac2 = j * (2 ** 10);
-	    #1;
-
-	 end
-      end
-   end // initial begin
-endmodule // tb_ADD_step1
-
-	    
diff --git a/source_code/fpu_integration/testbench/ADD_step2_tb.sv b/source_code/fpu_integration/testbench/ADD_step2_tb.sv
deleted file mode 100755
index e280224..0000000
--- a/source_code/fpu_integration/testbench/ADD_step2_tb.sv
+++ /dev/null
@@ -1,54 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step2();
-
-   reg [25:0] frac1;
-   reg        sign1;
-   reg [25:0] frac2;
-   reg        sign2;
-   reg [7:0]  exp_max_in;
-   reg [2:0]  frm_in;
-   reg        sign_out;
-   reg [25:0] sum;
-   reg        carry_out;
-   reg [7:0]  exp_max_out;
-   reg [2:0]  frm_out;
-
-
-   ADD_step2 DUT (
-		  .frac1(frac1),
-		  .sign1(sign1),
-		  .frac2(frac2),
-		  .sign2(sign2),
-		  .exp_max_in(exp_max_in),
-		  .frm_in(frm_in),
-		  .sign_out(sign_out),
-		  .sum(sum),
-		  .carry_out(carry_out),
-		  .exp_max_out(exp_max_out),
-		  .frm_out(frm_out)
-		  );
-
-   initial begin
-      frac1 = 0;
-      frac2 = 0;
-      sign1 = 0;
-      sign2 = 0;
-      exp_max_in = 0;
-      frm_in = 0;
-
-      for(int i = 0; 1; i++) begin
-	 frac1 = i * (2 ** 20);
-	 sign1 = ~sign1;
-	 for(int j = 0; j < 10; j++) begin
-	    frac2 = j * (2 ** 20) + i * (2 ** 18);
-	    sign2 = ~sign2;
-	    #1;
-	 end
-      end
-   end // initial begin
-endmodule // tb_ADD_step2
-
-	    
-
-   
-	      
diff --git a/source_code/fpu_integration/testbench/ADD_step3_tb.sv b/source_code/fpu_integration/testbench/ADD_step3_tb.sv
deleted file mode 100755
index 4723993..0000000
--- a/source_code/fpu_integration/testbench/ADD_step3_tb.sv
+++ /dev/null
@@ -1,34 +0,0 @@
-`timescale 1ns/100ps
-module tb_ADD_step3();
-   reg [2:0]  frm;
-   reg [7:0]  exponent_max_in;
-   reg        sign_in;
-   reg [25:0] frac_in;
-   reg        carry_out;
-   reg [31:0] floating_point_out;
-
-   ADD_step3 DUT (
-		  .frm(frm),
-		  .exponent_max_in(exponent_max_in),
-		  .sign_in(sign_in),
-		  .frac_in(frac_in),
-		  .carry_out(carry_out),
-		  .floating_point_out(floating_point_out)
-		  );
-
-   initial begin
-      frm = 0;
-      exponent_max_in = 10;
-      sign_in = 0;
-      frac_in = 26'b10000000000000000000101011;
-      carry_out = 1;
-      #1;
-      frm = 3'b100;
-      exponent_max_in = 20;
-      sign_in = 1;
-      frac_in = 26'b00001000000000000010100101;
-      carry_out = 0;
-   end // initial begin
-endmodule // tb_ADD_step3
-
- 
diff --git a/source_code/fpu_integration/testbench/FPU_agent_tb.sv b/source_code/fpu_integration/testbench/FPU_agent_tb.sv
deleted file mode 100644
index 1f66f66..0000000
--- a/source_code/fpu_integration/testbench/FPU_agent_tb.sv
+++ /dev/null
@@ -1,33 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-// `include "tb_FPU_sequencer.svh"
-`include "tb_FPU_driver.svh"
-`include "tb_FPU_monitor.svh"
-// `include "FPU_result_monitor.svh"
-
-class FPU_agent extends uvm_agent;
-  `uvm_component_utils(FPU_agent)
-
-  FPU_sequencer sqr;
-  FPU_driver drv;
-  FPU_monitor mon;
-
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-  endfunction
-
-  virtual function void build_phase(uvm_phase phase);   
-    sqr = FPU_sequencer::type_id::create("sqr", this);
-    drv = FPU_driver::type_id::create("drv", this);
-    mon = FPU_monitor::type_id::create("mon", this);
-    mon.set_report_verbosity_level_hier (UVM_NONE);
-  endfunction
-
-  virtual function void connect_phase(uvm_phase phase);
-    drv.seq_item_port.connect(sqr.seq_item_export);
-    uvm_report_info("FPU_agent::", "connect_phase, Connected driver to sequencer");
-  endfunction
-
-endclass: FPU_agent
-
-
diff --git a/source_code/fpu_integration/testbench/FPU_all_tb.sv b/source_code/fpu_integration/testbench/FPU_all_tb.sv
deleted file mode 100644
index b82c1d2..0000000
--- a/source_code/fpu_integration/testbench/FPU_all_tb.sv
+++ /dev/null
@@ -1,70 +0,0 @@
-
-/*`include "subtracter_8b.sv"
-`include "f_register_file.sv"
-`include "ADD_step2.sv"
-`include "rv32i_types_pkg.sv"
-`include "ADD_step3.sv"
-`include "int_compare.sv"
-`include "s_to_u.sv"
-`include "subtract.sv"
-`include "c_to_cp.sv"
-`include "MUL_step1.sv"
-`include "int_comparesub.sv"
-`include "sign_determine.sv"
-`include "u_to_s.sv"
-`include "SUB_step3.sv"
-`include "rounder_sub.sv"
-`include "converter.sv"
-`include "SUB_step2.sv"
-`include "SUB_step1.sv"
-`include "adder_26b.sv"
-`include "max_select.sv"
-`include "MUL_step2.sv"
-`include "determine_frac_status.sv"
-`include "FPU_all.sv"
-`include "rounder.sv"
-`include "adder_8b.sv"
-`include "FPU_top_level.sv"
-`include "sub_26b.sv"
-`include "right_shift_minus.sv"
-`include "mul_26b.sv"
-`include "left_shift.sv"
-`include "right_shift.sv"
-`include "ADD_step1.sv"
-`include "clock_counter.sv"
-// TODO: finishe the inclusion
-`include "tb_FPU_test.svh"*/
-`include "FPU_if.vh"
-
-module tb_FPU_all ();
-  import uvm_pkg::*;
-  logic clk; 
-  logic n_rst;
-  //Generates clock
-	initial begin
-		clk = 0;
-		forever #10 clk = !clk;
-	end
-
-  initial begin 
-    n_rst=0;
-    @(posedge clk);
-    n_rst=1;
-	end
-
-  FPU_if FPUif(n_rst, clk);
-
-  FPU_all DUT(FPUif.fp);
-
-
-  initial begin
-    uvm_config_db#(virtual FPU_if)::set( null, "", "vif", FPUif);
-
-    run_test("FPU_test");
-  end
-
-
-
-endmodule
-
-
diff --git a/source_code/fpu_integration/testbench/FPU_comparator_tb.sv b/source_code/fpu_integration/testbench/FPU_comparator_tb.sv
deleted file mode 100644
index 065f2d4..0000000
--- a/source_code/fpu_integration/testbench/FPU_comparator_tb.sv
+++ /dev/null
@@ -1,69 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_transaction.svh"
-`include "FPU_if.svh"
-
-class FPU_comparator extends uvm_scoreboard;
-  `uvm_component_utils(FPU_comparator)
-  // uvm_analysis_export #(FPU_transaction) transaction_export; // receive result from predictor
-  // uvm_tlm_analysis_fifo #(FPU_transaction) transaction_fifo;
-
-  uvm_analysis_export #(FPU_response) actual_export; //receive result from DUT
-  uvm_tlm_analysis_fifo #(FPU_response) actual_fifo;
-  registerFile sim_rf;
-  transactionSeq tx_seq;
-
-  int m_matches, m_mismatches;
-  function new( string name , uvm_component parent) ;
-		super.new( name , parent );
-	  	m_matches = 0;
-	  	m_mismatches = 0;
- 	endfunction
-
-  function void build_phase( uvm_phase phase );
-    // transaction_export = new("transaction_export", this);
-    actual_export = new("actual_export", this);
-    // transaction_fifo = new("transaction_fifo", this);
-    actual_fifo = new("actual_fifo", this);
-	endfunction
-
-  function void connect_phase(uvm_phase phase);
-    // transaction_export.connect(transaction_fifo.analysis_export);
-    actual_export.connect(actual_fifo.analysis_export);
-  endfunction
-
-  task run_phase(uvm_phase phase);
-    FPU_transaction err_tx;
-    FPU_response resp;
-    int index;
-    // FPU_transaction tx;
-    logic [31:0] expected_out;
-    forever begin
-      actual_fifo.get(resp);
-      // transaction_fifo.get(tx);
-      expected_out = sim_rf.read(resp.f_rs2);
-
-      uvm_report_info("FPU Comparator", $psprintf("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsimulated register[%d]: %h\nactual register[%d]   : %h\n~~~~~~~~~~~~~~~~~~~~~~~~~~~", resp.f_rs2, expected_out, resp.f_rs2, resp.FPU_all_out));
-      if((resp.FPU_all_out == expected_out) || (resp.FPU_all_out == expected_out + 1)) begin
-        m_matches++;
-        uvm_report_info("FPU Comparator", "Data Match");
-      end else begin
-        m_mismatches++;
-        $info("Current time");
-        uvm_report_error("FPU Comparator", "Error: Data Mismatch");
-        //print out most recent transaction that goes wrong
-        err_tx = tx_seq.search(resp.f_rs2);
-        index = tx_seq.search_index(resp.f_rs2);
-        uvm_report_info("FPU Comparator",  $psprintf("\nCurrent transaction index: %d\nTransaction that went wrong index: %d\n", tx_seq.index, index));
-        err_tx.print();
-      end
-    end
-  endtask
-
-  function void report_phase(uvm_phase phase);
-    uvm_report_info("FPU Comparator", $sformatf("Matches:    %0d", m_matches));
-    uvm_report_info("FPU Comparator", $sformatf("Mismatches: %0d", m_mismatches));
-  endfunction
-
-endclass
diff --git a/source_code/fpu_integration/testbench/FPU_driver_tb.sv b/source_code/fpu_integration/testbench/FPU_driver_tb.sv
deleted file mode 100644
index 4b431ea..0000000
--- a/source_code/fpu_integration/testbench/FPU_driver_tb.sv
+++ /dev/null
@@ -1,49 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-
-class FPU_driver extends uvm_driver#(FPU_transaction);
-  `uvm_component_utils(FPU_driver)
-
-  protected virtual FPU_if vif;
-  int tx_number;
-
-  function new(string name, uvm_component parent);
-		super.new(name, parent);
-	endfunction: new
-
-  function void build_phase(uvm_phase phase);
-    super.build_phase(phase);
-    if( !uvm_config_db#(virtual FPU_if)::get(this, "", "vif", vif) ) begin
-      `uvm_fatal("FPU/DRV/NOVIF", "No virtual interface specified for this test instance");
-		end
-    tx_number = -1;
-  endfunction: build_phase
-
-  task run_phase(uvm_phase phase);
-    FPU_transaction req_item;
-
-    forever begin 
-      seq_item_port.get_next_item(req_item);
-      @(posedge vif.clk);
-      tx_number++;
-      vif.f_LW = req_item.f_LW;
-      vif.f_SW = req_item.f_SW;
-      vif.f_rs1 = req_item.f_rs1;
-      vif.f_rs2 = req_item.f_rs2;
-      vif.f_rd = req_item.f_rd;
-      vif.f_frm_in = req_item.f_frm_in;
-      vif.f_funct_7 = req_item.f_funct_7;
-      vif.dload_ext = req_item.dload_ext;
-      vif.transaction_number = tx_number;
-      //wait two clock cycle
-      @(posedge vif.clk);
-      @(posedge vif.clk);
-
-
-      seq_item_port.item_done();
-    end
-  endtask: run_phase
-
-endclass: FPU_driver
diff --git a/source_code/fpu_integration/testbench/FPU_env_tb.sv b/source_code/fpu_integration/testbench/FPU_env_tb.sv
deleted file mode 100644
index dd01f1a..0000000
--- a/source_code/fpu_integration/testbench/FPU_env_tb.sv
+++ /dev/null
@@ -1,46 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-`include "tb_FPU_agent.svh"
-`include "FPU_if.svh"
-`include "tb_FPU_comparator.svh"
-`include "tb_FPU_predictor.svh"
-`include "tb_FPU_transaction.svh"
-
-class FPU_env extends uvm_env;
-  `uvm_component_utils(FPU_env)
-  FPU_agent FPU_agt;
-
-  FPU_predictor FPU_pred;
-  FPU_comparator FPU_comp;
-
-  registerFile sim_rf; //simulated register file
-  transactionSeq tx_seq;
-  
-  function new(string name = "FPU_env", uvm_component parent = null);
-		super.new(name, parent);
-	endfunction
-
-  function void build_phase(uvm_phase phase);
-    sim_rf = new();
-    tx_seq = new();
-    sim_rf.initialize();
-    FPU_agt = FPU_agent::type_id::create("FPU_agt", this);
-    FPU_pred = FPU_predictor::type_id::create("FPU_pred", this);
-    FPU_comp = FPU_comparator::type_id::create("FPU_comp", this);
-    //connect simulated register file
-    FPU_pred.sim_rf = sim_rf;
-    FPU_comp.sim_rf = sim_rf;
-
-    //connect transaction queues
-    FPU_pred.tx_seq = tx_seq;
-    FPU_comp.tx_seq = tx_seq;
-  endfunction
-
-  function void connect_phase(uvm_phase phase);
-    FPU_agt.mon.FPU_ap.connect(FPU_pred.analysis_export); //connect monitor to predictor
-    // FPU_pred.ap_pred.connect(FPU_comp.transaction_export); //connect predictor to comparator
-    FPU_agt.mon.FPU_result_ap.connect(FPU_comp.actual_export); //connect monitor to comparator
-  endfunction
-
-
-endclass: FPU_env
diff --git a/source_code/fpu_integration/testbench/FPU_monitor_tb.sv b/source_code/fpu_integration/testbench/FPU_monitor_tb.sv
deleted file mode 100644
index d3181c0..0000000
--- a/source_code/fpu_integration/testbench/FPU_monitor_tb.sv
+++ /dev/null
@@ -1,64 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-
-
-class FPU_monitor extends uvm_monitor;
-  `uvm_component_utils(FPU_monitor)
-  virtual FPU_if vif;
-
-  uvm_analysis_port #(FPU_transaction) FPU_ap;
-  uvm_analysis_port #(FPU_response) FPU_result_ap;
-  FPU_transaction prev_tx; //to see if a new transaction has been sent
-  
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-    FPU_ap = new("FPU_ap", this);
-    FPU_result_ap = new("FPU_result_ap", this);
-  endfunction: new
-
-  //Build Phase - Get handle to virtual if from agent/config_db
-  virtual function void build_phase(uvm_phase phase);
-    virtual FPU_if FPU_if_temp;
-    if (!uvm_config_db#(virtual FPU_if)::get(this, "", "vif", FPU_if_temp)) begin
-      `uvm_fatal("FPU/MON/NOVIF", "No virtual interface specified for this monitor instance")
-    end
-    vif = FPU_if_temp;
-    prev_tx = FPU_transaction::type_id::create("prev_tx");
-  endfunction
-
-  virtual task run_phase(uvm_phase phase);
-    super.run_phase(phase);
-    forever begin
-      FPU_transaction tx;
-      FPU_response resp;
-      @(posedge vif.clk);
-      tx = FPU_transaction::type_id::create("tx");
-      tx.f_LW = vif.f_LW;
-      tx.f_SW = vif.f_SW;
-      tx.f_rs1 = vif.f_rs1;
-      tx.f_rs2 = vif.f_rs2;
-      tx.f_rd = vif.f_rd;
-      tx.f_frm_in = vif.f_frm_in;
-      tx.f_funct_7 = vif.f_funct_7;
-      tx.dload_ext = vif.dload_ext;
-
-
-      if (!tx.compare(prev_tx)) begin
-        FPU_ap.write(tx);
-        @(posedge vif.clk);
-        @(posedge vif.clk);
-        if(tx.f_SW) begin
-          resp = FPU_response::type_id::create("resp");
-          resp.FPU_all_out = vif.FPU_all_out;
-          resp.f_rs2 = vif.f_rs2;
-          FPU_result_ap.write(resp);
-        end
-        prev_tx.copy(tx);
-      end
-    end
-  endtask: run_phase
-
-
-endclass: FPU_monitor
diff --git a/source_code/fpu_integration/testbench/FPU_predictor_tb.sv b/source_code/fpu_integration/testbench/FPU_predictor_tb.sv
deleted file mode 100644
index 7c1624a..0000000
--- a/source_code/fpu_integration/testbench/FPU_predictor_tb.sv
+++ /dev/null
@@ -1,140 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "FPU_if.svh"
-`include "tb_FPU_transaction.svh"
-
-class FPU_predictor extends uvm_subscriber #(FPU_transaction);
-  `uvm_component_utils(FPU_predictor) 
-  // uvm_analysis_port #(FPU_transaction) ap_pred;
-  
-  registerFile sim_rf;
-  transactionSeq tx_seq;
-
-  function new(string name, uvm_component parent = null);
-    super.new(name, parent);
-  endfunction: new
-
-  // function void build_phase(uvm_phase phase);
-  //   ap_pred = new("ap_pred", this);
-  // endfunction
-
-  function void write(FPU_transaction t);
-
-    localparam ADD = 7'b0000000;
-    localparam MUL = 7'b0001000;
-    localparam SUB = 7'b0000100; 
-    real real_val1; //first real operand
-    real real_val2; //second real operand
-    real real_result; //result of the operation
-    logic [31:0] fp_result;
-    logic [31:0] fp1;
-    logic [31:0] fp2;
-    tx_seq.push(t);
-
-    fp1 = sim_rf.read(t.f_rs1);
-    fp2 = sim_rf.read(t.f_rs2);
-
-    if(t.f_LW) begin
-      sim_rf.write(t.f_rd, t.dload_ext);
-    end else if(t.f_SW) begin
-      ;
-    end else if(t.f_funct_7 == ADD) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 + real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end else if (t.f_funct_7 == MUL) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 * real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end else if (t.f_funct_7 == SUB) begin
-      real_val1 = fp_to_real(fp1);
-      real_val2 = fp_to_real(fp2);
-      real_result = real_val1 - real_val2;
-      fp_result = real_to_fp(real_result);
-      sim_rf.write(t.f_rd, fp_result);
-    end
-    // ap_pred.write(t);
-  endfunction: write
-
-  // conversion function copied directly from the previous test bench
-  // input: val   -   32bit floating point value according to IEEE 754
-  // output: fp   -   converted value in real
-  function real fp_to_real(logic [31:0] val);
-    real fp;
-    real fp_exp;
-    real fp_frac;
-    fp_exp  = real'(val[30:23]);
-    fp_frac = real'(val[22:0]);
-
-    fp_exp = fp_exp - 128;
-	 
-    for(int k = 0; k < 23; k = k + 1) begin
-        fp_frac /= 2;
-    end
-    fp_frac = fp_frac + 1;	 
-
-	  if(val[31]) 
-	   fp = -fp_frac * (2 ** fp_exp);
-	  else
-	   fp = fp_frac * (2 ** fp_exp);
-    return fp;
-  endfunction
-
-  // conversion function copied directly from the previous test bench
-  // input: r     -   real deciaml value
-  // output: fp   -   converted 32 bit floating point value specified by IEEE 754
-  function logic [31:0] real_to_fp(real r);
-    logic [31:0] fp;
-    int fp_index;
-	  real MAX;
-	  real MIN;
-	 
-    MAX = fp_to_real(32'b01111111011111111111111111111111);
-    MIN = fp_to_real(32'b00000000000000000000000000000000);
-	 
-	  fp = 32'b01000000000000000000000000000000;
-
-    if(r < 0) begin // set sign bit
-      fp[31] = 1'b1;
-      r = -r;
-    end
-	 
-    if(r < MIN) // ovf 
-      fp[30:0] = 31'b0000000000000000000000000000000;
-
-    else if(r > MAX) // unf
-      fp[30:0] = 31'b1111111100000000000000000000000;
-    
-    else begin // everything else
-	    if(r >= 2) begin 
-        while(r >= 2) begin
-          r /= 2;
-		      fp[30:23] += 1;
-        end
-	    end
-	    else if(r < 1) begin
-        while(r < 1) begin
-          r *= 2;
-          fp[30:23] -= 1;
-        end
-	    end
-	    
-	    r -= 1;
-	    fp_index = 22;
-	    for(real i = 0.50; i != 2**-24; i /= 2) begin
-	       if(r >= i) begin
-		  r -= i;
-		  fp[fp_index] = 1'b1;
-	       end
-	       fp_index -= 1;
-	    end
-	  end // else: !if((r>(1.70141*(10**38))))
-    return fp;
-  endfunction
-
-endclass: FPU_predictor
diff --git a/source_code/fpu_integration/testbench/FPU_sequencer_tb.sv b/source_code/fpu_integration/testbench/FPU_sequencer_tb.sv
deleted file mode 100644
index ab80fbb..0000000
--- a/source_code/fpu_integration/testbench/FPU_sequencer_tb.sv
+++ /dev/null
@@ -1,304 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_transaction.svh"
-
-class FPU_sequence extends uvm_sequence #(FPU_transaction);
-  `uvm_object_utils(FPU_sequence)
-
-  localparam ADD = 7'b0000000;
-  localparam MUL = 7'b0001000;
-  localparam SUB = 7'b0000100; 
-
-  function new(string name = "");
-    super.new(name);
-  endfunction: new
-
-  task body();
-    FPU_transaction req_item;
-    req_item = FPU_transaction::type_id::create("req_item");
-    //~~~~~~~~~~~~~~~~
-    //load to register 0 and read test case
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //add test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //add operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = ADD;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //mul test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //mul operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = MUL;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //sub test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //add operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = ADD;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //mul test case
-    //load to regiseer 0
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'h0001;
-    finish_item(req_item);
-
-    //load to register 1
-    start_item(req_item);
-    req_item.f_LW = 1;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd1;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = '0;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //mul operation to register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 0;
-    req_item.f_rd = 5'd2;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd1;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = SUB;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    // read from register 2
-    start_item(req_item);
-    req_item.f_LW = 0;
-    req_item.f_SW = 1;
-    req_item.f_rd = '0;
-    req_item.f_rs1 = '0;
-    req_item.f_rs2 = 5'd2;
-    req_item.f_frm_in = '0;
-    req_item.f_funct_7 = '0;
-    req_item.dload_ext = 32'habcd;
-    finish_item(req_item);
-
-    //~~~~~~~~~~~~~~~~
-    //random test case
-
-    repeat(5000) begin
-      logic [4:0] rs1; //register selection 1. Select operand 1 from a register
-      logic [4:0] rs2; //register selection 2. Select operand 2 from a register
-      logic [4:0] rd;  // register destination. Select which register to be written
-    
-      // load 1
-      start_item(req_item);
-      req_item.mode = req_item.LOAD;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      rs1 = req_item.f_rd;
-      finish_item(req_item);
-
-      // load 2
-      start_item(req_item);
-      req_item.mode = req_item.LOAD;
-      while(req_item.f_rd == rs1) begin
-        if(!req_item.randomize()) begin
-          `uvm_fatal("FPU_seq", "not able to randomize")
-        end
-      end
-      rs2 = req_item.f_rd;
-      finish_item(req_item);
-
-      // operation
-      start_item(req_item);
-      req_item.mode = req_item.OP;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      req_item.f_rs1 = rs1;
-      req_item.f_rs2 = rs2;
-      rd = req_item.f_rd;
-      finish_item(req_item);
-
-      // store
-      start_item(req_item);
-      req_item.mode = req_item.STR;
-      if(!req_item.randomize()) begin
-        `uvm_fatal("FPU_seq", "not able to randomize")
-      end
-      req_item.f_rs2 = rd;
-      finish_item(req_item);
-    end
-
-  endtask: body
-endclass //FPU_sequence
-
-class FPU_sequencer extends uvm_sequencer#(FPU_transaction);
-
-   `uvm_component_utils(FPU_sequencer)
- 
-   function new(input string name= "FPU_sequencer", uvm_component parent=null);
-      super.new(name, parent);
-   endfunction : new
-
-endclass : FPU_sequencer
diff --git a/source_code/fpu_integration/testbench/FPU_test_tb.sv b/source_code/fpu_integration/testbench/FPU_test_tb.sv
deleted file mode 100644
index b7b78bb..0000000
--- a/source_code/fpu_integration/testbench/FPU_test_tb.sv
+++ /dev/null
@@ -1,41 +0,0 @@
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-`include "tb_FPU_sequencer.svh"
-`include "tb_FPU_env.svh"
-
-
-class FPU_test extends uvm_test;
-  `uvm_component_utils(FPU_test)
-
-  FPU_env env;
-  virtual FPU_if vif;
-  FPU_sequence seq;
-
-  function new(string name = "FPU_test", uvm_component parent);
-		super.new(name, parent);
-	endfunction: new
-
-  function void build_phase(uvm_phase phase);
-    super.build_phase(phase);
-		env = FPU_env::type_id::create("env",this);
-    seq = FPU_sequence::type_id::create("seq");
-
-    // send the interface down
-    if (!uvm_config_db#(virtual FPU_if)::get(this, "", "vif", vif)) begin
-		   `uvm_fatal("TEST", "No virtual interface specified for this test instance")
-		end 
-
-		uvm_config_db#(virtual FPU_if)::set(this, "env.agt*", "vif", vif);
-
-  endfunction: build_phase
-  
-  task run_phase(uvm_phase phase);
-    phase.raise_objection( this, "Starting apb_base_seq in main phase" );
-		$display("%t Starting sequence FPU_seq run_phase",$time);
- 		seq.start(env.FPU_agt.sqr);
-		#100ns;
-		phase.drop_objection( this , "Finished apb_seq in main phase" );
-  endtask
-
-endclass //FPU_test
\ No newline at end of file
diff --git a/source_code/fpu_integration/testbench/FPU_top_level_tb.sv b/source_code/fpu_integration/testbench/FPU_top_level_tb.sv
deleted file mode 100755
index 3c24284..0000000
--- a/source_code/fpu_integration/testbench/FPU_top_level_tb.sv
+++ /dev/null
@@ -1,208 +0,0 @@
-`timescale 1ns/100ps
-module tb_FPU_top_level();
-   reg clk = 0;
-   reg nrst;
-   reg [31:0] floating_point1;
-   reg [31:0] floating_point2;
-   reg [2:0]  frm;
-   reg [31:0] floating_point_out;
-   reg [6:0]  funct7;
-   reg [4:0]  flags;
-   reg start_sig;
-   reg f_ready;
-   
-   always begin
-      clk = ~clk;
-      #1;
-   end
-
-   FPU_top_level DUT (
-		      .clk(clk),
-		      .nrst(nrst),
-		      .floating_point1(floating_point1),
-		      .floating_point2(floating_point2),
-		      .frm(frm),
-		      .funct7(funct7),
-		      .floating_point_out(floating_point_out),
-		      .flags(flags)
-		      );
-   
-   shortreal        result_real;
-   reg  [31:0] result_binary;
-   shortreal        fp1_real;
-   shortreal        fp2_real;
-   shortreal        fp_out_real;
-   shortreal        fp_exp;
-   shortreal        fp_frac;
-   int       i;
-   int       j = 0;
-   //real val1;
-   //shortreal val2;
-   task random_check;
-      begin
-         //$display($bits(val1));
-   	 //$display($bits(val2));
-         //subnormal number
-	 frm = $urandom() % 8;
-	 funct7 = 7'b0001000;
-	 floating_point1 = $urandom();
-	 floating_point2 = $urandom();
-   $display("floating_point1 = %0d floating_point2 = %0d \n",floating_point1, floating_point2);
-
-	 if(floating_point1[30:23] == 8'b11111111) 
-	   floating_point1[30:23] = 8'b11111110;
-	 if(floating_point2[30:23] == 8'b11111111) 
-	   floating_point2[30:23] = 8'b11111110;
-
-	 //convert from floating point to 2 real values
-	 fp_convert(.val(floating_point1), .fp(fp1_real));
-	 fp_convert(.val(floating_point2), .fp(fp2_real));
-
-	 //performing real number arithemetic
-	 //
-	 if(funct7 == 7'b0000000) begin
-	    result_real = fp1_real + fp2_real; //addition
-	 end else if (funct7 == 7'b0001000) begin
-	    result_real = fp1_real * fp2_real; //multiplication
-         end else if (funct7 == 7'b0000100) begin
-	    result_real = fp1_real - fp2_real; //subtraction
-	 end
-	 
-	 else result_real = 'x;
-	 
-	 real_to_fp(.r(result_real), .fp(result_binary)); //convert the real number back to floating point
-	 @(negedge clk);
-	 @(negedge clk);
-	 
-	 @(negedge clk);
-	 fp_convert(.val(floating_point_out), .fp(fp_out_real));
-	 #1;
-	 assert((floating_point_out == result_binary) || (floating_point_out == result_binary + 1) || (floating_point_out == result_binary - 1)) 
-	   else begin
-	      j = j + 1;
-	      $error("expected = %b, calculated = %b, wrong case = %d, number = %d, fp1 is = %b, fp2 is = %b, result_real is %d", result_binary, floating_point_out, i, j, floating_point1, floating_point2, result_real);
-	//$error("expected = %b, calculated = %b, wrong case = %d, number = %d", result_binary, floating_point_out, i, j);
-	      //$display(fp1_real);//
-	      //$display(fp2_real);//
-	      //$display(result_real); //expected
-	      //$display(fp_out_real); //computed
-	   end
-	 //if((flags[1] == 0) & (flags[2] == 0)) begin
-	   // assert(flags[0] == 0) else $error("asdklfj;as");
-	 //end
-	 @(negedge clk);
-	 floating_point1 = '0;
-	 floating_point2 = '0;
-	 frm             = '0;
-	 funct7          = '0;
-	 result_real     = '0;
-	 fp1_real        = '0;
-	 fp2_real        = '0;
-	 fp_exp          = '0;
-	 fp_frac         = '0;
-	 @(negedge clk); 
-      end
-   endtask // random_check
-   
-   task real_to_fp;
-      input shortreal r;
-      output reg [31:0] fp;
-      begin
-	 
-	 int fp_index;
-	 shortreal MAX;
-	 shortreal MIN;
-	 
-	 fp_convert(32'b01111111011111111111111111111111, MAX);
-	 fp_convert(32'b00000000000000000000000000000000, MIN);
-	 
-	 
-	 fp = 32'b01000000000000000000000000000000;
-
-	 if(r < 0) begin // set sign bit
-	    fp[31] = 1'b1;
-	    r = -r;
-	 end
-	 
-	 if(r < MIN) // ovf 
-	    fp[30:0] = 31'b0000000000000000000000000000000;
-	 
-         else if(r > MAX) // unf
-	    fp[30:0] = 31'b1111111100000000000000000000000;
-	 
-	 else begin // everything else
-	    if(r >= 2) begin 
-	       while(r >= 2) begin
-	          r /= 2;
-		  fp[30:23] += 1;
-	       end
-	    end
-	    else if(r < 1) begin
-	       while(r < 1) begin
-		  r *= 2;
-		  fp[30:23] -= 1;
-	       end
-	    end
-	    
-	    r -= 1;
-	    fp_index = 22;
-	    for(shortreal i = 0.50; i != 2**-24; i /= 2) begin
-	       if(r >= i) begin
-		  r -= i;
-		  fp[fp_index] = 1'b1;
-	       end
-	       fp_index -= 1;
-	    end
-	 end // else: !if((r>(1.70141*(10**38))))
-      end
-   endtask // real_to_fp
-         
-   task fp_convert;
-      input [31:0] val;
-      output shortreal  fp;
-      begin
-         
-	 fp_exp  = shortreal'(val[30:23]);
-	 fp_frac = shortreal'(val[22:0]);
-
-	 fp_exp = fp_exp - 128;
-	 
-	 for(int k = 0; k < 23; k = k + 1) begin
-	    fp_frac /= 2;
-	 end
-     	 fp_frac = fp_frac + 1;	 
-
-	 if(val[31]) 
-	   fp = -fp_frac * (2 ** fp_exp);
-	 else
-	   fp = fp_frac * (2 ** fp_exp);
-      end
-   endtask // fp_convert
-
-task reset_dut;
-  begin
-  nrst = 1'b0;
-
-  @(posedge clk);
-  @(posedge clk);
-
-  @(negedge clk);
-  nrst = 1'b1;
-
-  @(negedge clk);
-  @(negedge clk);
-  end
-endtask
-
-initial begin
-   reset_dut();
-   i = 0;
-//random_check();
-   while (1) begin
-	reset_dut();
-	i = i + 1;
-	random_check();
-  end //
-end
-   
-endmodule // tb_FPU_top_level
diff --git a/source_code/fpu_integration/testbench/FPU_transaction_tb.sv b/source_code/fpu_integration/testbench/FPU_transaction_tb.sv
deleted file mode 100644
index 8c0b4f4..0000000
--- a/source_code/fpu_integration/testbench/FPU_transaction_tb.sv
+++ /dev/null
@@ -1,134 +0,0 @@
-`ifndef TRANSACTION_SV
-`define TRANSACTION_SV
-
-import uvm_pkg::*;
-`include "uvm_macros.svh"
-
-class FPU_transaction extends uvm_sequence_item;
-  localparam LOAD = 2'd0;
-  localparam OP = 2'd1;
-  localparam STR = 2'd2;
-
-  logic [1:0] mode; // choose load, operation, or store
-  rand logic f_LW; //load. Load from memory to register
-  rand logic f_SW; //save. Save from rs2 to memory 
-
-  rand logic [4:0] f_rs1; //register selection 1. Select operand 1 from a register
-  rand logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  rand logic [4:0] f_rd; //register destination. Select which register to be written
-
-  rand logic [2:0] f_frm_in; //input rounding method.
-  rand logic [6:0] f_funct_7; //operation selection of FPU
-  
-  rand logic [31:0] dload_ext; //TODO: confirm the identifier
-
-  `uvm_object_utils_begin(FPU_transaction)
-    `uvm_field_int(f_LW, UVM_DEFAULT)
-    `uvm_field_int(f_SW, UVM_DEFAULT)
-    `uvm_field_int(f_rs1, UVM_DEFAULT)
-    `uvm_field_int(f_rs2, UVM_DEFAULT)
-    `uvm_field_int(f_rd, UVM_DEFAULT)
-    `uvm_field_int(f_frm_in, UVM_DEFAULT)
-    `uvm_field_int(f_funct_7, UVM_DEFAULT)
-    `uvm_field_int(dload_ext, UVM_DEFAULT)
-  `uvm_object_utils_end
-
-  localparam ADD = 7'b0000000;
-  localparam MUL = 7'b0001000;
-  localparam SUB = 7'b0000100; 
-
-  localparam RNE = 3'b000;
-  localparam RZE = 3'b001;
-  localparam RDN = 3'b010;
-  localparam RUP = 3'b011;
-  localparam RMM = 3'b100;
-
-  constraint c_mode {mode == LOAD -> f_LW == 1; mode == OP -> (f_SW == 0 && f_LW == 0); mode == STR -> f_SW == 1;}
-  constraint LW_SW {!(f_LW && f_SW);}
-  constraint calculation_method {f_funct_7 == ADD || f_funct_7 == MUL || f_funct_7 == SUB;}
-  constraint operand {dload_ext[30:23] != 8'b11111111;}
-  constraint destination {f_rd != f_rs1; f_rd != f_rs2;}
-  constraint rounding {f_frm_in == RNE || f_frm_in == RZE || f_frm_in == RDN || f_frm_in == RUP || f_frm_in == RMM;}
-
-  function new(string name = "FPU_transaction");
-    super.new(name);
-  endfunction: new
-
-endclass //FPU_transaction
-
-class FPU_response extends uvm_sequence_item;
-  // logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [4:0] f_rs2; //register selection 2. Select operand 2 from a register
-  logic [31:0] FPU_all_out; //output when f_SW is asserted
-  // logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  `uvm_object_utils_begin(FPU_response)
-    // `uvm_field_int(f_flags, UVM_DEFAULT)
-    `uvm_field_int(FPU_all_out, UVM_DEFAULT)
-    `uvm_field_int(f_rs2, UVM_DEFAULT)
-    // `uvm_field_int(f_frm_out, UVM_DEFAULT)
-  `uvm_object_utils_end
-
-  function new(string name = "FPU_response");
-    super.new(name);
-  endfunction: new
-
-endclass //FPU_response
-
-class registerFile;
-  parameter NUM_REGS = 32;
-  logic [31:0] [NUM_REGS-1:0] registers;
-
-  function void write(logic[4:0]rd, logic[31:0] val);
-    registers[rd] = val;
-  endfunction
-
-  function logic[31:0] read(logic[4:0]rd);
-    return registers[rd];
-  endfunction
-
-  function void initialize();
-    for(int lcv = 0; lcv < 32; lcv++) begin
-      registers[lcv] = '0;
-    end
-  endfunction
-endclass //registerFile
-
-class transactionSeq; //transaction sequence
-  localparam MAX_SIZE = 100000;
-  FPU_transaction arr[MAX_SIZE - 1:0];
-  int index; //points to most recent transactoin
-  function new();
-    index = -1;
-  endfunction //new()
-
-  //push one transaction into the arr
-  function void push(FPU_transaction item);
-    if(index == MAX_SIZE) begin //can be implemented as a queue is needed in the future
-      $fatal("transactionSeq: sequence cannot hold more items"); 
-    end
-    index++;
-    arr[index] = item;
-  endfunction
-
-  //search for the most recent transaction that used dest as f_rd
-  function FPU_transaction search(logic[4:0] dest);
-    for(int lcv = index; lcv > 0; lcv--) begin
-      if(arr[lcv].f_rd == dest && arr[lcv].f_SW != 1) begin
-        return arr[lcv];
-      end
-    end
-    $fatal("transaction not found!\n");
-  endfunction
-
-  function int search_index(logic[4:0] dest);
-    for(int lcv = index; lcv > 0; lcv--) begin
-      if(arr[lcv].f_rd == dest && arr[lcv].f_SW != 1) begin
-        return lcv;
-      end
-    end
-    $fatal("transaction not found!\n");
-  endfunction
-endclass //transactionSeq
-
-`endif
diff --git a/source_code/fpu_integration/testbench/adder_26b_tb.sv b/source_code/fpu_integration/testbench/adder_26b_tb.sv
deleted file mode 100755
index 2e07412..0000000
--- a/source_code/fpu_integration/testbench/adder_26b_tb.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-// functional test bench
-
-`timescale 1ns/100ps
-module tb_adder_26b();
-
-reg [26:0] frac1;
-reg [26:0] frac2;
-reg [26:0] sum;
-reg 	   carry_out;
-
-adder_26b DUT (.frac1(frac1), .frac2(frac2), .sum(sum), .ovf(carry_out));
-
-initial begin
-        frac1 = 0;
-        frac2 = 0;
-	// check some inputs of frac1 and frac2
-	for(int i = 0; i < 2 ** 27; i = i + 2 ** 20) begin 
-		for(int j = 0; j < 2 ** 27; j = j + 2 ** 20) begin
-		    #1;
-	      	    assert(sum == (frac1 + frac2)) else $error("incorrect sum");
-		    if((frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) || (frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1)) assert(carry_out == 1) else $error("incorrect 0 ovf. Expected 1"); 
-	            else assert(carry_out == 0) else $error("incorrect 1 ovf. Expeected 0");
-		    frac2 = frac2 + 2 ** 20;
-		  
-		end
-	   frac1 = frac1 + 2 ** 20;
-	   frac2 = 0;
-	end
-end
-endmodule
diff --git a/source_code/fpu_integration/testbench/adder_8b_tb.sv b/source_code/fpu_integration/testbench/adder_8b_tb.sv
deleted file mode 100755
index b71b1e1..0000000
--- a/source_code/fpu_integration/testbench/adder_8b_tb.sv
+++ /dev/null
@@ -1,46 +0,0 @@
-`timescale 1ps/1ps
-module tb_adder_8b();
-
-reg [7:0] exp1;
-reg [7:0] exp2;
-reg [7:0] sum;
-reg       ovf;
-reg 	  unf;
-   
-	  
-adder_8b DUT (
-	      .exp1(exp1), 
-	      .exp2(exp2), 
-	      .sum(sum), 
-	      .ovf(ovf), 
-	      .unf(unf)
-	      );
-
-   reg [7:0] r_j;
-   reg [7:0] r_i;
-   reg [7:0] r_sum;
-
-   assign r_sum = r_i + r_j - 8'b10000000;
-   
-initial begin
-        exp1 = 0;
-        exp2 = 0;
-	for(int i = 0; i != 256; i = i + 1) begin 
-		for(int j = 0; j != 256; j = j + 1) begin
-		        r_j = j;
-		        r_i = i;
-		   #1;
-		   assert(sum == ((r_i + r_j) - 8'b10000000))
-		   else $error("incorrect sum: expected = %d | calculated = %d", (r_i + r_j - 8'b10000000), sum);
-		   if((i + j) < 128) assert(unf == 1) else $error("incorrect 1 unf");
-		   if((i + j) > 383) assert(ovf == 1) else $error("incorrect 1 ovf");
-		   #1000;
-		   
-		   exp2 = exp2 + 1;
-		  
-		end
-	   exp1 = exp1 + 1;
-	   exp2 = 0;
-	end
-end
-endmodule
diff --git a/source_code/fpu_integration/testbench/f_register_file_tb.sv b/source_code/fpu_integration/testbench/f_register_file_tb.sv
deleted file mode 100644
index b63ae87..0000000
--- a/source_code/fpu_integration/testbench/f_register_file_tb.sv
+++ /dev/null
@@ -1,45 +0,0 @@
-`timescale 1ps/1ps
-module tb_f_register_file();
-
-
-   logic [7:0] f_w_data, f_rs1_data, f_rs2_data;
-  logic   [4:0] f_rs1, f_rs2, f_rd;
-  logic         f_wen, f_NV, f_DZ, f_OF, f_UF, f_NX;
-  logic [2:0] f_frm_in;
-  logic [2:0] f_frm_out;
-  logic [4:0] f_flags;
- 
-  
-   reg clk = 0;
-   reg nrst;
-    
-   always begin
-      clk = ~clk;
-      #1;
-   end
-
-   FPU_top_level DUT (
-		      .clk(clk),
-		      .nrst(nrst),
-		      .f_w_data(f_w_data),
-		      .f_rs1_data(f_rs1_data),
-		      .f_rs2_data(f_rs2_data),
-		      .f_rs1(f_rs1),
-		      .f_rs2(f_rs2),
-		      .f_rd(f_rd),
-		      .f_wen(f_wen),
-		      .f_NV(f_NV),
-		      .f_DZ(f_DZ),
-		      .f_OF(f_OF),
-		      .f_UF(f_NX),
-		      .f_frm_in(f_frm_in),
-		      .f_frm_out(f_frm_out),
-		      .f_flags(f_flags)
-		      );
-   
-
-   
-initial begin
-
-end
-endmodule
diff --git a/source_code/fpu_integration/testbench/int_compare_tb.sv b/source_code/fpu_integration/testbench/int_compare_tb.sv
deleted file mode 100755
index 902397a..0000000
--- a/source_code/fpu_integration/testbench/int_compare_tb.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-`timescale 1ns/100ps
-module tb_int_compare();
-
-   reg [7:0] exp1    = 0;
-   reg [7:0] exp2    = 0;
-   reg [7:0] u_diff;
-   reg       cmp_out;
-   int 	     i       = 0;
-   
-   int_compare DUT (.exp1(exp1), .exp2(exp2), .u_diff(u_diff), .cmp_out(cmp_out));
-
-   initial begin
-      
-      for(exp2 = 0; i <= 255; exp2++) begin
-	 for(exp1 = 0; exp1 < exp2; exp1++) begin
-	    #1;
-	    assert(cmp_out == 1'b1) else $error("incorrect cmp_out of 1");
-	 end
-	 i = i + 1;
-      end
-
-      for(exp1 = 0; exp1 <= 255; exp1++) begin
-	 for(exp2 = 0; exp1 >= exp2; exp2++) begin
-	    #1;
-	    assert(cmp_out == 1'b0) else $error("incorrect cmp_out of 0");
-	 end
-      end
-   end // initial begin
-   
-endmodule
diff --git a/source_code/fpu_integration/testbench/left_shift_tb.sv b/source_code/fpu_integration/testbench/left_shift_tb.sv
deleted file mode 100755
index 88ca081..0000000
--- a/source_code/fpu_integration/testbench/left_shift_tb.sv
+++ /dev/null
@@ -1,22 +0,0 @@
-`timescale 1ns/100ps 
-module tb_left_shift();
-
-   reg [25:0] fraction = 1;
-   reg [25:0] result;
-   reg [7:0]  shifted_amount;
-
-   left_shift DUT (.fraction(fraction), .result(result), .shifted_amount(shifted_amount));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 26; i++) begin
-	 #1;
-	 assert(result == 26'b10000000000000000000000000) else $error("incorect result");
-	 assert(shifted_amount == (25 - i)) else $error("incorrect shifted_amount");
-	 
-	 fraction = fraction << 1;
-      end
-   end
-   
-endmodule
diff --git a/source_code/fpu_integration/testbench/max_select_tb.sv b/source_code/fpu_integration/testbench/max_select_tb.sv
deleted file mode 100755
index beb7159..0000000
--- a/source_code/fpu_integration/testbench/max_select_tb.sv
+++ /dev/null
@@ -1,32 +0,0 @@
-`timescale 1ns/10ps
-module tb_max_select();
-
-   reg [7:0] exp1 = 0;
-   reg [7:0] exp2 = 0;
-   reg [7:0] max;
-   int       i    = 0;
-   
-   max_select DUT (.exp1(exp1), .exp2(exp2), .max(max));
-
-   initial begin
-      for(exp1 = 0; i <= 255; i++) begin
-	 for(exp2 = 0; exp2 < i; exp2++) begin
-	    #1;
-	    assert(max == exp1) else $error("Wrong max output");
-	 end
-	 exp1++;
-      end
-					    
-      i = 0;
-      for(exp2 = 0; i <= 255; i++) begin
-	 for(exp1 = 0; exp1 < i; exp1++) begin
-	    #1;
-	    assert(max == exp2) else $error("Wrong max output");
-	 end
-	 exp2++;
-      end
-      
-   end
-      
-	 
-endmodule
diff --git a/source_code/fpu_integration/testbench/mul_26b_tb.sv b/source_code/fpu_integration/testbench/mul_26b_tb.sv
deleted file mode 100755
index f2efa32..0000000
--- a/source_code/fpu_integration/testbench/mul_26b_tb.sv
+++ /dev/null
@@ -1,29 +0,0 @@
-`timescale 1ns/100ps
-module tb_mul_26b();
-   reg [25:0] frac_in1;
-   reg [25:0] frac_in2;
-   reg [25:0] frac_out;
-   reg        overflow;
-
-   mul_26b DUT (
-		.frac_in1(frac_in1),
-		.frac_in2(frac_in2),
-		.frac_out(frac_out),
-		.overflow(overflow)
-		);
-
-   initial begin
-      frac_in1 = 26'b10101010101010101010101010;
-      frac_in2 = 26'b10000000000000000000000000;
-      #1;
-      frac_in1 = 26'b01010101010101010101010101;
-      #1;
-      frac_in1 = 26'b11111111111111111111111111;
-      frac_in2 = 26'b10000000000000000000000001;
-      #1;
-      frac_in1 = 26'b00000000000000000000000000;
-      #1;
-   end
-endmodule // tb_mul_26b
-
-      
diff --git a/source_code/fpu_integration/testbench/right_shift_tb.sv b/source_code/fpu_integration/testbench/right_shift_tb.sv
deleted file mode 100755
index eeaa6c1..0000000
--- a/source_code/fpu_integration/testbench/right_shift_tb.sv
+++ /dev/null
@@ -1,29 +0,0 @@
-`timescale 1ns/100ps
-module tb_right_shift();
-
-   reg [24:0] fraction;
-   reg [7:0]  shift_amount = 8'b00000000;
-   reg [24:0] result;
-   int        i;
-   
-   right_shift DUT (.fraction(fraction), .shift_amount(shift_amount), .result(result));
-
-   initial begin
-      i = 0;
-      
-	for(fraction = 0; i < 32; i++) begin
-	   for(shift_amount = 0; shift_amount < 230; shift_amount = shift_amount + 1) begin
-	      #1;
-	      //if(shift_amount < 20) begin
-	      //   assert(fraction[24:20] == result[24 - shift_amount:20 - shift_amount]) else $error("incorrect result");              
-	      //end
-	   end
-	   fraction = fraction + 2 ** 20;
-	end
-   end
-  
-
-
-
-
-endmodule
diff --git a/source_code/fpu_integration/testbench/rounder_tb.sv b/source_code/fpu_integration/testbench/rounder_tb.sv
deleted file mode 100755
index e69de29..0000000
diff --git a/source_code/fpu_integration/testbench/s_to_u_tb.sv b/source_code/fpu_integration/testbench/s_to_u_tb.sv
deleted file mode 100755
index 7eeafa2..0000000
--- a/source_code/fpu_integration/testbench/s_to_u_tb.sv
+++ /dev/null
@@ -1,21 +0,0 @@
-`timescale 1ns/100ps
-module tb_s_to_u();
-
-   reg        sign;
-   reg [24:0] frac_unsigned;
-   reg [25:0] frac_signed = 0;
-   
-   s_to_u DUT (.sign(sign), .frac_unsigned(frac_unsigned), .frac_signed(frac_signed));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 2 ** 26; i++) begin
-	 #1;
-	 
-	 frac_signed++;
-
-      end
-   end
-
-endmodule
diff --git a/source_code/fpu_integration/testbench/subtract_tb.sv b/source_code/fpu_integration/testbench/subtract_tb.sv
deleted file mode 100755
index 0376bc1..0000000
--- a/source_code/fpu_integration/testbench/subtract_tb.sv
+++ /dev/null
@@ -1,25 +0,0 @@
-`timescale 1ns/100ps
-module tb_subtract();
-
-   reg [7:0] exp1 = 0;
-   reg [7:0] shifted_amount = 0;
-   reg [7:0] result;
-
-   subtract DUT (.exp1(exp1), .shifted_amount(shifted_amount), .result(result));
-
-   int 	     i;
-   int 	     j;
-   
-   initial begin
-      
-      for(i = 0; i < 256; i++) begin
-	 shifted_amount = 0;
-	 for(j = 0; j <= i; j++) begin
-	    if(j < 26) #1;
-	    shifted_amount = shifted_amount + 1;
-	 end
-	 exp1 = exp1 + 1;
-      end
-   end
-   
-endmodule
diff --git a/source_code/fpu_integration/testbench/u_to_s_tb.sv b/source_code/fpu_integration/testbench/u_to_s_tb.sv
deleted file mode 100755
index 24f6528..0000000
--- a/source_code/fpu_integration/testbench/u_to_s_tb.sv
+++ /dev/null
@@ -1,21 +0,0 @@
-`timescale 1ns/100ps
-module tb_u_to_s();
-
-   reg        sign = 0;
-   reg [24:0] frac_unsigned = 0;
-   reg [25:0] frac_signed;
-   
-   u_to_s DUT (.sign(sign), .frac_unsigned(frac_unsigned), .frac_signed(frac_signed));
-
-   int 	      i;
-   
-   initial begin
-      for(i = 0; i < 2 ** 26; i++) begin
-	 #1;
-	 
-	 {sign, frac_unsigned} = {sign, frac_unsigned} + 1;
-
-      end
-   end
-
-endmodule
diff --git a/source_code/fpu_integration/vish_stacktrace.vstf b/source_code/fpu_integration/vish_stacktrace.vstf
deleted file mode 100644
index cc4dd8e..0000000
--- a/source_code/fpu_integration/vish_stacktrace.vstf
+++ /dev/null
@@ -1,21 +0,0 @@
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
-# transcript error: error writing "stdout": broken pipe
-    while executing
-"puts -nonewline stdout $s"
diff --git a/source_code/fpu_integration/wave_test.do b/source_code/fpu_integration/wave_test.do
deleted file mode 100644
index da8705c..0000000
--- a/source_code/fpu_integration/wave_test.do
+++ /dev/null
@@ -1,371 +0,0 @@
-onerror {resume}
-quietly WaveActivateNextPane {} 0
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/clk
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nrst
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flags
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7_2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7_3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_not_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_not_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_not_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_not_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_max_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_exp1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_exp2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/product
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/step1_to_step2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nxt_step1_to_step2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_sum
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_sum
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/cmp_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/cmp_out_det
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp1_sign
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp1_frac
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp2_sign
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp2_frac
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sum_exp
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_ovf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_unf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/step2_to_step3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nxt_step2_to_step3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_determine
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/bothnegsub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/bothpossub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/n1p2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/n1p2r
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/signout
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/same_compare
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/shifted_check_allone
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/shifted_check_onezero
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unsigned_exp_diff
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_same
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/wm
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/ovf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inexact
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/ovf_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unf_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inexact_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flag_add
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flag_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sum_init
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/outallone
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/outallzero
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/o
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/negmul_floating_point_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_floating_point_out
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/clk
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/nrst
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/floating_point1
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/floating_point2
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/frm
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/floating_point_out
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/funct7
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/flags
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/result_real
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/result_binary
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/fp1_real
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/fp2_real
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/fp_out_real
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/fp_exp
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/fp_frac
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/i
-add wave -noupdate -expand -group top_level -radix binary /tb_FPU_top_level/j
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/fp1_frac1
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/fp2_frac2
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/frac_same
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/temp_fp1_frac1
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/temp_fp2_frac2
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/diff_frac1_frac2
-add wave -noupdate -expand -group determine_Frac -radix binary /tb_FPU_top_level/DUT/determine_frac_status/diff_determine
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/exp1
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/exp2
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/u_diff
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/cmp_out
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/same_compare
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/u_exp1
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/u_exp2
-add wave -noupdate -expand -group CMP_EXPONENT -radix binary /tb_FPU_top_level/DUT/cmp_exponent/diff
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/cmp_out
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/same_compare
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/frac_same
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/floating_point1
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/floating_point2
-add wave -noupdate -expand -group sign_determine -radix binary /tb_FPU_top_level/DUT/sign_determine/signout
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/floating_point1_in
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/floating_point2_in
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/sign_shifted
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/frac_shifted
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/sign_not_shifted
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/frac_not_shifted
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/exp_max
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/unsigned_exp_diff
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/cmp_out
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/floating_point_shift
-add wave -noupdate -expand -group add_satep1 -radix binary /tb_FPU_top_level/DUT/addStep1/floating_point_not_shift
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/bothnegsub
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point1_in
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point2_in
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/sign_shifted
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/frac_shifted
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/sign_not_shifted
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/frac_not_shifted
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/exp_max
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/cmp
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/unsigned_exp_diff
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point1_in_temp
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point2_in_temp
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/cmp_out
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point_shift
-add wave -noupdate -expand -group sub_step1 -radix binary /tb_FPU_top_level/DUT/substep1/floating_point_not_shift
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/fp1_in
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/fp2_in
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/sign1
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/sign2
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/exp1
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/exp2
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/product
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/carry_out
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/frac1
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/sign1
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/frac2
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/sign2
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/exp_max_in
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/sign_out
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/sum
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/carry_out
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/exp_max_out
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/frac1_signed
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/frac2_signed
-add wave -noupdate -expand -group add_step2 -radix binary /tb_FPU_top_level/DUT/add_step2/sum_signed
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/shifted_check_onezero
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/n1p2r
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/bothnegsub
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/fp1
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/fp2
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac1
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sign1
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac2
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sign2
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/exp_max_in
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/exp_determine
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/bothpossub
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/n1p2
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/cmp_out
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sign_out
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sum
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/carry_out
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/exp_max_out
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/outallone
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/outallzero
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/wm
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sum_init
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac1_signed
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac2_signed
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/sum_signed
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac2_complement
-add wave -noupdate -expand -group sub_step2 -radix binary /tb_FPU_top_level/DUT/sub_step2/frac2_signedout
-add wave -noupdate -expand -group u_to_s -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_signed1/sign
-add wave -noupdate -expand -group u_to_s -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_signed1/frac_unsigned
-add wave -noupdate -expand -group u_to_s -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_signed1/frac_signed
-add wave -noupdate -expand -group c_to_cp -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_complement/frac2_input
-add wave -noupdate -expand -group c_to_cp -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_complement/frac2_signedin
-add wave -noupdate -expand -group c_to_cp -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_complement/frac2_output
-add wave -noupdate -expand -group c_to_cp -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_complement/frac2_signedout
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/n1p2r
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/shifted_check_onezero
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/fp1
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/fp2
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/cmp_out
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac1
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac2
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac1_s
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac2_s
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/n1p2
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/bothpossub
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/sum
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/ovf
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/outallone
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/outallzero
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/wm
-add wave -noupdate -expand -group sub_signed_f -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/sum_init
-add wave -noupdate -expand -group s_to_us -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_unsigned/frac_signed
-add wave -noupdate -expand -group s_to_us -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_unsigned/sign
-add wave -noupdate -expand -group s_to_us -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_unsigned/frac_unsigned
-add wave -noupdate -expand -group s_to_us -radix binary /tb_FPU_top_level/DUT/sub_step2/change_to_unsigned/rfrac_signed
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/sign1
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/sign2
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/exp1
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/exp2
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/sign_out
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/sum_exp
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/ovf
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/unf
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/carry
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sum_init
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unsigned_exp_diff
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/n1p2r
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/wm
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/clk
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/nrst
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac_shifted_minus
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/outallzero
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/outallone
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/same_compare
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/bothnegsub
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/cmp_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/floating_point1
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/floating_point2
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/function_mode
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/ovf_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unf_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/dz
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/inv
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frm
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exponent_max_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sign_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/carry_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_check_allone
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_check_onezero
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/before_floating_point_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/ovf
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unf
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/inexact
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sign
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exponent
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_amount
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exp_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/temp_sign
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/dummy_floating_point_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/fp_option
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/hold_value
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/rounded_frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_this
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/log_de
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/buf_determine
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_flag
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sum_init
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/clk
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/nrst
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/unsigned_exp_diff
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frac_in
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_frac
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/n1p2r
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/wm
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_amount
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/buf_determine
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frac_shifted_minus
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/outallzero
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/outallone
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/same_compare
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/bothnegsub
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/cmp_out
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fp1
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fp2
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frm
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sign
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/exp_in
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fraction
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/carry_out
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_check_allone
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_check_onezero
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/round_out
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/rounded
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sol_frac
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/round_amount
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_round_out
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_fraction
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_exp
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/mod
-add wave -noupdate -expand -group rounder -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/flag_inexact
-add wave -noupdate -expand -group left_shift -radix binary /tb_FPU_top_level/DUT/sub_step3/shift_left/fraction
-add wave -noupdate -expand -group left_shift -radix binary /tb_FPU_top_level/DUT/sub_step3/shift_left/result
-add wave -noupdate -expand -group left_shift -radix binary /tb_FPU_top_level/DUT/sub_step3/shift_left/shifted_amount
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/frm
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/sign
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/exp_in
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/fraction
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/round_out
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/rounded
-add wave -noupdate -expand -group round -radix binary /tb_FPU_top_level/DUT/add_step3/ROUND/round_amount
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/exp1
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/shifted_amount
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/result
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/u_exp1
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/u_shifted_amount
-add wave -noupdate -expand -group sub -radix binary /tb_FPU_top_level/DUT/add_step3/SUB/u_result
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/function_mode
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point1
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point2
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/ovf_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/unf_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/dz
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/inv
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frm
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent_max_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/carry_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/add_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/ovf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/unf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/inexact
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/dummy_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_minus_shift_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_this
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/fp_option
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_flag
-TreeUpdate [SetDefaultTree]
-WaveRestoreCursors {{Cursor 1} {13970000 ps} 0}
-quietly wave cursor active 1
-configure wave -namecolwidth 235
-configure wave -valuecolwidth 100
-configure wave -justifyvalue left
-configure wave -signalnamewidth 1
-configure wave -snapdistance 10
-configure wave -datasetprefix 0
-configure wave -rowmargin 4
-configure wave -childrowmargin 2
-configure wave -gridoffset 0
-configure wave -gridperiod 1
-configure wave -griddelta 40
-configure wave -timeline 0
-configure wave -timelineunits ns
-update
-WaveRestoreZoom {13960434 ps} {13981678 ps}
diff --git a/source_code/fpu_integration/waveadd.do b/source_code/fpu_integration/waveadd.do
deleted file mode 100644
index 4a37aa9..0000000
--- a/source_code/fpu_integration/waveadd.do
+++ /dev/null
@@ -1,50 +0,0 @@
-onerror {resume}
-quietly WaveActivateNextPane {} 0
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/function_mode
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point1
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point2
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/mul_ovf
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/mul_carry_out
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/ovf_in
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/unf_in
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/dz
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/inv
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frm
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent_max_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/carry_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/add_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/ovf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/unf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/inexact
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/dummy_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_minus_shift_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_this
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/fp_option
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_flag
-TreeUpdate [SetDefaultTree]
-WaveRestoreCursors {{Cursor 1} {25152000 ps} 0}
-quietly wave cursor active 1
-configure wave -namecolwidth 150
-configure wave -valuecolwidth 100
-configure wave -justifyvalue left
-configure wave -signalnamewidth 1
-configure wave -snapdistance 10
-configure wave -datasetprefix 0
-configure wave -rowmargin 4
-configure wave -childrowmargin 2
-configure wave -gridoffset 0
-configure wave -gridperiod 1
-configure wave -griddelta 40
-configure wave -timeline 0
-configure wave -timelineunits ns
-update
-WaveRestoreZoom {25144 ns} {25160 ns}
diff --git a/source_code/fpu_integration/wavemul.do b/source_code/fpu_integration/wavemul.do
deleted file mode 100644
index 7624c40..0000000
--- a/source_code/fpu_integration/wavemul.do
+++ /dev/null
@@ -1,67 +0,0 @@
-onerror {resume}
-quietly WaveActivateNextPane {} 0
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/function_mode
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point1
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/floating_point2
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/mul_ovf
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/mul_carry_out
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/ovf_in
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/unf_in
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/dz
-add wave -noupdate -expand -group add_step3 -color Gold -radix binary /tb_FPU_top_level/DUT/add_step3/inv
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frm
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent_max_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac_in
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/carry_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/add_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/ovf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/unf
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/inexact
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/sign
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exponent
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/dummy_floating_point_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_minus_shift_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_frac
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/shifted_amount
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/exp_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_this
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/fp_option
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_out
-add wave -noupdate -expand -group add_step3 -radix binary /tb_FPU_top_level/DUT/add_step3/round_flag
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/fp1_in
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/fp2_in
-add wave -noupdate -expand -group mul_step1 -color Gold -radix binary /tb_FPU_top_level/DUT/mulStep1/sign1
-add wave -noupdate -expand -group mul_step1 -color Gold -radix binary /tb_FPU_top_level/DUT/mulStep1/sign2
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/exp1
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/exp2
-add wave -noupdate -expand -group mul_step1 -radix binary /tb_FPU_top_level/DUT/mulStep1/product
-add wave -noupdate -expand -group mul_step1 -color Gold -radix binary /tb_FPU_top_level/DUT/mulStep1/carry_out
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/sign1
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/sign2
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/exp1
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/exp2
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/sign_out
-add wave -noupdate -expand -group mul_step2 -radix binary /tb_FPU_top_level/DUT/mul_step2/sum_exp
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/ovf
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/unf
-add wave -noupdate -expand -group mul_step2 -color Gold -radix binary /tb_FPU_top_level/DUT/mul_step2/carry
-TreeUpdate [SetDefaultTree]
-WaveRestoreCursors {{Cursor 1} {25146679 ps} 0}
-quietly wave cursor active 1
-configure wave -namecolwidth 150
-configure wave -valuecolwidth 100
-configure wave -justifyvalue left
-configure wave -signalnamewidth 1
-configure wave -snapdistance 10
-configure wave -datasetprefix 0
-configure wave -rowmargin 4
-configure wave -childrowmargin 2
-configure wave -gridoffset 0
-configure wave -gridperiod 1
-configure wave -griddelta 40
-configure wave -timeline 0
-configure wave -timelineunits ns
-update
-WaveRestoreZoom {25144 ns} {25160 ns}
diff --git a/source_code/fpu_integration/waves.shm/waves.dsn b/source_code/fpu_integration/waves.shm/waves.dsn
deleted file mode 100644
index f624d14..0000000
Binary files a/source_code/fpu_integration/waves.shm/waves.dsn and /dev/null differ
diff --git a/source_code/fpu_integration/waves.shm/waves.trn b/source_code/fpu_integration/waves.shm/waves.trn
deleted file mode 100644
index e040568..0000000
Binary files a/source_code/fpu_integration/waves.shm/waves.trn and /dev/null differ
diff --git a/source_code/fpu_integration/wavesub.do b/source_code/fpu_integration/wavesub.do
deleted file mode 100644
index 30cacf3..0000000
--- a/source_code/fpu_integration/wavesub.do
+++ /dev/null
@@ -1,196 +0,0 @@
-onerror {resume}
-quietly WaveActivateNextPane {} 0
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/clk
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nrst
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/floating_point_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flags
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frm3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7_2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/funct7_3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_not_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sign_not_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_not_shifted
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_not_shifted_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_max_minus
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_exp1
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_exp2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/product
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/step1_to_step2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nxt_step1_to_step2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_sum
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_sum
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_carry_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/minus_exp_max
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/cmp_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/cmp_out_det
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp1_sign
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp1_frac
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp2_sign
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/fp2_frac
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_sign_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sum_exp
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_ovf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/mul_unf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inv3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/step2_to_step3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/nxt_step2_to_step3
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/exp_determine
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/bothnegsub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/bothpossub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/n1p2
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/n1p2r
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/signout
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/same_compare
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/shifted_check_allone
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/shifted_check_onezero
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unsigned_exp_diff
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/frac_same
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/wm
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/ovf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unf
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inexact
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/ovf_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/unf_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/inexact_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flag_add
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/flag_sub
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/sum_init
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/outallone
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/outallzero
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/o
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/negmul_floating_point_out
-add wave -noupdate -expand -group dut -radix binary /tb_FPU_top_level/DUT/add_floating_point_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sum_init
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unsigned_exp_diff
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/n1p2r
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/wm
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/clk
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/nrst
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac_shifted_minus
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/outallzero
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/outallone
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/same_compare
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/bothnegsub
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/cmp_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/floating_point1
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/floating_point2
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/function_mode
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/ovf_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unf_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/dz
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/inv
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frm
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exponent_max_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sign_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac_in
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/carry_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_check_allone
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_check_onezero
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/before_floating_point_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/ovf
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/unf
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/inexact
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/sign
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exponent
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/shifted_amount
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/exp_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/temp_sign
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/dummy_floating_point_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/fp_option
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/hold_value
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/rounded_frac
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_this
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/log_de
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_out
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/buf_determine
-add wave -noupdate -expand -group sub_step3 -radix binary /tb_FPU_top_level/DUT/sub_step3/round_flag
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sum_init
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/clk
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/nrst
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/unsigned_exp_diff
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frac_in
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_frac
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/n1p2r
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/wm
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_amount
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/buf_determine
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frac_shifted_minus
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/outallzero
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/outallone
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/same_compare
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/bothnegsub
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/cmp_out
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fp1
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fp2
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/frm
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sign
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/exp_in
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/fraction
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/carry_out
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_check_allone
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/shifted_check_onezero
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/round_out
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/rounded
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/sol_frac
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/round_amount
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_round_out
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_fraction
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/temp_exp
-add wave -noupdate -expand -group rounder_sub -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/mod
-add wave -noupdate -expand -group rounder_sub -color Gold -radix binary /tb_FPU_top_level/DUT/sub_step3/ROUND/flag_inexact
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/n1p2r
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/shifted_check_onezero
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/fp1
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/fp2
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/cmp_out
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac1
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac2
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac1_s
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/frac2_s
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/n1p2
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/bothpossub
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/sum
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/ovf
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/outallone
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/outallzero
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/wm
-add wave -noupdate -expand -group sub_signed_frac -radix binary /tb_FPU_top_level/DUT/sub_step2/sub_signed_fracs/sum_init
-TreeUpdate [SetDefaultTree]
-WaveRestoreCursors {{Cursor 1} {6037010000 ps} 0}
-quietly wave cursor active 1
-configure wave -namecolwidth 235
-configure wave -valuecolwidth 100
-configure wave -justifyvalue left
-configure wave -signalnamewidth 1
-configure wave -snapdistance 10
-configure wave -datasetprefix 0
-configure wave -rowmargin 4
-configure wave -childrowmargin 2
-configure wave -gridoffset 0
-configure wave -gridperiod 1
-configure wave -griddelta 40
-configure wave -timeline 0
-configure wave -timelineunits ns
-update
-WaveRestoreZoom {6036999378 ps} {6037020622 ps}
diff --git a/source_code/fpu_integration/wlftIy58Tq b/source_code/fpu_integration/wlftIy58Tq
deleted file mode 100755
index ae878bf..0000000
Binary files a/source_code/fpu_integration/wlftIy58Tq and /dev/null differ
diff --git a/source_code/fpu_integration/wlftRn8lfu b/source_code/fpu_integration/wlftRn8lfu
deleted file mode 100755
index 853db83..0000000
Binary files a/source_code/fpu_integration/wlftRn8lfu and /dev/null differ
diff --git a/source_code/fpu_integration/wlftyrplrn b/source_code/fpu_integration/wlftyrplrn
deleted file mode 100755
index 64e901e..0000000
Binary files a/source_code/fpu_integration/wlftyrplrn and /dev/null differ
diff --git a/source_code/include/FPU_if.vh b/source_code/include/FPU_if.vh
deleted file mode 100644
index fb5593a..0000000
--- a/source_code/include/FPU_if.vh
+++ /dev/null
@@ -1,39 +0,0 @@
-//By            : Zhengsen Fu, Xinlue Liu
-//Description   : Interface connect top-level to FPU
-//Last Updated  : 7/21/20
-
-`ifndef FPU_IF_VH
-`define FPU_IF_VH
-import rv32i_types_pkg::*;
-interface FPU_if(input logic n_rst, clk);
-  //signals to and out of FPU and FPU register file
-  //logic f_LW; //load. Load from memory to register
-  //logic f_SW; //save. Save from rs2 to memory 
-  //logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-
-  word_t port_a, port_b; //input operands to the fpu
-
-  logic [2:0] f_frm_in; //input rounding method.
-  logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [7:0] f_funct_7; //operation selection of FPU
-  //logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  logic [31:0] fpu_out; //output when f_SW is asserted
-
-  logic f_ready; //asserted when calculation finished by FPU
-
-  int transaction_number; //waveform debug purpose
-
-  modport fp ( //to FPU_top_level
-  input n_rst, clk, port_a, port_b, f_frm_in, f_funct_7,
-  output fpu_out, f_flags //f_frm_out
-  );
-  
-  modport cc ( //to clock counter
-  input n_rst, clk, port_a, port_b, f_frm_in, f_funct_7,
-  output f_ready //f_frm_out
-  );
-endinterface //FPU_if
-
-
-`endif
diff --git a/source_code/include/alu_if.vh b/source_code/include/alu_if.vh
index 4430068..d3e76c0 100644
--- a/source_code/include/alu_if.vh
+++ b/source_code/include/alu_if.vh
@@ -28,6 +28,7 @@
 interface alu_if();
 
   import alu_types_pkg::*;
+  import rv32i_types_pkg::aluop_t;
   import rv32i_types_pkg::word_t;
 
   aluop_t aluop;
diff --git a/source_code/include/arithmetic_unit_if.vh b/source_code/include/arithmetic_unit_if.vh
new file mode 100644
index 0000000..bfce057
--- /dev/null
+++ b/source_code/include/arithmetic_unit_if.vh
@@ -0,0 +1,46 @@
+`ifndef ARITHMETIC_UNIT_IF_VH
+`define ARITHMETIC_UNIT_IF_VH
+
+interface arithmetic_unit_if(input rv32i_types_pkg::arith_control_signals_t control_sigs);
+
+  // import alu_types_pkg::*;
+  import rv32i_types_pkg::*;
+
+  logic wen;
+  aluop_t aluop;
+  word_t port_a;
+  word_t port_b;
+  word_t reg_file_wdata;
+  word_t csr_rdata;
+  word_t pc;
+  w_src_t w_src;
+  word_t wdata_au;
+  logic wen_au;
+  word_t imm_UJ_ext;
+  word_t imm_I_ext;
+  logic [4:0] reg_rd_au;
+  logic busy_au;
+  logic j_sel;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_a; 
+  logic done_a;
+
+
+  always_comb begin : CONNECTIONS
+    done_a = control_sigs.ena;
+    wen_au = control_sigs.wen;
+    aluop = control_sigs.alu_op;
+    w_src =  control_sigs.w_src;
+    reg_rd_au = control_sigs.reg_rd;
+    index_a = control_sigs.index_a;
+
+  end
+
+  modport au (
+    input wen, aluop, port_a, port_b, reg_file_wdata, csr_rdata, w_src,
+    imm_UJ_ext, imm_I_ext, j_sel, 
+    output wdata_au, wen_au, reg_rd_au, busy_au, done_a, 
+  );
+
+endinterface
+
+`endif //ARITHMETIC_UNIT_IF_VH
diff --git a/source_code/include/branch_res_if.vh b/source_code/include/branch_res_if.vh
index e4b29f5..26429da 100644
--- a/source_code/include/branch_res_if.vh
+++ b/source_code/include/branch_res_if.vh
@@ -25,7 +25,7 @@
 `ifndef BRANCH_RES_IF_VH
 `define BRANCH_RES_IF_VH
 
-interface branch_res_if();
+interface branch_res_if(input rv32i_types_pkg::branch_control_signals_t control_sigs);
 
   import rv32i_types_pkg::*;
 
@@ -33,7 +33,11 @@ interface branch_res_if();
   logic [12:0] imm_sb;
   branch_t branch_type;
   logic branch_taken;
-  
+
+  always_comb begin : CONNECTIONS
+    branch_type = control_sigs.branch_type;
+
+  end
   modport bres (
     input rs1_data, rs2_data, pc, imm_sb, branch_type,
     output branch_addr, branch_taken
diff --git a/source_code/include/completion_buffer_if.vh b/source_code/include/completion_buffer_if.vh
new file mode 100644
index 0000000..40cb28a
--- /dev/null
+++ b/source_code/include/completion_buffer_if.vh
@@ -0,0 +1,105 @@
+`ifndef COMPLETION_BUFFER_IF_VH
+`define COMPLETION_BUFFER_IF_VH
+
+interface completion_buffer_if();
+
+  import rv32i_types_pkg::*;
+
+  parameter NUM = 16;
+  
+  logic halt_instr;
+
+  // DECODE STAGE
+  logic [$clog2(NUM_CB_ENTRY)-1:0] cur_tail;
+  logic [4:0] vd_final;
+  word_t wdata_final;
+  logic alloc_ena;
+  logic full;
+  logic empty;
+  logic scalar_commit_ena;
+  logic illegal_instr;
+
+  // TO HAZARD UNIT
+  logic flush;
+  logic exception;
+  logic branch_mispredict_ena;
+
+  //VECTOR PIPELINE
+  logic rv32v_instr;
+  logic rv32v_commit_ena;
+  logic rv32v_commit_done;
+  logic rv32v_exception;
+  logic rv32v_wb_scalar_ena;
+  logic rv32v_wb_scalar_ready;
+  logic rv32v_wb_exception;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] rv32v_wb_scalar_index;
+  logic [4:0] rv32v_wb_vd;
+  word_t rv32v_wb_scalar_data;
+  opcode_t opcode;
+  opcode_t opcode_commit;
+
+  //FPU
+  logic rv32f_commit_ena;
+
+  //FUNCTIONAL UNIT RESULT
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_ls;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_sfu;
+  word_t wdata_ls;
+  word_t wdata_sfu;
+  word_t address_a;
+  word_t address_ls;
+  word_t epc;
+  logic [4:0] vd_ls;
+  logic [4:0] vd_sfu;
+  cb_exception_t exception_type_ls;
+  cb_exception_t exception_type_sfu;
+  logic ready_ls;
+  logic ready_sfu;
+  logic branch_mispredict;
+  logic wen_ls;
+  logic wen_sfu;
+  logic valid_a;
+  logic mal_ls;
+  logic illegal_insn;
+  logic mal_insn;
+  cpu_tracker_signals_t CPU_TRACKER, CPU_TRACKER_decode;
+
+  logic tb_read;
+
+  modport cb (
+    input alloc_ena, rv32v_instr, rv32v_commit_done, rv32v_exception, rv32v_wb_scalar_ena, rv32v_wb_scalar_ready, 
+           rv32v_wb_exception, exception_type_ls, exception_type_sfu, ready_ls, ready_sfu, branch_mispredict, wen_ls, 
+           rv32v_wb_scalar_index, index_ls, index_sfu, 
+           rv32v_wb_vd, vd_ls, vd_sfu, rv32v_wb_scalar_data, wen_sfu,
+           wdata_ls, wdata_sfu, CPU_TRACKER_decode, opcode,
+    output full, empty, scalar_commit_ena, flush, rv32v_commit_ena, rv32f_commit_ena, 
+           exception, branch_mispredict_ena, mal_ls, tb_read, cur_tail, vd_final, 
+           wdata_final, halt_instr, CPU_TRACKER, epc, illegal_insn, mal_insn
+  );
+
+  modport decode (
+    input cur_tail, full, empty,
+    output alloc_ena, rv32v_instr, rv32v_wb_scalar_ena, opcode, CPU_TRACKER_decode
+  );
+
+  modport writeback (
+    input CPU_TRACKER
+  );
+
+  modport execute (
+    input illegal_insn, mal_insn, index_ls, index_sfu, wdata_ls, wdata_sfu, vd_ls, vd_sfu, exception_type_ls, exception_type_sfu, ready_ls, ready_sfu, branch_mispredict, wen_ls, wen_sfu, valid_a, mal_ls, CPU_TRACKER, opcode, halt_instr
+  );
+
+  modport hu (
+    input full, empty, flush, exception, branch_mispredict_ena, epc
+  );
+
+  modport rv32v (
+    input rv32v_commit_done, rv32v_exception, rv32v_wb_scalar_ready, rv32v_wb_exception, rv32v_wb_scalar_index, rv32v_wb_vd, rv32v_commit_ena,
+    output rv32v_wb_scalar_data
+  );
+
+
+endinterface
+
+`endif //COMPLETION_BUFFER_IF_VH
diff --git a/source_code/include/control_unit_if.vh b/source_code/include/control_unit_if.vh
index cb294ce..feaa84f 100644
--- a/source_code/include/control_unit_if.vh
+++ b/source_code/include/control_unit_if.vh
@@ -29,31 +29,44 @@
 interface control_unit_if;
   import alu_types_pkg::*;
   import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
+  import rv32m_pkg::*;
   import machine_mode_types_1_11_pkg::*;
 
   logic dwen, dren, j_sel, branch, jump, ex_pc_sel, imm_shamt_sel, halt, wen, ifence ,lui_instr, wfi;
   aluop_t alu_op;
-  logic [1:0] alu_a_sel, alu_b_sel;
-  logic [2:0] w_sel;
+  logic [1:0] alu_a_sel, alu_b_sel; // obsolete
+  w_src_t w_src;
   logic [4:0] shamt;
+  // CPU tracker
   logic  [4:0] reg_rs1, reg_rs2, reg_rd;
   logic [11:0] imm_I, imm_S;
   logic [20:0] imm_UJ;
   logic [12:0] imm_SB;
   word_t instr, imm_U;
-  load_t load_type;
-  branch_t branch_type;
+  // CPU tracker end
+  branch_t branch_type; //
   opcode_t opcode; 
+  sign_type_t sign_type;
+  logic high_low_sel;
+  logic div_type;
+  scalar_fu_t sfu_type;
+  load_t load_type;
+  logic pc_en;
+
+  // New cpu tracker signals
+  cpu_tracker_t cpu_track_sigs;
 
-  //floating point control signals
-  //register file signals
-  logic [4:0] f_reg_rs1, f_reg_rs2, f_reg_rd;
-  logic [2:0] frm_in, f_wsel;
-  logic f_wen, fsw;
+  // source selection signals
+  logic [1:0] source_a_sel, source_b_sel;
 
-  f_funct7_t f_funct7;
-  f_opcode_t f_opcode;
+  // functional unit control signal structs
+  //branch_control_signals_t branch_sigs;
+  csr_control_signals_t csr_sigs;
+  arith_control_signals_t arith_sigs;
+  mult_control_signals_t mult_sigs;
+  div_control_signals_t div_sigs;
+  lsu_control_signals_t lsu_sigs;
+  jump_control_signals_t jump_sigs;
 
   // Privilege control signals
   logic fault_insn, illegal_insn, ret_insn, breakpoint, ecall_insn;
@@ -62,15 +75,16 @@ interface control_unit_if;
   logic [4:0] zimm;
 
   modport control_unit(
-    input instr, 
-    output dwen, dren, j_sel, branch, lui_instr, jump, ex_pc_sel, alu_a_sel,
-    alu_b_sel, w_sel, load_type, branch_type, shamt,
+    input instr, pc_en,
+    output arith_sigs, mult_sigs, div_sigs, lsu_sigs, csr_sigs, 
+    cpu_track_sigs, jump_sigs,
+    dwen, dren, j_sel, branch, lui_instr, jump, ex_pc_sel, alu_a_sel,
+    alu_b_sel, w_src, load_type, branch_type, shamt,
     imm_I, imm_S, imm_SB, imm_UJ, imm_U, imm_shamt_sel, alu_op, 
     opcode, halt, wen, fault_insn, illegal_insn, ret_insn, breakpoint, 
     ecall_insn, wfi, csr_swap, csr_set, csr_clr, csr_imm, csr_rw_valid,
-    csr_addr, zimm, ifence, reg_rs1, reg_rs2, reg_rd, 
-    //floating point signals
-    f_opcode, f_reg_rs1, f_reg_rs2, f_reg_rd, frm_in, f_wsel, f_wen, f_funct7, fsw
+    csr_addr, zimm, ifence, reg_rs1, reg_rs2, reg_rd, sign_type, sfu_type, 
+    high_low_sel, div_type, source_a_sel, source_b_sel
   );
 
 endinterface
diff --git a/source_code/include/divide_unit_if.vh b/source_code/include/divide_unit_if.vh
new file mode 100644
index 0000000..83231f1
--- /dev/null
+++ b/source_code/include/divide_unit_if.vh
@@ -0,0 +1,40 @@
+`ifndef DIVIDE_UNIT_IF_VH
+`define DIVIDE_UNIT_IF_VH
+
+interface divide_unit_if(input rv32i_types_pkg::div_control_signals_t control_sigs);
+  
+  import rv32i_types_pkg::*;
+  
+  logic [31:0] rs1_data; 
+  logic [31:0] rs2_data; 
+  logic [31:0] wdata_du; 
+  logic [4:0] reg_rd; 
+  logic [4:0] reg_rd_du; 
+  logic wen;
+  logic wen_du;
+  logic is_signed_div;
+  logic div_type;
+  logic start_div;
+  logic busy_du;
+  logic done_du;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_du; 
+
+
+  always_comb begin : CONNECTIONS
+    wen = control_sigs.wen;
+    is_signed_div = control_sigs.is_signed;
+    div_type = control_sigs.div_type;
+    start_div = control_sigs.ena;
+    reg_rd_du = control_sigs.reg_rd;
+    index_du = control_sigs.index_du;
+  end
+
+  modport execute (
+    input   rs1_data, rs2_data, start_div, div_type, is_signed_div, 
+            wen, reg_rd,
+    output  wdata_du, busy_du, done_du, reg_rd_du, wen_du
+  );
+
+endinterface
+
+`endif //DIVIDE_UNIT_IF_VH
diff --git a/source_code/include/jump_calc_if.vh b/source_code/include/jump_calc_if.vh
index edbc3b0..302b91f 100644
--- a/source_code/include/jump_calc_if.vh
+++ b/source_code/include/jump_calc_if.vh
@@ -25,12 +25,17 @@
 `ifndef JUMP_CALC_IF_VH
 `define JUMP_CALC_IF_VH
 
-interface jump_calc_if();
+interface jump_calc_if(input rv32i_types_pkg::jump_control_signals_t control_sigs);
   import rv32i_types_pkg::word_t;
 
   word_t base, offset, jump_addr;
   logic j_sel;
   // jsel =1 JAL otherwise JALR
+  always_comb begin : CONNECTIONS
+    j_sel = control_sigs.j_sel;
+    base = control_sigs.j_base;
+    offset = control_sigs.j_offset;
+  end
 
   modport jump_calc (
     input  base, offset, j_sel,
diff --git a/source_code/include/loadstore_unit_if.vh b/source_code/include/loadstore_unit_if.vh
new file mode 100644
index 0000000..d7c31d1
--- /dev/null
+++ b/source_code/include/loadstore_unit_if.vh
@@ -0,0 +1,77 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     loadstore_unit_if.vh
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 02/19/2022
+*   Description:  Interface for load-store unit
+*/
+`ifndef LOADSTORE_UNIT_IF_VH
+`define LOADSTORE_UNIT_IF_VH
+
+interface loadstore_unit_if(input rv32i_types_pkg::lsu_control_signals_t control_sigs);
+
+  import rv32i_types_pkg::*;
+
+  logic [31:0] port_a;
+  logic [31:0] port_b;
+  logic [31:0] store_data;
+  logic [31:0] pc;
+  logic [31:0] wdata_ls;
+  logic [4:0] reg_rd;
+  logic [4:0] reg_rd_ls;
+  logic dren;
+  logic dren_ls;
+  logic dwen;
+  logic dwen_ls;
+  logic busy_ls;
+  logic wen;
+  logic wen_ls;
+  logic mal_addr;
+  load_t load_type;
+  opcode_t opcode;
+  opcode_t opcode_ls;
+  word_t memory_addr;
+  logic done_ls;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_ls; 
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index; 
+  logic ena;
+
+
+  always_comb begin : CONNECTIONS
+    wen = control_sigs.wen;
+    load_type = control_sigs.load_type;
+    opcode = control_sigs.opcode;
+    dren = control_sigs.dren;
+    dwen = control_sigs.dwen;
+    reg_rd = control_sigs.reg_rd;
+    index = control_sigs.index_ls;
+    ena = control_sigs.ready_ls;
+  end
+
+  modport execute (
+    input port_a, port_b, store_data, pc, load_type, dren, 
+           dwen, wen, reg_rd, opcode, index, ena,
+    output wdata_ls, wen_ls, reg_rd_ls, dren_ls, dwen_ls, 
+            opcode_ls, mal_addr, memory_addr, busy_ls, done_ls,
+          index_ls
+  );
+
+endinterface
+
+`endif //LOADSTORE_UNIT_IF_VH
diff --git a/source_code/include/multiply_unit_if.vh b/source_code/include/multiply_unit_if.vh
new file mode 100644
index 0000000..9960743
--- /dev/null
+++ b/source_code/include/multiply_unit_if.vh
@@ -0,0 +1,65 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     multiply_unit_if.vh
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 02/19/2022
+*   Description:  Interface for multiply unit
+*/
+
+`ifndef MULTIPLY_UNIT_IF_VH
+`define MULTIPLY_UNIT_IF_VH
+
+interface multiply_unit_if(input rv32i_types_pkg::mult_control_signals_t control_sigs);
+
+  import rv32i_types_pkg::*;
+
+  logic [31:0] rs1_data;
+  logic [31:0] rs2_data;
+  logic start_mu;
+  logic high_low_sel;
+  logic decode_done;
+  logic wen;
+  logic wen_mu;
+  sign_type_t is_signed;
+  logic [4:0] reg_rd;
+  logic [4:0] reg_rd_mu;
+  logic [31:0] wdata_mu;
+  logic busy_mu;
+  logic done_mu;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_mu; 
+
+
+  always_comb begin : CONNECTIONS
+    start_mu = control_sigs.ena;
+    high_low_sel = control_sigs.high_low_sel;
+    decode_done = control_sigs.decode_done;
+    wen = control_sigs.wen;
+    is_signed = control_sigs.is_signed;
+    reg_rd = control_sigs.reg_rd;
+    index_mu = control_sigs.index_mu;
+  end
+  modport execute (
+    input rs1_data, rs2_data, start_mu, high_low_sel, decode_done, wen, 
+          is_signed, reg_rd, 
+    output wdata_mu, busy_mu, done_mu, wen_mu, reg_rd_mu
+  );
+
+endinterface
+
+`endif //MULTIPLY_UNIT_IF_VH
diff --git a/source_code/include/ooo_bypass_unit_if.vh b/source_code/include/ooo_bypass_unit_if.vh
new file mode 100644
index 0000000..4056851
--- /dev/null
+++ b/source_code/include/ooo_bypass_unit_if.vh
@@ -0,0 +1,29 @@
+
+`ifndef OOO_BYPASS_UNIT_IF_VH
+`define OOO_BYPASS_UNIT_IF_VH
+
+interface ooo_bypass_unit_if();
+    import rv32i_types_pkg::*;
+    logic [4:0] rs1, rs2;
+    logic [4:0] rd_alu, rd_mul, rd_div, rd_lsu;
+    logic valid_alu, valid_mul, valid_div, valid_lsu;
+    logic rs1_bypass_ena, rs2_bypass_ena;
+    word_t rs1_bypass_data, rs2_bypass_data;
+    word_t data_alu, data_mul, data_div, data_lsu;
+       
+    modport bypass_unit (
+        input rs1, rs2, rd_alu, rd_mul, rd_div, rd_lsu, valid_alu, valid_mul, valid_div, valid_lsu, data_alu, data_mul, data_div, data_lsu,
+        output rs1_bypass_ena, rs2_bypass_ena, rs1_bypass_data, rs2_bypass_data
+    );
+
+    modport decode (
+        output rs1, rs2,
+        input rs1_bypass_ena, rs2_bypass_ena, rs1_bypass_data, rs2_bypass_data
+    );
+    modport execute (
+        output rd_alu, rd_mul, rd_div, rd_lsu, valid_alu, valid_mul, valid_div, valid_lsu, data_alu, data_mul, data_div, data_lsu
+    );
+
+
+endinterface
+`endif
diff --git a/source_code/include/ooo_decode_execute_if.vh b/source_code/include/ooo_decode_execute_if.vh
new file mode 100644
index 0000000..67a43db
--- /dev/null
+++ b/source_code/include/ooo_decode_execute_if.vh
@@ -0,0 +1,108 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*   
+*   
+*   Filename:     tspp_fetch_execute_if.vh
+*   
+*   Created by:   Jacob R. Stevens	
+*   Email:        steven69@purdue.edu
+*   Date Created: 06/01/2016
+*   Description:  Interface between the fetch and execute pipeline stages
+*/
+
+`ifndef OOO_DECODE_EXECUTE_IF_VH
+`define OOO_DECODE_EXECUTE_IF_VH
+
+interface ooo_decode_execute_if();
+
+  import rv32i_types_pkg::*;
+  import rv32m_pkg::*;
+  import alu_types_pkg::*;
+  import machine_mode_types_1_11_pkg::*;
+
+  // noted data signals that are needed in execute stage
+  word_t instr;
+  word_t pc;
+  word_t pc4;
+  word_t immediate;
+  word_t port_a; //
+  word_t port_b; //
+  word_t reg_file_wdata; //
+  scalar_fu_t sfu_type; //
+  logic halt_instr; //
+  logic stall_multiply;
+  logic stall_divide;
+  logic stall_arith;
+  logic stall_loadstore;
+  logic ifence;
+  logic prediction; //TEMPORARY
+  opcode_t opcode;
+  word_t store_data;
+
+  // new structs for the interface
+  exception_control_signals_t exception_sigs; //
+  csr_control_signals_t csr_sigs; //
+  // functional units
+  arith_control_signals_t arith_sigs; //
+  jump_control_signals_t jump_sigs; //
+  branch_control_signals_t branch_sigs; // 
+  mult_control_signals_t mult_sigs; //
+  div_control_signals_t div_sigs; //
+  lsu_control_signals_t lsu_sigs; //
+  
+  cpu_tracker_signals_t tracker_sigs; //
+
+  modport decode (
+    output port_a, port_b, reg_file_wdata, sfu_type, halt_instr,
+    exception_sigs, csr_sigs,
+    arith_sigs, jump_sigs, branch_sigs, 
+    mult_sigs,
+    div_sigs,
+    lsu_sigs,
+    tracker_sigs,
+    stall_multiply,
+    stall_divide,
+    stall_arith,
+    stall_loadstore,
+    pc,
+    pc4,
+    immediate,
+    ifence,
+    prediction,
+    instr,
+    opcode,
+    store_data
+  );
+
+  modport execute (
+    input port_a, port_b, reg_file_wdata, sfu_type, halt_instr,
+    exception_sigs, csr_sigs,
+    arith_sigs, jump_sigs, branch_sigs, 
+    mult_sigs,
+    div_sigs,
+    lsu_sigs,
+    tracker_sigs,
+    pc,
+    immediate,
+    pc4,
+    prediction,
+    instr,
+    opcode,
+    store_data
+  );
+
+endinterface
+
+`endif //OOO_DECODE_EXECUTE_IF_VH
diff --git a/source_code/include/ooo_execute_commit_if.vh b/source_code/include/ooo_execute_commit_if.vh
new file mode 100644
index 0000000..a899f11
--- /dev/null
+++ b/source_code/include/ooo_execute_commit_if.vh
@@ -0,0 +1,121 @@
+`ifndef OOO_EXECUTE_COMMIT_IF_VH
+`define OOO_EXECUTE_COMMIT_IF_VH
+
+interface ooo_execute_commit_if();
+
+  import rv32i_types_pkg::*;
+
+  logic halt_instr;
+  logic csr_instr;
+  logic instr_30;
+  logic wen_au;
+  logic wen_mu;
+  logic wen_du;
+  logic wen_ls;
+  logic busy_au;
+  logic busy_mu;
+  logic busy_du;
+  logic busy_ls;
+  logic done_a;
+  logic done_mu;
+  logic done_du;
+  logic done_ls;
+  logic dren;
+  logic mal_addr;
+  logic dwen;
+  logic breakpoint;
+  logic ecall_insn;
+  logic ret_insn;
+  logic illegal_insn;
+  logic invalid_csr;
+  logic mal_insn;
+  logic fault_insn;
+  logic token;
+  logic intr_seen;
+  logic jump_instr;
+  word_t jump_addr;
+  logic branch_instr;
+  logic prediction;
+  logic branch_taken;
+  logic [11:0] funct12;
+  logic [11:0] imm_I;
+  logic [11:0] imm_S;
+  logic [12:0] imm_SB;
+  logic [2:0] w_sel;
+  logic [2:0] funct3;
+  logic [4:0] rs1;
+  logic [4:0] rs2;
+  logic [4:0] reg_rd_au;
+  logic [4:0] reg_rd_mu;
+  logic [4:0] reg_rd_du;
+  logic [4:0] reg_rd_ls;
+  opcode_t opcode;
+  word_t csr_rdata;
+  word_t imm_UJ_ext;
+  word_t imm_U;
+  word_t instr;
+  word_t wdata_au;
+  word_t wdata_mu;
+  word_t wdata_du;
+  word_t wdata_ls;
+  word_t memory_addr;
+  word_t pc;
+  word_t br_resolved_addr;
+  cpu_tracker_signals_t CPU_TRACKER;
+  cpu_tracker_signals_t CPU_TRACKER_OUT;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_a;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_mu;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_du;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_ls;
+  word_t pc_a;
+  word_t pc_mu;
+  word_t pc_du;
+  word_t pc_ls;
+  word_t pc4;
+  logic exception_a;
+  logic exception_mu;
+  logic exception_du;
+  logic exception_ls;
+  arith_control_signals_t arith_sigs;
+  mult_control_signals_t mult_sigs;
+  div_control_signals_t div_sigs;
+  lsu_control_signals_t lsu_sigs;
+  logic mispredict;
+
+
+  modport execute (
+    output halt_instr, csr_instr, instr_30, wen_au, wen_mu, wen_du, 
+           wen_ls, busy_au, busy_mu, busy_du, busy_ls, dren, 
+           mal_addr, dwen, breakpoint, ecall_insn, ret_insn, illegal_insn, 
+           invalid_csr, mal_insn, fault_insn, token, intr_seen, jump_instr, 
+           jump_addr, branch_instr, prediction, branch_taken, funct12, imm_I, 
+           imm_S, imm_SB, w_sel, funct3, rs1, rs2, 
+           reg_rd_au, reg_rd_mu, reg_rd_du, reg_rd_ls, opcode, csr_rdata, 
+           imm_UJ_ext, imm_U, instr, wdata_au, wdata_mu, wdata_du, 
+           wdata_ls, memory_addr, pc, br_resolved_addr, CPU_TRACKER,
+           index_a, index_mu, index_du, index_ls,
+           pc_a, pc_mu, pc_du, pc_ls,
+           exception_a, exception_mu, exception_du, exception_ls, pc4,
+           arith_sigs, mult_sigs, div_sigs, lsu_sigs, done_a, done_mu,
+           done_du, done_ls, mispredict
+  );
+
+  modport commit (
+    input halt_instr, csr_instr, instr_30, wen_au, wen_mu, wen_du, 
+           wen_ls, busy_au, busy_mu, busy_du, busy_ls, dren, 
+           mal_addr, dwen, breakpoint, ecall_insn, ret_insn, illegal_insn, 
+           invalid_csr, mal_insn, fault_insn, token, intr_seen, jump_instr, 
+           jump_addr, branch_instr, prediction, branch_taken, 
+           funct12, imm_I, imm_S, imm_SB, w_sel, funct3, 
+           rs1, rs2, reg_rd_au, reg_rd_mu, reg_rd_du, reg_rd_ls, 
+           opcode, csr_rdata, imm_UJ_ext, imm_U, instr, wdata_au, 
+           wdata_mu, wdata_du, wdata_ls, memory_addr, pc, br_resolved_addr, index_a, index_mu, index_du, index_ls, 
+           pc_a, pc_mu, pc_du, pc_ls, 
+           exception_a, exception_mu, exception_du, exception_ls, pc4, CPU_TRACKER,
+           arith_sigs, mult_sigs, div_sigs, lsu_sigs, done_a, done_mu,
+           done_du, done_ls, mispredict
+  );
+
+endinterface
+
+`endif //OOO_EXECUTE_COMMIT_IF_VH
diff --git a/source_code/include/ooo_fetch1_fetch2_if.vh b/source_code/include/ooo_fetch1_fetch2_if.vh
new file mode 100644
index 0000000..92c826e
--- /dev/null
+++ b/source_code/include/ooo_fetch1_fetch2_if.vh
@@ -0,0 +1,44 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*   
+*   
+*   Filename:     ooo_fetch1_fetch2_if.vh
+*   
+*   Created by:   Jacob R. Stevens	
+*   Email:        steven69@purdue.edu
+*   Date Created: 06/01/2016
+*   Description:  Interface between the fetch and execute pipeline stages
+*/
+
+`ifndef OOO_FETCH1_FETCH2_IF_VH
+`define OOO_FETCH1_FETCH2_IF_VH
+
+interface ooo_fetch1_fetch2_if;
+
+  import rv32i_types_pkg::*;
+ 
+  word_t pc;
+  logic prediction;
+
+  modport fetch1(
+      output pc, prediction
+  );
+  
+  modport fetch2(
+      input pc, prediction
+  );
+
+endinterface
+`endif //OOO_FETCH1_FETCH2_IF_VH
diff --git a/source_code/include/ooo_fetch2_decode_if.vh b/source_code/include/ooo_fetch2_decode_if.vh
new file mode 100644
index 0000000..92b4600
--- /dev/null
+++ b/source_code/include/ooo_fetch2_decode_if.vh
@@ -0,0 +1,50 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*   
+*   
+*   Filename:     tspp_fetch_execute_if.vh
+*   
+*   Created by:   Jacob R. Stevens	
+*   Email:        steven69@purdue.edu
+*   Date Created: 06/01/2016
+*   Description:  Interface between the fetch and execute pipeline stages
+*/
+
+`ifndef OOO_FETCH2_DECODE_IF_VH
+`define OOO_FETCH2_DECODE_IF_VH
+
+interface ooo_fetch2_decode_if;
+  import rv32i_types_pkg::*;
+ 
+  logic         token;
+  word_t        pc;
+  word_t        pc4;
+  word_t        instr;
+  logic         mal_insn;
+  logic         fault_insn;
+  logic         prediction;
+
+  modport fetch(
+    output  pc, token, pc4, instr, prediction,
+            mal_insn, fault_insn
+  );
+
+  modport decode(
+    input    pc, token, pc4, instr, prediction,
+             mal_insn, fault_insn
+  );
+
+endinterface //OOO_FETCH2_DECODE_IF_VH
+`endif
diff --git a/source_code/include/ooo_fetch_decode_if.vh b/source_code/include/ooo_fetch_decode_if.vh
new file mode 100644
index 0000000..18a8690
--- /dev/null
+++ b/source_code/include/ooo_fetch_decode_if.vh
@@ -0,0 +1,51 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*   
+*   
+*   Filename:     ooo_fetch_decode_if.vh
+*   
+*   Created by:   Nicholas Gildenhuys	
+*   Email:        ngildenh@purdue.edu
+*   Date Created: 02/27/2022
+*   Description:  Interface between the fetch and decode pipeline stages 
+*                 in the out of order core
+*/
+
+
+`ifndef OOO_FETCH_DECODE_IF_VH
+`define OOO_FETCH_DECODE_IF_VH
+
+interface ooo_fetch_decode_if;
+
+  import rv32i_types_pkg::*;
+
+  logic   token;
+  word_t  pc;
+  word_t  pc4;
+  word_t  instr;
+  logic   mal_insn;
+  logic   fault_insn;
+  logic   prediction;
+
+  modport fetch(
+    output token, pc, pc4, instr, mal_insn, fault_insn, prediction
+  );
+
+  modport decode(
+    input token, pc, pc4, instr, mal_insn, fault_insn, prediction
+  );
+
+endinterface
+`endif //OOO_FETCH_DECODE_IF_VH
\ No newline at end of file
diff --git a/source_code/include/ooo_hazard_unit_if.vh b/source_code/include/ooo_hazard_unit_if.vh
new file mode 100644
index 0000000..fd39874
--- /dev/null
+++ b/source_code/include/ooo_hazard_unit_if.vh
@@ -0,0 +1,150 @@
+`ifndef OOO_HAZARD_UNIT_IF_VH
+`define OOO_HAZARD_UNIT_IF_VH
+
+interface ooo_hazard_unit_if();
+
+  import rv32i_types_pkg::word_t;
+  import rv32i_types_pkg::scalar_fu_t;
+
+  logic busy_div;
+  logic busy_mul;
+  logic data_hazard;
+
+  logic pc_en;
+  logic decode_execute_flush;
+  logic stall_au;
+  logic stall_mu;
+  logic stall_du;
+  logic stall_ls;
+  logic stall_all;
+  logic intr;
+  logic halt;
+  logic dflushed;
+  logic iflushed;
+  word_t ifence_pc;
+  logic loadstore_flush;
+  logic d_mem_busy;
+  logic dmem_access;
+  logic intr_taken;
+  logic load;
+  logic stall_ex;
+  logic stall_de;
+  logic jump;
+  logic branch;
+  logic mispredict;
+  logic csr;
+  logic illegal_insn;
+  logic breakpoint;
+  logic env_m;
+  logic ret;
+  logic token;
+  word_t brj_addr;
+  word_t csr_pc;
+  word_t epc;
+  word_t pc_ex;
+  word_t pc_fe;
+  logic npc_sel;
+  logic ifence_flush;
+  logic csr_flush;
+  logic insert_priv_pc;
+  word_t priv_pc;
+  logic fetch_decode_flush;
+  logic iren;
+  logic i_mem_busy;
+  logic dren;
+  logic dwen;
+  logic ifence;
+  logic fault_s;
+  logic fault_l;
+  logic mal_s;
+  logic mal_l;
+  logic mal_insn;
+  logic fault_insn;
+  logic div_e;
+  logic mul_e;
+  logic busy_all;
+  word_t badaddr_d;
+  word_t badaddr_i;
+  logic if_if_flush;
+  //NEW SIGNALS
+  logic busy_au;
+  logic busy_mu;
+  logic busy_du;
+  logic busy_ls;
+  scalar_fu_t fu_type;
+  logic rob_full;
+  logic execute_commit_flush;
+  logic rd_busy;
+  logic rs1_busy;
+  logic rs2_busy;
+  logic instr_imm;
+  logic [1:0] source_a_sel, source_b_sel;
+  logic wen; // we need this to know if we need to stall for rd
+  logic stall_commit;
+  logic stall_fetch_decode;
+  logic busy_decode;
+  logic rob_empty;
+  logic hazard;
+  logic mispredict_ff;
+  logic wb_port_conflict;
+
+
+  modport decode (
+    input pc_en, decode_execute_flush, stall_au, stall_mu, stall_du, stall_ls, 
+           stall_de, intr, stall_fetch_decode, data_hazard, hazard, npc_sel, rob_empty,
+    output halt, dflushed, iflushed, ifence_pc, fu_type, ifence, rd_busy, 
+           rs1_busy, rs2_busy, source_a_sel, source_b_sel, wen, stall_ex, busy_decode, wb_port_conflict
+  );
+
+  modport execute (
+    input loadstore_flush, pc_en, execute_commit_flush, dmem_access, intr, intr_taken, stall_commit,
+    output load, stall_ex, jump, branch, mispredict, mispredict_ff, csr, 
+           illegal_insn, breakpoint, env_m, ret, token, busy_au, 
+           busy_mu, busy_du, busy_ls, brj_addr, csr_pc, 
+           epc, pc_ex, mal_l, mal_s, badaddr_d, mal_insn, d_mem_busy, dren, dwen
+  );
+
+  modport fetch (
+    input pc_en, npc_sel, halt, ifence_flush, csr_flush, 
+           insert_priv_pc, intr, intr_taken, brj_addr, ifence_pc, csr_pc, 
+           priv_pc, fetch_decode_flush, iren, stall_fetch_decode, busy_decode, pc_fe,
+    output i_mem_busy 
+  );
+
+  modport hazard_unit (
+    input i_mem_busy, dren, dwen, d_mem_busy, jump, branch, 
+           mispredict, mispredict_ff, load, halt, ifence, illegal_insn, fault_s, 
+           fault_l, mal_s, mal_l, breakpoint, env_m, token, 
+           mal_insn, fault_insn, ret,  div_e, 
+           mul_e, busy_au, busy_mu, busy_du, busy_ls, busy_all, 
+           badaddr_d, badaddr_i, epc,  fu_type,  busy_div,
+           busy_mul, rob_full, rob_empty, data_hazard, hazard, dflushed, iflushed,
+           rs1_busy, rs2_busy, rd_busy, source_a_sel, source_b_sel, wen,
+          busy_decode, pc_ex, wb_port_conflict, pc_fe,
+    output pc_en, if_if_flush, fetch_decode_flush, decode_execute_flush, csr, iren, 
+           loadstore_flush, npc_sel, dmem_access, ifence_flush, csr_flush, 
+           insert_priv_pc, intr, stall_au, stall_mu, stall_du, stall_ls, 
+           stall_all, priv_pc, execute_commit_flush, stall_commit, stall_ex, stall_de,
+          stall_fetch_decode, intr_taken
+  );
+
+  modport commit (
+    input stall_commit,
+    output fault_l, fault_s, fault_insn, 
+           intr_taken, breakpoint, env_m, token, 
+           epc, badaddr_i, rob_full, rob_empty, pc_en, execute_commit_flush
+  );
+
+  modport memory (
+    input loadstore_flush, pc_en, dmem_access, stall_ls,
+    output d_mem_busy, dren, dwen, busy_ls
+  );
+
+  modport cb (
+    input npc_sel,
+    output rob_full, rob_empty
+  );
+
+endinterface
+
+`endif //OOO_HAZARD_UNIT_IF_VH
diff --git a/source_code/include/pipe5_decode_execute_if.vh b/source_code/include/pipe5_decode_execute_if.vh
index 17f9f0c..9b1e908 100644
--- a/source_code/include/pipe5_decode_execute_if.vh
+++ b/source_code/include/pipe5_decode_execute_if.vh
@@ -1,133 +1,134 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     tspp_fetch_execute_if.vh
-*   
-*   Created by:   Jacob R. Stevens	
-*   Email:        steven69@purdue.edu
-*   Date Created: 06/01/2016
-*   Description:  Interface between the fetch and execute pipeline stages
-*/
+// /*
+// *   Copyright 2016 Purdue University
+// *   
+// *   Licensed under the Apache License, Version 2.0 (the "License");
+// *   you may not use this file except in compliance with the License.
+// *   You may obtain a copy of the License at
+// *   
+// *       http://www.apache.org/licenses/LICENSE-2.0
+// *   
+// *   Unless required by applicable law or agreed to in writing, software
+// *   distributed under the License is distributed on an "AS IS" BASIS,
+// *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// *   See the License for the specific language governing permissions and
+// *   limitations under the License.
+// *   
+// *   
+// *   Filename:     tspp_fetch_execute_if.vh
+// *   
+// *   Created by:   Jacob R. Stevens	
+// *   Email:        steven69@purdue.edu
+// *   Date Created: 06/01/2016
+// *   Description:  Interface between the fetch and execute pipeline stages
+// */
 
-`ifndef PIPE5_DECODE_EXECUTE_IF_VH
-`define PIPE5_DECODE_EXECUTE_IF_VH
+// `ifndef PIPE5_DECODE_EXECUTE_IF_VH
+// `define PIPE5_DECODE_EXECUTE_IF_VH
 
-interface pipe5_decode_execute_if;
-  import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
-  import alu_types_pkg::*;
-  import machine_mode_types_1_11_pkg::*;
+// interface pipe5_decode_execute_if();
 
-  word_t       port_a;
-  word_t       port_b;
-  word_t       reg_file_wdata;
-  word_t       store_wdata;
-  word_t       rs1_data;
-  word_t       rs2_data;
-  word_t       br_imm_sb;
-  logic  [4:0] reg_rs1, reg_rs2, reg_rd;
-  word_t       j_base;
-  word_t       j_offset;
-  word_t       pc;
-  word_t       pc4;
-  word_t       csr_imm_value;
-  word_t       instr;
-  aluop_t      aluop;
-  load_t       load_type;
-  branch_t     br_branch_type;
-  opcode_t     opcode;
-  csr_addr_t   csr_addr;
-  logic [3:0]  byte_en_temp;
-  logic [2:0]  w_sel;
-  logic [1:0]  alu_a_sel, alu_b_sel;
-  logic        wen;
-  logic        dwen;
-  logic        dren;
-  logic        jump_instr;
-  logic        branch_instr;
-  logic        prediction;
-  logic        halt_instr;
-  logic        csr_instr;
-  logic        lui_instr;
-  logic        j_sel;
-  logic        ifence;
-  logic        csr_swap, csr_set, csr_clr;
-  logic        csr_imm;
-  logic        illegal_insn, ecall_insn, ret_insn, breakpoint;
-  logic        token;
-  logic        mal_insn;
-  logic        fault_insn;
-  logic [2:0]  funct3;
-  logic [11:0] funct12;
-  logic [11:0] imm_I, imm_S;
-  logic [12:0] imm_SB;
-  logic        instr_30;
-  logic        wfi;
-  word_t       imm_UJ_ext;
-  word_t       imm_U;
+//   import rv32i_types_pkg::*;
+//   import rv32m_pkg::*;
+//   import alu_types_pkg::*;
+//   import machine_mode_types_1_11_pkg::*;
 
-//floating point signals
-  logic [4:0] f_reg_rs1, f_reg_rs2, f_reg_rd;
-  logic [2:0] f_wsel;
-  logic f_wen, fsw;
+//   word_t port_a;
+//   word_t port_b;
+//   word_t reg_file_wdata;
+//   word_t store_wdata;
+//   word_t rs1_data;
+//   word_t rs2_data;
+//   word_t br_imm_sb;
+//   word_t j_base;
+//   word_t j_offset;
+//   word_t pc;
+//   word_t pc4;
+//   word_t csr_imm_value;
+//   word_t instr;
+//   word_t imm_UJ_ext;
+//   word_t imm_U;
+//   logic [4:0] reg_rs1;
+//   logic [4:0] reg_rs2;
+//   logic [4:0] reg_rd;
+//   aluop_t aluop;
+//   load_t load_type;
+//   branch_t br_branch_type;
+//   opcode_t opcode;
+//   csr_addr_t csr_addr;
+//   scalar_fu_t sfu_type;
+//   sign_type_t sign_type;
+//   logic [11:0] imm_I;
+//   logic [11:0] imm_S;
+//   logic [11:0] funct12;
+//   logic [12:0] imm_SB;
+//   logic [3:0] byte_en_temp;
+//   w_src_t w_src;
+//   logic [2:0] funct3;
+//   logic [1:0] alu_a_sel;
+//   logic [1:0] alu_b_sel;
+//   logic wen;
+//   logic dwen;
+//   logic dren;
+//   logic jump_instr;
+//   logic branch_instr;
+//   logic prediction;
+//   logic halt_instr;
+//   logic csr_instr;
+//   logic lui_instr;
+//   logic j_sel;
+//   logic ifence;
+//   logic csr_swap;
+//   logic csr_set;
+//   logic csr_clr;
+//   logic csr_imm;
+//   logic illegal_insn;
+//   logic ecall_insn;
+//   logic ret_insn;
+//   logic breakpoint;
+//   logic token;
+//   logic mal_insn;
+//   logic fault_insn;
+//   logic div_type;
+//   logic instr_30;
+//   logic wfi;
+//   divide_struct_t      divide;
+//   multiply_struct_t    multiply;
+//   loadstore_struct_t   loadstore;
+//   arith_struct_t       arith;
+//   jump_struct_t        JUMP_STRUCT;
+//   branch_struct_t      BRANCH_STRUCT;
+//   csr_struct_t         CSR_STRUCT;
+//   exception_struct_t   EXCEPTION_STRUCT;
+//   logic high_low_sel;
 
+//   modport decode (
+//     output port_a, port_b, reg_file_wdata, store_wdata, rs1_data, rs2_data, 
+//           br_imm_sb, j_base, j_offset, pc, pc4, csr_imm_value, 
+//           instr, imm_UJ_ext, imm_U, reg_rs1, reg_rs2, reg_rd, 
+//           aluop, load_type, br_branch_type, opcode, csr_addr, sfu_type, 
+//           sign_type, imm_I, imm_S, funct12, imm_SB, byte_en_temp, 
+//           w_src, funct3, alu_a_sel, alu_b_sel, wen, dwen, 
+//           dren, jump_instr, branch_instr, prediction, halt_instr, csr_instr, 
+//           lui_instr, j_sel, ifence, csr_swap, csr_set, csr_clr, 
+//           csr_imm, illegal_insn, ecall_insn, ret_insn, breakpoint, token, 
+//           mal_insn, fault_insn, div_type, instr_30, wfi, divide, 
+//           multiply, loadstore
+//   );
 
-  f_funct7_t f_funct7;
-  word_t f_rs1_data, f_rs2_data;
-  word_t f_wdata;
-  logic [2:0] frm_out;
+//   modport execute (
+//     input port_a, port_b, reg_file_wdata, store_wdata, rs1_data, rs2_data, 
+//           br_imm_sb, j_base, j_offset, pc, pc4, csr_imm_value, 
+//           instr, imm_UJ_ext, imm_U, reg_rs1, reg_rs2, reg_rd, 
+//           aluop, load_type, br_branch_type, opcode, csr_addr, sfu_type, 
+//           sign_type, imm_I, imm_S, funct12, imm_SB, byte_en_temp, 
+//           w_src, funct3, alu_a_sel, alu_b_sel, wen, dwen, 
+//           dren, jump_instr, branch_instr, prediction, halt_instr, csr_instr, 
+//           lui_instr, j_sel, ifence, csr_swap, csr_set, csr_clr, 
+//           csr_imm, illegal_insn, ecall_insn, ret_insn, breakpoint, token, 
+//           mal_insn, fault_insn, high_low_sel, div_type, instr_30, wfi, 
+//           divide, multiply, loadstore
+//   );
 
-  modport decode(
-      output port_a, port_b, aluop, 
-             reg_rs1, reg_rs2, reg_rd, alu_a_sel, alu_b_sel,
-             reg_file_wdata, w_sel, wen,
-             dwen, dren, store_wdata, load_type, byte_en_temp,
-             jump_instr, j_base, j_offset, j_sel,
-             rs1_data, rs2_data, br_imm_sb, br_branch_type,
-             branch_instr, prediction, pc, pc4,
-             ifence,opcode,halt_instr, lui_instr, 
-             csr_instr, csr_swap, csr_set, csr_clr, csr_imm, 
-             csr_addr, csr_imm_value, instr,
-             illegal_insn,ecall_insn, breakpoint, ret_insn, token,
-             mal_insn, fault_insn,
-             funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, wfi,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_funct7, f_rs1_data, f_rs2_data, f_wdata, frm_out, fsw
-  );
+// endinterface
 
-  modport execute(
-      input  port_a, port_b, aluop,  
-             reg_rs1, reg_rs2, reg_rd, alu_a_sel, alu_b_sel,
-             reg_file_wdata, w_sel, wen,
-             dwen, dren, store_wdata, load_type, byte_en_temp,
-             jump_instr, j_base, j_offset, j_sel,
-             rs1_data, rs2_data, br_imm_sb, br_branch_type,
-             branch_instr, prediction,pc, pc4,
-             ifence,opcode,
-             halt_instr, lui_instr,
-             csr_instr, csr_swap, csr_set, csr_clr, csr_imm, 
-             csr_addr, csr_imm_value, instr,
-             illegal_insn,ecall_insn, breakpoint, ret_insn, token,
-             mal_insn, fault_insn, 
-             funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, wfi,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_funct7, f_rs1_data, f_rs2_data, f_wdata, frm_out, fsw
-  );
-
-endinterface
-`endif
+// `endif //PIPE5_DECODE_EXECUTE_IF_VH
diff --git a/source_code/include/pipe5_execute_commit_if.vh b/source_code/include/pipe5_execute_commit_if.vh
new file mode 100644
index 0000000..f0b9b49
--- /dev/null
+++ b/source_code/include/pipe5_execute_commit_if.vh
@@ -0,0 +1,87 @@
+`ifndef PIPE5_EXECUTE_COMMIT_IF_VH
+`define PIPE5_EXECUTE_COMMIT_IF_VH
+
+interface pipe5_execute_commit_if();
+
+  import rv32i_types_pkg::*;
+
+  logic halt_instr;
+  logic csr_instr;
+  logic instr_30;
+  logic wen_au;
+  logic wen_mu;
+  logic wen_du;
+  logic wen_ls;
+  logic busy_au;
+  logic busy_mu;
+  logic busy_du;
+  logic busy_ls;
+  logic dren;
+  logic mal_addr;
+  logic dwen;
+  logic breakpoint;
+  logic ecall_insn;
+  logic ret_insn;
+  logic illegal_insn;
+  logic invalid_csr;
+  logic mal_insn;
+  logic fault_insn;
+  logic token;
+  logic intr_seen;
+  logic jump_instr;
+  logic jump_addr;
+  logic branch_instr;
+  logic prediction;
+  logic branch_taken;
+  logic [11:0] funct12;
+  logic [11:0] imm_I;
+  logic [11:0] imm_S;
+  logic [12:0] imm_SB;
+  logic [2:0] w_sel;
+  logic [2:0] funct3;
+  logic [4:0] rs1;
+  logic [4:0] rs2;
+  logic [4:0] reg_rd_au;
+  logic [4:0] reg_rd_mu;
+  logic [4:0] reg_rd_du;
+  logic [4:0] reg_rd_ls;
+  opcode_t opcode;
+  word_t csr_rdata;
+  word_t imm_UJ_ext;
+  word_t imm_U;
+  word_t instr;
+  word_t wdata_au;
+  word_t wdata_mu;
+  word_t wdata_du;
+  word_t wdata_ls;
+  word_t memory_addr;
+  word_t pc;
+  word_t br_resolved_addr;
+
+  modport execute (
+    output halt_instr, csr_instr, instr_30, wen_au, wen_mu, wen_du, 
+           wen_ls, busy_au, busy_mu, busy_du, busy_ls, dren, 
+           mal_addr, dwen, breakpoint, ecall_insn, ret_insn, illegal_insn, 
+           invalid_csr, mal_insn, fault_insn, token, intr_seen, jump_instr, 
+           jump_addr, branch_instr, prediction, branch_taken, funct12, imm_I, 
+           imm_S, imm_SB, w_sel, funct3, rs1, rs2, 
+           reg_rd_au, reg_rd_mu, reg_rd_du, reg_rd_ls, opcode, csr_rdata, 
+           imm_UJ_ext, imm_U, instr, wdata_au, wdata_mu, wdata_du, 
+           wdata_ls, memory_addr, pc, br_resolved_addr
+  );
+
+  modport commit (
+    input halt_instr, csr_instr, instr_30, wen_au, wen_mu, wen_du, 
+           wen_ls, busy_au, busy_mu, busy_du, busy_ls, dren, 
+           mal_addr, dwen, breakpoint, ecall_insn, ret_insn, illegal_insn, 
+           invalid_csr, mal_insn, fault_insn, token, intr_seen, jump_instr, 
+           jump_addr, branch_instr, prediction, branch_taken, 
+           funct12, imm_I, imm_S, imm_SB, w_sel, funct3, 
+           rs1, rs2, reg_rd_au, reg_rd_mu, reg_rd_du, reg_rd_ls, 
+           opcode, csr_rdata, imm_UJ_ext, imm_U, instr, wdata_au, 
+           wdata_mu, wdata_du, wdata_ls, memory_addr, pc, br_resolved_addr
+  );
+
+endinterface
+
+`endif //PIPE5_EXECUTE_COMMIT_IF_VH
diff --git a/source_code/include/pipe5_execute_mem_if.vh b/source_code/include/pipe5_execute_mem_if.vh
index 0dd5336..4bb5b19 100644
--- a/source_code/include/pipe5_execute_mem_if.vh
+++ b/source_code/include/pipe5_execute_mem_if.vh
@@ -43,7 +43,7 @@ interface pipe5_execute_mem_if;
   opcode_t     opcode;
   csr_addr_t   csr_addr;
   logic [3:0]  byte_en_temp;
-  logic [2:0]  w_sel;
+  w_src_t w_src;
   logic        wen;
   logic        dwen;
   logic        dren;
@@ -71,17 +71,10 @@ interface pipe5_execute_mem_if;
   logic        wfi;
   logic        prediction;
 
-  //floating point signals
-  logic [4:0] f_reg_rs1, f_reg_rs2, f_reg_rd, fpu_flags;
-  logic [2:0] f_wsel;
-  logic f_wen, fsw;
 
-  word_t f_wdata, f_store_wdata, fpu_out;
-
-  logic [6:0] f_funct_7;
 
   modport execute(
-     output  reg_file_wdata, w_sel, wen, alu_port_out, pc, pc4, reg_rd,
+     output  reg_file_wdata, w_src, wen, alu_port_out, pc, pc4, reg_rd,
              dwen, dren, store_wdata, load_type, memory_addr,byte_en_temp,
              jump_instr,lui_instr,jump_addr, 
              branch_instr, prediction, br_resolved_addr, branch_taken,
@@ -92,13 +85,11 @@ interface pipe5_execute_mem_if;
              illegal_insn,ecall_insn, breakpoint, ret_insn,token,
              mal_insn, fault_insn, intr_seen,
              funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, rs1, rs2, wfi,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_wdata, f_store_wdata, fpu_out, fpu_flags, fsw, f_funct_7
+             imm_SB, imm_U, instr_30, rs1, rs2, wfi
   );
 
   modport memory(
-     input   reg_file_wdata, w_sel, wen, alu_port_out, pc, pc4, reg_rd,
+     input   reg_file_wdata, w_src, wen, alu_port_out, pc, pc4, reg_rd,
              dwen, dren, store_wdata, load_type, memory_addr, byte_en_temp,
              jump_instr, lui_instr, jump_addr,
              branch_instr, prediction,br_resolved_addr, branch_taken,
@@ -109,9 +100,7 @@ interface pipe5_execute_mem_if;
              illegal_insn,ecall_insn, breakpoint, ret_insn, token,
              mal_insn, fault_insn,intr_seen,
              funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, rs1, rs2, wfi,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_wdata, f_store_wdata, fpu_out, fpu_flags, fsw, f_funct_7
+             imm_SB, imm_U, instr_30, rs1, rs2, wfi
   );
 
 endinterface
diff --git a/source_code/include/pipe5_fetch2_decode_if.vh b/source_code/include/pipe5_fetch2_decode_if.vh
index bdf3e9b..c020beb 100644
--- a/source_code/include/pipe5_fetch2_decode_if.vh
+++ b/source_code/include/pipe5_fetch2_decode_if.vh
@@ -35,16 +35,15 @@ interface pipe5_fetch2_decode_if;
   logic         mal_insn;
   logic         fault_insn;
   logic         prediction;
-  logic [2:0]   frm_csr;
 
   modport fetch(
     output  pc, token, pc4, instr, prediction,
-            mal_insn, fault_insn, frm_csr
+            mal_insn, fault_insn
   );
 
   modport decode(
     input    pc, token, pc4, instr, prediction,
-             mal_insn, fault_insn, frm_csr
+             mal_insn, fault_insn
   );
 
 endinterface
diff --git a/source_code/include/pipe5_forwarding_unit_if.vh b/source_code/include/pipe5_forwarding_unit_if.vh
index b2ea9a7..a7a62b2 100644
--- a/source_code/include/pipe5_forwarding_unit_if.vh
+++ b/source_code/include/pipe5_forwarding_unit_if.vh
@@ -5,31 +5,26 @@
 interface pipe5_forwarding_unit_if();
     import pipe5_types_pkg::*;
     import rv32i_types_pkg::*;
-    import rv32f_types_pkg::*;
 
     bypass_t bypass_rs1, bypass_rs2;
     word_t rs1_ex, rs2_ex, rd_mem, rd_wb;
     word_t rd_data_mem, rd_data_wb;
     logic WEN_mem, WEN_wb;
 
-    bypass_t bypass_f_rs1, bypass_f_rs2;
-    word_t f_rs1_ex, f_rs2_ex, f_rd_mem, f_rd_wb;
-    word_t f_rd_data_mem, f_rd_data_wb;
-    logic f_WEN_mem, f_WEN_wb;
 
     modport forwarding_unit (
-        input rs1_ex, rs2_ex, rd_mem, rd_wb, WEN_mem, WEN_wb, f_rs1_ex, f_rs2_ex, f_rd_mem, f_rd_wb, f_WEN_mem, f_WEN_wb,
-        output bypass_rs1, bypass_rs2, bypass_f_rs1, bypass_f_rs2
+        input rs1_ex, rs2_ex, rd_mem, rd_wb, WEN_mem, WEN_wb,
+        output bypass_rs1, bypass_rs2
     );
     modport execute (
-        output rs1_ex, rs2_ex, f_rs1_ex, f_rs2_ex,
-        input bypass_rs1, bypass_rs2, bypass_f_rs1, bypass_f_rs2, rd_data_mem, f_rd_data_mem, rd_data_wb, f_rd_data_wb
+        output rs1_ex, rs2_ex,
+        input bypass_rs1, bypass_rs2, rd_data_mem, rd_data_wb
     );
     modport memory (
-        output rd_mem, WEN_mem, rd_data_mem, f_rd_mem, f_WEN_mem, f_rd_data_mem
+        output rd_mem, WEN_mem, rd_data_mem
     );
     modport writeback (
-        output rd_wb, WEN_wb, rd_data_wb, f_rd_wb, f_WEN_wb, f_rd_data_wb
+        output rd_wb, WEN_wb, rd_data_wb
     );
 
 endinterface
diff --git a/source_code/include/pipe5_hazard_unit_if.vh b/source_code/include/pipe5_hazard_unit_if.vh
index 38dc7e5..3c4734c 100644
--- a/source_code/include/pipe5_hazard_unit_if.vh
+++ b/source_code/include/pipe5_hazard_unit_if.vh
@@ -1,72 +1,121 @@
-
 `ifndef PIPE5_HAZARD_UNIT_IF_VH
 `define PIPE5_HAZARD_UNIT_IF_VH
 
 interface pipe5_hazard_unit_if();
 
-    import rv32i_types_pkg::word_t;
-    
-    logic pc_en, i_mem_busy, iren, load;
-    logic d_mem_busy, dren, dwen, dmem_access;
-    logic npc_sel, if_id_flush, id_ex_flush, ex_mem_flush;
-    logic jump, branch, mispredict;
-    logic if_if_flush;
-    logic [31:0] brj_addr, ifence_pc, csr_pc;
-    logic [4:0] reg_rd, reg_rs1, reg_rs2;
-    logic halt;
-    logic stall;
-    logic dflushed, iflushed, ifence, ifence_flush;
-    logic csr, csr_flush;
-    logic illegal_insn, fault_l, mal_l, fault_s, mal_s, breakpoin;
-    logic env_m, ret, token, breakpoint; 
-    logic mal_insn, fault_insn;
-    word_t badaddr_d, badaddr_i, epc;
-    word_t priv_pc;
-    logic  insert_priv_pc;
-    logic  intr_taken, intr;
-    logic f_stall;
+  import rv32i_types_pkg::word_t;
+
+  logic pc_en;
+  logic id_ex_flush;
+  logic stall_au;
+  logic stall_mu;
+  logic stall_du;
+  logic stall_ls;
+  logic stall_all;
+  logic intr;
+  logic halt;
+  logic dflushed;
+  logic iflushed;
+  word_t ifence_pc;
+  logic ex_mem_flush;
+  logic d_mem_busy;
+  logic dmem_access;
+  logic intr_taken;
+  logic load;
+  logic stall_ex;
+  logic jump;
+  logic branch;
+  logic mispredict;
+  logic csr;
+  logic illegal_insn;
+  logic breakpoint;
+  logic env_m;
+  logic ret;
+  logic token;
+  logic busy_au;
+  logic busy_mu;
+  logic busy_du;
+  logic busy_ls;
+  logic [4:0] reg_rd;
+  word_t brj_addr;
+  word_t csr_pc;
+  word_t epc;
+  logic npc_sel;
+  logic stall;
+  logic ifence_flush;
+  logic csr_flush;
+  logic insert_priv_pc;
+  word_t priv_pc;
+  logic if_id_flush;
+  logic iren;
+  logic i_mem_busy;
+  logic dren;
+  logic dwen;
+  logic ifence;
+  logic fault_s;
+  logic fault_l;
+  logic mal_s;
+  logic mal_l;
+  logic mal_insn;
+  logic fault_insn;
+  logic div_e;
+  logic mul_e;
+  logic busy_all;
+  word_t badaddr_d;
+  word_t badaddr_i;
+  logic [4:0] reg_rs1;
+  logic [4:0] reg_rs2;
+  logic if_if_flush;
+
+  modport decode (
+    input pc_en, id_ex_flush, stall_au, stall_mu, stall_du, stall_ls, 
+           stall_all, intr, 
+    output halt, dflushed, iflushed, ifence_pc
+  );
+
+  modport execute (
+    input pc_en, ex_mem_flush, d_mem_busy, dmem_access, intr, intr_taken, 
+    output load, stall_ex, jump, branch, mispredict, csr, 
+           illegal_insn, breakpoint, env_m, ret, token, busy_au, 
+           busy_mu, busy_du, busy_ls, reg_rd, brj_addr, csr_pc, 
+           epc
+  );
 
-    
-    modport hazard_unit(
-        input i_mem_busy,dren, dwen, d_mem_busy,
-              brj_addr, jump, branch, mispredict,
-              reg_rs1, reg_rs2, reg_rd,
-              load,
-              halt, 
-              dflushed, iflushed, ifence,
-              illegal_insn, fault_s, fault_l, mal_s, mal_l, breakpoint, env_m,
-              badaddr_d, badaddr_i, epc, token, mal_insn, fault_insn, ret,intr_taken, f_stall,
+  modport fetch1 (
+    input pc_en, npc_sel, stall, halt, ifence_flush, csr_flush, 
+           insert_priv_pc, intr, intr_taken, brj_addr, ifence_pc, csr_pc, 
+           priv_pc
+  );
 
-       output pc_en, if_if_flush, if_id_flush, id_ex_flush,csr, iren,
-              ex_mem_flush, npc_sel, dmem_access, stall, ifence_flush, csr_flush,
-              priv_pc, insert_priv_pc, intr
-    );
-    modport fetch1(
-        input pc_en, npc_sel, brj_addr, stall, halt, ifence_flush, ifence_pc,
-              csr_flush, csr_pc, insert_priv_pc, priv_pc, intr, intr_taken
-    );
-    modport fetch2(
-        output i_mem_busy, stall, 
-        input pc_en, if_id_flush, iren, intr
-    );
-    modport decode(
-        input pc_en, id_ex_flush, stall,intr,
-        output halt, reg_rs1, reg_rs2
-    );
-    modport execute(
-        input pc_en, ex_mem_flush, d_mem_busy, dmem_access,intr,intr_taken, 
-        output reg_rd, load, f_stall
-    );
-    modport memory(
-        input pc_en,intr,
-        output brj_addr, jump, branch, mispredict, dren, dwen, d_mem_busy,
-               dflushed, iflushed, ifence, ifence_pc, csr, csr_pc,
-               illegal_insn, fault_l, mal_l, fault_s, mal_s, breakpoint,
-               env_m, ret, badaddr_d, badaddr_i, epc, token,
-               mal_insn, fault_insn, intr_taken
-               
-    );
+  modport fetch2 (
+    input pc_en, if_id_flush, iren, intr, 
+    output i_mem_busy, stall
+  );
 
+  modport hazard_unit (
+    input i_mem_busy, dren, dwen, d_mem_busy, jump, branch, 
+           mispredict, load, halt, ifence, illegal_insn, fault_s, 
+           fault_l, mal_s, mal_l, breakpoint, env_m, token, 
+           mal_insn, fault_insn, ret, intr_taken, stall_ex, div_e, 
+           mul_e, busy_au, busy_mu, busy_du, busy_ls, busy_all, 
+           badaddr_d, badaddr_i, epc, reg_rs1, reg_rs2, reg_rd, 
+    output pc_en, if_if_flush, if_id_flush, id_ex_flush, csr, iren, 
+           ex_mem_flush, npc_sel, dmem_access, stall, ifence_flush, csr_flush, 
+           insert_priv_pc, intr, stall_au, stall_mu, stall_du, stall_ls, 
+           stall_all, priv_pc
+  );
+
+  modport memory (
+    input pc_en, intr, 
+    output dren, dwen, d_mem_busy
+  );
+
+  modport commit (
+    output fault_l, mal_l, fault_s, mal_s, mal_insn, fault_insn, 
+           intr_taken, breakpoint, env_m, ret, illegal_insn, token, 
+           epc, badaddr_d, badaddr_i
+  );
 
 endinterface
-`endif
+
+`endif //PIPE5_HAZARD_UNIT_IF_VH
\ No newline at end of file
diff --git a/source_code/include/pipe5_mem_writeback_if.vh b/source_code/include/pipe5_mem_writeback_if.vh
index 660b371..aab3909 100644
--- a/source_code/include/pipe5_mem_writeback_if.vh
+++ b/source_code/include/pipe5_mem_writeback_if.vh
@@ -34,7 +34,7 @@ interface pipe5_mem_writeback_if;
   word_t       alu_port_out;
   word_t       csr_rdata;
   opcode_t     opcode;
-  logic [2:0]  w_sel;
+  w_src_t w_src;
   logic        wen;
   logic        halt_instr;
   logic        csr_instr;
@@ -48,35 +48,23 @@ interface pipe5_mem_writeback_if;
   logic  [4:0] rs1, rs2, reg_rd;
   word_t       instr;
 
-  //floating point signals
-  logic [4:0] f_reg_rs1, f_reg_rs2, f_reg_rd;
-  logic [2:0] f_wsel;
-  logic f_wen;
-
-  logic [4:0] fpu_flags;
-  word_t f_wdata, fpu_out;
-
 
   modport memory(
-     output  reg_file_wdata, w_sel, wen, reg_rd, alu_port_out, dload_ext,
+     output  reg_file_wdata, w_src, wen, reg_rd, alu_port_out, dload_ext,
              pc, pc4,opcode,
              halt_instr, 
              csr_instr, csr_rdata,
              funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, rs1, rs2, instr,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_wdata, fpu_out, fpu_flags
+             imm_SB, imm_U, instr_30, rs1, rs2, instr
   );
 
   modport writeback(
-     input   reg_file_wdata, w_sel, wen, reg_rd, alu_port_out, dload_ext,
+     input   reg_file_wdata, w_src, wen, reg_rd, alu_port_out, dload_ext,
              pc, pc4,opcode,
              halt_instr, 
              csr_instr, csr_rdata,
              funct3, funct12, imm_I, imm_S, imm_UJ_ext,
-             imm_SB, imm_U, instr_30, rs1, rs2, instr,
-             f_reg_rs1, f_reg_rs2, f_reg_rd, f_wsel, f_wen,
-             f_wdata, fpu_out, fpu_flags
+             imm_SB, imm_U, instr_30, rs1, rs2, instr
   );
 
 endinterface
diff --git a/source_code/include/priv_1_11_internal_if.vh b/source_code/include/priv_1_11_internal_if.vh
index 70e46e9..8eb94b9 100644
--- a/source_code/include/priv_1_11_internal_if.vh
+++ b/source_code/include/priv_1_11_internal_if.vh
@@ -79,16 +79,21 @@ interface priv_1_11_internal_if; // also labeled as prv_intern_if in most module
   mtvec_t     mtvec;
   mie_t       mie;
 
-  fcsr_t      fcsr;
   csr_addr_t addr; // 12-bit address for CSR instructions
 
+  logic vector_csr_instr;
+  vstart_t vstart_next, vstart;
+  vl_t     vl_next, vl;
+  vlenb_t  vlenb_next, vlenb;
+  vtype_t  vtype_next, vtype;
 
   modport csr (
     input mip_rup, mtval_rup, mcause_rup, mepc_rup, mstatus_rup,
       mip_next, mtval_next, mcause_next, mepc_next, mstatus_next,
       swap, clr, set, wdata, addr, valid_write, instr_retired, 
-    output mtvec, mepc, mie, mip, mcause, mstatus,
-      rdata, invalid_csr, fcsr
+      vstart_next, vl_next, vlenb_next, vtype_next, vector_csr_instr,
+    output mtvec, mepc, mie, mip, mcause, mstatus, vstart, vl, vlenb, vtype,
+      rdata, invalid_csr
   );
 
   modport prv_control (
diff --git a/source_code/include/prv_pipeline_if.vh b/source_code/include/prv_pipeline_if.vh
index bf5091d..84dbaa6 100644
--- a/source_code/include/prv_pipeline_if.vh
+++ b/source_code/include/prv_pipeline_if.vh
@@ -28,60 +28,78 @@
 `ifndef PRV_PIPELINE_IF_VH
 `define PRV_PIPELINE_IF_VH
 
-`include "component_selection_defines.vh"
-
 interface prv_pipeline_if();
+
   import machine_mode_types_1_11_pkg::*;
   import rv32i_types_pkg::*;
 
-  // exception signals
-  logic fault_insn, mal_insn, illegal_insn, fault_l, mal_l, fault_s, mal_s,
-        breakpoint, env_m, ret;
-
-  // interrupt signals
-  logic timer_int, soft_int, ext_int;
-
-  // exception / interrupt control
-  word_t epc, priv_pc, badaddr;
-  logic insert_pc, intr, pipe_clear;
-  word_t [3:0] xtvec, xepc_r;
-
-  // csr rw
-  logic       swap, clr, set;
-  logic       invalid_csr, valid_write;
-  csr_addr_t  addr;
-  word_t      rdata, wdata;
-
-  fcsr_t fcsr;
-
-  // performance signals
-  logic wb_enable, instr;
-
-  // RISC-MGMT 
+  parameter NUM_EXTENSIONS = 2;
+
+  logic insert_pc;
+  logic intr;
+  word_t priv_pc;
+  logic pipe_clear;
+  logic ret;
+  logic fault_insn;
+  logic mal_insn;
+  logic illegal_insn;
+  logic fault_l;
+  logic mal_l;
+  logic fault_s;
+  logic mal_s;
+  logic breakpoint;
+  logic env_m;
+  logic wb_enable;
   logic ex_rmgmt;
-  logic [$clog2(`NUM_EXTENSIONS)-1:0] ex_rmgmt_cause;
+  logic [$clog2(NUM_EXTENSIONS)-1:0] ex_rmgmt_cause;
+  word_t epc;
+  word_t badaddr;
+  logic invalid_csr;
+  word_t rdata;
+  csr_addr_t addr;
+  logic swap;
+  logic clr;
+  logic set;
+  logic valid_write;
+  logic instr;
+  word_t wdata;
+
+  // vector extension signals
+  logic vector_csr_instr;
+  logic [2:0] lmul;
+  logic [2:0] sew;
+  logic vill;
+  logic [VL_WIDTH:0] vl, vstart, vlenb; //[1, 128]
+  logic [7:0] vtype;
 
   modport hazard (
-    input priv_pc, insert_pc, intr,
-    output pipe_clear, ret, epc, fault_insn, mal_insn, 
-            illegal_insn, fault_l, mal_l, fault_s, mal_s,
-            breakpoint, env_m, badaddr, wb_enable, 
-            ex_rmgmt, ex_rmgmt_cause
+    input insert_pc, intr, priv_pc, 
+    output pipe_clear, ret, fault_insn, mal_insn, illegal_insn, fault_l, 
+           mal_l, fault_s, mal_s, breakpoint, env_m, wb_enable, 
+           ex_rmgmt, ex_rmgmt_cause, epc, badaddr
   );
 
   modport pipe (
-    output swap, clr, set, wdata, addr, valid_write, instr,
-    input  rdata, invalid_csr, fcsr
+    input invalid_csr, rdata, 
+    output addr, swap, clr, set, valid_write,
+           wdata, vector_csr_instr
   );
 
+  modport vdecode (
+    input vl, vstart, vlenb, vtype 
+  );
 
   modport priv_block (
-    input pipe_clear, ret, epc, fault_insn, mal_insn,
-          illegal_insn, fault_l, mal_l, fault_s, mal_s,
-          breakpoint, env_m, badaddr, swap, clr, set,
-          wdata, addr, valid_write, wb_enable, instr,
-          ex_rmgmt, ex_rmgmt_cause,
-    output priv_pc, insert_pc, intr, rdata, invalid_csr, fcsr
+    input addr, pipe_clear, ret, fault_insn, mal_insn, illegal_insn, 
+           fault_l, mal_l, fault_s, mal_s, breakpoint, env_m, 
+           swap, clr, set, valid_write, wb_enable, instr, 
+           ex_rmgmt, ex_rmgmt_cause, epc, badaddr, wdata, 
+           vl, vstart, vlenb, vtype, vector_csr_instr,
+    output insert_pc, intr, invalid_csr, priv_pc, rdata
+  );
+
+  modport cb (
+    output instr
   );
 
 endinterface
diff --git a/source_code/include/rv32f_reg_file_if.vh b/source_code/include/rv32f_reg_file_if.vh
deleted file mode 100644
index 8875c82..0000000
--- a/source_code/include/rv32f_reg_file_if.vh
+++ /dev/null
@@ -1,37 +0,0 @@
-`ifndef RV32F_REG_FILE_IF_VH
-`define RV32F_REG_FILE_IF_VH
-
-interface rv32f_reg_file_if();
-    
-    import rv32i_types_pkg::*;
-    import rv32f_types_pkg::*;
-
-    //write and read data
-    word_t        f_wdata, f_rs1_data, f_rs2_data;
-
-    //clock and reset
-    logic clk, n_rst;
-
-    //register select signals
-    logic   [4:0] f_rs1, f_rs2, f_rd; 
-    logic [2:0] f_frm_in, f_frm; //rounding mode input and outputs
-    logic [4:0] f_flags; //flag outputs
-
-    logic f_wen;
-    modport decode (
-        output f_rs1, f_rs2, f_frm_in,
-        input f_rs1_data, f_rs2_data, f_frm
-    );
-
-    modport rf (
-        input clk, n_rst, f_wdata, f_rs1, f_rs2, f_rd, f_wen, f_flags, f_frm_in, 
-        output f_rs1_data, f_rs2_data, f_frm
-    );
-
-    modport writeback (
-        output f_wdata, f_flags, f_wen, f_rd
-    );
-
-endinterface
-
-`endif
diff --git a/source_code/include/rv32i_reg_file_if.vh b/source_code/include/rv32i_reg_file_if.vh
index f0936f6..ac20ed8 100644
--- a/source_code/include/rv32i_reg_file_if.vh
+++ b/source_code/include/rv32i_reg_file_if.vh
@@ -30,22 +30,27 @@ interface rv32i_reg_file_if();
   import rv32i_types_pkg::*;
 
   word_t        w_data, rs1_data, rs2_data;
-  logic   [4:0] rs1, rs2, rd;
+  logic   [4:0] rs1, rs2, rd, rd_decode;
   logic         wen;
+  logic         rden;
+  logic         rs1_busy;
+  logic         rs2_busy;
+  logic         rd_busy;
+  logic         clear_status;
 
   modport rf (
-    input w_data, rs1, rs2, rd, wen,
-    output rs1_data, rs2_data
+    input w_data, rs1, rs2, rd, wen, rden, rd_decode,
+    output rs1_data, rs2_data, rs1_busy, rs2_busy, rd_busy, clear_status
   );
   
   modport decode (
-    output  rs1, rs2,
-    input   rs1_data, rs2_data
+    output  rs1, rs2, rden, rd_decode, 
+    input   rs1_data, rs2_data, rs1_busy, rs2_busy, rd_busy, clear_status
   );
 
   modport writeback (
     input w_data, rd, wen
-  );
+  ); 
 
 endinterface
 
diff --git a/source_code/include/sparce_pipeline_if.vh b/source_code/include/sparce_pipeline_if.vh
index 7c021cd..bf81d3f 100644
--- a/source_code/include/sparce_pipeline_if.vh
+++ b/source_code/include/sparce_pipeline_if.vh
@@ -45,7 +45,7 @@ interface sparce_pipeline_if;
   );
 
   modport pipe_fetch1 (
-    input sparce_target, skipping,
+    input sparce_target, skipping
   );
 
   modport pipe_fetch2 (
diff --git a/source_code/irun.history b/source_code/irun.history
deleted file mode 100644
index d0fc75d..0000000
--- a/source_code/irun.history
+++ /dev/null
@@ -1,3 +0,0 @@
-s1(11Mar2022:19:01:20):  irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv 
-s2(11Mar2022:19:04:30):  irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv 
-s3(21Mar2022:19:05:41):  irun -access +rwc -timescale 1ns/100ps -shm packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32f_types_pkg.sv -incdir ./include rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv standard_core/alu.sv standard_core/branch_res.sv standard_core/control_unit.sv standard_core/dmem_extender.sv standard_core/endian_swapper.sv standard_core/jump_calc.sv standard_core/rv32i_reg_file.sv pipelines/pipe5/src/pipe5_fetch1_stage.sv pipelines/pipe5/src/pipe5_fetch2_stage.sv pipelines/pipe5/src/pipe5_decode_stage.sv pipelines/pipe5/src/pipe5_execute_stage.sv pipelines/pipe5/src/pipe5_memory_stage.sv pipelines/pipe5/src/pipe5_writeback_stage.sv pipelines/pipe5/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv pipelines/pipe5/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv caches/caches_wrapper.sv caches/pass_through/pass_through_cache.sv caches/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv ram/ram_sim_model.sv ram/ram_wrapper.sv branch_predictors/branch_predictor_wrapper.sv branch_predictors/nottaken_predictor/nottaken_predictor.sv caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv privs/priv_wrapper.sv privs/priv_1_11/priv_1_11_block.sv privs/priv_1_11/priv_1_11_control.sv privs/priv_1_11/priv_1_11_csr_rfile.sv privs/priv_1_11/priv_1_11_pipeline_control.sv trackers/branch_tracker.sv trackers/cpu_tracker.sv 
diff --git a/source_code/irun.log b/source_code/irun.log
deleted file mode 100644
index aeb8b8d..0000000
--- a/source_code/irun.log
+++ /dev/null
@@ -1,220 +0,0 @@
-irun(64): 15.20-s030: (c) Copyright 1995-2017 Cadence Design Systems, Inc.
-TOOL:	irun(64)	15.20-s030: Started on Mar 21, 2022 at 19:05:41 EDT
-irun
-	-access +rwc
-	-timescale 1ns/100ps
-	-shm
-	packages/rv32i_types_pkg.sv
-	packages/alu_types_pkg.sv
-	packages/machine_mode_types_1_11_pkg.sv
-	packages/machine_mode_types_pkg.sv
-	packages/pipe5_types_pkg.sv
-	packages/rv32f_types_pkg.sv
-	-incdir ./include
-	rv32f/rv32f_reg_file.sv
-	rv32f/FPU_top_level.sv
-	rv32f/clock_counter.sv
-	rv32f/ADD_step1.sv
-	rv32f/ADD_step2.sv
-	rv32f/ADD_step3.sv
-	rv32f/SUB_step1.sv
-	rv32f/SUB_step2.sv
-	rv32f/SUB_step3.sv
-	rv32f/MUL_step1.sv
-	rv32f/MUL_step2.sv
-	rv32f/mul_26b.sv
-	rv32f/determine_frac_status.sv
-	rv32f/int_comparesub.sv
-	rv32f/sign_determine.sv
-	rv32f/int_compare.sv
-	rv32f/right_shift.sv
-	rv32f/u_to_s.sv
-	rv32f/c_to_cp.sv
-	rv32f/sub_26b.sv
-	rv32f/s_to_u.sv
-	rv32f/adder_26b.sv
-	rv32f/adder_8b.sv
-	rv32f/left_shift.sv
-	rv32f/subtract.sv
-	rv32f/rounder_sub.sv
-	rv32f/rounder.sv
-	standard_core/alu.sv
-	standard_core/branch_res.sv
-	standard_core/control_unit.sv
-	standard_core/dmem_extender.sv
-	standard_core/endian_swapper.sv
-	standard_core/jump_calc.sv
-	standard_core/rv32i_reg_file.sv
-	pipelines/pipe5/src/pipe5_fetch1_stage.sv
-	pipelines/pipe5/src/pipe5_fetch2_stage.sv
-	pipelines/pipe5/src/pipe5_decode_stage.sv
-	pipelines/pipe5/src/pipe5_execute_stage.sv
-	pipelines/pipe5/src/pipe5_memory_stage.sv
-	pipelines/pipe5/src/pipe5_writeback_stage.sv
-	pipelines/pipe5/src/pipe5_forwarding_unit.sv
-	standard_core/RISCVBusiness.sv
-	pipelines/pipe5/src/pipe5_hazard_unit.sv
-	standard_core/memory_controller.sv
-	caches/caches_wrapper.sv
-	caches/pass_through/pass_through_cache.sv
-	caches/separate_caches.sv
-	tb/tb_RISCVBusiness_self_test.sv
-	ram/config_ram_wrapper.sv
-	ram/ram_sim_model.sv
-	ram/ram_wrapper.sv
-	branch_predictors/branch_predictor_wrapper.sv
-	branch_predictors/nottaken_predictor/nottaken_predictor.sv
-	caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv
-	bus_bridges/generic_nonpipeline.sv
-	privs/priv_wrapper.sv
-	privs/priv_1_11/priv_1_11_block.sv
-	privs/priv_1_11/priv_1_11_control.sv
-	privs/priv_1_11/priv_1_11_csr_rfile.sv
-	privs/priv_1_11/priv_1_11_pipeline_control.sv
-	trackers/branch_tracker.sv
-	trackers/cpu_tracker.sv
-Recompiling... reason: file './packages/rv32f_types_pkg.sv' is newer than expected.
-	expected: Sun Feb 20 19:12:19 2022
-	actual:   Fri Mar 18 19:23:05 2022
-file: packages/rv32f_types_pkg.sv
-	package worklib.rv32f_types_pkg:sv
-		errors: 0, warnings: 0
-file: rv32f/rv32f_reg_file.sv
-	interface worklib.rv32f_reg_file_if:vh
-		errors: 0, warnings: 0
-	module worklib.rv32f_reg_file:sv
-		errors: 0, warnings: 0
-file: standard_core/control_unit.sv
-	interface worklib.control_unit_if:vh
-		errors: 0, warnings: 0
-	module worklib.control_unit:sv
-		errors: 0, warnings: 0
-file: pipelines/pipe5/src/pipe5_decode_stage.sv
-	interface worklib.pipe5_decode_execute_if:vh
-		errors: 0, warnings: 0
-	module worklib.pipe5_decode_stage:sv
-		errors: 0, warnings: 0
-file: pipelines/pipe5/src/pipe5_execute_stage.sv
-	interface worklib.pipe5_execute_mem_if:vh
-		errors: 0, warnings: 0
-	module worklib.pipe5_execute_stage:sv
-		errors: 0, warnings: 0
-file: pipelines/pipe5/src/pipe5_memory_stage.sv
-	module worklib.pipe5_memory_stage:sv
-		errors: 0, warnings: 0
-file: pipelines/pipe5/src/pipe5_writeback_stage.sv
-	module worklib.pipe5_writeback_stage:sv
-		errors: 0, warnings: 0
-file: standard_core/RISCVBusiness.sv
-	module worklib.RISCVBusiness:sv
-		errors: 0, warnings: 0
-		Caching library 'worklib' ....... Done
-	Elaborating the design hierarchy:
-		Caching library 'worklib' ....... Done
-  RISCVBusiness DUT (
-                  |
-ncelab: *W,CUVWSP (./tb/tb_RISCVBusiness_self_test.sv,67|18): 1 output port was not connected:
-ncelab: (./standard_core/RISCVBusiness.sv,48): wfi
-
- 	int_comparesub cmp_exponent (
- 	                          |
-ncelab: *W,CUVWSP (./rv32f/FPU_top_level.sv,130|28): 1 output port was not connected:
-ncelab: (./rv32f/int_comparesub.sv,16): u_diff
-
-	Top level design units:
-		rv32i_types_pkg
-		machine_mode_types_pkg
-		$unit_0x2fcc3001
-		rv32f_types_pkg
-		machine_mode_types_1_11_pkg
-		alu_types_pkg
-		pipe5_types_pkg
-		risc_mgmt_if
-		decompressor_if
-		ahb_if
-		caches_wrapper
-		tb_RISCVBusiness_self_test
-  RISCVBusiness DUT (
-                  |
-ncelab: *W,CUVWSP (./tb/tb_RISCVBusiness_self_test.sv,67|18): 1 output port was not connected:
-ncelab: (./standard_core/RISCVBusiness.sv,48): wfi
-
- 	int_comparesub cmp_exponent (
- 	                          |
-ncelab: *W,CUVWSP (./rv32f/FPU_top_level.sv,130|28): 1 output port was not connected:
-ncelab: (./rv32f/int_comparesub.sv,16): u_diff
-
-ncelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
-			   .funct7(fpu_if.f_funct_7),
-			                          |
-ncelab: *W,CUVMPW (./rv32f/FPU_top_level.sv,178|29): port sizes differ in port connection (8/7).
-			   .funct7(fpu_if.f_funct_7),
-			                          |
-ncelab: *W,CUVMPW (./rv32f/FPU_top_level.sv,190|29): port sizes differ in port connection (8/7).
-.imm_UJ(mem_wb_if.imm_UJ_ext), 
-                           |
-ncelab: *W,CUVMPW (./INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva,18|27): port sizes differ in port connection (32/21).
-    .addr_in(word_addr),
-                     |
-ncelab: *W,CUVMPW (./ram/ram_wrapper.sv,47|21): port sizes differ in port connection (30/13).
-        decode_execute_if.f_funct7                  <= 'h0;
-                                                         |
-ncelab: *W,ENUMERR (./pipelines/pipe5/src/pipe5_decode_stage.sv,233|57): This assignment is a violation of SystemVerilog strong typing rules for enumeration datatypes.
-            decode_execute_if.f_funct7                  <= 'h0;
-                                                             |
-ncelab: *W,ENUMERR (./pipelines/pipe5/src/pipe5_decode_stage.sv,300|61): This assignment is a violation of SystemVerilog strong typing rules for enumeration datatypes.
-	Building instance overlay tables: .................... Done
-	Generating native compiled code:
-		worklib.RISCVBusiness:sv <0x7a3d6cce>
-			streams:   5, words:  1787
-		worklib.branch_predictor_wrapper:sv <0x7a81eb10>
-			streams:   3, words:   384
-		worklib.control_unit:sv <0x04661075>
-			streams:  61, words: 37143
-		worklib.pipe5_decode_stage:sv <0x51f7abd2>
-			streams:  24, words: 34719
-		worklib.pipe5_execute_stage:sv <0x050d0b1f>
-			streams:  37, words: 47153
-		worklib.pipe5_memory_stage:sv <0x6fd411dd>
-			streams:  76, words: 45776
-		worklib.pipe5_writeback_stage:sv <0x307515d1>
-			streams:  24, words:  4371
-		worklib.rv32f_reg_file:sv <0x61dca17f>
-			streams:  10, words:  4655
-		worklib.tb_RISCVBusiness_self_test:sv <0x7689bbb5>
-			streams:  25, words: 27467
-	Building instance specific data structures.
-.wb_stall(wb_stall), 
-                 |
-ncelab: *W,CSINFI (./INCA_libs/irun.lnx8664.15.20.nc/.cdssvbind/cds_tmp_svbind_single_00003b1c_2e808960_1.sva,6|17): implicit wire has no fanin (tb_RISCVBusiness_self_test.DUT.writeback_stage.wb_stall).
-`line directed : file : ./tb/tb_RISCVBusiness_self_test.sv, line : 88
-	Loading native compiled code:     .................... Done
-	Design hierarchy summary:
-		                   Instances  Unique
-		Modules:                  73      64
-		Interfaces:               32      23
-		Verilog packages:          6       6
-		Registers:               995     964
-		Scalar wires:            402       -
-		Expanded wires:          192      15
-		Vectored wires:          390       -
-		Always blocks:           128     130
-		Initial blocks:            6       6
-		Final blocks:              2       2
-		Cont. assignments:       519     525
-		Pseudo assignments:      178     178
-		Compilation units:         1       1
-		Simulation timescale:  100ps
-	Writing initial simulation snapshot: worklib.risc_mgmt_if:vh
-Loading snapshot worklib.risc_mgmt_if:vh .................... Done
-ncsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
-ncsim> source /package/eda/cadence/INCISIVE152/tools/inca/files/ncsimrc
-ncsim> run
-  assign rdata = (^addr_ram !== 1'bx) && memory.exists(addr_ram) ? memory[addr_ram] : MEM_DEFAULT;
-                                                                        |
-ncsim: *W,RTSVAV (./ram/ram_sim_model.sv,172|72): SystemVerilog associative array index is invalid, it contains X/Z bits.
-SUCCESS
-Simulation complete via $finish(1) at time 120535 NS + 0
-./tb/tb_RISCVBusiness_self_test.sv:183     $finish;
-ncsim> exit
-TOOL:	irun(64)	15.20-s030: Exiting on Mar 21, 2022 at 19:05:45 EDT  (total: 00:00:04)
diff --git a/source_code/makefile b/source_code/makefile
index 26496e1..95525f6 100755
--- a/source_code/makefile
+++ b/source_code/makefile
@@ -14,11 +14,11 @@ PRIV_FILES := privs/priv_wrapper.sv  privs/priv_1_11/priv_1_11_block.sv  privs/p
 PIPE5FILES = $(PIPE5)/src/pipe5_fetch1_stage.sv $(PIPE5)/src/pipe5_fetch2_stage.sv $(PIPE5)/src/pipe5_decode_stage.sv $(PIPE5)/src/pipe5_execute_stage.sv $(PIPE5)/src/pipe5_memory_stage.sv $(PIPE5)/src/pipe5_writeback_stage.sv $(PIPE5)/src/pipe5_forwarding_unit.sv standard_core/RISCVBusiness.sv $(PIPE5)/src/pipe5_hazard_unit.sv standard_core/memory_controller.sv $(CACHES)/caches_wrapper.sv $(CACHES)/pass_through/pass_through_cache.sv $(CACHES)/separate_caches.sv tb/tb_RISCVBusiness_self_test.sv ram/config_ram_wrapper.sv  ram/ram_sim_model.sv ram/ram_wrapper.sv 
 #Header Files
 HEADER_FILES := -incdir ./include  
-PKG_FILES :=  packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv  packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv  packages/rv32f_types_pkg.sv
+PKG_FILES :=  packages/rv32i_types_pkg.sv packages/alu_types_pkg.sv packages/machine_mode_types_1_11_pkg.sv  packages/machine_mode_types_pkg.sv packages/pipe5_types_pkg.sv packages/rv32m_pkg.sv 
 STANDARD_CORE_FILES := $(STD_CORE)/alu.sv $(STD_CORE)/branch_res.sv $(STD_CORE)/control_unit.sv $(STD_CORE)/dmem_extender.sv $(STD_CORE)/endian_swapper.sv $(STD_CORE)/jump_calc.sv $(STD_CORE)/rv32i_reg_file.sv
 TRACKER_FILES := trackers/branch_tracker.sv trackers/cpu_tracker.sv
+RV32M_FILES := rv32m/divide_unit.sv rv32m/mul_csa.sv rv32m/mul_fa.sv rv32m/multiply_unit.sv rv32m/rv32v_divider.sv rv32m/rv32v_multiplier.sv
 EXTRAS := caches/direct_mapped_tpf/direct_mapped_tpf_cache.sv bus_bridges/generic_nonpipeline.sv 
-FPU_FILES:=rv32f/rv32f_reg_file.sv rv32f/FPU_top_level.sv rv32f/clock_counter.sv rv32f/ADD_step1.sv rv32f/ADD_step2.sv rv32f/ADD_step3.sv rv32f/SUB_step1.sv rv32f/SUB_step2.sv rv32f/SUB_step3.sv rv32f/MUL_step1.sv rv32f/MUL_step2.sv rv32f/mul_26b.sv rv32f/determine_frac_status.sv rv32f/int_comparesub.sv rv32f/sign_determine.sv rv32f/int_compare.sv rv32f/right_shift.sv rv32f/u_to_s.sv rv32f/c_to_cp.sv rv32f/sub_26b.sv rv32f/s_to_u.sv rv32f/adder_26b.sv rv32f/adder_8b.sv rv32f/left_shift.sv rv32f/subtract.sv rv32f/rounder_sub.sv rv32f/rounder.sv
 
 ##############################################################################
 # Usage Definition
@@ -84,6 +84,6 @@ print_vars:
 ##############################################################################
 
 source:
-	@irun  -access +rwc -timescale 1ns/100ps -shm  $(PKG_FILES) $(HEADER_FILES) $(FPU_FILES) $(STANDARD_CORE_FILES) $(PIPE5FILES) $(PREDICTOR_FILES) $(EXTRAS) $(PRIV_FILES) $(TRACKER_FILES)
+	@irun  -access +rwc -timescale 1ns/100ps -shm  $(PKG_FILES) $(HEADER_FILES) $(STANDARD_CORE_FILES) $(PIPE5FILES) $(PREDICTOR_FILES) $(EXTRAS) $(PRIV_FILES) $(RV32M_FILES) $(TRACKER_FILES)
 
 
diff --git a/source_code/ooo/ooo.sv b/source_code/ooo/ooo.sv
new file mode 100644
index 0000000..f52911c
--- /dev/null
+++ b/source_code/ooo/ooo.sv
@@ -0,0 +1,92 @@
+
+`include "component_selection_defines.vh"
+`include "ooo_fetch1_fetch2_if.vh"
+`include "ooo_decode_execute_if.vh"
+`include "ooo_execute_commit_if.vh"
+`include "rv32i_reg_file_if.vh"
+`include "jump_calc_if.vh"
+`include "branch_res_if.vh"
+`include  "predictor_pipeline_if.vh"
+`include "generic_bus_if.vh"
+`include "completion_buffer_if.vh"
+
+module ooo();
+
+   //interface
+   ooo_fetch1_fetch2_if fetch1_fetch2_if();
+   ooo_fetch2_decode_if fetch_decode_if();
+   ooo_decode_execute_if decode_execute_if();
+   ooo_execute_comm_if execute_comm_if();
+   rv32i_reg_file_if rf_if();
+   predictor_pipeline_if predict_if();
+   jump_calc_if jump_if();
+   branch_res_if branch_if();
+   generic_bus_if igen_bus_if();
+   generic_bus_if dgen_bus_if();
+   cache_control_if  cc_if();
+   completion_buffer_if  cb_if();
+
+   //module instantiations
+
+   ooo_fetch1_stage fetch1_stage (
+        .CLK(CLK)
+       ,.nRST(nRST)
+       ,.fetch1_fetch2_if(fetch1_fetch2_if)
+       ,.predict_if(predict_if)
+      );
+
+   ooo_fetch2_stage fetch2_stage (
+        .CLK(CLK)
+       ,.nRST(nRST)
+       ,.fetch1_fetch2_if(fetch1_fetch2_if)
+       ,.fetch_decode_if(fetch_decode_if)
+       ,.igen_bus_if(igen_bus_if)
+      );
+
+   ooo_decode_stage decode_stage (
+        .CLK(CLK)
+       ,.nRST(nRST)
+       ,.fetch_decode_if(fetch_decode_if)
+       ,.decode_execute_if(decode_execute_if)
+       ,.rf_if(rf_if)
+       ,.hazard_if(hazard_if)
+       ,.cb_if(cb_if)
+      );
+
+   ooo_execute_stage execute_stage(
+      .CLK(CLK)
+      ,.nRST(nRST)
+      ,.halt(halt)
+      ,.decode_execute_if(decode_execute_if)
+      ,.execute_comm_if(execute_comm_if)
+      ,.jump_if(jump_if)
+      ,.predict_if(predict_if)
+      ,.hazard_if(hazard_if)
+      ,.branch_if(branch_if)
+      ,.cc_if(cc_if)
+      ,.prv_pipe_if(prv_pipe_if)
+      ,.dgen_bus_if(dgen_bus_if)
+   );
+
+   ooo_commit_stage writeback_stage (
+        .CLK(CLK)
+       ,.nRST(nRST)
+       ,.decode_execute_if(decode_execute_if)
+       ,.execute_comm_if(execute_comm_if)
+       ,.hazard_if(hazard_if)
+       ,.cb_if(cb_if)
+      );
+
+
+   completion_buffer completion_buffer (CLK, nRST, cb_if);
+   rv32i_reg_file rg_file (.*);
+   branch_res branch_res (.br_if(branch_if));
+   jump_calc jump_calc (.jump_if(jump_if));
+
+   // Connect completion buffer to reg
+   assign rf_if.rd = cb_if.vd_final;
+   assign rf_if.w_data = cb_if.wdata_final;
+   assign rf_if.wen = cb_if.scalar_commit_ena;  
+   
+
+endmodule
diff --git a/source_code/ooo/src/ooo_bypass_unit.sv b/source_code/ooo/src/ooo_bypass_unit.sv
new file mode 100644
index 0000000..4c9c077
--- /dev/null
+++ b/source_code/ooo/src/ooo_bypass_unit.sv
@@ -0,0 +1,49 @@
+`include "ooo_bypass_unit_if.vh"
+
+
+module ooo_bypass_unit (
+    ooo_bypass_unit_if.bypass_unit bypass_if
+);
+  import rv32i_types_pkg::*;
+
+  logic rs1_not_zero;
+  logic rs2_not_zero;
+  logic rs1_match_alu;
+  logic rs1_match_mul;
+  logic rs1_match_div;
+  logic rs1_match_lsu;
+  logic rs2_match_alu;
+  logic rs2_match_mul;
+  logic rs2_match_div;
+  logic rs2_match_lsu;
+
+  assign rs1_not_zero = bypass_if.rs1 != '0;
+  assign rs2_not_zero = bypass_if.rs2 != '0;
+
+  assign rs1_match_alu  = bypass_if.rs1 == bypass_if.rd_alu & bypass_if.valid_alu & rs1_not_zero;
+  assign rs1_match_mul  = bypass_if.rs1 == bypass_if.rd_mul & bypass_if.valid_mul & rs1_not_zero;
+  assign rs1_match_div  = bypass_if.rs1 == bypass_if.rd_div & bypass_if.valid_div & rs1_not_zero;
+  assign rs1_match_lsu  = bypass_if.rs1 == bypass_if.rd_lsu & bypass_if.valid_lsu & rs1_not_zero;
+
+  assign rs2_match_alu  = bypass_if.rs2 == bypass_if.rd_alu & bypass_if.valid_alu & rs2_not_zero;
+  assign rs2_match_mul  = bypass_if.rs2 == bypass_if.rd_mul & bypass_if.valid_mul & rs2_not_zero;
+  assign rs2_match_div  = bypass_if.rs2 == bypass_if.rd_div & bypass_if.valid_div & rs2_not_zero;
+  assign rs2_match_lsu  = bypass_if.rs2 == bypass_if.rd_lsu & bypass_if.valid_lsu & rs2_not_zero;
+
+  assign bypass_if.rs1_bypass_ena = rs1_match_alu | rs1_match_mul | rs1_match_div | rs1_match_lsu;
+  assign bypass_if.rs2_bypass_ena = rs2_match_alu | rs2_match_mul | rs2_match_div | rs2_match_lsu;
+
+  //assign bypass_if.rs1_bypass_ena = 0; 
+  //assign bypass_if.rs2_bypass_ena = 0;
+
+  assign bypass_if.rs1_bypass_data = rs1_match_alu ? bypass_if.data_alu :
+                                     rs1_match_mul ? bypass_if.data_mul :
+                                     rs1_match_div ? bypass_if.data_div :
+                                     bypass_if.data_lsu;
+
+  assign bypass_if.rs2_bypass_data = rs2_match_alu ? bypass_if.data_alu :
+                                     rs2_match_mul ? bypass_if.data_mul :
+                                     rs2_match_div ? bypass_if.data_div :
+                                     bypass_if.data_lsu;
+
+ endmodule
diff --git a/source_code/ooo/src/ooo_commit_stage.sv b/source_code/ooo/src/ooo_commit_stage.sv
new file mode 100644
index 0000000..2e97732
--- /dev/null
+++ b/source_code/ooo/src/ooo_commit_stage.sv
@@ -0,0 +1,89 @@
+
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   a
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     ooo_commit_stage.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 02/24/2022
+*   Description:  Commit stage for the OoO pipeline 
+*/
+
+`include "ooo_decode_execute_if.vh"
+`include "jump_calc_if.vh"
+`include "predictor_pipeline_if.vh"
+`include "ooo_hazard_unit_if.vh"
+`include "branch_res_if.vh"
+`include "cache_control_if.vh"
+`include "component_selection_defines.vh"
+`include "alu_if.vh"
+`include "multiply_unit_if.vh"
+`include "divide_unit_if.vh"
+`include "loadstore_unit_if.vh"
+`include "ooo_execute_commit_if.vh"
+`include "completion_buffer_if.vh"
+
+module ooo_commit_stage(
+  input logic CLK, nRST,halt,
+  ooo_decode_execute_if.execute decode_execute_if,
+  ooo_execute_commit_if.commit execute_commit_if,
+  ooo_hazard_unit_if.commit hazard_if,
+  predictor_pipeline_if.update predict_if,
+  completion_buffer_if.writeback cb_if
+);
+
+  import rv32i_types_pkg::*;
+  import alu_types_pkg::*;
+  //import ooo_types_pkg::*;
+  import machine_mode_types_1_11_pkg::*;
+
+  logic illegal_braddr, illegal_jaddr;
+  logic valid_pc, latest_valid_pc;
+  logic branch_mispredict;
+  logic mal_found;
+  logic clear_mal;
+  logic mal_type; // 1: Load, 0: Store
+
+  assign hazard_if.fault_l      = 1'b0;
+  assign hazard_if.fault_s      = 1'b0;
+  assign hazard_if.fault_insn   = execute_commit_if.fault_insn; //assigned 1'b0
+  assign hazard_if.token        = execute_commit_if.token;
+  //assign hazard_if.intr_taken   = execute_commit_if.intr_seen;
+
+  assign valid_pc = (execute_commit_if.opcode != opcode_t'('h0));
+
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) 
+        latest_valid_pc <= 'h0;
+    else begin
+        if (halt) 
+          latest_valid_pc <= 'h0;
+        else if(hazard_if.pc_en & valid_pc) 
+            latest_valid_pc  <= execute_commit_if.pc;
+      end
+  end
+
+  /*******************************************************
+  *** Branch predictor update logic 
+  *******************************************************/
+  assign predict_if.update_predictor = execute_commit_if.branch_instr;
+  assign predict_if.prediction       = execute_commit_if.prediction;
+  assign predict_if.update_addr      = execute_commit_if.br_resolved_addr;
+  assign predict_if.branch_result   = execute_commit_if.branch_taken;
+  // assign predict_if.current_pc = execute_commit_if.pc_a;
+
+endmodule
diff --git a/source_code/ooo/src/ooo_decode_stage.sv b/source_code/ooo/src/ooo_decode_stage.sv
new file mode 100644
index 0000000..42b62e4
--- /dev/null
+++ b/source_code/ooo/src/ooo_decode_stage.sv
@@ -0,0 +1,555 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     ooo_decode_stage.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 02/24/2022
+*   Description:  Decode stage for out of order pipeline 
+*/
+
+`include "ooo_fetch_decode_if.vh"
+`include "ooo_decode_execute_if.vh"
+`include "control_unit_if.vh"
+`include "component_selection_defines.vh"
+`include "rv32i_reg_file_if.vh"
+`include "ooo_hazard_unit_if.vh"
+`include "cache_control_if.vh"
+`include "completion_buffer_if.vh"
+`include "ooo_bypass_unit_if.vh"
+
+module ooo_decode_stage (
+  input logic CLK, nRST, halt,
+  ooo_fetch_decode_if.decode fetch_decode_if,
+  ooo_decode_execute_if.decode decode_execute_if,
+  rv32i_reg_file_if.decode rf_if,
+  ooo_hazard_unit_if.decode hazard_if,
+  cache_control_if.pipeline cc_if,
+  completion_buffer_if.decode cb_if,
+  ooo_bypass_unit_if.decode bypass_if
+);
+
+  import rv32i_types_pkg::*;
+  import alu_types_pkg::*;
+  //import rv32m_pkg::*;
+  import machine_mode_types_1_11_pkg::*;
+
+  logic ebreak_ecall;
+  assign ebreak_ecall = cu_if.breakpoint | cu_if.ecall_insn | cu_if.ret_insn;
+
+  // Interface declarations
+  control_unit_if   cu_if();
+ 
+  // Module instantiations
+  /*******************************************************
+  * Input to the Control Unit
+  *******************************************************/
+  assign cu_if.instr = fetch_decode_if.instr;
+  assign decode_execute_if.instr = fetch_decode_if.instr;
+  assign cu_if.pc_en = hazard_if.pc_en;
+  
+  control_unit cu (
+    .cu_if(cu_if)
+  );
+  
+  /*******************************************************
+  *** fence instruction and Associated Logic 
+  *******************************************************/
+  // posedge detector for ifence
+  // subsequent ifences will have same effect as a single fence
+  logic ifence_reg;
+  logic ifence_pulse;
+  logic stall_csr;
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST)
+      ifence_reg <= 1'b0;
+    else if (hazard_if.pc_en)
+      ifence_reg <= cu_if.ifence;
+  end
+  
+  assign ifence_pulse = cu_if.ifence && ~ifence_reg;
+  assign cc_if.icache_flush = ifence_pulse;
+  assign cc_if.icache_clear = 1'b0;
+  assign cc_if.dcache_flush = ifence_pulse;
+  assign cc_if.dcache_clear = 1'b0;
+
+  //regs to detect flush completion
+  logic dflushed, iflushed;
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST)
+      iflushed <= 1'b1;
+    else if (ifence_pulse)
+      iflushed <= 1'b0;
+    else if (cc_if.iflush_done & hazard_if.pc_en)
+      iflushed <= 1'b1;
+  end
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST)
+      dflushed <= 1'b1;
+    else if (ifence_pulse)
+      dflushed <= 1'b0;
+    else if (cc_if.dflush_done & hazard_if.pc_en)
+      dflushed <= 1'b1;
+  end
+  
+  assign hazard_if.dflushed = dflushed;
+  assign hazard_if.iflushed = iflushed;
+  assign hazard_if.ifence = decode_execute_if.ifence;
+  assign hazard_if.ifence_pc = decode_execute_if.pc;
+
+
+  /*******************************************************
+  * Reg File Logic
+  *******************************************************/
+  assign rf_if.rs1 = cu_if.reg_rs1;
+  assign rf_if.rs2 = cu_if.reg_rs2;
+
+  assign rf_if.rd_decode = cu_if.reg_rd;
+  assign rf_if.rden = cu_if.wen & ~cu_if.branch & ~hazard_if.hazard & ~hazard_if.npc_sel & ~stall_csr & ~ebreak_ecall; 
+  assign rf_if.clear_status = hazard_if.decode_execute_flush;
+  
+  /*******************************************************
+  *** Sign Extensions of the Immediate Value
+  *******************************************************/
+  word_t imm_I_ext, imm_S_ext, imm_UJ_ext;
+
+  // for jump calculation
+  assign imm_I_ext  = {{20{cu_if.imm_I[11]}}, cu_if.imm_I};
+  assign imm_UJ_ext = {{11{cu_if.imm_UJ[20]}}, cu_if.imm_UJ};
+
+  // for source selection
+  assign imm_S_ext  = {{20{cu_if.imm_S[11]}}, cu_if.imm_S};
+  
+  // word_t next_immediate;
+  // always_comb begin
+    
+  // end 
+
+
+
+  /*******************************************************
+  *** Source Select Logic
+  *******************************************************/
+  word_t imm_or_shamt, next_reg_file_wdata;
+  assign imm_or_shamt = (cu_if.imm_shamt_sel == 1'b1) ? cu_if.shamt : imm_I_ext;
+
+  word_t fu_source_a;
+  word_t fu_source_b;
+  word_t rs1_data;
+  word_t rs2_data;
+  assign rs1_data = bypass_if.rs1_bypass_ena ? bypass_if.rs1_bypass_data : rf_if.rs1_data;
+  assign rs2_data = bypass_if.rs2_bypass_ena ? bypass_if.rs2_bypass_data : rf_if.rs2_data;
+  always_comb begin
+    case (cu_if.source_a_sel)
+      2'd0: fu_source_a = rs1_data;
+      2'd1: fu_source_a = imm_S_ext;
+      2'd2: fu_source_a = fetch_decode_if.pc;
+      2'd3: fu_source_a = '0; //Not Used 
+    endcase
+  end
+ 
+  always_comb begin
+    case(cu_if.source_b_sel)
+      2'd0: fu_source_b = rs1_data;
+      2'd1: fu_source_b = rs2_data;
+      2'd2: fu_source_b = imm_or_shamt;
+      2'd3: fu_source_b = cu_if.imm_U;
+    endcase
+  end
+
+  always_comb begin
+    case(cu_if.arith_sigs.w_src)
+      3'd1    : next_reg_file_wdata = fetch_decode_if.pc4;
+      3'd2    : next_reg_file_wdata = cu_if.imm_U;
+      default : next_reg_file_wdata = '0; 
+    endcase
+  end
+  
+  /*******************************************************
+  *** Jump Target Calculator and Associated Logic 
+  *******************************************************/
+  jump_control_signals_t jump_signals;
+  word_t base, offset;
+
+  always_comb begin
+    if (cu_if.j_sel) begin
+      base = fetch_decode_if.pc;
+      offset = imm_UJ_ext;
+    end else begin
+      base = fu_source_a;
+      offset = imm_I_ext;
+    end
+  end 
+  assign jump_signals.j_base = base;
+  assign jump_signals.j_offset = offset;
+  assign jump_signals.jump_instr = cu_if.jump;
+  assign jump_signals.j_sel = cu_if.j_sel;
+ 
+
+  /*******************************************************
+  *** Hazard unit connection  
+  *******************************************************/
+  assign hazard_if.halt = cu_if.halt; //TODO
+  assign hazard_if.rs1_busy  = rf_if.rs1_busy & ~bypass_if.rs1_bypass_ena;
+  assign hazard_if.rs2_busy  = rf_if.rs2_busy & ~bypass_if.rs2_bypass_ena;
+  assign hazard_if.rd_busy   = rf_if.rd_busy;
+  assign hazard_if.source_a_sel = cu_if.source_a_sel;
+  assign hazard_if.source_b_sel = cu_if.source_b_sel;
+  assign hazard_if.fu_type = cu_if.sfu_type;
+  always_comb begin
+    case (cu_if.sfu_type) 
+      LOADSTORE_S: hazard_if.wen = cu_if.lsu_sigs.wen;
+      ARITH_S:     hazard_if.wen = cu_if.arith_sigs.wen;
+      DIV_S:       hazard_if.wen = cu_if.div_sigs.wen;
+      MUL_S:       hazard_if.wen = cu_if.mult_sigs.wen;
+    endcase
+  end
+
+  /*******************************************************
+  *** Bypass Unit logic 
+  *******************************************************/
+  assign bypass_if.rs1 = cu_if.reg_rs1; 
+  assign bypass_if.rs2 = cu_if.reg_rs2; 
+
+
+  /*********************************************************
+  *** Signals for Bind Tracking - Read-Only, These don't affect execution
+  *********************************************************/
+  // CPU Tracker binding
+  cpu_tracker_t CPU_TRACKER;
+  assign cb_if.CPU_TRACKER_decode = CPU_TRACKER;
+  assign CPU_TRACKER.funct3     = cu_if.instr[14:12];
+  assign CPU_TRACKER.funct12    = cu_if.instr[31:20];
+  assign CPU_TRACKER.instr_30   = cu_if.instr[30];
+  assign CPU_TRACKER.imm_S      = cu_if.imm_S;
+  assign CPU_TRACKER.imm_I      = cu_if.imm_I;
+  assign CPU_TRACKER.imm_U      = cu_if.imm_U;
+  assign CPU_TRACKER.imm_UJ_ext = imm_UJ_ext;
+  assign CPU_TRACKER.imm_SB     = cu_if.imm_SB;
+  assign CPU_TRACKER.reg_rs1    = cu_if.reg_rs1;
+  assign CPU_TRACKER.reg_rs2    = cu_if.reg_rs2;
+  assign CPU_TRACKER.instr      = fetch_decode_if.instr;
+  assign CPU_TRACKER.reg_rd     = cu_if.reg_rd;
+  assign CPU_TRACKER.pc         = fetch_decode_if.pc;
+  assign CPU_TRACKER.opcode     = cu_if.opcode;
+
+  /*********************************************************
+  *** Stall signals
+  *********************************************************/
+  assign decode_execute_if.stall_multiply = hazard_if.stall_mu; 
+  assign decode_execute_if.stall_divide = hazard_if.stall_du; 
+  assign decode_execute_if.stall_arith = hazard_if.stall_au; 
+  assign decode_execute_if.stall_loadstore = hazard_if.stall_ls; 
+
+  /*********************************************************
+  *** Completion buffer signals
+  *********************************************************/
+  logic TODO = 0;
+  assign cb_if.alloc_ena =  ~hazard_if.stall_fetch_decode && ~hazard_if.npc_sel && cu_if.opcode != MISCMEM & ~ebreak_ecall;
+  assign cb_if.rv32v_wb_scalar_ena  = TODO;
+  assign cb_if.rv32v_instr  = TODO;
+  assign cb_if.opcode = cu_if.opcode;
+
+
+  /***** CPU_TRACKER, FUNCTIONAL UNIT TYPE LATCH *****/
+  always_ff @(posedge CLK, negedge nRST) begin : TOP_CONTROL_SIGNALS
+    if (~nRST) begin
+      decode_execute_if.sfu_type   <= ARITH_S;
+      //decode_execute_if.tracker_sigs <= '0;
+    end else begin 
+        if ((hazard_if.decode_execute_flush |(hazard_if.stall_fetch_decode & ~hazard_if.stall_ex)) | halt) begin
+          decode_execute_if.sfu_type   <= ARITH_S;
+          //decode_execute_if.tracker_sigs <= '0;
+        end else if(~hazard_if.stall_ex) begin
+          decode_execute_if.sfu_type   <= cu_if.sfu_type;
+          //decode_execute_if.tracker_sigs <= CPU_TRACKER;
+        end
+    end
+  end
+
+
+  /***** CSR INSTRUCTION LATCH *****/
+  typedef struct packed {
+    logic [7:0] vl;
+    logic [7:0] vtype;
+  } vector_csr_t;
+
+  vector_csr_t vcsr;
+
+  assign vcsr.vtype = cu_if.csr_sigs.vtype_imm ? cu_if.csr_sigs.csr_imm_value[7:0] : rf_if.rs2_data;
+  assign vcsr.vl    = cu_if.csr_sigs.vl_imm ? {3'd0, cu_if.reg_rs1} : rf_if.rs1_data[7:0];
+  
+  assign stall_csr = (cu_if.csr_sigs.csr_instr & ~hazard_if.rob_empty);
+//  assign decode_execute_if.next_vtype_csr    <= (vcu_if.cfgsel == VSETIVLI) || (vcu_if.cfgsel == VSETVLI) ? {24'd0, vop_c.vma, vop_c.vta, vop_c.sew, vop_c.lmul} : decode_execute_if.xs2;
+//  assign decode_execute_if.next_avl_csr      <= (vcu_if.cfgsel == VSETIVLI) ? vcu_if.imm_5 : decode_execute_if.xs1;
+
+  always_ff @(posedge CLK, negedge nRST) begin : CSR_INSTRS
+    if (~nRST) begin
+      decode_execute_if.csr_sigs <= '0;
+    end else begin
+      if (hazard_if.decode_execute_flush | stall_csr) begin 
+        decode_execute_if.csr_sigs <= '0;
+      end else if (hazard_if.rob_empty & ~hazard_if.stall_au) begin
+        // Control signals 
+        decode_execute_if.csr_sigs.csr_swap      <= cu_if.csr_sigs.csr_swap;
+        decode_execute_if.csr_sigs.csr_clr       <= cu_if.csr_sigs.csr_clr;
+        decode_execute_if.csr_sigs.csr_set       <= cu_if.csr_sigs.csr_set;
+        decode_execute_if.csr_sigs.csr_addr      <= cu_if.csr_sigs.csr_addr;
+        decode_execute_if.csr_sigs.csr_imm       <= cu_if.csr_sigs.csr_imm;
+        // Data 
+        decode_execute_if.csr_sigs.csr_imm_value <= cu_if.csr_sigs.csr_imm_value;
+        decode_execute_if.csr_sigs.csr_instr     <= cu_if.csr_sigs.csr_instr;
+        decode_execute_if.csr_sigs.csr_wdata     <= cu_if.csr_sigs.vector_csr_instr ? {8'd0, vcsr} : 
+                                                    cu_if.csr_sigs.csr_imm ? cu_if.csr_sigs.csr_imm_value : fu_source_a;
+        decode_execute_if.csr_sigs.vector_csr_instr <= cu_if.csr_sigs.vector_csr_instr;
+        decode_execute_if.csr_sigs.instr         <= fetch_decode_if.instr;
+      end
+    end
+  end
+
+  /***** HALT INSTRUCTION LATCH *****/
+  always_ff @(posedge CLK, negedge nRST) begin : HALT_INSTR
+    if (~nRST) begin
+            decode_execute_if.halt_instr <= '0;
+    end 
+    else begin 
+        if ((hazard_if.decode_execute_flush |(hazard_if.stall_fetch_decode & ~hazard_if.stall_ex)) | hazard_if.stall_au | hazard_if.stall_mu | hazard_if.stall_du | hazard_if.stall_ls) begin
+          decode_execute_if.halt_instr <= '0;
+        end else if(~hazard_if.stall_ex & ~(hazard_if.stall_au | hazard_if.stall_mu | hazard_if.stall_du | hazard_if.stall_ls)) begin
+          decode_execute_if.halt_instr <= cu_if.halt;
+        end
+    end
+  end
+
+  // Busy signal for decode stage
+  assign hazard_if.busy_decode = stall_csr | cu_if.halt & (hazard_if.stall_au | hazard_if.stall_mu | hazard_if.stall_du | hazard_if.stall_ls);
+
+  /***** MULT, DIV, LSU INSTRUCTION LATCH *****/
+  always_ff @(posedge CLK, negedge nRST) begin : FUNCTIONAL_UNITS
+    if (~nRST) begin
+      decode_execute_if.mult_sigs <= '0;
+      decode_execute_if.div_sigs <= '0;
+      decode_execute_if.lsu_sigs <= '0;
+    end else begin
+      if (hazard_if.decode_execute_flush | (hazard_if.stall_fetch_decode & ~hazard_if.stall_ex) | halt) begin : FLUSH
+        decode_execute_if.mult_sigs <= '0;
+        decode_execute_if.div_sigs <= '0;
+        decode_execute_if.lsu_sigs <= '0;
+      end else begin
+        //MULTIPLY
+        if(~cu_if.mult_sigs.ena) begin
+          decode_execute_if.mult_sigs <= '0;
+        end else if(~(hazard_if.stall_mu)) begin
+          decode_execute_if.mult_sigs.ena <= cu_if.mult_sigs.ena;
+          decode_execute_if.mult_sigs.high_low_sel <= cu_if.mult_sigs.high_low_sel;
+          decode_execute_if.mult_sigs.is_signed <= cu_if.mult_sigs.is_signed;
+          decode_execute_if.mult_sigs.decode_done <= cu_if.mult_sigs.decode_done;
+          decode_execute_if.mult_sigs.wen <= cu_if.mult_sigs.wen;
+          decode_execute_if.mult_sigs.reg_rd <= cu_if.mult_sigs.reg_rd;
+          decode_execute_if.mult_sigs.ready_mu <= cu_if.mult_sigs.ready_mu;
+          decode_execute_if.mult_sigs.index_mu <= cb_if.cur_tail;
+        end
+       
+        //DIVIDE
+        if(~cu_if.div_sigs.ena) begin
+          decode_execute_if.div_sigs <= '0;
+        end else if(~(hazard_if.stall_du)) begin
+        //if(~(hazard_if.stall_du)) begin
+          decode_execute_if.div_sigs.ena <= cu_if.div_sigs.ena;
+          decode_execute_if.div_sigs.div_type <= cu_if.div_sigs.div_type;
+          decode_execute_if.div_sigs.is_signed <= cu_if.div_sigs.is_signed;
+          decode_execute_if.div_sigs.wen <= cu_if.div_sigs.wen;
+          decode_execute_if.div_sigs.reg_rd <= cu_if.div_sigs.reg_rd;
+          decode_execute_if.div_sigs.ready_du <= cu_if.div_sigs.ready_du;
+          decode_execute_if.div_sigs.index_du <= cb_if.cur_tail;
+        end
+
+        // LOADSTORE
+        if(~cu_if.lsu_sigs.ena) begin
+          decode_execute_if.lsu_sigs <= '0;
+        end else if(~(hazard_if.stall_ls)) begin
+          decode_execute_if.lsu_sigs.load_type <= cu_if.lsu_sigs.load_type;
+          //decode_execute_if.lsu_sigs.byte_en <= cu_if.lsu_sigs.byte_en;
+          decode_execute_if.lsu_sigs.dren <= cu_if.lsu_sigs.dren;
+          decode_execute_if.lsu_sigs.dwen <= cu_if.lsu_sigs.dwen;
+          decode_execute_if.lsu_sigs.opcode <= cu_if.lsu_sigs.opcode;
+          decode_execute_if.lsu_sigs.wen <= cu_if.lsu_sigs.wen;
+          decode_execute_if.lsu_sigs.reg_rd <= cu_if.lsu_sigs.reg_rd;
+          decode_execute_if.lsu_sigs.ready_ls <= cu_if.lsu_sigs.ready_ls;
+          decode_execute_if.lsu_sigs.index_ls <= cb_if.cur_tail;
+          decode_execute_if.store_data <= rs2_data;
+        end
+
+      end
+    end
+  end
+
+  /***** FUNCTIONAL UNIT SOURCE LATCHES *****/
+  always_ff @(posedge CLK, negedge nRST) begin : SOURCE_LATCHES
+    if(~nRST) begin
+      decode_execute_if.pc <= '0;
+      decode_execute_if.pc4 <= '0;
+      decode_execute_if.immediate <= '0;
+      decode_execute_if.port_a <= '0; 
+      decode_execute_if.port_b <= '0; 
+      decode_execute_if.lsu_sigs.opcode <= '0;    
+    end else begin 
+      if(hazard_if.decode_execute_flush | (hazard_if.stall_fetch_decode & ~hazard_if.stall_ex) | halt) begin
+        decode_execute_if.pc <= '0;
+        decode_execute_if.pc4 <= '0;
+        decode_execute_if.immediate <= '0;
+        decode_execute_if.port_a <= '0; 
+        decode_execute_if.port_b <= '0; 
+        decode_execute_if.lsu_sigs.opcode <= '0;
+      end else if(~hazard_if.stall_ex) begin
+        decode_execute_if.pc <= fetch_decode_if.pc;
+        decode_execute_if.pc4 <= fetch_decode_if.pc4;
+        decode_execute_if.immediate <= cu_if.imm_SB; // TODO figure out how to do this
+        decode_execute_if.port_a <= fu_source_a; 
+        decode_execute_if.port_b <= fu_source_b; 
+        decode_execute_if.lsu_sigs.opcode <= cu_if.opcode;
+      end
+    end
+  end
+
+  /***** ARITHMETIC UNIT/CSR/EXCEPTION LATCH *****/
+  always_ff @(posedge CLK, negedge nRST) begin : ARITH_UNIT
+    if (~nRST) begin
+      decode_execute_if.arith_sigs <= '0;
+      decode_execute_if.reg_file_wdata <= '0;
+      //JUMP
+      decode_execute_if.jump_sigs        <= '0;
+      //BRANCH
+      decode_execute_if.branch_sigs <= '0;
+      //Exceptions
+      decode_execute_if.exception_sigs <= '0;
+        
+    end else begin
+      if (hazard_if.decode_execute_flush | (~hazard_if.stall_au & hazard_if.stall_fetch_decode) | halt) begin
+        decode_execute_if.arith_sigs <= '0;
+        decode_execute_if.reg_file_wdata <= '0;
+        //JUMP
+        decode_execute_if.jump_sigs <= '0;
+        //BRANCH
+        decode_execute_if.branch_sigs <= '0;
+        //Exceptions
+        decode_execute_if.exception_sigs <= '0;
+
+      end else if(~cu_if.arith_sigs.ena) begin
+        decode_execute_if.arith_sigs <= '0;
+        decode_execute_if.reg_file_wdata <= next_reg_file_wdata;
+        decode_execute_if.jump_sigs <= '0;
+        decode_execute_if.branch_sigs <= 0;
+
+        //Exceptions
+        // elaborateed because half of the signals are form cu_if and 
+        // other half is from the fetch decode latch
+        decode_execute_if.exception_sigs.illegal_insn <= cu_if.illegal_insn;
+        decode_execute_if.exception_sigs.breakpoint   <= cu_if.breakpoint;
+        decode_execute_if.exception_sigs.ecall_insn   <= cu_if.ecall_insn;
+        decode_execute_if.exception_sigs.ret_insn     <= cu_if.ret_insn;
+        decode_execute_if.exception_sigs.token        <= fetch_decode_if.token;
+        decode_execute_if.exception_sigs.mal_insn     <= fetch_decode_if.mal_insn;
+        decode_execute_if.exception_sigs.fault_insn   <= fetch_decode_if.fault_insn;
+        decode_execute_if.exception_sigs.wfi          <= cu_if.wfi;
+        decode_execute_if.exception_sigs.w_src        <= cu_if.arith_sigs.w_src;
+      end else if(~hazard_if.stall_au) begin
+        decode_execute_if.arith_sigs.ena <= cu_if.arith_sigs.ena;
+        decode_execute_if.arith_sigs.alu_op <= cu_if.arith_sigs.alu_op;
+        decode_execute_if.arith_sigs.w_src <= cu_if.arith_sigs.w_src;
+        decode_execute_if.arith_sigs.wen <= cu_if.arith_sigs.wen;
+        decode_execute_if.arith_sigs.reg_rd <= cu_if.arith_sigs.reg_rd;
+        decode_execute_if.arith_sigs.ready_a <= cu_if.arith_sigs.ready_a;
+        decode_execute_if.arith_sigs.index_a <= cb_if.cur_tail;
+
+        decode_execute_if.reg_file_wdata <= next_reg_file_wdata;
+        //JUMP
+        decode_execute_if.jump_sigs <= jump_signals;
+        //BRANCH
+        // pretty sure this line is unecessary
+        // decode_execute_if.branch_sigs.br_imm_sb       <= cu_if.imm_SB;
+        decode_execute_if.branch_sigs.branch_type  <= cu_if.branch_type;
+        decode_execute_if.branch_sigs.branch_instr      <= cu_if.branch;
+        //BRANCH PREDICTOR UPDATE
+        decode_execute_if.branch_sigs.prediction <= fetch_decode_if.prediction;
+
+        //Exceptions
+        // elaborateed because half of the signals are form cu_if and 
+        // other half is from the fetch decode latch
+        decode_execute_if.exception_sigs.illegal_insn <= cu_if.illegal_insn;
+        decode_execute_if.exception_sigs.breakpoint   <= cu_if.breakpoint;
+        decode_execute_if.exception_sigs.ecall_insn   <= cu_if.ecall_insn;
+        decode_execute_if.exception_sigs.ret_insn     <= cu_if.ret_insn;
+        decode_execute_if.exception_sigs.token        <= fetch_decode_if.token;
+        decode_execute_if.exception_sigs.mal_insn     <= fetch_decode_if.mal_insn;
+        decode_execute_if.exception_sigs.fault_insn   <= fetch_decode_if.fault_insn;
+        decode_execute_if.exception_sigs.wfi          <= cu_if.wfi;
+        decode_execute_if.exception_sigs.w_src        <= cu_if.arith_sigs.w_src;
+
+      end
+    end
+  end
+
+  logic [18:0] write_conflict_reg, next_write_conflict_reg;
+  logic div_write_conflict_stall;
+  logic mul_write_conflict_stall;
+  logic alu_write_conflict_stall;
+  logic write_conflict_stall;
+  logic div_special_case;
+  logic alu_ena;
+
+  assign hazard_if.wb_port_conflict  = write_conflict_stall;
+
+  assign alu_ena = cu_if.arith_sigs.ena | cu_if.illegal_insn | fetch_decode_if.mal_insn;
+  assign div_write_conflict_stall = cu_if.div_sigs.ena & div_special_case ? write_conflict_reg[0] :
+                                    cu_if.div_sigs.ena ? write_conflict_reg[17] :
+                                    0;
+  assign mul_write_conflict_stall = cu_if.mult_sigs.ena & write_conflict_reg[3];
+  assign alu_write_conflict_stall = cu_if.csr_sigs.csr_instr ? write_conflict_reg[1] :
+                                    alu_ena ? write_conflict_reg[0] :
+                                    0;
+  assign write_conflict_stall     = (div_write_conflict_stall | mul_write_conflict_stall | alu_write_conflict_stall) & ~ebreak_ecall & (cu_if.opcode != opcode_t'('h0));
+  assign div_special_case         = fu_source_a == 32'h8000_0000 | fu_source_b == 32'hffff_ffff | fu_source_b == 32'h0;       
+
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+        write_conflict_reg <= '0;
+    end else if (~hazard_if.stall_fetch_decode) begin
+        write_conflict_reg <= next_write_conflict_reg >> 1;
+    end else begin
+        write_conflict_reg <= write_conflict_reg >> 1;
+    end
+  end
+
+  always_comb begin
+    next_write_conflict_reg = write_conflict_reg;
+    if (cu_if.div_sigs.ena) begin
+        if (div_special_case) next_write_conflict_reg = write_conflict_reg | 1'b1;
+        else next_write_conflict_reg = write_conflict_reg | 18'b100000000000000000;
+    end else if (cu_if.mult_sigs.ena) begin
+        next_write_conflict_reg = write_conflict_reg | 4'b1000;
+    end else if (cu_if.csr_sigs.csr_instr) begin
+        next_write_conflict_reg = write_conflict_reg | 2'b10;
+    end else if (alu_ena) begin
+        next_write_conflict_reg = write_conflict_reg | 1'b1;
+    end
+  end
+
+endmodule
diff --git a/source_code/ooo/src/ooo_execute_stage.sv b/source_code/ooo/src/ooo_execute_stage.sv
new file mode 100644
index 0000000..a2f740e
--- /dev/null
+++ b/source_code/ooo/src/ooo_execute_stage.sv
@@ -0,0 +1,528 @@
+
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   a
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     ooo_execute_stage.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 06/16/2016
+*   Description:  Execute Stage for the Out of order pipeline
+*/
+
+`include "ooo_decode_execute_if.vh"
+`include "ooo_execute_commit_if.vh"
+`include "jump_calc_if.vh"
+`include "predictor_pipeline_if.vh"
+`include "ooo_hazard_unit_if.vh"
+`include "branch_res_if.vh"
+`include "cache_control_if.vh"
+`include "component_selection_defines.vh"
+`include "alu_if.vh"
+`include "multiply_unit_if.vh"
+`include "divide_unit_if.vh"
+`include "loadstore_unit_if.vh"
+`include "ooo_bypass_unit_if.vh"
+`include "completion_buffer_if.vh"
+
+module ooo_execute_stage(
+  input logic CLK, nRST,halt,
+  ooo_decode_execute_if.execute decode_execute_if,
+  ooo_execute_commit_if.execute execute_commit_if,
+  //jump_calc_if.execute jump_if,
+  ooo_hazard_unit_if.execute hazard_if,
+  //branch_res_if.execute branch_if,
+  cache_control_if.pipeline cc_if,
+  prv_pipeline_if.pipe  prv_pipe_if,
+  generic_bus_if.cpu dgen_bus_if,
+  ooo_bypass_unit_if.execute bypass_if,
+  completion_buffer_if.execute cb_if
+);
+
+  import rv32i_types_pkg::*;
+  import alu_types_pkg::*;
+  //import ooo_types_pkg::*;
+  import machine_mode_types_1_11_pkg::*;
+
+  logic csr_reg, csr_pulse;
+  word_t csr_rdata;
+  logic [1:0] byte_offset;
+  //logic [3:0] byte_en_standard;
+  word_t w_data, alu_port_b, alu_port_a;
+  word_t updated_rs1_data, updated_rs2_data;
+  word_t csr_wdata;
+  logic intr_taken_ex;
+  word_t branch_addr, resolved_addr;
+  logic [4:0] reg_rd_mu_ff0, reg_rd_mu_ff1, reg_rd_mu_ff2;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_mu_ff0, index_mu_ff1, index_mu_ff2; 
+  logic branch_mispredict;
+  logic illegal_braddr, illegal_jaddr;
+  logic mal_insn;
+  logic illegal_insn;
+
+  assign hazard_if.breakpoint  = decode_execute_if.exception_sigs.breakpoint;
+  assign hazard_if.env_m       = decode_execute_if.exception_sigs.ecall_insn;
+  assign hazard_if.ret         = decode_execute_if.exception_sigs.ret_insn;
+  assign hazard_if.pc_ex       = decode_execute_if.pc;
+
+  assign illegal_jaddr          = (decode_execute_if.jump_sigs.jump_instr & (jump_if.jump_addr[1:0] != 2'b00));
+  assign illegal_braddr         = (decode_execute_if.branch_sigs.branch_instr & (resolved_addr[1:0] != 2'b00));
+  assign mal_insn               = decode_execute_if.exception_sigs.mal_insn | illegal_jaddr | illegal_braddr; 
+  assign illegal_insn           = decode_execute_if.exception_sigs.illegal_insn | prv_pipe_if.invalid_csr;
+  assign hazard_if.illegal_insn = cb_if.illegal_insn;
+  assign hazard_if.mal_insn     = cb_if.mal_insn;
+  
+  /*******************************************************
+  *** Arithmetic Unit
+  *******************************************************/ 
+  arithmetic_unit_if auif(.control_sigs(decode_execute_if.arith_sigs));
+  // data signals
+  assign auif.port_a          = decode_execute_if.port_a;
+  assign auif.port_b          = decode_execute_if.port_b;
+  assign auif.reg_file_wdata  = decode_execute_if.reg_file_wdata;
+  assign auif.csr_rdata       = csr_rdata; // not sure how this will ever 
+  assign auif.j_sel       = decode_execute_if.jump_sigs.j_sel; // not sure how this will ever 
+  assign auif.pc       = decode_execute_if.pc; // not sure how this will ever 
+  arithmetic_unit ARITHU (
+    .auif(auif)
+  );
+
+  /*******************************************************
+  *** Jumps
+  *******************************************************/ 
+  jump_calc_if jump_if(.control_sigs(decode_execute_if.jump_sigs));
+  jump_calc jump_calc (.jump_if(jump_if));
+  // extra signals used in execute stage
+  logic jump_instr;
+  assign jump_instr = decode_execute_if.jump_sigs.jump_instr;
+  // outputs
+  // assign execute_commit_if.jump_addr  = jump_if.jump_addr;
+
+
+  /*******************************************************
+  *** Branch Target Resolution and Associated Logic 
+  *******************************************************/
+  branch_res_if branch_if(.control_sigs(decode_execute_if.branch_sigs));
+  // data inputs
+  assign branch_if.rs1_data    = decode_execute_if.port_a;
+  assign branch_if.rs2_data    = decode_execute_if.port_b;
+  assign branch_if.pc          = decode_execute_if.pc;
+  // TODO: fix this immediate needs to be passed to execute for sw and branches
+  assign branch_if.imm_sb      = decode_execute_if.immediate;
+  branch_res BRES (.br_if(branch_if));
+  // extra signals used in execute stage
+  assign branch_addr  = branch_if.branch_addr;
+  assign resolved_addr = branch_if.branch_taken ? branch_addr : decode_execute_if.pc4;
+
+  assign branch_mispredict = decode_execute_if.branch_sigs.branch_instr & (decode_execute_if.branch_sigs.prediction ^ branch_if.branch_taken) & ~(illegal_jaddr | illegal_braddr);
+  assign hazard_if.brj_addr = decode_execute_if.jump_sigs.jump_instr ? jump_if.jump_addr :
+                              branch_mispredict ? branch_if.branch_addr : 
+                              decode_execute_if.pc4;
+  assign hazard_if.mispredict = decode_execute_if.jump_sigs.jump_instr || branch_mispredict;
+  always_ff @(posedge CLK or negedge nRST) begin
+    if (~nRST) begin 
+      hazard_if.mispredict_ff <= '0; 
+    end else begin
+      hazard_if.mispredict_ff <= hazard_if.mispredict; 
+    end
+  end
+
+
+  /*******************************************************
+  *** Multiply Unit
+  *******************************************************/ 
+  multiply_unit_if  mif(.control_sigs(decode_execute_if.mult_sigs));
+  always_ff @(posedge CLK or negedge nRST) begin
+    if (~nRST) begin 
+      reg_rd_mu_ff0 <= '0; 
+      reg_rd_mu_ff1 <= '0; 
+      reg_rd_mu_ff2 <= '0; 
+      index_mu_ff0 <= '0;
+      index_mu_ff1 <= '0;
+      index_mu_ff2 <= '0;
+    end else begin
+      reg_rd_mu_ff0 <= mif.reg_rd_mu;
+      reg_rd_mu_ff1 <= reg_rd_mu_ff0;
+      reg_rd_mu_ff2 <= reg_rd_mu_ff1;
+      index_mu_ff0 <= mif.index_mu;
+      index_mu_ff1 <= index_mu_ff0;
+      index_mu_ff2 <= index_mu_ff1;
+    end
+  end
+  // data inputs
+  assign mif.rs1_data = decode_execute_if.port_a;
+  assign mif.rs2_data = decode_execute_if.port_b;
+  multiply_unit MULU (.CLK(CLK), .nRST(nRST), .mif(mif));
+
+
+  /*******************************************************
+  *** Divide Unit
+  *******************************************************/ 
+  divide_unit_if    dif(.control_sigs(decode_execute_if.div_sigs));
+  // data signals
+  assign dif.rs1_data = decode_execute_if.port_a;
+  assign dif.rs2_data = decode_execute_if.port_b;    
+  divide_unit DIVU (.CLK(CLK), .nRST(nRST), .dif(dif));
+
+
+  /*******************************************************
+  *** Load Store Unit
+  *******************************************************/ 
+  loadstore_unit_if lsif(.control_sigs(decode_execute_if.lsu_sigs));
+  // data lines
+  assign lsif.port_a = decode_execute_if.port_a;
+  assign lsif.port_b = decode_execute_if.port_b;
+  assign lsif.store_data = decode_execute_if.store_data; // this is an issue here because sw needs three operands
+  assign lsif.pc = decode_execute_if.pc;
+  
+  loadstore_unit LSU(
+    .CLK(CLK),
+    .nRST(nRST),
+    .halt(halt), // halt should no longer be resolved here 
+    .dgen_bus_if(dgen_bus_if),
+    .hazard_if(hazard_if), 
+    .lsif(lsif)
+  );
+
+  /*******************************************************
+  *** Hazard Unit Signal Connections
+  *******************************************************/
+  //assign hazard_if.brj_addr   = ( jump_instr) ? jump_if.jump_addr : 
+  //                                              branch_if.branch_addr;
+  // assign hazard_if.mispredict = decode_execute_if.branch_sigs.prediction ^ branch_if.branch_taken;
+  assign hazard_if.branch     = decode_execute_if.branch_sigs.branch_instr; 
+  assign hazard_if.jump       = decode_execute_if.jump_sigs.jump_instr; 
+
+  assign hazard_if.busy_au = auif.busy_au;
+  assign hazard_if.busy_mu = mif.busy_mu;
+  assign hazard_if.busy_du = dif.busy_du;
+  //assign hazard_if.busy_ls = lsif.busy_ls;
+
+  // assign hazard_if.load_stall = lsif.load_stall;
+
+  /***** CSR STUFF? *****/
+  //NEED CSR ENA SIGNAL
+  assign csr_wdata = decode_execute_if.csr_sigs.csr_wdata;
+
+  //Keep polling interrupt. This is so that interrupt can be latched even if the processor is busy doing something 
+  /*assign hazard_if.intr_found = intr_taken_ex;
+  always_ff @(posedge CLK, negedge nRST) begin :INTERRUPT
+    if (~nRST) begin
+      intr_taken_ex <= 1'b0;
+    end
+    else begin
+      if (halt) begin
+        intr_taken_ex <= 1'b0;
+      end
+      else if (hazard_if.intr_taken) begin
+        intr_taken_ex <= 1'b0;
+      end
+      else if (hazard_if.intr) begin
+        intr_taken_ex <= 1'b1;
+      end
+    end
+  end */
+
+  /*******************************************************
+  *** CSR / Priv Interface Logic 
+  *******************************************************/ 
+  assign hazard_if.csr     = csr_pulse;
+  assign prv_pipe_if.swap  = decode_execute_if.csr_sigs.csr_swap;
+  assign prv_pipe_if.clr   = decode_execute_if.csr_sigs.csr_clr;
+  assign prv_pipe_if.set   = decode_execute_if.csr_sigs.csr_set;
+  assign prv_pipe_if.wdata = csr_wdata;
+  assign prv_pipe_if.addr  = decode_execute_if.csr_sigs.csr_addr;
+  assign prv_pipe_if.valid_write = (prv_pipe_if.swap | prv_pipe_if.clr | prv_pipe_if.set); //TODO add to latch
+  assign prv_pipe_if.vector_csr_instr = decode_execute_if.csr_sigs.vector_csr_instr;
+  //assign prv_pipe_if.instr = (decode_execute_if.csr_sigs.csr_instr != '0);
+  assign hazard_if.csr_pc = decode_execute_if.pc;
+
+  logic csr_pulse_reg;
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      csr_reg <= 1'b0;
+      csr_pulse_reg <= 1'b0;
+    end else begin
+      csr_reg <= decode_execute_if.csr_sigs.csr_instr;
+      csr_pulse_reg <= csr_pulse;
+    end
+  end
+
+  assign csr_pulse = decode_execute_if.csr_sigs.csr_instr && ~csr_reg;
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST)
+      csr_rdata <= 'h0;
+    else if (csr_pulse)
+      csr_rdata <= prv_pipe_if.rdata;
+  end
+
+
+  //Forwading logic
+  assign hazard_if.load   = decode_execute_if.lsu_sigs.dren;
+
+  // word_t next_pc;
+  // One pc port for the commit stage, more than one possible for the pc
+  // to come from. we might be able to mux this, or it might need to be 
+  // multiple signals. I think this will be important with exceptions,
+  // right now we can just assign to brj pc
+  // always_comb begin : NEXT_PC
+  //   next_pc = auif.pc_a;
+  // end
+
+  /*******************************************************
+  *** Execute Commit Latch
+  *******************************************************/ 
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST ) begin
+      //EXECUTE
+      execute_commit_if.illegal_insn     <= '0;
+      execute_commit_if.invalid_csr      <= '0;
+      execute_commit_if.mal_insn         <= '0;
+      execute_commit_if.fault_insn       <= '0;
+      execute_commit_if.token            <= '0;
+      execute_commit_if.intr_seen        <= '0;
+      execute_commit_if.br_resolved_addr <= '0;
+      //BRANCH PREDICTOR UPDATE
+      execute_commit_if.branch_instr      <= '0;
+      execute_commit_if.branch_taken      <= '0;
+      execute_commit_if.prediction        <= '0;
+      execute_commit_if.br_resolved_addr  <= '0;
+      execute_commit_if.pc                <= '0;
+      execute_commit_if.pc4               <= '0;
+    end
+    else begin
+      if (hazard_if.execute_commit_flush | hazard_if.stall_commit & ~hazard_if.stall_ex || halt ) begin
+        //EXCEPTION
+        execute_commit_if.illegal_insn     <= '0;
+        execute_commit_if.invalid_csr      <= '0;
+        execute_commit_if.mal_insn         <= '0;
+        execute_commit_if.fault_insn       <= '0;
+        execute_commit_if.pc               <= '0;
+        execute_commit_if.token            <= '0;
+        execute_commit_if.intr_seen        <= '0;
+        //BRANCH PREDICTOR UPDATE
+        execute_commit_if.branch_instr      <= '0;
+        execute_commit_if.branch_taken      <= '0;
+        execute_commit_if.prediction        <= '0;
+        execute_commit_if.br_resolved_addr  <= '0;
+        execute_commit_if.pc4               <= '0;
+      end else if (~hazard_if.stall_commit) begin
+        //exception
+        execute_commit_if.illegal_insn           <= decode_execute_if.exception_sigs.illegal_insn;
+        execute_commit_if.invalid_csr            <= prv_pipe_if.invalid_csr;
+        execute_commit_if.mal_insn               <= decode_execute_if.exception_sigs.mal_insn;
+        execute_commit_if.fault_insn             <= decode_execute_if.exception_sigs.fault_insn;
+        execute_commit_if.pc                     <= decode_execute_if.pc;
+        execute_commit_if.token                  <= 0;
+        execute_commit_if.intr_seen              <= intr_taken_ex; //TODO
+        //BRANCH PREDICTOR UPDATE
+        execute_commit_if.branch_instr           <= decode_execute_if.branch_sigs.branch_instr;
+        execute_commit_if.branch_taken           <= branch_if.branch_taken;
+        execute_commit_if.prediction             <= decode_execute_if.branch_sigs.prediction;
+        execute_commit_if.br_resolved_addr       <= resolved_addr;
+        execute_commit_if.pc4                    <= decode_execute_if.pc4;
+
+       
+      end
+    end
+  end
+
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_a;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_mu;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_du;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_ls;
+  word_t wdata_a;
+  word_t wdata_mu;
+  word_t wdata_du;
+  word_t wdata_ls;
+  word_t pc_ls_reg;
+  logic [4:0] vd_a;
+  logic [4:0] vd_mu;
+  logic [4:0] vd_du;
+  logic [4:0] vd_ls;
+  logic exception_a;
+  logic exception_mu;
+  logic exception_du;
+  logic exception_ls;
+  logic ready_a;
+  logic ready_mu;
+  logic ready_du;
+  logic ready_ls;
+  logic wen_a;
+  logic wen_ls;
+  logic mal_ls;
+  logic valid_pc;
+  logic mal_pulse;
+  logic mal_reg;
+  logic [4:0] reg_rd_du_reg;
+  logic [4:0] index_du_reg;
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      reg_rd_du_reg <= '0;
+      index_du_reg <= '0;
+    end else if (dif.start_div) begin
+      reg_rd_du_reg <= dif.reg_rd_du;
+      index_du_reg <= dif.index_du;
+    end
+  end
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      pc_ls_reg <= '0;
+    end else if (decode_execute_if.lsu_sigs.dren || decode_execute_if.lsu_sigs.dwen) begin
+      pc_ls_reg <= decode_execute_if.pc;
+    end
+  end
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST)
+      mal_reg <= 1'b0;
+    else 
+      mal_reg <= lsif.mal_addr;
+  end
+
+  assign mal_pulse = lsif.mal_addr & ~mal_reg;
+  assign valid_pc  = decode_execute_if.lsu_sigs.opcode != opcode_t'('h0);
+
+  assign index_a   = auif.index_a;
+  assign index_mu  = index_mu_ff2;
+  assign index_du  = (dif.start_div & dif.done_du) ? dif.index_du : index_du_reg;
+  assign index_ls  = lsif.index_ls;
+
+  assign vd_a  = auif.reg_rd_au;
+  assign vd_mu = reg_rd_mu_ff2;
+  assign vd_du = (dif.start_div & dif.done_du) ? dif.reg_rd_du : reg_rd_du_reg;
+  assign vd_ls = lsif.reg_rd_ls;
+
+  assign exception_a  = 0;
+  assign exception_mu = 0;
+  assign exception_du = 0;
+  assign exception_ls = mal_pulse; 
+
+  assign ready_a  = decode_execute_if.csr_sigs.csr_instr ? csr_pulse_reg : (auif.wen_au | decode_execute_if.branch_sigs.branch_instr | decode_execute_if.jump_sigs.jump_instr & valid_pc) & decode_execute_if.arith_sigs.ena; 
+  assign ready_mu = mif.done_mu;
+  assign ready_du = dif.done_du;
+  assign ready_ls = lsif.done_ls | exception_ls;
+
+  assign wdata_a   = decode_execute_if.jump_sigs.jump_instr ? decode_execute_if.pc + 4 : decode_execute_if.csr_sigs.csr_swap ? csr_rdata : auif.wdata_au;
+  assign wdata_mu  = mif.wdata_mu;  
+  assign wdata_du  = dif.wdata_du;
+  assign wdata_ls  = exception_ls ? pc_ls_reg : lsif.wdata_ls; 
+
+  assign wen_a  = (exception_a | decode_execute_if.branch_sigs.branch_instr) ? 1'b0 : 1'b1;
+  assign wen_ls = lsif.wen_ls & ~exception_ls; 
+
+  assign mal_ls = mal_pulse; 
+
+  assign cb_if.halt_instr   = decode_execute_if.halt_instr;
+
+  /*******************************************************
+  *** Bypass from FU
+  *******************************************************/ 
+  assign bypass_if.rd_alu    = vd_a;
+  assign bypass_if.valid_alu = wen_a & ready_a;
+  assign bypass_if.data_alu  = wdata_a;
+  assign bypass_if.rd_mul    = vd_mu;
+  assign bypass_if.valid_mul = ready_mu;
+  assign bypass_if.data_mul  = wdata_mu;
+  assign bypass_if.rd_div    = vd_du;
+  assign bypass_if.valid_div = ready_du;
+  assign bypass_if.data_div  = wdata_du;
+  assign bypass_if.rd_lsu    = vd_ls;
+  assign bypass_if.valid_lsu = wen_ls & ready_ls & ~exception_ls;
+  assign bypass_if.data_lsu  = wdata_ls;
+
+  /*******************************************************
+  *** Completion buffer writeback port
+  *******************************************************/ 
+  assign cb_if.index_ls          = index_ls; 
+  assign cb_if.wdata_ls          = wdata_ls; 
+  assign cb_if.vd_ls             = vd_ls; 
+  assign cb_if.exception_type_ls = exception_ls ? MAL_LOADSTORE : NO_EXCEPTION; 
+  assign cb_if.ready_ls          = ready_ls; 
+  assign cb_if.wen_ls            = wen_ls; 
+  always_comb begin
+    if (ready_a | illegal_insn | mal_insn) begin
+      if (illegal_insn) begin
+        cb_if.exception_type_sfu = ILLEGAL; 
+        cb_if.wdata_sfu     = decode_execute_if.pc; 
+      end else if (mal_insn) begin
+        cb_if.exception_type_sfu = MAL_NORMAL; 
+        cb_if.wdata_sfu     = decode_execute_if.pc; 
+      end else begin
+        cb_if.exception_type_sfu = NO_EXCEPTION; 
+        cb_if.wdata_sfu     = wdata_a; 
+      end
+      cb_if.index_sfu     = index_a; 
+      cb_if.vd_sfu        = vd_a; 
+      cb_if.ready_sfu     = 1; 
+      cb_if.wen_sfu       = wen_a & (cb_if.exception_type_sfu == NO_EXCEPTION); 
+    end else if (ready_mu) begin
+      cb_if.index_sfu          = index_mu; 
+      cb_if.wdata_sfu          = wdata_mu; 
+      cb_if.vd_sfu             = vd_mu; 
+      cb_if.exception_type_sfu = NO_EXCEPTION; 
+      cb_if.ready_sfu          = 1; 
+      cb_if.wen_sfu            = 1; 
+    end else if (ready_du) begin
+      cb_if.index_sfu          = index_du; 
+      cb_if.wdata_sfu          = wdata_du; 
+      cb_if.vd_sfu             = vd_du; 
+      cb_if.exception_type_sfu = NO_EXCEPTION; 
+      cb_if.ready_sfu          = 1; 
+      cb_if.wen_sfu            = 1;  
+    end else begin
+      cb_if.index_sfu          = 0; 
+      cb_if.wdata_sfu          = 0; 
+      cb_if.vd_sfu             = 0; 
+      cb_if.exception_type_sfu = NO_EXCEPTION; 
+      cb_if.ready_sfu          = 0; 
+      cb_if.wen_sfu            = 0; 
+    end
+  end
+
+  /*******************************************************
+  *** Bad Load Store Address logic 
+  *******************************************************/
+  logic mal_found;
+  logic clear_mal;
+  logic mal_type; // 1: Load, 0: Store
+  assign hazard_if.mal_l   = mal_type & cb_if.mal_ls;
+  assign hazard_if.mal_s   = ~mal_type & cb_if.mal_ls;
+  assign clear_mal         = cb_if.mal_ls | cb_if.illegal_insn | cb_if.mal_insn; 
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+        hazard_if.badaddr_d <= '0;
+        mal_found <= 0;
+        mal_type <= 0;
+    end else if (clear_mal) begin
+        hazard_if.badaddr_d <= '0;
+        mal_found <= '0;
+        mal_type <= 0;
+    end else if (mal_pulse & ~mal_found) begin
+        hazard_if.badaddr_d <= lsif.memory_addr;
+        mal_found <= 1;
+        if (lsif.wen_ls) begin
+            mal_type <= 1;
+        end else begin
+            mal_type <= 0;
+        end
+    end
+  end
+
+endmodule
diff --git a/source_code/ooo/src/ooo_fetch1_stage.sv b/source_code/ooo/src/ooo_fetch1_stage.sv
new file mode 100644
index 0000000..3a18845
--- /dev/null
+++ b/source_code/ooo/src/ooo_fetch1_stage.sv
@@ -0,0 +1,77 @@
+///*
+//*   Copyright 2016 Purdue University
+//*   
+//*   Licensed under the Apache License, Version 2.0 (the "License");
+//*   you may not use this file except in compliance with the License.
+//*   You may obtain a copy of the License at
+//*   
+//*       http://www.apache.org/licenses/LICENSE-2.0
+//*   
+//*   Unless required by applicable law or agreed to in writing, software
+//*   distributed under the License is distributed on an "AS IS" BASIS,
+//*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//*   See the License for the specific language governing permissions and
+//*   limitations under the License.
+//*
+//*
+//*   Filename:     tspp_fetch_stage.sv
+//*
+//*   Created by:   John Skubic
+//*   Email:        jskubic@purdue.edu
+//*   Date Created: 06/19/2016
+//*   Description:  Fetch stage for the two stage pipeline
+//*/
+//
+//`include "ooo_fetch1_fetch2_if.vh"
+//`include "predictor_pipeline_if.vh"
+//`include "component_selection_defines.vh"
+//`include "ooo_hazard_unit_if.vh"
+//
+//module ooo_fetch1_stage (
+  //input logic CLK, nRST,halt,
+  //ooo_fetch1_fetch2_if.fetch1 fetch1_fetch2_if,
+  //predictor_pipeline_if.access predict_if,
+  //ooo_hazard_unit_if.fetch1 hazard_if
+//);
+  //import rv32i_types_pkg::*;
+//
+  //parameter RESET_PC = 32'h80000000;
+  //word_t current_pc, next_pc, pc4, npc;
+  //logic prediction;
+//
+  ////next PC logic
+//
+  //always_ff @ (posedge CLK, negedge nRST) begin
+    //if( ~nRST) begin
+      //current_pc <= RESET_PC;
+      //prediction <= 'h0;
+    //end 
+    //else begin
+        //if (halt) begin
+            //current_pc <= RESET_PC;
+            //prediction <= 'h0;
+        //end
+        //else if ((hazard_if.pc_en && ~hazard_if.stall) || hazard_if.insert_priv_pc) 
+        //begin
+            //current_pc <= npc;
+            //prediction <= predict_if.predict_taken;
+        //end
+    //end
+  //end
+ //
+  ////FETCH1 FETCH 2 interface
+  //assign fetch1_fetch2_if.pc = current_pc;
+  //assign fetch1_fetch2_if.prediction = prediction;
+  ////PREDICT_IF interface
+  //assign predict_if.current_pc = current_pc;
+  ////Next PC logic
+  //assign pc4 = current_pc + 4;
+  //assign npc = hazard_if.insert_priv_pc ? hazard_if.priv_pc : (hazard_if.intr_taken) ? current_pc: (hazard_if.csr_flush) ? (hazard_if.csr_pc +'h4): (hazard_if.ifence_flush) ? (hazard_if.ifence_pc +'h4): (hazard_if.npc_sel)? hazard_if. brj_addr : predict_if.predict_taken ? predict_if.target_addr : pc4;
+//
+//
+//
+//endmodule 
+//
+//
+//
+//
diff --git a/source_code/ooo/src/ooo_fetch2_stage.sv b/source_code/ooo/src/ooo_fetch2_stage.sv
new file mode 100644
index 0000000..dc57f85
--- /dev/null
+++ b/source_code/ooo/src/ooo_fetch2_stage.sv
@@ -0,0 +1,106 @@
+///*
+//*   Copyright 2016 Purdue University
+//*   
+//*   Licensed under the Apache License, Version 2.0 (the "License");
+//*   you may not use this file except in compliance with the License.
+//*   You may obtain a copy of the License at
+//*   
+//*       http://www.apache.org/licenses/LICENSE-2.0
+//*   
+//*   Unless required by applicable law or agreed to in writing, software
+//*   distributed under the License is distributed on an "AS IS" BASIS,
+//*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//*   See the License for the specific language governing permissions and
+//*   limitations under the License.
+//*
+//*
+//*   Filename:     tspp_fetch_stage.sv
+//*
+//*   Created by:   John Skubic
+//*   Email:        jskubic@purdue.edu
+//*   Date Created: 06/19/2016
+//*   Description:  Fetch stage for the two stage pipeline
+//*/
+//
+//`include "ooo_fetch1_fetch2_if.vh"
+//`include "ooo_fetch2_decode_if.vh"
+//`include "generic_bus_if.vh"
+//`include "component_selection_defines.vh"
+//`include "ooo_hazard_unit_if.vh"
+//
+//module ooo_fetch2_stage (
+  //input logic CLK, nRST,halt,
+  //ooo_fetch1_fetch2_if.fetch2 fetch1_fetch2_if,
+  //ooo_fetch2_decode_if.fetch fetch_decode_if,
+  //ooo_hazard_unit_if.fetch2 hazard_if,
+  //generic_bus_if.cpu igen_bus_if
+//);
+  //import rv32i_types_pkg::*;
+//
+  //word_t pc, pc4, instr;
+  //logic mal_addr;
+  //
+  ////Gte the current PC from fetch1 stage
+  //assign pc = fetch1_fetch2_if.pc;
+  //assign pc4 = pc+4;
+  //assign mal_addr  = (igen_bus_if.addr[1:0] != 2'b00);
+//
+  ////Instruction Access logic
+  //assign hazard_if.i_mem_busy     = igen_bus_if.busy;
+  //assign igen_bus_if.addr         = pc;
+  //assign igen_bus_if.ren          = ~halt;
+  //assign igen_bus_if.wen          = 1'b0;
+  //assign igen_bus_if.byte_en      = 4'b1111;
+  //assign igen_bus_if.wdata        = '0;
+  //
+  ////Fetch Execute Pipeline Signals
+  //always_ff @ (posedge CLK, negedge nRST) begin
+      //if (!nRST) begin
+        //fetch_decode_if.token               <='h0; 
+        //fetch_decode_if.pc                  <='h0; 
+        //fetch_decode_if.pc4                 <='h0;
+        //fetch_decode_if.instr               <='h0; 
+        //fetch_decode_if.prediction     <='h0; 
+        //fetch_decode_if.mal_insn            <='h0;
+        //fetch_decode_if.fault_insn          <= 1'b0;
+      //end
+      //else begin
+        //if (halt) begin
+            //fetch_decode_if.token               <='h0; 
+            //fetch_decode_if.pc                  <='h0; 
+            //fetch_decode_if.pc4                 <='h0;
+            //fetch_decode_if.prediction          <='h0; 
+            //fetch_decode_if.mal_insn            <='h0;
+            //fetch_decode_if.fault_insn          <= 1'b0;
+        //end
+        //else if (hazard_if.fetch_decode_flush & hazard_if.pc_en) begin
+            //fetch_decode_if.token               <='h0; 
+            //fetch_decode_if.instr               <='h0; 
+            //fetch_decode_if.prediction          <='h0; 
+            //fetch_decode_if.mal_insn            <='h0;
+            //fetch_decode_if.fault_insn          <= 1'b0;
+        //end 
+        //else if(hazard_if.pc_en & ~ hazard_if.fetch_decode_flush & ~hazard_if.stall) begin
+            //fetch_decode_if.token               <= 1'b1;
+            //fetch_decode_if.pc                  <= pc;
+            //fetch_decode_if.pc4                 <= pc4;
+            //fetch_decode_if.instr               <= instr;
+            //fetch_decode_if.prediction          <= fetch1_fetch2_if.prediction;
+            ////Exceptions
+            //fetch_decode_if.mal_insn            <= mal_addr;
+            //fetch_decode_if.fault_insn          <= 1'b0;
+        //end
+      //end
+  //end
+//
+  //// Choose the endianness of the data coming into the processor
+  //generate
+    //if (BUS_ENDIANNESS == "big")
+      //assign instr = igen_bus_if.rdata;
+    //else if (BUS_ENDIANNESS == "little")
+      //endian_swapper ltb_endian(igen_bus_if.rdata, instr);  
+  //endgenerate
+//
+//endmodule
+//
+//
diff --git a/source_code/ooo/src/ooo_fetch_stage.sv b/source_code/ooo/src/ooo_fetch_stage.sv
new file mode 100644
index 0000000..12f25cd
--- /dev/null
+++ b/source_code/ooo/src/ooo_fetch_stage.sv
@@ -0,0 +1,165 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     ooo_fetch_stage.sv
+*
+*   Created by:   Nicholas Gildenhuys
+*   Email:        ngildenh@purdue.edu
+*   Date Created: 06/19/2016
+*   Description:  Fetch stage for the out of order pipeline
+*/
+
+`include "ooo_fetch_decode_if.vh"
+`include "generic_bus_if.vh"
+`include "component_selection_defines.vh"
+`include "ooo_hazard_unit_if.vh"
+
+module ooo_fetch_stage (
+  input logic CLK, nRST,halt,
+  ooo_fetch_decode_if.fetch fetch_decode_if,
+  predictor_pipeline_if.access predict_if,
+  ooo_hazard_unit_if.fetch hazard_if,
+  generic_bus_if.cpu igen_bus_if
+);
+  import rv32i_types_pkg::*;
+
+  parameter RESET_PC = 32'h80000000;
+  word_t pc, pc4, instr;
+  logic mal_addr;
+  word_t program_counter_pc;
+  word_t next_pc;
+  logic take_new_pc; // any special events not pc + 4
+
+  assign hazard_if.pc_fe       = program_counter_pc;
+  
+  //Get the current PC from fetch stage
+  assign pc4 = program_counter_pc + 4;
+  assign mal_addr  = (igen_bus_if.addr[1:0] != 2'b00);
+  assign take_new_pc = predict_if.predict_taken | hazard_if.npc_sel | hazard_if.insert_priv_pc | hazard_if.ifence_flush | hazard_if.csr_flush;
+  
+  //Instruction Access logic
+  assign hazard_if.i_mem_busy     = igen_bus_if.busy;
+  assign igen_bus_if.addr         = program_counter_pc;
+  assign igen_bus_if.ren          = ~halt & ~take_new_pc; // do this because the read transaction wasn't halting on a new address unless ren went low
+  assign igen_bus_if.wen          = 1'b0;
+  assign igen_bus_if.byte_en      = 4'b1111;
+  assign igen_bus_if.wdata        = '0;
+
+
+  // program counter main flop
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      program_counter_pc <= RESET_PC;
+      fetch_decode_if.prediction <= '0;
+    end else begin
+      // normal operation
+      if(halt) begin
+        // halt case
+        program_counter_pc <= RESET_PC;
+        fetch_decode_if.prediction <= '0;
+      end else if(take_new_pc | hazard_if.pc_en & ~hazard_if.stall_fetch_decode) begin
+        // normal operations/incrementation
+        program_counter_pc <= next_pc;
+        fetch_decode_if.prediction <= predict_if.predict_taken;
+      end else begin
+        // stall
+        program_counter_pc <= program_counter_pc;
+        fetch_decode_if.prediction <= fetch_decode_if.prediction;
+      end
+    end
+  end
+
+  // prediction interface logic
+  
+  assign predict_if.current_pc = program_counter_pc;
+  //Next PC logic
+  always_comb begin
+    next_pc = pc4;
+    if(hazard_if.insert_priv_pc) begin
+      next_pc = hazard_if.priv_pc;
+    end else if(hazard_if.intr_taken) begin
+      next_pc = program_counter_pc;
+    end else if(hazard_if.csr_flush) begin
+      next_pc = hazard_if.csr_pc + 4;
+    end else if(hazard_if.ifence_flush) begin
+      next_pc = hazard_if.ifence_pc + 4;
+    end else if(hazard_if.npc_sel) begin
+      next_pc = hazard_if.brj_addr;
+    end else if(predict_if.predict_taken) begin
+      next_pc = predict_if.target_addr;
+    end else begin
+      next_pc = pc4;
+    end
+  end
+
+  //Fetch Execute Pipeline Signals
+  always_ff @ (posedge CLK, negedge nRST) begin
+      if (!nRST) begin
+        // reset
+        fetch_decode_if.token               <='h0; 
+        fetch_decode_if.pc                  <='h0; 
+        fetch_decode_if.pc4                 <='h0;
+        fetch_decode_if.instr               <='h0; 
+        // fetch_decode_if.prediction          <='h0; 
+        fetch_decode_if.mal_insn            <='h0;
+        fetch_decode_if.fault_insn          <= 1'b0;
+      end else begin
+        if (halt) begin
+          // halt
+            fetch_decode_if.token               <='h0; 
+            fetch_decode_if.pc                  <='h0; 
+            fetch_decode_if.pc4                 <='h0;
+            // fetch_decode_if.prediction          <='h0; 
+            fetch_decode_if.mal_insn            <='h0;
+            fetch_decode_if.fault_insn          <= 1'b0;
+        end else if (hazard_if.fetch_decode_flush | (~hazard_if.pc_en & ~hazard_if.stall_fetch_decode)) begin
+          // hazard flush
+            fetch_decode_if.token               <='h0; 
+            fetch_decode_if.instr               <='h0; 
+            // fetch_decode_if.prediction          <='h0; 
+            fetch_decode_if.mal_insn            <='h0;
+            fetch_decode_if.fault_insn          <= 1'b0;
+        end else if(hazard_if.pc_en & ~hazard_if.fetch_decode_flush & ~hazard_if.stall_fetch_decode) begin
+          // normal operating conditions
+            fetch_decode_if.token               <= 1'b1;
+            fetch_decode_if.pc                  <= program_counter_pc;
+            fetch_decode_if.pc4                 <= pc4;
+            fetch_decode_if.instr               <= instr;
+            // fetch_decode_if.prediction          <= predict_if.predict_taken;
+            //Exceptions
+            fetch_decode_if.mal_insn            <= mal_addr;
+            fetch_decode_if.fault_insn          <= 1'b0;
+        end
+      end
+  end
+
+
+  //PREDICT_IF interface
+  // TODO: only main issue I can se here is the predictor interface pulling
+  // from the decode latch instead of the pc. also in this config the PC is 
+  // stored in the decode latch??
+ 
+  // Choose the endianness of the data coming into the processor
+  generate
+    if (BUS_ENDIANNESS == "big")
+      assign instr = igen_bus_if.rdata;
+    else if (BUS_ENDIANNESS == "little")
+      endian_swapper ltb_endian(igen_bus_if.rdata, instr);  
+  endgenerate
+
+endmodule
+
+
diff --git a/source_code/ooo/src/ooo_hazard_unit.sv b/source_code/ooo/src/ooo_hazard_unit.sv
new file mode 100644
index 0000000..82003d2
--- /dev/null
+++ b/source_code/ooo/src/ooo_hazard_unit.sv
@@ -0,0 +1,151 @@
+`include "ooo_hazard_unit_if.vh"
+`include "completion_buffer_if.vh"
+
+module ooo_hazard_unit (
+  ooo_hazard_unit_if.hazard_unit hazard_if,
+  prv_pipeline_if.hazard  prv_pipe_if,
+  completion_buffer_if.hu cb_if
+);
+  import rv32i_types_pkg::*;
+
+  logic wait_for_imem;
+  logic wait_for_dmem;
+  logic branch_jump;
+  logic load_stall;
+  logic e_fetch_stage, e_decode_stage, e_execute_stage;
+  logic intr_e_flush, intr_exception;
+  logic structural_hazard;
+  logic exception_from_cb;
+
+  //Incrementing PC only when instruction has been fetched
+  assign wait_for_imem = hazard_if.iren & hazard_if.i_mem_busy;
+  assign wait_for_dmem = hazard_if.dmem_access & hazard_if.d_mem_busy;  
+
+  //BUSY
+  // assign hazard_if.busy_ls = hazard_if.dren | hazard_if.dwen; 
+  // input hazard_if.busy_au 
+  // input hazard_if.busy_mul 
+  // input hazard_if.busy_div
+  // output hazard_if.stall_fetch
+  // output stall_ex -- stall all functional unit latches
+  // input data_hazard- comes from rfif bit vector bc of RAW/WAW
+  // Instruction latch enable
+  // rob_full -- reorder buffer full
+  logic pc_stall, store;
+  assign store = hazard_if.fu_type == LOADSTORE_S && hazard_if.source_a_sel == 2'd1;
+  assign pc_stall = wait_for_imem | hazard_if.stall_fetch_decode | hazard_if.data_hazard;
+  assign hazard_if.pc_en =  ~pc_stall;
+  assign hazard_if.stall_fetch_decode = hazard_if.intr | hazard_if.stall_au | hazard_if.stall_ex | hazard_if.data_hazard | hazard_if.busy_decode | structural_hazard | (store && ~hazard_if.rob_empty) | hazard_if.mispredict_ff; 
+  assign hazard_if.hazard = hazard_if.data_hazard | structural_hazard;
+  //assign hazard_if.decode_execute_flush  = 0;
+
+  //FETCH_DECODE
+  logic rs1_busy, rs2_busy, rd_busy;
+  assign hazard_if.data_hazard = rs1_busy | rs2_busy | rd_busy;
+
+  always_comb begin : RS1_BUSY
+    case (hazard_if.source_a_sel)
+      2'd0, 2'd1: rs1_busy = hazard_if.rs1_busy;
+      2'd3, 2'd2: rs1_busy = 0;
+    endcase
+  end
+
+  always_comb begin : RS2_BUSY
+    case (hazard_if.source_b_sel)
+      2'd0, 2'd1: rs2_busy = hazard_if.rs2_busy;
+      2'd3, 2'd2: rs2_busy = 0;
+    endcase
+  end
+  
+  assign rd_busy = hazard_if.rd_busy & hazard_if.wen;
+
+  //assign structural_hazard = hazard_if.stall_au |  hazard_if.stall_du | hazard_if.stall_mu |  hazard_if.stall_ls;
+  assign structural_hazard = ((hazard_if.fu_type == DIV_S) & hazard_if.busy_du) || ((hazard_if.fu_type == LOADSTORE_S) & hazard_if.busy_ls) || hazard_if.wb_port_conflict; 
+
+  assign hazard_if.stall_au = hazard_if.csr;
+  assign hazard_if.stall_du = hazard_if.busy_du;
+  assign hazard_if.stall_mu = 0;
+  assign hazard_if.stall_ls = hazard_if.busy_ls;
+
+  assign hazard_if.stall_ex = hazard_if.rob_full;
+  assign hazard_if.stall_commit = 0;
+  assign hazard_if.fetch_decode_flush = hazard_if.npc_sel | hazard_if.insert_priv_pc | hazard_if.ifence_flush | hazard_if.csr_flush | cb_if.flush;
+  assign hazard_if.decode_execute_flush = hazard_if.npc_sel | hazard_if.insert_priv_pc | cb_if.flush ;
+
+  
+  //Branch jump 
+  assign branch_jump = hazard_if.jump || (hazard_if.branch && hazard_if.mispredict);
+  assign hazard_if.npc_sel = hazard_if.mispredict & ~intr_exception;
+
+
+  //Pipe flush logic 
+
+
+ // RAW hazard because of load -> Stall the pipe
+  //assign load_stall = (((hazard_if.reg_rd == hazard_if.reg_rs1) || (hazard_if.reg_rd == hazard_if.reg_rs2)) & hazard_if.load) ? 1'b1 : 1'b0;
+  //assign hazard_if.stall = hazard_if.d_mem_busy & ~hazard_if.csr & ~hazard_if.ifence_flush & ~intr_e_flush | hazard_if.stall_ex;
+
+ //Exceptions
+  //assign e_fetch_stage       = hazard_if.fault_insn | hazard_if.mal_insn | hazard_if.fault_l | hazard_if.fault_s; REMOVE?
+  //assign e_decode_stage      = hazard_if.illegal_insn | hazard_if.breakpoint | hazard_if.env_m;                   REMOVE?
+  //assign e_execute_stage     = hazard_if.mal_l | hazard_if.mal_s;                                                 REMOVE?
+  assign e_fetch_stage       = 0;
+  assign e_decode_stage      = 0;
+  assign e_execute_stage     = 0;
+
+  assign e_commit_stage     = hazard_if.fault_insn | hazard_if.mal_insn | hazard_if.fault_l | 
+                              hazard_if.fault_s | hazard_if.illegal_insn | hazard_if.breakpoint | 
+                              hazard_if.env_m | hazard_if.mal_l | hazard_if.mal_s;
+
+  assign exception_from_cb = hazard_if.mal_insn | hazard_if.illegal_insn | hazard_if.mal_l | hazard_if.mal_s;
+
+  /* Send Exception notifications to Prv Block */
+  assign prv_pipe_if.wb_enable    = ~hazard_if.stall_fetch_decode && ~hazard_if.npc_sel; 
+  assign prv_pipe_if.fault_insn   = hazard_if.fault_insn;
+  assign prv_pipe_if.mal_insn     = hazard_if.mal_insn;//pc address [2:0] != 'b00
+  assign prv_pipe_if.illegal_insn = hazard_if.illegal_insn;//opcode illegal
+  assign prv_pipe_if.fault_l      = hazard_if.fault_l;
+  assign prv_pipe_if.mal_l        = hazard_if.mal_l;//memory load addr incorrect
+  assign prv_pipe_if.fault_s      = hazard_if.fault_s;
+  assign prv_pipe_if.mal_s        = hazard_if.mal_s;//memory store addr incorrect
+  assign prv_pipe_if.breakpoint   = hazard_if.breakpoint; 
+  assign prv_pipe_if.env_m        = hazard_if.env_m;
+  assign prv_pipe_if.ret          = hazard_if.ret;
+  assign prv_pipe_if.ex_rmgmt     = 1'b0;
+  
+  assign prv_pipe_if.epc     =   (hazard_if.breakpoint || hazard_if.env_m) ? hazard_if.pc_ex :
+                                 exception_from_cb ? cb_if.epc : 
+                                 hazard_if.pc_fe;
+  assign prv_pipe_if.badaddr = (hazard_if.mal_insn | hazard_if.fault_insn) ? cb_if.epc : 
+                               hazard_if.badaddr_d;  
+  
+  assign hazard_if.intr = ~e_commit_stage & prv_pipe_if.intr;
+  
+  assign hazard_if.insert_priv_pc = prv_pipe_if.insert_pc;
+  assign hazard_if.priv_pc        = prv_pipe_if.priv_pc;
+  assign hazard_if.iren           = 1'b1; 
+  assign hazard_if.loadstore_flush = cb_if.flush;
+
+
+  assign prv_pipe_if.pipe_clear   =   hazard_if.intr ? hazard_if.rob_empty : cb_if.flush | hazard_if.breakpoint | hazard_if.env_m | hazard_if.ret;
+  assign hazard_if.intr_taken = hazard_if.intr & hazard_if.rob_empty;
+
+  // assign intr_exception = hazard_if.intr_taken | prv_pipe_if.ret; //TODO÷
+  // assign intr_e_flush = intr_exception;
+  // assign hazard_if.csr_flush = hazard_if.csr;
+  // assign hazard_if.ifence_flush = hazard_if.ifence && (~hazard_if.dflushed || ~hazard_if.iflushed);
+  // assign hazard_if.fetch_decode_flush  = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush;
+  // assign hazard_if.decode_execute_flush  = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush;
+
+  assign intr_exception = 0;
+  assign intr_e_flush = 0;
+  assign hazard_if.csr_flush = hazard_if.csr;
+  //assign hazard_if.csr_flush = 0;
+  assign hazard_if.ifence_flush = 0;
+  assign hazard_if.execute_commit_flush  = hazard_if.csr_flush | cb_if.flush;
+
+
+
+
+  
+endmodule
diff --git a/source_code/ooo/wscript b/source_code/ooo/wscript
new file mode 100644
index 0000000..2f19857
--- /dev/null
+++ b/source_code/ooo/wscript
@@ -0,0 +1,12 @@
+#! /usr/bin/env python
+#encoding: utf-8
+
+def configure(cnf):
+  cnf.recurse(src)
+def configure(cnf):
+  cnf.recurse(include)
+
+def sim_source(cnf):
+  cnf.recurse(src)
+def sim_source(cnf):
+  cnf.recurse(include)
diff --git a/source_code/packages/alu_types_pkg.sv b/source_code/packages/alu_types_pkg.sv
index d0fd74a..e062c08 100644
--- a/source_code/packages/alu_types_pkg.sv
+++ b/source_code/packages/alu_types_pkg.sv
@@ -26,18 +26,18 @@
 
 package alu_types_pkg;
 
-  typedef enum logic [3:0] {
-    ALU_SLL   = 4'b0000,
-    ALU_SRL   = 4'b0001,
-    ALU_SRA   = 4'b0010,
-    ALU_ADD   = 4'b0011,
-    ALU_SUB   = 4'b0100,
-    ALU_AND   = 4'b0101,
-    ALU_OR    = 4'b0110,
-    ALU_XOR   = 4'b0111,
-    ALU_SLT   = 4'b1000,
-    ALU_SLTU  = 4'b1001
-  } aluop_t;
+  // typedef enum logic [3:0] {
+  //   ALU_SLL   = 4'b0000,
+  //   ALU_SRL   = 4'b0001,
+  //   ALU_SRA   = 4'b0010,
+  //   ALU_ADD   = 4'b0011,
+  //   ALU_SUB   = 4'b0100,
+  //   ALU_AND   = 4'b0101,
+  //   ALU_OR    = 4'b0110,
+  //   ALU_XOR   = 4'b0111,
+  //   ALU_SLT   = 4'b1000,
+  //   ALU_SLTU  = 4'b1001
+  // } aluop_t;
 
 endpackage
 `endif
diff --git a/source_code/packages/machine_mode_types_1_11_pkg.sv b/source_code/packages/machine_mode_types_1_11_pkg.sv
index 416ef9b..c3816d0 100644
--- a/source_code/packages/machine_mode_types_1_11_pkg.sv
+++ b/source_code/packages/machine_mode_types_1_11_pkg.sv
@@ -28,12 +28,6 @@
 package machine_mode_types_1_11_pkg;
 
   typedef enum logic [11:0] {
-    /* Floating point addresses */
-    
-    FFLAGS_ADDR          = 12'h001,
-    FRM_ADDR             = 12'h002,
-    FCSR_ADDR            = 12'h003,
-
     /* Machine Mode Addresses */
     MVENDORID_ADDR  = 12'hF11,
     MARCHID_ADDR    = 12'hF12,
@@ -57,7 +51,15 @@ package machine_mode_types_1_11_pkg;
     MCYCLE_ADDR      = 12'hB00,
     MINSTRET_ADDR    = 12'hB02,
     MCYCLEH_ADDR     = 12'hB80,
-    MINSTRETH_ADDR   = 12'hB82
+    MINSTRETH_ADDR   = 12'hB82,
+
+    VSTART_ADDR      = 12'h008,
+    VXSAT_ADDR       = 12'h009,
+    VXRM_ADDR        = 12'h00A,
+    VCSR_ADDR        = 12'h00F,
+    VL_ADDR          = 12'hC20,
+    VTYPE_ADDR       = 12'hC21,
+    VLENB_ADDR       = 12'hC22
   } csr_addr_t;
 
   /* Machine Mode Register Types */
@@ -265,13 +267,24 @@ package machine_mode_types_1_11_pkg;
   typedef logic [31:0] mtohost_t;
   typedef logic [31:0] mfromhost_t;
 
-  /* Floating point register */
+  //Vector
+  typedef logic [31:0] vstart_t;
+  typedef logic [31:0] vxsat;  //not used yet
+  typedef logic [31:0] vxrm;  //not used yet
+  typedef logic [31:0] vcsr;  //not used yet
+  typedef logic [31:0] vl_t;
+  
   typedef struct packed {
-      logic [23:0] reserved;
-      logic [2:0] frm;
-      logic [4:0] fflags;
-  } fcsr_t;
+    logic vill;
+    logic [21:0] reserved;
+    logic vma;
+    logic vta;
+    logic [2:0] sew;
+    logic [2:0] lmul;
+  } vtype_t;
 
+  typedef logic [31:0] vlenb_t;
+  
 endpackage
 
 `endif //MACHINE_MODE_TYPES_1_11_PKG_SV
diff --git a/source_code/packages/risc_mgmt/rv32m_pkg.sv b/source_code/packages/risc_mgmt/rv32m_pkg.sv
deleted file mode 100644
index 7b2b40e..0000000
--- a/source_code/packages/risc_mgmt/rv32m_pkg.sv
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*
-*
-*   Filename:     rv32m_pkg.sv
-*
-*   Created by:   John Skubic
-*   Email:        jskubic@purdue.edu
-*   Date Created: 02/07/2017
-*   Description:  Types for the RV32M standard extension 
-*/
-
-`ifndef RV32M_PKG_SV
-`define RV32M_PKG_SV
-
-package rv32m_pkg;
-
-  localparam RV32M_OPCODE = 7'b0110011;
-  localparam RV32M_OPCODE_MINOR = 7'b0000001;
-
-  typedef struct packed {
-    logic [6:0] opcode_minor;
-    logic [4:0] rs2;
-    logic [4:0] rs1;
-    logic [2:0] funct;
-    logic [4:0] rd;
-    logic [6:0] opcode_major;
-  } rv32m_insn_t;
-
-  // Interface between the decode and execute stage
-  // This must be named "decode_execute_t"
-  typedef struct packed {
-    logic mul;
-    logic div;
-    logic rem;
-    logic usign_usign;
-    logic sign_sign;
-    logic sign_usign;
-    logic lower_word;
-    logic start;
-  } decode_execute_t;
-
-  // Interface between the execute and memory stage
-  // This must be named "execute_memory_t"
-  typedef struct packed {
-    logic signal;
-  } execute_memory_t;
-
-  
-
-endpackage
-
-`endif //RV32M_PKG_SV
diff --git a/source_code/packages/rv32f_types_pkg.sv b/source_code/packages/rv32f_types_pkg.sv
deleted file mode 100644
index 85a027b..0000000
--- a/source_code/packages/rv32f_types_pkg.sv
+++ /dev/null
@@ -1,22 +0,0 @@
-`ifndef RV32F_TYPES_PKG_SV
-`define RV32F_TYPES_PKG_SV
-package rv32f_types_pkg;
-    parameter FOP_W = 7;
-    parameter F_FUNCT_W = 7;
-    typedef enum logic [FOP_W-1:0] {
-        FLW       = 7'b0000111,
-        FSW       = 7'b0100111,
-        F_RTYPE   = 7'b1010011 //for add sub and mul
-    } f_opcode_t;
-
-    typedef enum logic [F_FUNCT_W-1:0] {
-        FADD      = 7'b0,
-        FSUB      = 7'b0000100,
-        FMUL      = 7'b0001000,
-        FMVXW     = 7'b1110000,
-        FMVWX     = 7'b1111000
-    } f_funct7_t;
-
-endpackage
-
-`endif
diff --git a/source_code/packages/rv32i_types_pkg.sv b/source_code/packages/rv32i_types_pkg.sv
index 92d79f2..262d3d8 100644
--- a/source_code/packages/rv32i_types_pkg.sv
+++ b/source_code/packages/rv32i_types_pkg.sv
@@ -1,22 +1,22 @@
 /*
 *   Copyright 2016 Purdue University
-*   
+*
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
-*   
+*
 *       http://www.apache.org/licenses/LICENSE-2.0
-*   
+*
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
-*   
-*   
+*
+*
 *   Filename:     rv32i_types_pkg.sv
-*   
-*   Created by:   Jacob R. Stevens	
+*
+*   Created by:   Jacob R. Stevens
 *   Email:        steven69@purdue.edu
 *   Date Created: 06/01/2016
 *   Description:  Package containing types used for a RV32I implementation
@@ -24,7 +24,11 @@
 
 `ifndef RV32I_TYPES_PKG_SV
 `define RV32I_TYPES_PKG_SV
+
+`include "machine_mode_types_1_11_pkg.sv"
+
 package rv32i_types_pkg;
+  // import alu_types_pkg::aluop_t;
   parameter WORD_SIZE = 32;
   parameter RAM_ADDR_SIZE = 32;
   parameter OP_W = 7;
@@ -33,6 +37,14 @@ package rv32i_types_pkg;
   parameter SW_W = 3;
   parameter IMM_W = 3;
   parameter REG_W = 3;
+  parameter NUM_CB_ENTRY = 16;
+
+  //RVV constants
+  parameter VLEN_WIDTH = 7; // 128 bit registers
+  parameter VL_WIDTH = VLEN_WIDTH; //width of largest vector = VLENB * 8 
+  parameter VLEN = 1 << 7; 
+  parameter VLENB = VLEN / 8; //VLEN in bytes
+  parameter NUM_LANES = 2;
 
   typedef logic [WORD_SIZE-1:0] word_t;
 
@@ -45,12 +57,16 @@ package rv32i_types_pkg;
     BRANCH    = 7'b1100011,
     // All load instructions share an opcode
     LOAD      = 7'b0000011,
+    LOAD_FP   = 7'b0000111,
     // All store instructions share an opcode
     STORE     = 7'b0100011,
+    STORE_FP  = 7'b0100111,
     // All immediate ALU instructions share an opcode
     IMMED     = 7'b0010011,
     // All register-register instructions share an opcode
     REGREG    = 7'b0110011,
+    // Vector opcode
+    VECTOR    = 7'b1010111,
     // All system instructions share an opcode
     SYSTEM    = 7'b1110011,
     MISCMEM  = 7'b0001111
@@ -63,7 +79,7 @@ package rv32i_types_pkg;
     BGE     = 3'b101,
     BLTU    = 3'b110,
     BGEU    = 3'b111
-  } branch_t;  
+  } branch_t;
 
   typedef enum logic [LD_W-1:0] {
     LB      = 3'b000,
@@ -94,7 +110,7 @@ package rv32i_types_pkg;
 
   typedef enum logic [REG_W-1:0] {
     // Add/Sub based on bit 30 of instruction
-    //  0 / 1 
+    //  0 / 1
     ADDSUB  = 3'b000,
     SLL     = 3'b001,
     SLT     = 3'b010,
@@ -110,7 +126,7 @@ package rv32i_types_pkg;
   typedef enum logic [2:0] {
     // Non CSR contains ECALL, EBREAK, and xRET instructions
     // ECALL/EBREAK based on bit 20 of instruction
-    //   0  /   1 
+    //   0  /   1
     //   xRET based on bits 28 and 29 of instruction
     PRIV        = 3'b000,
     CSRRW       = 3'b001,
@@ -135,6 +151,26 @@ package rv32i_types_pkg;
     FENCEI  = 3'b001
   } rv32i_miscmem_t;
 
+  typedef enum logic [3:0] {
+    ALU_SLL   = 4'b0000,
+    ALU_SRL   = 4'b0001,
+    ALU_SRA   = 4'b0010,
+    ALU_ADD   = 4'b0011,
+    ALU_SUB   = 4'b0100,
+    ALU_AND   = 4'b0101,
+    ALU_OR    = 4'b0110,
+    ALU_XOR   = 4'b0111,
+    ALU_SLT   = 4'b1000,
+    ALU_SLTU  = 4'b1001
+  } aluop_t;
+
+  typedef enum logic [1:0] {
+    NO_EXCEPTION = 2'b00,
+    MAL_NORMAL = 2'b01,
+    MAL_LOADSTORE = 2'b10,
+    ILLEGAL = 2'b11
+  } cb_exception_t;
+
   typedef struct packed {
     logic [6:0] funct7;
     logic [4:0] rs2;
@@ -143,14 +179,14 @@ package rv32i_types_pkg;
     logic [4:0] rd;
     opcode_t    opcode;
   } rtype_t;
-
+  
   typedef struct packed {
     logic [11:0]  imm11_00;
     logic [4:0]   rs1;
     logic [2:0]   funct3;
     logic [4:0]   rd;
     opcode_t      opcode;
-  } itype_t; 
+  } itype_t;
 
   typedef struct packed {
     logic [6:0] imm11_05;
@@ -203,5 +239,233 @@ package rv32i_types_pkg;
     word_t        prediction;
   } fetch_ex_pipeline_reg_t;
 
+  typedef enum logic[1:0] {
+    ARITH_S,
+    MUL_S,
+    DIV_S,
+    LOADSTORE_S
+  } scalar_fu_t;
+
+  typedef enum logic [1:0] {
+    SIGNED          = 2'b11,
+    SIGNED_UNSIGNED = 2'b01,
+    UNSIGNED_SIGNED = 2'b10,
+    UNSIGNED        = 2'b00
+  } sign_type_t;
+
+  typedef enum logic [2:0] {
+    LOAD_SRC = 3'd0,
+    JUMP_SRC = 3'd1,
+    LUI_SRC  = 3'd2,
+    ALU_SRC  = 3'd3,
+    CSR      = 3'd4
+  } w_src_t;
+
+  typedef struct packed{
+    word_t rs1_data;
+    word_t rs2_data;
+  } common_fu_io_t;
+
+  /***** Control Signal Types for Functional Units *****/
+
+  // TODO: needs the remaining signals for CSR and others
+  typedef struct packed {
+    logic ena;
+    aluop_t alu_op;
+    w_src_t w_src;
+    logic wen;
+    logic [4:0] reg_rd;
+    logic ready_a;
+    logic [$clog2(NUM_CB_ENTRY)-1:0] index_a; 
+  } arith_control_signals_t;
+
+  typedef struct packed {
+    logic ena;
+    logic high_low_sel;
+    sign_type_t is_signed;
+    logic decode_done;
+    logic wen;
+    logic [4:0] reg_rd;
+    logic ready_mu;
+    logic [$clog2(NUM_CB_ENTRY)-1:0] index_mu; 
+  } mult_control_signals_t;
+
+  typedef struct packed {
+    logic ena;
+    logic div_type;
+    logic is_signed;
+    logic wen;
+    logic [4:0] reg_rd;
+    logic ready_du;
+    logic [$clog2(NUM_CB_ENTRY)-1:0] index_du; 
+  } div_control_signals_t;
+
+  typedef struct packed {
+    logic ena;
+    load_t load_type;
+    //logic byte_en;
+    logic dren;
+    logic dwen;
+    opcode_t opcode;
+    logic wen;
+    logic [4:0] reg_rd;
+    logic ready_ls;
+    logic [$clog2(NUM_CB_ENTRY)-1:0] index_ls; 
+  } lsu_control_signals_t;
+
+  typedef struct packed {
+    logic csr_instr;
+    logic vector_csr_instr;
+    logic csr_swap;
+    logic csr_clr;
+    logic csr_set;
+    logic vtype_imm;
+    logic vl_imm;
+    machine_mode_types_1_11_pkg::csr_addr_t csr_addr;
+    logic csr_imm;
+    logic [31:0] csr_imm_value;
+    logic instr_null;
+    logic [31:0] csr_wdata;
+    logic [31:0] instr;
+  } csr_control_signals_t;
+
+  typedef struct packed {
+    branch_t branch_type;
+    logic branch_instr;
+    logic prediction;
+  } branch_control_signals_t;
+
+  typedef struct packed {
+    logic jump_instr;
+    word_t j_base;
+    word_t j_offset;
+    logic j_sel;
+  } jump_control_signals_t;
+
+
+  // do not use atm
+  typedef struct packed {
+    word_t w_data;
+    logic [4:0] reg_rd;
+    logic wen;
+  } fu_out_t;
+
+  typedef struct packed {
+    logic [2:0] funct3;
+    logic [11:0] funct12;
+    logic [11:0] imm_S;
+    logic [11:0] imm_I;
+    word_t imm_U;
+    logic [11:0] imm_UJ_ext;
+    logic [12:0] imm_SB;
+    logic [29:0] instr_30;
+    logic [4:0] reg_rs1;
+    logic [4:0] reg_rs2;
+    logic [4:0] reg_rd; 
+    word_t instr;
+    word_t pc;
+    opcode_t opcode;
+  } cpu_tracker_t;
+
+  // TODO: add floating point control signals struct here
+
+  typedef struct packed {
+    logic [31:0] rs1_data;
+    logic [31:0] rs2_data;
+    logic start_mu;
+    logic high_low_sel;
+    logic decode_done;
+    logic wen;
+    sign_type_t is_signed;
+    logic [4:0] reg_rd;
+  } multiply_struct_t;
+
+  typedef struct packed {
+    logic [31:0] rs1_data;
+    logic [31:0] rs2_data;
+    logic start_div;
+    logic div_type;
+    logic is_signed_div;
+    logic wen;
+    logic [4:0] reg_rd;
+  } divide_struct_t;
+
+  typedef struct packed {
+    logic [31:0] port_a;
+    logic [31:0] port_b;
+    logic [31:0] store_data;
+    logic [31:0] pc;
+    load_t load_type;
+    logic byte_en;
+    logic dren;
+    logic dwen;
+    logic wen;
+    logic [4:0] reg_rd;
+    opcode_t opcode;
+  } loadstore_struct_t;
+
+  typedef struct packed {
+    aluop_t aluop;
+    logic [31:0] port_a;
+    logic [31:0] port_b;
+    logic [31:0] reg_file_wdata;
+    logic [31:0] pc;
+    logic wen;
+    logic [4:0] reg_rd;
+  } arith_struct_t;
+
+  typedef struct packed {
+    logic jump_instr;
+    word_t j_base;
+    word_t j_offset;
+    logic j_sel;
+  } jump_struct_t;
+
+  typedef struct packed {
+    logic branch_instr;
+    logic prediction;
+    word_t pc4;
+  } branch_struct_t;
+
+  typedef struct packed {
+    logic csr_instr;
+    logic csr_swap;
+    logic csr_clr;
+    logic csr_set;
+    machine_mode_types_1_11_pkg::csr_addr_t csr_addr;
+    logic csr_imm;
+    logic [31:0] csr_imm_value;
+    logic [31:0] instr;
+  } csr_struct_t;
+
+  typedef struct packed {
+    logic illegal_insn;
+    logic breakpoint;
+    logic ecall_insn;
+    logic ret_insn;
+    logic token;
+    logic mal_insn;
+    logic fault_insn;
+    logic wfi;
+    w_src_t w_src;
+  } exception_control_signals_t;
+
+  typedef struct packed {
+    logic [2:0] funct3;
+    logic [11:0] funct12;
+    logic [11:0] imm_S;
+    logic [11:0] imm_I;
+    word_t imm_U;
+    logic [11:0] imm_UJ_ext;
+    logic [12:0] imm_SB;
+    logic [29:0] instr_30;
+    logic [4:0] reg_rs1;
+    logic [4:0] reg_rs2;
+    logic [4:0] reg_rd; 
+    word_t instr;
+    word_t pc;
+    opcode_t opcode;
+  } cpu_tracker_signals_t;
+
 endpackage
-`endif
+`endif //RV32I_TYPES_PKG_SV
diff --git a/source_code/packages/rv32m_pkg.sv b/source_code/packages/rv32m_pkg.sv
new file mode 100644
index 0000000..d2e5455
--- /dev/null
+++ b/source_code/packages/rv32m_pkg.sv
@@ -0,0 +1,63 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     rv32m_pkg.sv
+*
+*   Created by:   John Skubic
+*   Email:        jskubic@purdue.edu
+*   Date Created: 02/07/2017
+*   Description:  Types for the RV32M standard extension 
+*/
+
+`ifndef RV32M_PKG_SV
+`define RV32M_PKG_SV
+
+package rv32m_pkg;
+
+  localparam RV32M_OPCODE = 7'b0110011;
+  localparam RV32M_OPCODE_MINOR = 7'b0000001;
+
+  typedef struct packed {
+    logic [6:0] funct7;
+    logic [4:0] rs2;
+    logic [4:0] rs1;
+    logic [2:0] funct;
+    logic [4:0] rd;
+    logic [6:0] opcode_major;
+  } rv32m_insn_t;
+
+  // Interface between the decode and execute stage
+  // This must be named "decode_execute_t"
+  typedef struct packed {
+    logic mul;
+    logic div;
+    logic rem;
+    logic usign_usign;
+    logic sign_sign;
+    logic sign_usign;
+    logic lower_word;
+    logic start;
+  } decode_execute_t;
+
+  // Interface between the execute and memory stage
+  // This must be named "execute_memory_t"
+  typedef struct packed {
+    logic signal;
+  } execute_memory_t;
+
+endpackage
+
+`endif //RV32M_PKG_SV
diff --git a/source_code/pipelines/pipe5/include/pipe5_hazard_forwarding_unit_if.vh b/source_code/pipelines/pipe5/include/pipe5_hazard_forwarding_unit_if.vh
index c054e6d..f8210e9 100644
--- a/source_code/pipelines/pipe5/include/pipe5_hazard_forwarding_unit_if.vh
+++ b/source_code/pipelines/pipe5/include/pipe5_hazard_forwarding_unit_if.vh
@@ -1,100 +1,100 @@
 
 
-`ifndef PIPE5_HAZARD_UNIT_IF_VH
-`define PIPE5_HAZARD_UNIT_IF_VH
-
-interface pipe5_hazard_forwarding_unit_if();
-
-    import rv32i_types_pkg::word_t;
-
-    // Pipeline Control Signals
-    logic pc_en, npc_sel;
-    logic fd_stall, dx_stall, xm_stall, mw_stall;
-    logic fd_flush, dx_flush, xm_flush, mw_flush;
-    logic iren; // TODO: Should hazard unit generate this?
-
-    // Pipeline status signals
-    logic f_busy, x_busy, m_busy;
-    logic d_dren, d_dwen, d_csr_access, m_dren, m_dwen;
-    logic fence_stall;
-    logic branch_taken, prediction, jump, branch,
-          mispredict, halt, ret;
-    word_t pc;
-
-    // Pipeline exception signals
-    logic fault_insn, mal_insn, illegal_insn, 
-          fault_ld, mal_ld, fault_st, mal_st,
-          breakpoint, env_m;
-    // Exception handling exclusively in mem stage, only single epc/bad addr collection point
-    word_t epc, badaddr;
-
-    // Priv unit status signals
-    word_t priv_pc;
-    logic insert_priv_pc;
-
-    // Dependency Tracking Signals
-    pipe5_types_pkg::rsel_t rs1_d, rs2_d, rs1_x, rs2_x, rd_x, rd_m, rd_w;
-    logic regWEN_m, regWEN_w;
-
-    // Forwarding control
-    pipe5_types_pkg::bypass_t bypass_a, bypass_b; // Forwarding paths into ALU
-    // Forwarding paths for non-ALU uses of rs1 and rs2. Covers cases like JALR, CSRRW, Branch, etc.
-    // TODO: Do we need the above ones? We could place forwarding muxes such that their
-    // outputs feed to both the ALU and the next pipeline stage...
-    pipe5_types_pkg::bypass_t bypass_rs1, bypass_rs2;
+// `ifndef PIPE5_HAZARD_UNIT_IF_VH
+// `define PIPE5_HAZARD_UNIT_IF_VH
+
+// interface pipe5_hazard_forwarding_unit_if();
+
+//     import rv32i_types_pkg::word_t;
+
+//     // Pipeline Control Signals
+//     logic pc_en, npc_sel;
+//     logic fd_stall, dx_stall, xm_stall, mw_stall;
+//     logic fd_flush, dx_flush, xm_flush, mw_flush;
+//     logic iren; // TODO: Should hazard unit generate this?
+
+//     // Pipeline status signals
+//     logic f_busy, x_busy, m_busy;
+//     logic d_dren, d_dwen, d_csr_access, m_dren, m_dwen;
+//     logic fence_stall;
+//     logic branch_taken, prediction, jump, branch,
+//           mispredict, halt, ret;
+//     word_t pc;
+
+//     // Pipeline exception signals
+//     logic fault_insn, mal_insn, illegal_insn, 
+//           fault_ld, mal_ld, fault_st, mal_st,
+//           breakpoint, env_m;
+//     // Exception handling exclusively in mem stage, only single epc/bad addr collection point
+//     word_t epc, badaddr;
+
+//     // Priv unit status signals
+//     word_t priv_pc;
+//     logic insert_priv_pc;
+
+//     // Dependency Tracking Signals
+//     pipe5_types_pkg::rsel_t rs1_d, rs2_d, rs1_x, rs2_x, rd_x, rd_m, rd_w;
+//     logic regWEN_m, regWEN_w;
+
+//     // Forwarding control
+//     pipe5_types_pkg::bypass_t bypass_a, bypass_b; // Forwarding paths into ALU
+//     // Forwarding paths for non-ALU uses of rs1 and rs2. Covers cases like JALR, CSRRW, Branch, etc.
+//     // TODO: Do we need the above ones? We could place forwarding muxes such that their
+//     // outputs feed to both the ALU and the next pipeline stage...
+//     pipe5_types_pkg::bypass_t bypass_rs1, bypass_rs2;
 
     
-    modport hazard_forwarding_unit(
-        input   f_busy, x_busy, m_busy, dren, dwen, fence_stall, branch_taken,
-                prediction, jump, branch, mispredict, halt, ret, pc,
-                fault_insn, mal_insn, illegal_insn, fault_ld, mal_ld, fault_st, mal_st,
-                breakpoint, env_m, epc_f, epc_m, badaddr_f, badaddr_m,
-                rs1_x, rs2_x, rd_m, rd_w, regWEN_m, regWEN_w,
-
-        output  pc_en, npc_sel, fd_stall, dx_stall, xm_stall, mw_stall,
-                fd_flush, dx_flush, xm_flush, mw_flush, iren,
-                priv_pc, insert_priv_pc,
-                bypass_a, bypass_b, bypass_rs1, bypass_rs2
-    );
-
-    modport fetch1(
-        input   pc_en, npc_sel, fd_stall, fd_flush, 
-                priv_pc, insert_priv_pc
-    );
-
-    modport fetch2(
-        input   pc_en, fd_stall, fd_flush, 
-                iren, 
-
-        output  f_busy, fault_insn, mal_insn, epc_f, badaddr_f //f_busy doesn't do anything
-    );
-
-
-    modport decode(
-        input   dx_stall, dx_flush,
-        output  rs1_d, rs2_d, d_dren, d_dwen, d_csr_access
-    );
-
-    modport execute(
-        input   xm_stall, xm_flush, x_busy, bypass_a, bypass_b,
-                bypass_rs1, bypass_rs2,
-
-        output  rs1_x, rs2_x, rd_x
-    );
-
-    modport memory(
-        input   mw_stall, mw_flush, npc_sel,
-
-        output  m_busy, dren, dwen, jump, branch, mispredict, halt, ret,
-                fault_ld, mal_ld, fault_st, mal_st, epc_m, badaddr_m, 
-                fence_stall, breakpoint, env_m,
-                rd_m, regWEN_m
-    );
-
-    modport writeback(
-        input mw_stall, mw_flush,
-        output rd_w, regWEN_w
-    );
-
-endinterface
-`endif
+//     modport hazard_forwarding_unit(
+//         input   f_busy, x_busy, m_busy, dren, dwen, fence_stall, branch_taken,
+//                 prediction, jump, branch, mispredict, halt, ret, pc,
+//                 fault_insn, mal_insn, illegal_insn, fault_ld, mal_ld, fault_st, mal_st,
+//                 breakpoint, env_m, epc_f, epc_m, badaddr_f, badaddr_m,
+//                 rs1_x, rs2_x, rd_m, rd_w, regWEN_m, regWEN_w,
+
+//         output  pc_en, npc_sel, fd_stall, dx_stall, xm_stall, mw_stall,
+//                 fd_flush, dx_flush, xm_flush, mw_flush, iren,
+//                 priv_pc, insert_priv_pc,
+//                 bypass_a, bypass_b, bypass_rs1, bypass_rs2
+//     );
+
+//     modport fetch1(
+//         input   pc_en, npc_sel, fd_stall, fd_flush, 
+//                 priv_pc, insert_priv_pc
+//     );
+
+//     modport fetch2(
+//         input   pc_en, fd_stall, fd_flush, 
+//                 iren, 
+
+//         output  f_busy, fault_insn, mal_insn, epc_f, badaddr_f //f_busy doesn't do anything
+//     );
+
+
+//     modport decode(
+//         input   dx_stall, dx_flush,
+//         output  rs1_d, rs2_d, d_dren, d_dwen, d_csr_access
+//     );
+
+//     modport execute(
+//         input   xm_stall, xm_flush, x_busy, bypass_a, bypass_b,
+//                 bypass_rs1, bypass_rs2,
+
+//         output  rs1_x, rs2_x, rd_x
+//     );
+
+//     modport memory(
+//         input   mw_stall, mw_flush, npc_sel,
+
+//         output  m_busy, dren, dwen, jump, branch, mispredict, halt, ret,
+//                 fault_ld, mal_ld, fault_st, mal_st, epc_m, badaddr_m, 
+//                 fence_stall, breakpoint, env_m,
+//                 rd_m, regWEN_m
+//     );
+
+//     modport writeback(
+//         input mw_stall, mw_flush,
+//         output rd_w, regWEN_w
+//     );
+
+// endinterface
+// `endif
diff --git a/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv b/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
index fad1f6c..2a84a41 100644
--- a/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_decode_stage.sv
@@ -27,7 +27,6 @@
 `include "control_unit_if.vh"
 `include "component_selection_defines.vh"
 `include "rv32i_reg_file_if.vh"
-`include "rv32f_reg_file_if.vh"
 `include "pipe5_hazard_unit_if.vh"
 
 
@@ -35,14 +34,13 @@ module pipe5_decode_stage (
   input logic CLK, nRST, halt,
   pipe5_fetch2_decode_if.decode fetch_decode_if,
   pipe5_decode_execute_if.decode decode_execute_if,
-  rv32f_reg_file_if.decode frf_if,
   rv32i_reg_file_if.decode rf_if,
   pipe5_hazard_unit_if.decode hazard_if
 );
 
   import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
   import alu_types_pkg::*;
+  //import rv32m_pkg::*;
   import machine_mode_types_1_11_pkg::*;
   logic [2:0] funct3;
   logic [11:0] funct12;
@@ -61,18 +59,17 @@ module pipe5_decode_stage (
    // .rmgmt_req_reg_w(rm_if.req_reg_w)
   );
 
-  
+  logic mul_ena, div_ena;
+  assign mul_ena = cu_if.sfu_type == MUL_S;
+  assign div_ena = cu_if.sfu_type == DIV_S;
+
+
   /*******************************************************
   * Reg File Logic
   *******************************************************/
    assign rf_if.rs1 = cu_if.reg_rs1;
    assign rf_if.rs2 = cu_if.reg_rs2;
 
-   assign frf_if.f_rs1 = cu_if.f_reg_rs1;
-   assign frf_if.f_rs2 = cu_if.f_reg_rs2;
-   //assign frf_if.f_frm_in = cu_if.frm_in;
-
-
   /*******************************************************
   * MISC RISC-MGMT Logic
   *******************************************************/
@@ -109,24 +106,24 @@ module pipe5_decode_stage (
   /*******************************************************
   *** ALU and Associated Logic 
   *******************************************************/
-  word_t imm_or_shamt, port_a, port_b, w_data, f_wdata;
+  word_t imm_or_shamt, next_port_a, next_port_b, w_data;
   assign imm_or_shamt = (cu_if.imm_shamt_sel == 1'b1) ? cu_if.shamt : imm_I_ext;
  
   always_comb begin
     case (cu_if.alu_a_sel)
-      2'd0: port_a = rf_if.rs1_data;
-      2'd1: port_a = imm_S_ext;
-      2'd2: port_a = fetch_decode_if.pc;
-      2'd3: port_a = '0; //Not Used 
+      2'd0: next_port_a = rf_if.rs1_data;
+      2'd1: next_port_a = imm_S_ext;
+      2'd2: next_port_a = fetch_decode_if.pc;
+      2'd3: next_port_a = '0; //Not Used 
     endcase
   end
  
   always_comb begin
     case(cu_if.alu_b_sel)
-      2'd0: port_b = rf_if.rs1_data;
-      2'd1: port_b = rf_if.rs2_data;
-      2'd2: port_b = imm_or_shamt;
-      2'd3: port_b = cu_if.imm_U;
+      2'd0: next_port_b = rf_if.rs1_data;
+      2'd1: next_port_b = rf_if.rs2_data;
+      2'd2: next_port_b = imm_or_shamt;
+      2'd3: next_port_b = cu_if.imm_U;
     endcase
   end
 
@@ -135,7 +132,7 @@ module pipe5_decode_stage (
     //  w_data = rm_if.reg_wdata;
     //end 
     //else begin
-      case(cu_if.w_sel)
+      case(cu_if.w_src)
         3'd1    : w_data = fetch_decode_if.pc4;
         3'd2    : w_data = cu_if.imm_U;
         default : w_data = '0; 
@@ -181,9 +178,8 @@ module pipe5_decode_stage (
         decode_execute_if.rs1_data                  <='h0; 
         decode_execute_if.rs2_data                  <='h0; 
         decode_execute_if.lui_instr                 <='h0;
-        decode_execute_if.aluop                     <=aluop_t'('h0); 
         decode_execute_if.reg_file_wdata            <='h0; 
-        decode_execute_if.w_sel                     <='h0; 
+        decode_execute_if.w_src                     <='h0; 
         decode_execute_if.wen                       <='h0; 
         decode_execute_if.dwen                      <='h0; 
         decode_execute_if.dren                      <='h0; 
@@ -225,16 +221,6 @@ module pipe5_decode_stage (
         decode_execute_if.imm_UJ_ext                <= 'h0;
         decode_execute_if.imm_SB                    <= 'h0;
         decode_execute_if.instr_30                  <= 'h0;
-        decode_execute_if.f_reg_rs1                 <= 'h0;
-        decode_execute_if.f_reg_rs2                 <= 'h0;
-        decode_execute_if.f_reg_rd                  <= 'h0;
-        decode_execute_if.f_wen                     <= 'h0;
-        decode_execute_if.f_wsel                    <= 'h0;
-        decode_execute_if.f_funct7                  <= 7'b1111111;
-        decode_execute_if.f_rs1_data                <= 'h0;
-        decode_execute_if.f_rs2_data                <= 'h0;
-        decode_execute_if.frm_out                   <= 'h0;
-        decode_execute_if.fsw                       <= 'h0;
     end 
     else begin 
         if (((hazard_if.id_ex_flush | hazard_if.stall) & hazard_if.pc_en) | halt) begin
@@ -248,9 +234,8 @@ module pipe5_decode_stage (
             decode_execute_if.rs1_data                  <='h0; 
             decode_execute_if.rs2_data                  <='h0; 
             decode_execute_if.lui_instr                 <='h0;
-            decode_execute_if.aluop                     <=aluop_t'('h0); 
             decode_execute_if.reg_file_wdata            <='h0; 
-            decode_execute_if.w_sel                     <='h0; 
+            decode_execute_if.w_src                     <='h0; 
             decode_execute_if.wen                       <='h0; 
             decode_execute_if.dwen                      <='h0; 
             decode_execute_if.dren                      <='h0; 
@@ -292,17 +277,6 @@ module pipe5_decode_stage (
             decode_execute_if.imm_UJ_ext                <= 'h0;
             decode_execute_if.imm_SB                    <= 'h0;
             decode_execute_if.instr_30                  <= 'h0;
-            decode_execute_if.f_reg_rs1                 <= 'h0;
-            decode_execute_if.f_reg_rs2                 <= 'h0;
-            decode_execute_if.f_reg_rd                  <= 'h0;
-            decode_execute_if.f_wen                     <= 'h0;
-            decode_execute_if.f_wsel                    <= 'h0;
-            decode_execute_if.f_funct7                  <= 7'b1111111;
-            decode_execute_if.f_rs1_data                <= 'h0;
-            decode_execute_if.f_rs2_data                <= 'h0;
-            decode_execute_if.f_wdata                   <= 'h0;
-            decode_execute_if.frm_out                   <= 'h0;
-            decode_execute_if.fsw                       <= 'h0;
         end else if(hazard_if.pc_en & ~hazard_if.stall) begin
             //FORWARDING
             decode_execute_if.alu_a_sel                 <= cu_if.alu_a_sel;
@@ -313,30 +287,17 @@ module pipe5_decode_stage (
             decode_execute_if.rs1_data                  <= rf_if.rs1_data;
             decode_execute_if.rs2_data                  <= rf_if.rs2_data;
             decode_execute_if.lui_instr                 <= cu_if.lui_instr;
-            decode_execute_if.f_reg_rs1                 <= cu_if.f_reg_rs1;
-            decode_execute_if.f_reg_rs2                 <= cu_if.f_reg_rs2;
-            decode_execute_if.f_reg_rd                  <= cu_if.f_reg_rd;
-            decode_execute_if.f_rs1_data                <= frf_if.f_rs1_data;
-            decode_execute_if.f_rs2_data                <= frf_if.f_rs2_data;
             //ALU
-            decode_execute_if.port_a                    <= port_a;
-            decode_execute_if.port_b                    <= port_b;
-            decode_execute_if.aluop                     <= cu_if.alu_op;
-            //FPU
-            decode_execute_if.f_funct7                  <= cu_if.f_funct7; 
-            decode_execute_if.frm_out                   <= cu_if.frm_in == 3'b111 ? fetch_decode_if.frm_csr: cu_if.frm_in;
+            decode_execute_if.port_a                    <= next_port_a;
+            decode_execute_if.port_b                    <= next_port_b;
             //REG_FILE/ WRITEBACK
             decode_execute_if.reg_file_wdata            <= w_data;
-            decode_execute_if.w_sel                     <= cu_if.w_sel;
+            decode_execute_if.w_src                     <= cu_if.w_src;
             decode_execute_if.wen                       <= cu_if.wen; //Writeback to register file
-            //decode_execute_if.f_wdata                   <= cu_if.f_wdata;
-            decode_execute_if.f_wsel                    <= cu_if.f_wsel;
-            decode_execute_if.f_wen                     <= cu_if.f_wen; //Writeback to register file
             //MEMORY
             decode_execute_if.dwen                      <= cu_if.dwen; 
             decode_execute_if.dren                      <= cu_if.dren; 
             decode_execute_if.load_type                 <= cu_if.load_type;
-            decode_execute_if.fsw                       <= cu_if.fsw;
             //JUMP
             decode_execute_if.jump_instr                <= cu_if.jump;
             decode_execute_if.j_base                    <= base;
@@ -385,7 +346,107 @@ module pipe5_decode_stage (
         end
     end
   end
-  
 
-endmodule
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+          decode_execute_if.sign_type <= SIGNED;
+          decode_execute_if.sfu_type <= ARITH_S;
+          // decode_execute_if.high_low_sel <= 0;
+          decode_execute_if.div_type <= 0;
+    end else begin 
+        if (((hazard_if.id_ex_flush | hazard_if.stall) & hazard_if.pc_en) | halt) begin
+          decode_execute_if.sign_type <= SIGNED;
+          decode_execute_if.sfu_type <= ARITH_S;
+          // decode_execute_if.high_low_sel <= 0;
+          decode_execute_if.div_type <= 0;
+        end else if(hazard_if.pc_en & ~hazard_if.stall) begin
+          decode_execute_if.sign_type <= cu_if.sign_type;
+          decode_execute_if.sfu_type <= cu_if.sfu_type;
+          // decode_execute_if.high_low_sel <= cu_if.high_low_sel;
+          decode_execute_if.div_type <= cu_if.div_type;
+        end   
+    end       
+  end
+
+  always @(posedge CLK, negedge nRST) begin : MULTIPLY_UNIT
+    if (~nRST) begin
+      decode_execute_if.multiply.rs1_data <= 0;
+      decode_execute_if.multiply.rs2_data <= 0;
+      decode_execute_if.multiply.start_mu <= 0;
+      decode_execute_if.multiply.high_low_sel <= 0;
+      decode_execute_if.multiply.decode_done <= 0;
+      decode_execute_if.multiply.wen <= 0;
+      decode_execute_if.multiply.is_signed <= SIGNED;
+      decode_execute_if.multiply.reg_rd <= 0;
+    end else begin
+      if (((hazard_if.id_ex_flush | hazard_if.stall) & hazard_if.pc_en) | halt) begin
+        decode_execute_if.multiply.rs1_data <= 0;
+        decode_execute_if.multiply.rs2_data <= 0;
+        decode_execute_if.multiply.start_mu <= 0;
+        decode_execute_if.multiply.high_low_sel <= 0;
+        decode_execute_if.multiply.decode_done <= 0;
+        decode_execute_if.multiply.wen <= 0;
+        decode_execute_if.multiply.is_signed <= SIGNED;
+        decode_execute_if.multiply.reg_rd <= 0;
+      end else if(hazard_if.pc_en & ~hazard_if.stall) begin
+        decode_execute_if.multiply.rs1_data       <= rf_if.rs1_data;
+        decode_execute_if.multiply.rs2_data       <= rf_if.rs2_data;
+        decode_execute_if.multiply.start_mu       <= mul_ena;
+        decode_execute_if.multiply.high_low_sel   <= cu_if.high_low_sel;
+        decode_execute_if.multiply.decode_done    <= 0;
+        decode_execute_if.multiply.wen            <= cu_if.wen;
+        decode_execute_if.multiply.is_signed      <= cu_if.sign_type;
+        decode_execute_if.multiply.reg_rd         <= cu_if.reg_rd;
+      end
+    end
+  end
+
+  always @(posedge CLK, negedge nRST) begin : DIVIDE_UNIT
+    if (~nRST) begin
+      decode_execute_if.divide.rs1_data <= 0;
+      decode_execute_if.divide.rs2_data <= 0;
+      decode_execute_if.divide.start_div <= 0;
+      decode_execute_if.divide.div_type <= 0;
+      decode_execute_if.divide.is_signed_div <= 0;
+      decode_execute_if.divide.wen <= 0;
+      decode_execute_if.divide.reg_rd <= 0;
+    end else begin 
+      if (((hazard_if.id_ex_flush | hazard_if.stall) & hazard_if.pc_en) | halt) begin
+        decode_execute_if.divide.rs1_data <= 0;
+        decode_execute_if.divide.rs2_data <= 0;
+        decode_execute_if.divide.start_div <= 0;
+        decode_execute_if.divide.div_type <= 0;
+        decode_execute_if.divide.is_signed_div <= 0;
+        decode_execute_if.divide.wen <= 0;
+        decode_execute_if.divide.reg_rd <= 0;
+      end else if(hazard_if.pc_en & ~hazard_if.stall) begin
+        decode_execute_if.divide.rs1_data <= rf_if.rs1_data;
+        decode_execute_if.divide.rs2_data <= rf_if.rs2_data;
+        decode_execute_if.divide.start_div <= div_ena;
+        decode_execute_if.divide.div_type <= cu_if.div_type;
+        decode_execute_if.divide.is_signed_div <= cu_if.sign_type;
+        decode_execute_if.divide.wen <= cu_if.wen;
+        decode_execute_if.divide.reg_rd <= cu_if.reg_rd;
+      end
+    end
+  end
+
+  always @(posedge CLK, negedge nRST) begin : ALU
+    if (~nRST) begin
+        decode_execute_if.alu.aluop <= 0;
+        decode_execute_if.alu.port_a <= 0;
+        decode_execute_if.alu.port_b <= 0;
+    end else begin
+      if (((hazard_if.id_ex_flush | hazard_if.stall) & hazard_if.pc_en) | halt) begin
+        decode_execute_if.alu.aluop <= aluop_t'(0);
+        decode_execute_if.alu.port_a <= 0;
+        decode_execute_if.alu.port_b <= 0;
+      end else if(hazard_if.pc_en & ~hazard_if.stall) begin
+        decode_execute_if.alu.aluop <= cu_if.alu_op;
+        decode_execute_if.alu.port_a <= next_port_a;
+        decode_execute_if.alu.port_b <= next_port_b;
+    end
+    end
+  end
 
+endmodule
\ No newline at end of file
diff --git a/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv b/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
index d15597b..6b25c92 100644
--- a/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_execute_stage.sv
@@ -7,7 +7,7 @@
 *   You may obtain a copy of the License at
 *   
 *       http://www.apache.org/licenses/LICENSE-2.0
-*   
+*   a
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -30,7 +30,8 @@
 `include "component_selection_defines.vh"
 `include "alu_if.vh"
 `include "pipe5_hazard_unit_if.vh"
-`include "FPU_if.vh"
+`include "multiply_unit_if.vh"
+`include "divide_unit_if.vh"
 
 
 module pipe5_execute_stage(
@@ -43,99 +44,20 @@ module pipe5_execute_stage(
   branch_res_if.execute branch_if
 );
 
-  localparam Inf = 32'h7f800000;
-  localparam NegInf = 32'hff800000;
-  localparam QuietNan = 32'h7fc00000;
-
   import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
   import alu_types_pkg::*;
   import pipe5_types_pkg::*;
   import machine_mode_types_1_11_pkg::*;
 
   // Interface declarations
   alu_if            alu_if();
+  multiply_unit_if  mif();
+  divide_unit_if    dif();
  
   alu alu (.*);
-  
-  //fpu
-
-  FPU_if            fpu_if(nRST, CLK);
-
-  FPU_top_level     fpu(fpu_if);
-
-  clock_counter     cc(fpu_if);
-
-
-  word_t fpu_out;
-  always_comb begin //assign fpu output 
-  fpu_out = fpu_if.fpu_out;
-
-  //infinities
-  //subtraction case
-  if (fpu_if.f_funct_7 == FSUB) begin
-      if (fpu_if.port_a == Inf && fpu_if.port_b == Inf) begin
-        fpu_out = QuietNan;
-      end
-      else if (fpu_if.port_a == Inf || fpu_if.port_b == NegInf) begin
-          fpu_out = Inf;
-      end
-      else if (fpu_if.port_a == NegInf || fpu_if.port_b == Inf) begin
-          fpu_out = NegInf;
-      end
-  end
-
-  if (fpu_if.f_funct_7 == FADD) begin
-      if (fpu_if.port_a == Inf && fpu_if.port_b == NegInf) begin
-          fpu_out = QuietNan;
-      end
-      else if (fpu_if.port_a == NegInf && fpu_if.port_b == Inf) begin
-          fpu_out = QuietNan;
-      end
-      else if (fpu_if.port_a == Inf || fpu_if.port_b == Inf) begin
-        fpu_out = Inf;
-      end
-      else if (fpu_if.port_a == NegInf || fpu_if.port_b == NegInf) begin
-        fpu_out = NegInf;
-      end
-  end
+  multiply_unit MULU (.*);
+  divide_unit DIVU (.*);
 
-  if (fpu_if.f_funct_7 == FMUL) begin
-    if (fpu_if.port_a == 0 && fpu_if.port_b == Inf) begin
-        fpu_out = QuietNan;
-    end
-    if (fpu_if.port_a == 0 && fpu_if.port_b == NegInf) begin
-        fpu_out = QuietNan;
-    end
-    if (fpu_if.port_a == Inf && fpu_if.port_b == 0) begin
-        fpu_out = QuietNan;
-    end
-    if (fpu_if.port_a == NegInf && fpu_if.port_b == 0) begin
-        fpu_out = QuietNan;
-    end
-    else if (fpu_if.port_a == Inf && fpu_if.port_b[31] == 1) begin
-        fpu_out = NegInf;
-    end
-    else if (fpu_if.port_a == Inf && fpu_if.port_b[31] == 0) begin
-        fpu_out = Inf;
-    end
-    else if (fpu_if.port_a == NegInf && fpu_if.port_b[31] == 1) begin
-        fpu_out = Inf;
-    end
-    else if (fpu_if.port_a == NegInf && fpu_if.port_b[31] == 0) begin
-        fpu_out = NegInf;
-    end
-  end
-
-  //nan cases
-  if (fpu_if.port_a[30:23] == 'hff && |fpu_if.port_a[22:0]) begin
-     fpu_out = fpu_if.port_a;
-  end
-  if (fpu_if.port_b[30:23] == 'hff && |fpu_if.port_b[22:0]) begin
-     fpu_out = fpu_if.port_b;
-  end
-  end
-  assign hazard_if.f_stall = ~fpu_if.f_ready/* & (decode_execute_if.f_reg_rs1 || decode_execute_if.f_reg_rs2)*/ & decode_execute_if.f_wen;
   logic [1:0] byte_offset;
   logic [3:0] byte_en_standard;
   word_t w_data, alu_port_b, alu_port_a;
@@ -143,9 +65,12 @@ module pipe5_execute_stage(
   word_t csr_wdata;
   logic intr_taken_ex;
   word_t branch_addr, resolved_addr;
-  word_t updated_f_rs1_data, updated_f_rs2_data;
 
 
+  logic mul_ena, div_ena;
+  assign mul_ena = decode_execute_if.sfu_type == MUL_S;
+  assign div_ena = decode_execute_if.sfu_type == DIV_S;
+
   // Assign byte_en based on load type 
   // funct3 for loads and stores are the same bit positions
   // byte_en is valid for both loads and stores 
@@ -192,7 +117,7 @@ module pipe5_execute_stage(
 
   assign alu_if.port_a = alu_port_a;
   assign alu_if.port_b = alu_port_b;
-  assign alu_if.aluop  = decode_execute_if.aluop;
+  assign alu_if.aluop  = decode_execute_if.alu.aluop;
 
   assign jump_if.base   = (decode_execute_if.j_sel)? decode_execute_if.pc : updated_rs1_data;
   assign jump_if.offset = decode_execute_if.j_offset;
@@ -208,67 +133,112 @@ module pipe5_execute_stage(
   assign resolved_addr = branch_if.branch_taken ? branch_addr : decode_execute_if.pc4;
   
 
-  //Forwarding logic
+  //Forwading logic
   assign bypass_if.rs1_ex = decode_execute_if.reg_rs1;
   assign bypass_if.rs2_ex = decode_execute_if.reg_rs2;
-
-  //Floating point forwarding logic
-  assign bypass_if.f_rs1_ex = decode_execute_if.f_reg_rs1;
-  assign bypass_if.f_rs2_ex = decode_execute_if.f_reg_rs2;
-
   assign hazard_if.reg_rd = decode_execute_if.reg_rd;
   assign hazard_if.load   = decode_execute_if.dren;
+  assign hazard_if.stall_ex = mif.busy_mu | dif.busy_du;
+
+  assign hazard_if.div_e = 0;
+  assign hazard_if.mul_e = 0;
+  
+//============================MULTIPLY==============================
+
+  word_t mul_alu_port_a;
+  word_t mul_alu_port_b;
   
+  assign mul_alu_port_a = (decode_execute_if.alu_a_sel == 'd0) ? updated_rs1_data : decode_execute_if.divide.rs1_data;
+  assign mul_alu_port_b = (decode_execute_if.alu_b_sel == 'd0) ? updated_rs1_data 
+                                          : (decode_execute_if.alu_b_sel == 'd1) ? updated_rs2_data : decode_execute_if.divide.rs2_data;
+
+  assign mif.rs1_data = alu_port_a;
+  assign mif.rs2_data = alu_port_b;
+  assign mif.start_mu = decode_execute_if.multiply.start_mu;
+  assign mif.high_low_sel = decode_execute_if.multiply.high_low_sel;
+  assign mif.is_signed = decode_execute_if.multiply.is_signed;
+  assign mif.decode_done = decode_execute_if.multiply.decode_done;
+
+//=============================DIVIDE===============================
+
+
+  word_t div_alu_port_a;
+  word_t div_alu_port_b;
   
+  assign div_alu_port_a = (decode_execute_if.alu_a_sel == 'd0) ? updated_rs1_data : decode_execute_if.divide.rs1_data;
+  assign div_alu_port_b = (decode_execute_if.alu_b_sel == 'd0) ? updated_rs1_data 
+                                          : (decode_execute_if.alu_b_sel == 'd1) ? updated_rs2_data : decode_execute_if.divide.rs2_data;
+   
+
+  assign dif.rs1_data = div_alu_port_a;
+  assign dif.rs2_data = div_alu_port_b;    
+  assign dif.start_div = decode_execute_if.divide.start_div;
+  assign dif.div_type = decode_execute_if.divide.div_type;
+  assign dif.is_signed_div = decode_execute_if.divide.is_signed_div;
+
+
+
+
+//=============================SELECT OUT===============================
+  logic [31:0] fu_result;
+  logic next_wen;
+
+  always_comb begin
+    case (decode_execute_if.sfu_type)
+    ARITH_S:begin      
+      fu_result = alu_if.port_out; 
+      next_wen = decode_execute_if.wen;
+      end
+    DIV_S:  begin      
+      fu_result = dif.wdata_du; 
+      next_wen = decode_execute_if.divide.wen;
+      end
+    MUL_S:  begin      
+      fu_result = mif.wdata_mu; 
+      next_wen = decode_execute_if.multiply.wen;
+      end
+    endcase
+  end
+
+
   always_comb begin
-   if (bypass_if.bypass_rs1 == FWD_M)
-       updated_rs1_data = bypass_if.rd_data_mem;
-   else if (bypass_if.bypass_rs1 == FWD_W)
-       updated_rs1_data = bypass_if.rd_data_wb;
-   else 
-       updated_rs1_data = decode_execute_if.rs1_data;
+    if (bypass_if.bypass_rs1 == FWD_M)
+        updated_rs1_data = bypass_if.rd_data_mem;
+    else if (bypass_if.bypass_rs1 == FWD_W)
+        updated_rs1_data = bypass_if.rd_data_wb;
+    else begin
+      case(decode_execute_if.sfu_type)
+        ARITH_S:  updated_rs1_data = decode_execute_if.rs1_data;
+        MUL_S:    updated_rs1_data = decode_execute_if.multiply.rs1_data;
+        DIV_S:    updated_rs1_data = decode_execute_if.divide.rs1_data;
+      endcase
+    end
   end
 
+
   always_comb begin
    if (bypass_if.bypass_rs2 == FWD_M)
        updated_rs2_data = bypass_if.rd_data_mem;
    else if (bypass_if.bypass_rs2 == FWD_W)
        updated_rs2_data = bypass_if.rd_data_wb;
-   else 
-       updated_rs2_data = decode_execute_if.rs2_data;// If No forwarding required, then current rs2 in port_b
-  end
-
-  always_comb begin
-   if (bypass_if.bypass_f_rs1 == FWD_M)
-       updated_f_rs1_data = bypass_if.f_rd_data_mem;
-   else if (bypass_if.bypass_f_rs1 == FWD_W)
-       updated_f_rs1_data = bypass_if.f_rd_data_wb;
-   else 
-       updated_f_rs1_data = decode_execute_if.f_rs1_data;
+   else begin
+       case(decode_execute_if.sfu_type)
+        ARITH_S:  updated_rs2_data  = decode_execute_if.rs2_data;
+        MUL_S:    updated_rs2_data  = decode_execute_if.multiply.rs2_data;
+        DIV_S:    updated_rs2_data  = decode_execute_if.divide.rs2_data;
+      endcase
+   end
   end
 
-  always_comb begin
-   if (bypass_if.bypass_f_rs2 == FWD_M)
-       updated_f_rs2_data = bypass_if.f_rd_data_mem;
-   else if (bypass_if.bypass_f_rs2 == FWD_W)
-       updated_f_rs2_data = bypass_if.f_rd_data_wb;
-   else 
-       updated_f_rs2_data = decode_execute_if.f_rs2_data;// If No forwarding required, then current rs2 in port_b
-  end
     assign alu_port_a = (decode_execute_if.alu_a_sel == 'd0) ? updated_rs1_data : decode_execute_if.port_a;
     assign alu_port_b = (decode_execute_if.alu_b_sel == 'd0) ? updated_rs1_data 
                                           : (decode_execute_if.alu_b_sel == 'd1) ? updated_rs2_data : decode_execute_if.port_b;
    
-    assign csr_wdata = (decode_execute_if.csr_imm) ? decode_execute_if.csr_imm_value : ((decode_execute_if.f_funct7 === FADD || decode_execute_if.f_funct7 === FSUB || decode_execute_if.f_funct7 === FMUL) ? fpu_if.f_flags : updated_rs1_data);
+    assign csr_wdata = (decode_execute_if.csr_imm) ? decode_execute_if.csr_imm_value : updated_rs1_data;
 
 
-    //assign fpu signals
-    assign fpu_if.port_a = updated_f_rs1_data;
-    assign fpu_if.port_b = updated_f_rs2_data;
-    assign fpu_if.f_frm_in = decode_execute_if.frm_out;
-    assign fpu_if.f_funct_7 = decode_execute_if.f_funct7;
    //Keep polling interrupt. This is so that interrupt can be latched even if the processor is busy doing something 
-  always_ff @(posedge CLK, negedge nRST) begin
+  always_ff @(posedge CLK, negedge nRST) begin :INTERRUPT
       if (~nRST) begin
           intr_taken_ex <= 1'b0;
       end
@@ -286,10 +256,11 @@ module pipe5_execute_stage(
   end
 
 
+
   always_ff @(posedge CLK, negedge nRST) begin
     if (~nRST ) begin
           execute_mem_if.reg_file_wdata     <='h0;
-          execute_mem_if.w_sel              <='h0; 
+          execute_mem_if.w_src              <='h0; 
           execute_mem_if.wen                <='h0; 
           execute_mem_if.dwen               <='h0; 
           execute_mem_if.dren               <='h0; 
@@ -329,30 +300,20 @@ module pipe5_execute_stage(
           execute_mem_if.intr_seen          <= 'h0;
           execute_mem_if.wfi                <= 'h0;
           execute_mem_if.funct3             <= 'h0; 
-          execute_mem_if.funct12            <= 'h0;
-          execute_mem_if.imm_S              <= 'h0;
-          execute_mem_if.imm_I              <= 'h0;
-          execute_mem_if.imm_U              <= 'h0;
-          execute_mem_if.imm_UJ_ext         <= 'h0;
-          execute_mem_if.imm_SB             <= 'h0;
-          execute_mem_if.instr_30           <= 'h0;
-          execute_mem_if.rs1                <= 'h0;
-          execute_mem_if.rs2                <= 'h0;
-          execute_mem_if.f_reg_rs1          <= 'h0;
-          execute_mem_if.f_reg_rs2          <= 'h0;
-          execute_mem_if.f_reg_rd           <= 'h0;
-          execute_mem_if.f_wsel             <= 'h0;
-          execute_mem_if.f_wen              <= 'h0;
-          execute_mem_if.f_wdata            <= 'h0;
-          execute_mem_if.f_store_wdata      <= 'h0;
-          execute_mem_if.fpu_out            <= 'h0;
-          execute_mem_if.fpu_flags          <= 'h0;
-          execute_mem_if.fsw                <= 'h0;
+          execute_mem_if.funct12            <= 'h0 ;
+          execute_mem_if.imm_S              <= 'h0 ;
+          execute_mem_if.imm_I              <= 'h0 ;
+          execute_mem_if.imm_U              <= 'h0 ;
+          execute_mem_if.imm_UJ_ext         <= 'h0 ;
+          execute_mem_if.imm_SB             <= 'h0 ;
+          execute_mem_if.instr_30           <= 'h0 ;
+          execute_mem_if.rs1                <= 'h0 ;
+          execute_mem_if.rs2                <= 'h0 ;
     end
     else begin
         if (hazard_if.ex_mem_flush && hazard_if.pc_en || halt ) begin
           execute_mem_if.reg_file_wdata     <='h0;
-          execute_mem_if.w_sel              <='h0; 
+          execute_mem_if.w_src              <='h0; 
           execute_mem_if.wen                <='h0; 
           execute_mem_if.dwen               <='h0; 
           execute_mem_if.dren               <='h0; 
@@ -401,16 +362,6 @@ module pipe5_execute_stage(
           execute_mem_if.instr_30           <= 'h0;
           execute_mem_if.rs1                <= 'h0;
           execute_mem_if.rs2                <= 'h0;
-          execute_mem_if.f_reg_rs1          <= 'h0;
-          execute_mem_if.f_reg_rs2          <= 'h0;
-          execute_mem_if.f_reg_rd           <= 'h0;
-          execute_mem_if.f_wsel             <= 'h0;
-          execute_mem_if.f_wen              <= 'h0;
-          execute_mem_if.f_wdata            <= 'h0;
-          execute_mem_if.f_store_wdata      <= 'h0;
-          execute_mem_if.fpu_out            <= 'h0;
-          execute_mem_if.fpu_flags            <= 'h0;
-          execute_mem_if.fsw                <= 'h0;
         end
         else if (hazard_if.dmem_access & ~hazard_if.d_mem_busy) begin //arbitate dren, dwen for iaccess
           execute_mem_if.dwen               <='h0; 
@@ -419,8 +370,8 @@ module pipe5_execute_stage(
         else if(hazard_if.pc_en ) begin
           //Writeback
           execute_mem_if.reg_file_wdata     <= decode_execute_if.reg_file_wdata;
-          execute_mem_if.w_sel              <= decode_execute_if.w_sel;
-          execute_mem_if.wen                <= decode_execute_if.wen;
+          execute_mem_if.w_src              <= decode_execute_if.w_src;
+          execute_mem_if.wen                <= next_wen;
           //Mem Signals
           execute_mem_if.dwen               <= decode_execute_if.dwen;
           execute_mem_if.dren               <= decode_execute_if.dren;
@@ -445,7 +396,7 @@ module pipe5_execute_stage(
           execute_mem_if.halt_instr         <= decode_execute_if.halt_instr;
           //Forwarding
           execute_mem_if.reg_rd             <= decode_execute_if.reg_rd;
-          execute_mem_if.alu_port_out       <= decode_execute_if.f_funct7 === FMVXW ? updated_f_rs1_data : alu_if.port_out;
+          execute_mem_if.alu_port_out       <= fu_result;
           execute_mem_if.opcode             <= decode_execute_if.opcode;
           execute_mem_if.lui_instr          <= decode_execute_if.lui_instr;
           //CSR
@@ -477,16 +428,6 @@ module pipe5_execute_stage(
           execute_mem_if.instr_30           <= decode_execute_if.instr_30;
           execute_mem_if.rs1                <= decode_execute_if.reg_rs1;
           execute_mem_if.rs2                <= decode_execute_if.reg_rs2;
-          execute_mem_if.f_reg_rs1          <= decode_execute_if.f_reg_rs1;
-          execute_mem_if.f_reg_rs2          <= decode_execute_if.f_reg_rs2;
-          execute_mem_if.f_reg_rd           <= decode_execute_if.f_reg_rd;
-          execute_mem_if.f_wsel             <= decode_execute_if.f_wsel;
-          execute_mem_if.f_wen              <= decode_execute_if.f_wen;
-          execute_mem_if.f_wdata            <= decode_execute_if.f_wdata;
-          execute_mem_if.f_store_wdata      <= updated_f_rs2_data;
-          execute_mem_if.fpu_out            <= decode_execute_if.f_funct7 === FMVWX ? updated_rs1_data : fpu_out; 
-          execute_mem_if.fpu_flags          <= fpu_if.f_flags;
-          execute_mem_if.fsw                <= decode_execute_if.fsw;
          end
       end
   end
diff --git a/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv b/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
index d80cdc6..8868ebc 100644
--- a/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_fetch1_stage.sv
@@ -1,77 +1,77 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*
-*
-*   Filename:     tspp_fetch_stage.sv
-*
-*   Created by:   John Skubic
-*   Email:        jskubic@purdue.edu
-*   Date Created: 06/19/2016
-*   Description:  Fetch stage for the two stage pipeline
-*/
-
-`include "pipe5_fetch1_fetch2_if.vh"
-`include "predictor_pipeline_if.vh"
-`include "component_selection_defines.vh"
-`include "pipe5_hazard_unit_if.vh"
-
-module pipe5_fetch1_stage (
-  input logic CLK, nRST,halt,
-  pipe5_fetch1_fetch2_if.fetch1 fetch1_fetch2_if,
-  predictor_pipeline_if.access predict_if,
-  pipe5_hazard_unit_if.fetch1 hazard_if
-);
-  import rv32i_types_pkg::*;
-
-  parameter RESET_PC = 32'h80000000;
-  word_t current_pc, next_pc, pc4, npc;
-  logic prediction;
-
-  //next PC logic
-
-  always_ff @ (posedge CLK, negedge nRST) begin
-    if( ~nRST) begin
-      current_pc <= RESET_PC;
-      prediction <= 'h0;
-    end 
-    else begin
-        if (halt) begin
-            current_pc <= RESET_PC;
-            prediction <= 'h0;
-        end
-        else if ((hazard_if.pc_en && ~hazard_if.stall) || hazard_if.insert_priv_pc) 
-        begin
-            current_pc <= npc;
-            prediction <= predict_if.predict_taken;
-        end
-    end
-  end
- 
-  //FETCH1 FETCH 2 interface
-  assign fetch1_fetch2_if.pc = current_pc;
-  assign fetch1_fetch2_if.prediction = prediction;
-  //PREDICT_IF interface
-  assign predict_if.current_pc = current_pc;
-  //Next PC logic
-  assign pc4 = current_pc + 4;
-  assign npc = hazard_if.insert_priv_pc ? hazard_if.priv_pc : (hazard_if.intr_taken) ? current_pc: (hazard_if.csr_flush) ? (hazard_if.csr_pc +'h4): (hazard_if.ifence_flush) ? (hazard_if.ifence_pc +'h4): (hazard_if.npc_sel)? hazard_if. brj_addr : predict_if.predict_taken ? predict_if.target_addr : pc4;
-
-
-
-endmodule 
-
-
-
-
+///*
+//*   Copyright 2016 Purdue University
+//*   
+//*   Licensed under the Apache License, Version 2.0 (the "License");
+//*   you may not use this file except in compliance with the License.
+//*   You may obtain a copy of the License at
+//*   
+//*       http://www.apache.org/licenses/LICENSE-2.0
+//*   
+//*   Unless required by applicable law or agreed to in writing, software
+//*   distributed under the License is distributed on an "AS IS" BASIS,
+//*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+//*   See the License for the specific language governing permissions and
+//*   limitations under the License.
+//*
+//*
+//*   Filename:     tspp_fetch_stage.sv
+//*
+//*   Created by:   John Skubic
+//*   Email:        jskubic@purdue.edu
+//*   Date Created: 06/19/2016
+//*   Description:  Fetch stage for the two stage pipeline
+//*/
+//
+//`include "pipe5_fetch1_fetch2_if.vh"
+//`include "predictor_pipeline_if.vh"
+//`include "component_selection_defines.vh"
+//`include "pipe5_hazard_unit_if.vh"
+//
+//module pipe5_fetch1_stage (
+//  input logic CLK, nRST,halt,
+//  pipe5_fetch1_fetch2_if.fetch1 fetch1_fetch2_if,
+//  predictor_pipeline_if.access predict_if,
+//  pipe5_hazard_unit_if.fetch1 hazard_if
+//);
+//  import rv32i_types_pkg::*;
+//
+//  parameter RESET_PC = 32'h80000000;
+//  word_t current_pc, next_pc, pc4, npc;
+//  logic prediction;
+//
+//  //next PC logic
+//
+//  always_ff @ (posedge CLK, negedge nRST) begin
+//    if( ~nRST) begin
+//      current_pc <= RESET_PC;
+//      prediction <= 'h0;
+//    end 
+//    else begin
+//        if (halt) begin
+//            current_pc <= RESET_PC;
+//            prediction <= 'h0;
+//        end
+//        else if ((hazard_if.pc_en && ~hazard_if.stall) || hazard_if.insert_priv_pc) 
+//        begin
+//            current_pc <= npc;
+//            prediction <= predict_if.predict_taken;
+//        end
+//    end
+//  end
+// 
+//  //FETCH1 FETCH 2 interface
+//  assign fetch1_fetch2_if.pc = current_pc;
+//  assign fetch1_fetch2_if.prediction = prediction;
+//  //PREDICT_IF interface
+//  assign predict_if.current_pc = current_pc;
+//  //Next PC logic
+//  assign pc4 = current_pc + 4;
+//  assign npc = hazard_if.insert_priv_pc ? hazard_if.priv_pc : (hazard_if.intr_taken) ? current_pc: (hazard_if.csr_flush) ? (hazard_if.csr_pc +'h4): (hazard_if.ifence_flush) ? (hazard_if.ifence_pc +'h4): (hazard_if.npc_sel)? hazard_if. brj_addr : predict_if.predict_taken ? predict_if.target_addr : pc4;
+//
+//
+//
+//endmodule 
+//
+//
+//
+//
diff --git a/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv b/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
index 88f28d1..dc3914d 100644
--- a/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_fetch2_stage.sv
@@ -27,18 +27,15 @@
 `include "generic_bus_if.vh"
 `include "component_selection_defines.vh"
 `include "pipe5_hazard_unit_if.vh"
-`include "prv_pipeline_if.vh"
 
 module pipe5_fetch2_stage (
   input logic CLK, nRST,halt,
   pipe5_fetch1_fetch2_if.fetch2 fetch1_fetch2_if,
   pipe5_fetch2_decode_if.fetch fetch_decode_if,
   pipe5_hazard_unit_if.fetch2 hazard_if,
-  generic_bus_if.cpu igen_bus_if,
-  prv_pipeline_if.pipe prv_pipe_if
+  generic_bus_if.cpu igen_bus_if
 );
   import rv32i_types_pkg::*;
-  import machine_mode_types_1_11_pkg::*;
 
   word_t pc, pc4, instr;
   logic mal_addr;
@@ -66,7 +63,6 @@ module pipe5_fetch2_stage (
         fetch_decode_if.prediction     <='h0; 
         fetch_decode_if.mal_insn            <='h0;
         fetch_decode_if.fault_insn          <= 1'b0;
-        fetch_decode_if.frm_csr             <= 'h0;
       end
       else begin
         if (halt) begin
@@ -76,7 +72,6 @@ module pipe5_fetch2_stage (
             fetch_decode_if.prediction          <='h0; 
             fetch_decode_if.mal_insn            <='h0;
             fetch_decode_if.fault_insn          <= 1'b0;
-            fetch_decode_if.frm_csr             <= 'h0;
         end
         else if (hazard_if.if_id_flush & hazard_if.pc_en) begin
             fetch_decode_if.token               <='h0; 
@@ -84,7 +79,6 @@ module pipe5_fetch2_stage (
             fetch_decode_if.prediction          <='h0; 
             fetch_decode_if.mal_insn            <='h0;
             fetch_decode_if.fault_insn          <= 1'b0;
-            fetch_decode_if.frm_csr             <= 'h0;
         end 
         else if(hazard_if.pc_en & ~ hazard_if.if_id_flush & ~hazard_if.stall) begin
             fetch_decode_if.token               <= 1'b1;
@@ -95,7 +89,6 @@ module pipe5_fetch2_stage (
             //Exceptions
             fetch_decode_if.mal_insn            <= mal_addr;
             fetch_decode_if.fault_insn          <= 1'b0;
-            fetch_decode_if.frm_csr             <= prv_pipe_if.fcsr.frm;
         end
       end
   end
diff --git a/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv b/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
index 0ba7d94..579ef28 100644
--- a/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_forwarding_unit.sv
@@ -28,23 +28,5 @@ module pipe5_forwarding_unit (
         end
     end
 
-    always_comb begin : FORWARD_F_RS1
-        if(bypass_if.f_rs1_ex == bypass_if.f_rd_mem && bypass_if.f_WEN_mem) begin
-            bypass_if.bypass_f_rs1 = FWD_M;
-        end else if(bypass_if.f_rs1_ex == bypass_if.f_rd_wb && bypass_if.f_WEN_wb) begin
-            bypass_if.bypass_f_rs1 = FWD_W;
-        end else begin
-            bypass_if.bypass_f_rs1 = NO_FWD;
-        end
-    end
 
-    always_comb begin : FORWARD_F_RS2
-        if(bypass_if.f_rs2_ex == bypass_if.f_rd_mem && bypass_if.f_WEN_mem) begin
-            bypass_if.bypass_f_rs2 = FWD_M;
-        end else if(bypass_if.f_rs2_ex == bypass_if.f_rd_wb && bypass_if.f_WEN_wb) begin
-            bypass_if.bypass_f_rs2 = FWD_W;
-        end else begin
-            bypass_if.bypass_f_rs2 = NO_FWD;
-        end
-    end
  endmodule
diff --git a/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv b/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
index a307623..c2d7a87 100644
--- a/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_hazard_unit.sv
@@ -9,30 +9,30 @@ module pipe5_hazard_unit (
   logic branch_jump;
   logic load_stall;
   logic e_fetch_stage, e_decode_stage, e_execute_stage;
-  logic intr_e_flush, intr_execption;
+  logic intr_e_flush, intr_exception;
 
   //Incrementing PC only when instruction has been fetched
   assign wait_for_imem = hazard_if.iren & hazard_if.i_mem_busy;
   assign wait_for_dmem = hazard_if.dmem_access & hazard_if.d_mem_busy;  
   assign hazard_if.dmem_access = (hazard_if.dren || hazard_if.dwen);
   // Instruction latch enable
-  assign hazard_if.pc_en = ~wait_for_imem & ~wait_for_dmem;
+  assign hazard_if.pc_en = ~wait_for_imem & ~wait_for_dmem & ~hazard_if.stall_ex;
   
   //Branch jump 
   assign branch_jump = hazard_if.jump || (hazard_if.branch && hazard_if.mispredict);
-  assign hazard_if.npc_sel = branch_jump & ~intr_execption;
+  assign hazard_if.npc_sel = branch_jump & ~intr_exception;
 
   //Pipe flush logic 
   assign hazard_if.csr_flush = hazard_if.csr;
   assign hazard_if.ifence_flush = hazard_if.ifence && (~hazard_if.dflushed || ~hazard_if.iflushed);
   assign hazard_if.if_id_flush  = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush;
   assign hazard_if.id_ex_flush  = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush;
-  assign hazard_if.ex_mem_flush = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush;
+  assign hazard_if.ex_mem_flush = branch_jump | hazard_if.ifence_flush | hazard_if.csr | intr_e_flush | hazard_if.stall_ex;
 
 
  // RAW hazard because of load -> Stall the pipe
   assign load_stall = (((hazard_if.reg_rd == hazard_if.reg_rs1) || (hazard_if.reg_rd == hazard_if.reg_rs2)) & hazard_if.load) ? 1'b1 : 1'b0;
-  assign hazard_if.stall = hazard_if.f_stall | (load_stall & ~hazard_if.csr & ~hazard_if.ifence_flush & ~intr_e_flush);
+  assign hazard_if.stall = load_stall & ~hazard_if.csr & ~hazard_if.ifence_flush & ~intr_e_flush | hazard_if.stall_ex;
 
  //Exceptions
   assign e_fetch_stage       = hazard_if.fault_insn | hazard_if.mal_insn | hazard_if.fault_l | hazard_if.fault_s;
@@ -65,8 +65,8 @@ module pipe5_hazard_unit (
   assign hazard_if.iren           = 1'b1; 
   assign prv_pipe_if.pipe_clear   =   e_execute_stage | e_decode_stage | e_fetch_stage| hazard_if.intr_taken;
 
-  assign intr_execption = e_fetch_stage | e_decode_stage | e_execute_stage | hazard_if.intr_taken | prv_pipe_if.ret;
-  assign intr_e_flush = intr_execption;
+  assign intr_exception = e_fetch_stage | e_decode_stage | e_execute_stage | hazard_if.intr_taken | prv_pipe_if.ret;
+  assign intr_e_flush = intr_exception;
 
   
 endmodule
diff --git a/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv b/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
index 5f17cce..5864be8 100644
--- a/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_memory_stage.sv
@@ -113,9 +113,9 @@ module pipe5_memory_stage(
   always_comb begin
     dgen_bus_if.wdata = '0;
       case(execute_mem_if.load_type) // load_type can be used for store_type as well
-        LB: dgen_bus_if.wdata = execute_mem_if.fsw ? {4{execute_mem_if.f_store_wdata[7:0]}} : {4{execute_mem_if.store_wdata[7:0]}};
-        LH: dgen_bus_if.wdata = execute_mem_if.fsw ? {2{execute_mem_if.f_store_wdata[15:0]}} : {2{execute_mem_if.store_wdata[15:0]}};
-        LW: dgen_bus_if.wdata = execute_mem_if.fsw ? execute_mem_if.f_store_wdata : execute_mem_if.store_wdata; 
+        LB: dgen_bus_if.wdata = {4{execute_mem_if.store_wdata[7:0]}};
+        LH: dgen_bus_if.wdata = {2{execute_mem_if.store_wdata[15:0]}};
+        LW: dgen_bus_if.wdata = execute_mem_if.store_wdata; 
       endcase
   end
  
@@ -176,16 +176,13 @@ module pipe5_memory_stage(
 
 
   /*******************************************************
-  *** Forwarding Logic 
+  *** Forwading Logic 
   *******************************************************/
 
   assign bypass_if.rd_mem       = execute_mem_if.reg_rd;
   assign bypass_if.WEN_mem      = execute_mem_if.wen;
   assign bypass_if.rd_data_mem  = (execute_mem_if.lui_instr) ? execute_mem_if.reg_file_wdata: execute_mem_if.alu_port_out;
 
-  assign bypass_if.f_rd_mem       = execute_mem_if.f_reg_rd;
-  assign bypass_if.f_WEN_mem      = execute_mem_if.f_wen;
-  assign bypass_if.f_rd_data_mem  = execute_mem_if.fpu_out;
   /*******************************************************
   *** CSR / Priv Interface Logic 
   *******************************************************/ 
@@ -257,7 +254,7 @@ module pipe5_memory_stage(
     if (~nRST) begin
           mem_wb_if.reg_file_wdata     <= 'h0;
           mem_wb_if.wen                <= 'h0;
-          mem_wb_if.w_sel              <= 'h0; 
+          mem_wb_if.w_src              <= 'h0; 
           mem_wb_if.dload_ext          <= 'h0;
           mem_wb_if.alu_port_out       <= 'h0;
           mem_wb_if.reg_rd             <= 'h0;
@@ -279,20 +276,12 @@ module pipe5_memory_stage(
           mem_wb_if.rs1                <= 'h0; 
           mem_wb_if.rs2                <= 'h0; 
           mem_wb_if.instr              <= 'h0; 
-          mem_wb_if.f_reg_rs1             <= 'h0;
-          mem_wb_if.f_reg_rs2             <= 'h0;
-          mem_wb_if.f_reg_rd              <= 'h0;
-          mem_wb_if.f_wsel                <= 'h0;
-          mem_wb_if.f_wen                 <= 'h0;
-          mem_wb_if.f_wdata               <= 'h0;
-          mem_wb_if.fpu_out               <= 'h0;
-          mem_wb_if.fpu_flags               <= 'h0;
       end
       else begin
         if (halt) begin
             mem_wb_if.reg_file_wdata     <= 'h0;
             mem_wb_if.wen                <= 'h0;
-            mem_wb_if.w_sel              <= 'h0; 
+            mem_wb_if.w_src              <= 'h0; 
             mem_wb_if.dload_ext          <= 'h0;
             mem_wb_if.alu_port_out       <= 'h0;
             mem_wb_if.reg_rd             <= 'h0;
@@ -314,14 +303,6 @@ module pipe5_memory_stage(
             mem_wb_if.rs1                <= 'h0; 
             mem_wb_if.rs2                <= 'h0; 
             mem_wb_if.instr              <= 'h0; 
-            mem_wb_if.f_reg_rs1             <= 'h0;
-            mem_wb_if.f_reg_rs2             <= 'h0;
-            mem_wb_if.f_reg_rd              <= 'h0;
-            mem_wb_if.f_wsel                <= 'h0;
-            mem_wb_if.f_wen                 <= 'h0;
-            mem_wb_if.f_wdata               <= 'h0;
-            mem_wb_if.fpu_out               <= 'h0;
-            mem_wb_if.fpu_flags               <= 'h0;
         end 
         else if (~dgen_bus_if.busy) begin
             //To latch the load instruction data on dcache's busy going low
@@ -331,7 +312,7 @@ module pipe5_memory_stage(
             //Writeback
             mem_wb_if.reg_file_wdata     <= execute_mem_if.reg_file_wdata;
             mem_wb_if.wen                <= execute_mem_if.wen;
-            mem_wb_if.w_sel              <= execute_mem_if.w_sel;
+            mem_wb_if.w_src              <= execute_mem_if.w_src;
             mem_wb_if.dload_ext          <= dload_ext;
             mem_wb_if.alu_port_out       <= execute_mem_if.alu_port_out;
             //Forwarding
@@ -356,14 +337,6 @@ module pipe5_memory_stage(
             mem_wb_if.rs1                <= execute_mem_if.rs1;
             mem_wb_if.rs2                <= execute_mem_if.rs2;
             mem_wb_if.instr              <= execute_mem_if.instr;
-            mem_wb_if.f_reg_rs1          <= execute_mem_if.f_reg_rs1;
-            mem_wb_if.f_reg_rs2          <= execute_mem_if.f_reg_rs2;
-            mem_wb_if.f_reg_rd           <= execute_mem_if.f_reg_rd;
-            mem_wb_if.f_wsel             <= execute_mem_if.f_wsel;
-            mem_wb_if.f_wen              <= execute_mem_if.f_wen;
-            mem_wb_if.f_wdata            <= execute_mem_if.f_wdata;
-            mem_wb_if.fpu_out            <= execute_mem_if.fpu_out;
-            mem_wb_if.fpu_flags          <= execute_mem_if.fpu_flags;
         end
      end
   end
diff --git a/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv b/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
index 34fb2db..057a6b2 100644
--- a/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
+++ b/source_code/pipelines/pipe5/src/pipe5_writeback_stage.sv
@@ -32,35 +32,28 @@ module pipe5_writeback_stage(
   input logic CLK, nRST,
   pipe5_mem_writeback_if.writeback mem_wb_if,
   pipe5_forwarding_unit_if.writeback bypass_if,
-  rv32i_reg_file_if.writeback rf_if,
-  rv32f_reg_file_if.writeback frf_if
+  rv32i_reg_file_if.writeback rf_if
 );
 
   import rv32i_types_pkg::*;
   word_t w_data;
 
-  //forwarding logic
   assign bypass_if.WEN_wb      = mem_wb_if.wen;
   assign bypass_if.rd_wb       = mem_wb_if.reg_rd;
  
-  assign bypass_if.f_WEN_wb      = mem_wb_if.f_wen;
-  assign bypass_if.f_rd_wb       = mem_wb_if.f_reg_rd;
 
-  assign w_data = (mem_wb_if.w_sel == 'd3) ? mem_wb_if.alu_port_out 
-                  : (mem_wb_if.w_sel == 'd0) ? mem_wb_if.dload_ext
-                  : (mem_wb_if.w_sel == 'd4) ? mem_wb_if.csr_rdata
+  assign w_data = (mem_wb_if.w_src == 'd3) ? mem_wb_if.alu_port_out 
+                  : (mem_wb_if.w_src == 'd0) ? mem_wb_if.dload_ext
+                  : (mem_wb_if.w_src == 'd4) ? mem_wb_if.csr_rdata
                   : mem_wb_if.reg_file_wdata;
 
   assign bypass_if.rd_data_wb = w_data;
-  assign bypass_if.f_rd_data_wb = frf_if.f_wdata;
   assign rf_if.wen             = mem_wb_if.wen;     
   assign rf_if.w_data          = w_data;     
   assign rf_if.rd              = mem_wb_if.reg_rd;
 
-  //floating point reg file connections
-  assign frf_if.f_wen             = mem_wb_if.f_wen;
-  assign frf_if.f_wdata           = (mem_wb_if.f_wsel == 'd0) ?  mem_wb_if.fpu_out : (mem_wb_if.f_wsel == 'd1) ? mem_wb_if.dload_ext : mem_wb_if.f_wdata;
-  assign frf_if.f_rd              = mem_wb_if.f_reg_rd;
+
+
 endmodule
 
 
diff --git a/source_code/pipelines/pipe5/wscript b/source_code/pipelines/pipe5/wscript
index 2f19857..c265777 100644
--- a/source_code/pipelines/pipe5/wscript
+++ b/source_code/pipelines/pipe5/wscript
@@ -1,12 +1,12 @@
 #! /usr/bin/env python
 #encoding: utf-8
 
-def configure(cnf):
-  cnf.recurse(src)
-def configure(cnf):
-  cnf.recurse(include)
+# def configure(cnf):
+#   cnf.recurse(src)
+# def configure(cnf):
+#   cnf.recurse(include)
 
-def sim_source(cnf):
-  cnf.recurse(src)
-def sim_source(cnf):
-  cnf.recurse(include)
+# def sim_source(cnf):
+#   cnf.recurse(src)
+# def sim_source(cnf):
+#   cnf.recurse(include)
diff --git a/source_code/pipelines/wscript b/source_code/pipelines/wscript
index 944ad74..723b187 100644
--- a/source_code/pipelines/wscript
+++ b/source_code/pipelines/wscript
@@ -2,7 +2,7 @@
 #encoding: utf-8
 
 def configure(cnf):
-  cnf.recurse(pipe5)
+  cnf.recurse(ooo)
 
 def sim_source(cnf):
-  cnf.recurse(pipe5)
+  cnf.recurse(ooo)
diff --git a/source_code/privs/priv_1_11/priv_1_11_block.sv b/source_code/privs/priv_1_11/priv_1_11_block.sv
index 9d84359..8625538 100644
--- a/source_code/privs/priv_1_11/priv_1_11_block.sv
+++ b/source_code/privs/priv_1_11/priv_1_11_block.sv
@@ -96,17 +96,24 @@ module priv_1_11_block (
   assign prv_intern_if.wdata        = prv_pipe_if.wdata;
   assign prv_intern_if.addr         = prv_pipe_if.addr;
   assign prv_intern_if.valid_write  = prv_pipe_if.valid_write;
-  assign prv_intern_if.instr_retired= prv_pipe_if.wb_enable & prv_pipe_if.instr;
+  assign prv_intern_if.instr_retired= prv_pipe_if.instr;
 
   assign prv_intern_if.ex_rmgmt = prv_pipe_if.ex_rmgmt;
   assign prv_intern_if.ex_rmgmt_cause = prv_pipe_if.ex_rmgmt_cause;
-
+  
+  //RVV control signal
+  assign prv_intern_if.vector_csr_instr = prv_pipe_if.vector_csr_instr;
   // from priv unit to pipeline
   assign prv_pipe_if.priv_pc     = prv_intern_if.priv_pc;
   assign prv_pipe_if.insert_pc   = prv_intern_if.insert_pc;
   assign prv_pipe_if.intr        = prv_intern_if.intr;
   assign prv_pipe_if.rdata       = prv_intern_if.rdata;
   assign prv_pipe_if.invalid_csr = prv_intern_if.invalid_csr;
-  assign prv_pipe_if.fcsr        = prv_intern_if.fcsr;
   
+  // Vector Extension CSRs
+  assign prv_pipe_if.vstart = prv_intern_if.vstart;
+  assign prv_pipe_if.vtype = prv_intern_if.vtype;
+  assign prv_pipe_if.vl = prv_intern_if.vl;
+  assign prv_pipe_if.vlenb = prv_intern_if.vlenb;
+
 endmodule
diff --git a/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv b/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
index fbde62b..b8eb1dd 100644
--- a/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
+++ b/source_code/privs/priv_1_11/priv_1_11_csr_rfile.sv
@@ -40,7 +40,6 @@ module priv_1_11_csr_rfile (
   mimpid_t      mimpid;
   mhartid_t     mhartid;
   misaid_t      misaid, misaid_next, misaid_temp, misaid_default;
-  fcsr_t        fcsr, fcsr_next;
 
   assign misaid_default.base        = BASE_RV32;
   assign misaid_default.zero        = '0;
@@ -148,7 +147,11 @@ module priv_1_11_csr_rfile (
   assign instreth = instretfull[63:32];
   assign instretfull_next = (prv_intern_if.instr_retired == 1'b1) ?
                             instretfull + 1 : instretfull;
-
+  // Vector Extension CSRs 
+  vstart_t vstart, vstart_next;
+  vl_t     vl, vl_next;
+  vtype_t  vtype, vtype_next;
+  vlenb_t  vlenb, vlenb_next;
  
   always_ff @ (posedge CLK, negedge nRST) begin
     if (~nRST) begin
@@ -168,7 +171,11 @@ module priv_1_11_csr_rfile (
       timefull    <= '0;
       cyclefull   <= '0;
       instretfull <= '0;
-      fcsr        <= '0;
+      // Vector Extension CSRs 
+      vstart      <= '0;
+      vl          <= '0;
+      vtype       <= '0;
+      vlenb       <= 'd16;
     end else begin      
       mstatus.mie  <= mstatus_next.mie;
       mstatus.mpie <= mstatus_next.mpie;
@@ -187,7 +194,11 @@ module priv_1_11_csr_rfile (
       timefull    <= timefull_next;
       cyclefull   <= cyclefull_next;
       instretfull <= instretfull_next;
-      fcsr        <= fcsr_next;
+      // Vector Extension CSRs 
+      vstart      <= vstart_next;
+      vl          <= vl_next;
+      vtype       <= vtype_next;
+      vlenb       <= vlenb_next;
     end
   end
 
@@ -244,62 +255,66 @@ module priv_1_11_csr_rfile (
       end
   end
 
-  //floating point csr write logic
+  // Vector Extension CSRs 
+  assign vstart_next = (prv_intern_if.addr == VSTART_ADDR) && swap? vstart_t'(rup_data) : vstart; 
+  assign vtype_next  = (prv_intern_if.addr == VTYPE_ADDR) && swap ? vtype_t'({24'd0, rup_data[7:0]}) : vtype; 
+  assign vlenb_next  = (prv_intern_if.addr == VLENB_ADDR) && swap ? vlenb_t'(rup_data) : vlenb; 
 
+  // Calculate AVL from VL
   always_comb begin
-    fcsr_next = fcsr;
-    if (swap) begin
-        casez (prv_intern_if.addr)
-            FFLAGS_ADDR : begin
-                fcsr_next.fflags = rup_data[4:0];
-            end
-            FRM_ADDR    : begin
-                fcsr_next.frm   = rup_data[2:0];
-            end
-            FCSR_ADDR   : begin
-                fcsr_next       = fcsr_t'({24'b0, rup_data[7:0]});
-            end
-        endcase
+    if ((prv_intern_if.vector_csr_instr) && swap) begin
+      vl_next = vl_t'({24'd0, rup_data[15:8]});
+    end else if ((prv_intern_if.addr == VL_ADDR) && swap) begin
+      vl_next = vl_t'(rup_data);
+    end else begin
+      vl_next = vl;
     end
   end
 
   always_comb begin // register to send to pipeline based on the address
     valid_csr_addr = 1'b1;
-    casez (prv_intern_if.addr)
-      // Floating point
-      FFLAGS_ADDR     : prv_intern_if.rdata  = fcsr.fflags;
-      FRM_ADDR        : prv_intern_if.rdata  = fcsr.frm;
-      FCSR_ADDR       : prv_intern_if.rdata  = fcsr;
-
-      MVENDORID_ADDR  : prv_intern_if.rdata = mvendorid;
-      MARCHID_ADDR    : prv_intern_if.rdata = marchid;
-      MIMPID_ADDR     : prv_intern_if.rdata = mimpid;
-      MHARTID_ADDR    : prv_intern_if.rdata = mhartid;
-      MISA_ADDR       : prv_intern_if.rdata = misaid; 
-
-      MSTATUS_ADDR    : prv_intern_if.rdata = mstatus;
-      MTVEC_ADDR      : prv_intern_if.rdata = mtvec;
-      MEDELEG_ADDR    : prv_intern_if.rdata = medeleg; 
-      MIDELEG_ADDR    : prv_intern_if.rdata = mideleg; 
-      MIE_ADDR        : prv_intern_if.rdata = mie;
-
-      MSCRATCH_ADDR   : prv_intern_if.rdata = mscratch;
-      MEPC_ADDR       : prv_intern_if.rdata = mepc;
-      MCAUSE_ADDR     : prv_intern_if.rdata = mcause;
-      MTVAL_ADDR      : prv_intern_if.rdata = mtval;
-      MIP_ADDR        : prv_intern_if.rdata = mip; 
-
-      // Performance counters
-      MCYCLE_ADDR      : prv_intern_if.rdata = cycle;
-      MINSTRET_ADDR    : prv_intern_if.rdata = instret;
-      MCYCLEH_ADDR     : prv_intern_if.rdata = cycleh;
-      MINSTRETH_ADDR   : prv_intern_if.rdata = instreth;
-
-      default : begin
-        valid_csr_addr = 1'b0;
-        prv_intern_if.rdata = '0;
-      end
-    endcase
+    if (prv_intern_if.vector_csr_instr) begin
+      prv_intern_if.rdata = vl_next;
+    end else begin
+      casez (prv_intern_if.addr)
+        MVENDORID_ADDR  : prv_intern_if.rdata = mvendorid;
+        MARCHID_ADDR    : prv_intern_if.rdata = marchid;
+        MIMPID_ADDR     : prv_intern_if.rdata = mimpid;
+        MHARTID_ADDR    : prv_intern_if.rdata = mhartid;
+        MISA_ADDR       : prv_intern_if.rdata = misaid; 
+
+        MSTATUS_ADDR    : prv_intern_if.rdata = mstatus;
+        MTVEC_ADDR      : prv_intern_if.rdata = mtvec;
+        MEDELEG_ADDR    : prv_intern_if.rdata = medeleg; 
+        MIDELEG_ADDR    : prv_intern_if.rdata = mideleg; 
+        MIE_ADDR        : prv_intern_if.rdata = mie;
+
+        MSCRATCH_ADDR   : prv_intern_if.rdata = mscratch;
+        MEPC_ADDR       : prv_intern_if.rdata = mepc;
+        MCAUSE_ADDR     : prv_intern_if.rdata = mcause;
+        MTVAL_ADDR      : prv_intern_if.rdata = mtval;
+        MIP_ADDR        : prv_intern_if.rdata = mip; 
+
+        // Performance counters
+        MCYCLE_ADDR      : prv_intern_if.rdata = cycle;
+        MINSTRET_ADDR    : prv_intern_if.rdata = instret;
+        MCYCLEH_ADDR     : prv_intern_if.rdata = cycleh;
+        MINSTRETH_ADDR   : prv_intern_if.rdata = instreth;
+
+        // Vector Extension CSRs 
+        VSTART_ADDR      : prv_intern_if.rdata = vstart;     
+//        VXSAT_ADDR       : prv_intern_if.rdata = vxsat;     
+//        VXRM_ADDR        : prv_intern_if.rdata = vxrm;   
+//        VCSR_ADDR        : prv_intern_if.rdata = vcsr;   
+        VL_ADDR          : prv_intern_if.rdata = vl; 
+        VTYPE_ADDR       : prv_intern_if.rdata = vtype;     
+        VLENB_ADDR       : prv_intern_if.rdata = vlenb; 
+        default : begin
+          valid_csr_addr = 1'b0;
+          prv_intern_if.rdata = '0;
+        end
+      endcase
+    end
   end
 
   assign prv_intern_if.mtvec     = mtvec;
@@ -308,6 +323,11 @@ module priv_1_11_csr_rfile (
   assign prv_intern_if.mstatus   = mstatus;
   assign prv_intern_if.mcause    = mcause;
   assign prv_intern_if.mip       = mip;
-  assign prv_intern_if.fcsr      = fcsr;
+
+  // Vector Extension CSRs 
+  assign prv_intern_if.vstart    = vstart;
+  assign prv_intern_if.vl        = vl;
+  assign prv_intern_if.vlenb     = vlenb;
+  assign prv_intern_if.vtype     = vtype;
 
 endmodule
diff --git a/source_code/risc_mgmt/extensions/rv32m/rv32m_decode.sv b/source_code/risc_mgmt/extensions/rv32m/rv32m_decode.sv
index 371192b..cc73116 100644
--- a/source_code/risc_mgmt/extensions/rv32m/rv32m_decode.sv
+++ b/source_code/risc_mgmt/extensions/rv32m/rv32m_decode.sv
@@ -43,8 +43,8 @@ module rv32m_decode (
   assign insn = rv32m_insn_t'(dif.insn);
 
   assign dif.insn_claim = (insn.opcode_major == OPCODE) && (insn.opcode_minor == RV32M_OPCODE_MINOR);
-  assign dif.rsel_s_0 = insn.rs1;
-  assign dif.rsel_s_1 = insn.rs2;
+  assign dif.rsel_s_0 = insn.rs1; // 5 bit
+  assign dif.rsel_s_1 = insn.rs2; // 5 bit
   assign dif.rsel_d   = insn.rd;
   
   // decode funct
diff --git a/source_code/rv32f/Makefile b/source_code/rv32f/Makefile
deleted file mode 100644
index 5d620c6..0000000
--- a/source_code/rv32f/Makefile
+++ /dev/null
@@ -1,219 +0,0 @@
-# Eric Villasenor
-# evillase@gmail.com
-#
-# Makefile for system verilog or vhdl designs.
-#
-# you DON'T TOUCH THIS FILE!!!
-# I jest, you can mess with SIMTIME.
-# AND THAT IS IT!
-#
-
-# list of grid hosts
-GRIDHOSTS = ecegrid-lnx
-
-###############################because GRID is funny###########################
-ifneq (,$(findstring $(GRIDHOSTS), $(HOST)))
-%:
-	@$(if \
-		$(findstring $@, $(word 1, $(MAKECMDGOALS))), \
-		grid $(MAKE) $(MAKECMDGOALS) -$(MAKEFLAGS), \
-		echo "do nothing" > /dev/null)
-else
-###############################and i'm not laughing############################
-
-################################################################################
-# variables                                                                    #
-################################################################################
-
-# course libs and such
-COURSELIBS	= ${LIBS437}
-
-# directories
-SRCDIR			= source
-INCDIR			= include 
-TBDIR				= testbench
-MAPDIR			= mapped
-FPGADIR			= fpga
-SCRDIR			= scripts
-LIBDIR			= work
-DEPDIR			= .deps
-
-# commands and flags. 1/9/2020 mcj, added -suppress 12110 so simulation will run with -novopt
-#   novopt is deprecated in Questa 10.7a and later. Need to find better solution. 
-SYN					= synthesize
-MAKEDEP			= hdldep
-VSIM				= vsim -coverage #-suppress 12110
-VLOG				= vlog 
-VCOM				= vcom 
-VERFLAGS		= -sv +incdir+$(INCDIR) +acc -sv12compat -mfcu -lint -suppress 12110
-VHDFLAGS		= -93 +acc -lint
-SIMTIME			= -all
-
-# modelsim viewing options
-ifneq (0,$(words $(filter %.wav,$(MAKECMDGOALS))))
-# view waveform in graphical mode and load do file if there is one
-DOFILES			= $(notdir $(basename $(wildcard $(SCRDIR)/*.do)))
-DOFILE			= $(filter $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%_tb.wav=%), $(DOFILES))
-ifeq (1, $(words  $(DOFILE)))
-WAVDO				= do $(SCRDIR)/$(DOFILE).do
-else
-WAVDO				= add wave *
-endif
-SIMDO				= "view objects; $(WAVDO); run $(SIMTIME);" -onfinish stop
-else
-# view text output in cmdline mode
-SIMTERM			= -c
-SIMDO		= "run $(SIMTIME); exit;"
-endif
-
-# mapped files
-SYNTH				= $(filter $(MAKECMDGOALS:%.wav=%) \
-							$(MAKECMDGOALS:%.sim=%) $(MAKECMDGOALS:%_tb.sim=%) \
-							$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%_tb=%), \
-							$(notdir $(basename $(wildcard $(MAPDIR)/*.sv $(MAPDIR)/*.v $(MAPDIR)/*.vhd))))
-
-ifneq (,$(filter $(SYNTH), \
-	$(MAKECMDGOALS:%_tb=%) $(MAKECMDGOAlS:%_tb.sim=%) \
-	$(MAKECMDGOALS:%_tb.wav=%) $(MAKECMDGOALS:%.wav=%) $(MAKECMDGOALS:%.sim=%)))
-SYNDEF		=	+define+MAPPED
-#SIMSYN			= -sdftyp /=mapped/$(SYNTH)_v.sdo
-endif
-
-# v, sv or vhdl stems
-VLSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.v $(TBDIR)/*.v)))
-SVSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.sv $(TBDIR)/*.sv)))
-VHSTEM			= $(notdir $(basename $(wildcard $(SRCDIR)/*.vhd $(TBDIR)/*.vhd)))
-HDSTEM			= $(notdir $(basename $(wildcard $(INCDIR)/*.vh)))
-SRCSTEM			= $(VLSTEM) $(SVSTEM) $(VHSTEM)
-SRCS				= $(addsuffix .v,$(VLSTEM)) $(addsuffix .sv,$(SVSTEM)) $(addsuffix .vhd,$(VHSTEM))
-HDRS				= $(addsuffix .vh,$(HDSTEM))
-
-# dep files
-DEPS				= $(addsuffix .d, $(VLSTEM) $(SVSTEM) $(VHSTEM) $(HDSTEM))
-
-# no target files are made
-NODEPS			= help clean clean_asm clean_sim clean_map clean_deps clean_fpga
-
-################################################################################
-# config                                                                       #
-################################################################################
-
-# rules with no output file
-.PHONY:			$(NODEPS)
-
-# clear and set suffixes
-.SUFFIXES:
-.SUFFIXES: .vh .sv .vhd .d .v
-
-# set search paths
-vpath %.vh	$(INCDIR)/
-vpath %.v		$(SRCDIR)/ $(TBDIR)/
-vpath %.sv	$(MAPDIR)/ $(SRCDIR)/ $(TBDIR)/
-vpath %.vhd	$(SRCDIR)/ $(TBDIR)/
-vpath %.d		$(DEPDIR)/
-vpath %			$(DEPDIR)/
-
-# set default rule
-default: help
-
-# v,sv library search paths
-ifneq (0,$(words $(VLSTEM) $(SVSTEM)))
-SIMLIBS=$(addprefix -L ,$(filter %_ver,$(shell ls $(COURSELIBS))))
-endif
-
-# include dependencies
-ifeq (0,$(words $(findstring $(MAKECMDGOALS), $(NODEPS))))
-	# dash keeps this quiet
--include $(addprefix $(DEPDIR)/,$(DEPS))
-endif
-
-################################################################################
-# auto make rules                                                              #
-################################################################################
-
-# dependency rules
-$(DEPDIR):
-	@test -d $(DEPDIR) || mkdir $(DEPDIR)
-$(LIBDIR):
-	@test -d $(LIBDIR) || vlib $(LIBDIR)
-%.d: | $(DEPDIR)
-	@$(SHELL) -ec '$(MAKEDEP) ${*F} $(SRCDIR) $(TBDIR) $(INCDIR) \
-		| sed \
-		-e "s/$$/ $(filter ${*F}.v ${*F}.sv ${*F}.vhd ${*F}.vh,$(SRCS) $(HDRS))/" \
-		-e "s/\.[a-z]\+/&o/g" \
-		-e "s/^/${*F}: /" \
-		> $@'
-
-# header rules
-%.vho: %.vh | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# verilog rules
-%.vo: %.v | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# system verilog rules
-%.svo: %.sv | $(LIBDIR)
-	$(VLOG) $(VERFLAGS) $(SYNDEF) $<
-	@touch $(DEPDIR)/$@
-
-# vhdl rules
-%.vhdo: %.vhd | $(LIBDIR)
-	$(VCOM) $(VHDFLAGS) $<
-	@touch $(DEPDIR)/$@
-
-# simulation rules
-%_tb.sim %_tb.wav %.sim %.wav: %_tb
-	@$(VSIM) $(SIMTERM) -do $(SIMDO) $(SIMLIBS) $(SIMSYN) -wlf $(addsuffix _tb,$*).wlf $(LIBDIR).$(addsuffix _tb,$*)
-
-# synthesis rules for mapped simulation
-%_tb.synf %.synf %_tb.synt %.synt %_tb.syn %.syn:
-	@$(SYN) $(if $(filter %.synt, $@),-t) $*
-	-@rm -f $(DEPDIR)/${*F}_tb.svo
-
-################################################################################
-# info clean up rules                                                          #
-################################################################################
-
-# cleaning rules
-clean: clean_sim clean_asm clean_map clean_deps clean_fpga
-
-clean_sim: clean_deps
-	@rm -rf $(LIBDIR) *.log *.wlf transcript
-
-clean_asm:
-	@rm -rf *.hex *.ver *.diff *.log
-
-clean_map:
-	@rm -rf $(MAPDIR)/* ._* *.summary *.log
-
-clean_fpga:
-	@rm -rf $(FPGADIR)/* ._*
-
-clean_deps:
-	@rm -rf $(DEPDIR) *.d
-
-help:
-	@echo ""
-	@echo "Hello $(USER)@$(HOST), you forgot some targets."
-	@echo "	If you need instructions to use this Makefile:"
-	@echo "		'make <module_name>' to build module"
-	@echo "		'make <module_name>_tb' to build module + testbench"
-	@echo "		'make <module_name>.sim' to sim tb on cmd line"
-	@echo "		'make <module_name>.wav' to sim tb with gui"
-	@echo "		'make <module_name>.syn' to synthesize functional net list"
-	@echo "		'make <module_name>.synt' to synthesize timing net list"
-	@echo "	Clean Rules:"
-	@echo "		'make clean' to clean everything"
-	@echo "		'make clean_sim' to clean simulation logs and work lib"
-	@echo "		'make clean_asm' to clean hex and testasm output"
-	@echo "		'make clean_map' to clean mapped dir"
-	@echo "		'make clean_fpga' to clean fpga dir"
-	@echo "	Obviously a testbench file must exist for some options."
-	@echo ""
-
-################################################################################
-endif # end GRID nonsense                                                      #
-################################################################################
diff --git a/source_code/rv32f/include/FPU_if.vh b/source_code/rv32f/include/FPU_if.vh
deleted file mode 100644
index 2904de8..0000000
--- a/source_code/rv32f/include/FPU_if.vh
+++ /dev/null
@@ -1,45 +0,0 @@
-//By            : Zhengsen Fu, Xinlue Liu
-//Description   : Interface connect top-level to FPU
-//Last Updated  : 7/21/20
-
-`ifndef FPU_IF_VH
-`define FPU_IF_VH
-`include "rv32i_types_pkg.vh"
-import rv32i_types_pkg::*;
-interface FPU_if(input logic n_rst, clk);
-  //signals to and out of FPU and FPU register file
-  //logic f_LW; //load. Load from memory to register
-  //logic f_SW; //save. Save from rs2 to memory 
-  //logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-
-  word_t port_a, port_b; //input operands to the fpu
-
-  logic [2:0] f_frm_in; //input rounding method.
-  logic [4:0] f_flags; //a combination of NV, DZ, OF, UF, NX
-  logic [7:0] f_funct_7; //operation selection of FPU
-  //logic [2:0] f_frm_out; //frm outputed by register file TODO: confusing
-  
-  logic [31:0] fpu_out; //output when f_SW is asserted
-
-  logic f_ready; //asserted when calculation finished by FPU
-
-  int transaction_number; //waveform debug purpose
-
-  modport fp ( //to FPU_top_level
-  input n_rst, clk, port_a, port_b, f_frm_in, f_funct_7,
-  output fpu_out, f_flags //f_frm_out
-  );
-  
-  modport cc ( //to clock counter
-  input n_rst, clk, port_a, port_b, f_frm_in, f_funct_7,
-  output f_ready //f_frm_out
-  );
-
-  modport tb (
-    input fpu_out, f_flags, f_ready,
-    output port_a, port_b, f_frm_in, f_funct_7 
-  );
-endinterface //FPU_if
-
-
-`endif
diff --git a/source_code/rv32f/include/rv32f_types_pkg.vh b/source_code/rv32f/include/rv32f_types_pkg.vh
deleted file mode 100644
index b62b5a8..0000000
--- a/source_code/rv32f/include/rv32f_types_pkg.vh
+++ /dev/null
@@ -1,20 +0,0 @@
-`ifndef RV32F_TYPES_PKG_SV
-`define RV32F_TYPES_PKG_SV
-package rv32f_types_pkg;
-    parameter FOP_W = 7;
-    parameter F_FUNCT_W = 7;
-    typedef enum logic [FOP_W-1:0] {
-        FLW       = 7'b0000111,
-        FSW       = 7'b0100111,
-        F_RTYPE   = 7'b1010011 //for add sub and mul
-    } f_opcode_t;
-
-    typedef enum logic [F_FUNCT_W-1:0] {
-        FADD      = 7'b0,
-        FSUB      = 7'b0000100,
-        FMUL      = 7'b0001000
-    } f_funct7_t;
-
-endpackage
-
-`endif
diff --git a/source_code/rv32f/include/rv32i_types_pkg.vh b/source_code/rv32f/include/rv32i_types_pkg.vh
deleted file mode 100644
index 92d79f2..0000000
--- a/source_code/rv32f/include/rv32i_types_pkg.vh
+++ /dev/null
@@ -1,207 +0,0 @@
-/*
-*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     rv32i_types_pkg.sv
-*   
-*   Created by:   Jacob R. Stevens	
-*   Email:        steven69@purdue.edu
-*   Date Created: 06/01/2016
-*   Description:  Package containing types used for a RV32I implementation
-*/
-
-`ifndef RV32I_TYPES_PKG_SV
-`define RV32I_TYPES_PKG_SV
-package rv32i_types_pkg;
-  parameter WORD_SIZE = 32;
-  parameter RAM_ADDR_SIZE = 32;
-  parameter OP_W = 7;
-  parameter BR_W = 3;
-  parameter LD_W = 3;
-  parameter SW_W = 3;
-  parameter IMM_W = 3;
-  parameter REG_W = 3;
-
-  typedef logic [WORD_SIZE-1:0] word_t;
-
-  typedef enum logic [OP_W-1:0] {
-    LUI       = 7'b0110111,
-    AUIPC     = 7'b0010111,
-    JAL       = 7'b1101111,
-    JALR      = 7'b1100111,
-    // All branching instructions share an opcode
-    BRANCH    = 7'b1100011,
-    // All load instructions share an opcode
-    LOAD      = 7'b0000011,
-    // All store instructions share an opcode
-    STORE     = 7'b0100011,
-    // All immediate ALU instructions share an opcode
-    IMMED     = 7'b0010011,
-    // All register-register instructions share an opcode
-    REGREG    = 7'b0110011,
-    // All system instructions share an opcode
-    SYSTEM    = 7'b1110011,
-    MISCMEM  = 7'b0001111
-  } opcode_t;
-
-  typedef enum logic [BR_W-1:0] {
-    BEQ     = 3'b000,
-    BNE     = 3'b001,
-    BLT     = 3'b100,
-    BGE     = 3'b101,
-    BLTU    = 3'b110,
-    BGEU    = 3'b111
-  } branch_t;  
-
-  typedef enum logic [LD_W-1:0] {
-    LB      = 3'b000,
-    LH      = 3'b001,
-    LW      = 3'b010,
-    LBU     = 3'b100,
-    LHU     = 3'b101
-  } load_t;
-
-  typedef enum logic [SW_W-1:0] {
-    SB      = 3'b000,
-    SH      = 3'b001,
-    SW      = 3'b010
-  } store_t;
-
-  typedef enum logic [IMM_W-1:0] {
-    ADDI    = 3'b000,
-    SLTI    = 3'b010,
-    SLTIU   = 3'b011,
-    XORI    = 3'b100,
-    ORI     = 3'b110,
-    ANDI    = 3'b111,
-    SLLI    = 3'b001,
-    // Logical/Arithmetic based on bit 30 of instruction
-    //    0   /    1
-    SRI     = 3'b101
-  } imm_t;
-
-  typedef enum logic [REG_W-1:0] {
-    // Add/Sub based on bit 30 of instruction
-    //  0 / 1 
-    ADDSUB  = 3'b000,
-    SLL     = 3'b001,
-    SLT     = 3'b010,
-    SLTU    = 3'b011,
-    XOR     = 3'b100,
-    // Logical/Arithmetic based on bit 30 of instruction
-    //    0   /    1
-    SR      = 3'b101,
-    OR      = 3'b110,
-    AND     = 3'b111
-  } regreg_t;
-
-  typedef enum logic [2:0] {
-    // Non CSR contains ECALL, EBREAK, and xRET instructions
-    // ECALL/EBREAK based on bit 20 of instruction
-    //   0  /   1 
-    //   xRET based on bits 28 and 29 of instruction
-    PRIV        = 3'b000,
-    CSRRW       = 3'b001,
-    CSRRS       = 3'b010,
-    CSRRC       = 3'b011,
-    CSRRWI      = 3'b101,
-    CSRRSI      = 3'b110,
-    CSRRCI      = 3'b111
-  } rv32i_system_t;
-
-  typedef enum logic [11:0] {
-    ECALL   = 12'b0000000_00000,
-    EBREAK  = 12'b0000000_00001,
-    MRET    = 12'b0011000_00010,
-    SRET    = 12'b0001000_00010,
-    URET    = 12'b0000000_00010,
-    WFI     = 12'b0001000_00101
-  } priv_insn_t;
-
-  typedef enum logic [2:0] {
-    FENCE   = 3'b000,
-    FENCEI  = 3'b001
-  } rv32i_miscmem_t;
-
-  typedef struct packed {
-    logic [6:0] funct7;
-    logic [4:0] rs2;
-    logic [4:0] rs1;
-    logic [2:0] funct3;
-    logic [4:0] rd;
-    opcode_t    opcode;
-  } rtype_t;
-
-  typedef struct packed {
-    logic [11:0]  imm11_00;
-    logic [4:0]   rs1;
-    logic [2:0]   funct3;
-    logic [4:0]   rd;
-    opcode_t      opcode;
-  } itype_t; 
-
-  typedef struct packed {
-    logic [6:0] imm11_05;
-    logic [4:0] rs2;
-    logic [4:0] rs1;
-    logic [2:0] funct3;
-    logic [4:0] imm04_00;
-    opcode_t    opcode;
-  } stype_t;
-
-  typedef struct packed {
-    logic       imm12;
-    logic [5:0] imm10_05;
-    logic [4:0] rs2;
-    logic [4:0] rs1;
-    logic [2:0] funct3;
-    logic [3:0] imm04_01;
-    logic       imm11;
-    opcode_t    opcode;
-  } sbtype_t;
-
-  typedef struct packed {
-    logic [19:0]  imm31_12;
-    logic [4:0]   rd;
-    opcode_t      opcode;
-  } utype_t;
-
-  typedef struct packed {
-    logic         imm20;
-    logic [9:0]   imm10_01;
-    logic         imm11;
-    logic [7:0]   imm19_12;
-    logic [4:0]   rd;
-    opcode_t      opcode;
-  } ujtype_t;
-
-  typedef struct packed {
-    logic [11:0]  csr;
-    logic [4:0]   rs1_zimm;
-    logic [2:0]   funct3;
-    logic [4:0]   rd;
-    opcode_t      opcode;
-  } systype_t;
-
-  typedef struct packed {
-    logic         token;
-    word_t        pc;
-    word_t        pc4;
-    word_t        instr;
-    word_t        prediction;
-  } fetch_ex_pipeline_reg_t;
-
-endpackage
-`endif
diff --git a/source_code/rv32f/scripts/FPU_top_level.do b/source_code/rv32f/scripts/FPU_top_level.do
deleted file mode 100644
index 67296b3..0000000
--- a/source_code/rv32f/scripts/FPU_top_level.do
+++ /dev/null
@@ -1,115 +0,0 @@
-onerror {resume}
-quietly WaveActivateNextPane {} 0
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/n_rst
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/clk
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/port_a
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/port_b
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_frm_in
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_flags
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_funct_7
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/fpu_out
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_ready
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/exp_max
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point1_in
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point2_in
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point_not_shift
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point_shift
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/frac_not_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/frac_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/funct7
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/unsigned_exp_diff
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/sign_not_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/sign_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/exp_max
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point1_in
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point2_in
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point_not_shift
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/floating_point_shift
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/frac_not_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/frac_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/funct7
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/unsigned_exp_diff
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/sign_not_shifted
-add wave -noupdate -expand -group add_step1 -color Wheat /FPU_top_level_tb/DUT/addStep1/sign_shifted
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac1
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign1
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac2
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign2
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/exp_max_in
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sum
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/carry_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/exp_max_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac1_signed
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac2_signed
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sum_signed
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac1
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign1
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac2
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign2
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/exp_max_in
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sign_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sum
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/carry_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/exp_max_out
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac1_signed
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/frac2_signed
-add wave -noupdate -expand -group {add step 2} -color {Cadet Blue} /FPU_top_level_tb/DUT/add_step2/sum_signed
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/n_rst
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/clk
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/port_a
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/port_b
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_frm_in
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_flags
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_funct_7
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/fpu_out
-add wave -noupdate /FPU_top_level_tb/DUT/fpu_if/f_ready
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/out_of_range
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/mul_ovf
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/mul_carry_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/function_mode
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/floating_point1
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/floating_point2
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/ovf_in
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/unf_in
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/dz
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/inv
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/frm
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/exponent_max_in
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/sign_in
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/frac_in
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/carry_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/add_floating_point_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/ovf
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/unf
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/inexact
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/sign
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/exponent
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/frac
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/dummy_floating_point_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/exp_minus_shift_amount
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/shifted_frac
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/shifted_amount
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/exp_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/round_this
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/fp_option
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/round_out
-add wave -noupdate -expand -group add_step3 -color Yellow /FPU_top_level_tb/DUT/add_step3/round_flag
-TreeUpdate [SetDefaultTree]
-WaveRestoreCursors {{Cursor 1} {0 ns} 0}
-quietly wave cursor active 0
-configure wave -namecolwidth 293
-configure wave -valuecolwidth 100
-configure wave -justifyvalue left
-configure wave -signalnamewidth 1
-configure wave -snapdistance 10
-configure wave -datasetprefix 0
-configure wave -rowmargin 4
-configure wave -childrowmargin 2
-configure wave -gridoffset 0
-configure wave -gridperiod 1
-configure wave -griddelta 40
-configure wave -timeline 0
-configure wave -timelineunits ns
-update
-WaveRestoreZoom {0 ns} {73 ns}
diff --git a/source_code/rv32f/source/ADD_step1.sv b/source_code/rv32f/source/ADD_step1.sv
deleted file mode 100755
index 596af49..0000000
--- a/source_code/rv32f/source/ADD_step1.sv
+++ /dev/null
@@ -1,82 +0,0 @@
-//By            : Joe Nasti
-//edited by     : Xinlue Liu
-//Last updated  : 6/1/20
-//
-//Module summary:
-//    First step for addition operation in three-step pipline.
-//    Shifts smaller fraction by difference in exponents
-//
-//Inputs:
-//    floating_point1/2_in - single precision floating point values
-//Outputs:
-//    sign_shifted         - sign of the floating point that gets shifted
-//    frac_shifted         - fraction of the floating point that gets shifted
-//    sign_not_shifted     - sign of the floating point that does not get shifted
-//    frac_not_shifted     - fraction of the floating point that does not get shifted
-//    exp_max              - max exponent of the two given floating points
-module ADD_step1
-  (
-   input  [6:0]  funct7,
-   input  [31:0] floating_point1_in,
-   input  [31:0] floating_point2_in,
-   output 	 sign_shifted,
-   output [25:0] frac_shifted,
-   output 	 sign_not_shifted,
-   output [25:0] frac_not_shifted,
-   output reg [7:0]  exp_max
-   );
-
-   reg  [7:0] 	 unsigned_exp_diff;
-   reg 		 cmp_out; //exp1 >= exp2 -> cmp_out == 0
-                          //exp1 <  exp2 -> cmp_out == 1
-   reg [31:0] 	 floating_point_shift;
-   reg [31:0] 	 floating_point_not_shift;
-   
-   //compare the exponents of two floating points
-   int_compare cmp_exponents (
-			      .funct7(funct7),
-			      .exp1(floating_point1_in[30:23]), 
-			      .exp2(floating_point2_in[30:23]),
-			      .u_diff(unsigned_exp_diff),
-			      .cmp_out(cmp_out)
-			      );
-   //determine which one to shift
-   //shift the smaller exponent
-	always_comb begin
-		floating_point_shift = 0;
-		if (cmp_out ==1) begin
-			floating_point_shift = floating_point1_in;
-		end else begin
-			floating_point_shift = floating_point2_in;
-		end
-	end
-	always_comb begin
-		floating_point_not_shift = 0;
-		if (cmp_out == 1) begin
-			floating_point_not_shift = floating_point2_in;
-		end else begin
-			floating_point_not_shift = floating_point1_in;
-		end
-	end
-	always_comb begin
-		exp_max = 0;
-		if (cmp_out == 1) begin
-			exp_max = floating_point2_in[30:23];
-		end else begin
-			exp_max = floating_point1_in[30:23];
-		end
-	end
-   
-   //right shift the smaller fp the amount of the difference of two fps.
-   right_shift shift_frac_with_smaller_exp (
-	       .fraction({1'b1, floating_point_shift[22:0], 2'b0}),
-	       .shift_amount(unsigned_exp_diff),
-	       .result(frac_shifted)
-	       );
-
-   assign frac_not_shifted = {1'b1, floating_point_not_shift[22:0], 2'b0};
-   assign sign_not_shifted = floating_point_not_shift[31];
-   assign sign_shifted     = floating_point_shift[31];
-   
-
-endmodule
diff --git a/source_code/rv32f/source/ADD_step2.sv b/source_code/rv32f/source/ADD_step2.sv
deleted file mode 100755
index cd6e2d3..0000000
--- a/source_code/rv32f/source/ADD_step2.sv
+++ /dev/null
@@ -1,67 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary:
-//    Second Step for addition operation in three-step pipeline
-//    Adds the fractions with sign bit from ADD_step1
-//
-//Inputs:
-//    frac1/2    - magnitudes of fractions to be added
-//    sign1/2    - signs of fractions to be added
-//    exp_max_in - max exponent from step1 (if the sum is zero the exponent is set to zero)
-//Outputs:
-//    sign_out    - sign of the result 
-//    sum         - magnitude of the result regardless of any carry out
-//    carry_out   - signal if there is an oveflow from the addition
-//    exp_max_out - if sum is non-zero, this is equal to exp_max_in
-
-module ADD_step2
-  (
-   input  [25:0] frac1,
-   input         sign1,
-   input  [25:0] frac2,
-   input         sign2,
-   input  [7:0]  exp_max_in, //
-   output        sign_out,
-   output [25:0] sum,
-   output        carry_out,
-   output reg [7:0]  exp_max_out//
-   );
-
-   reg [26:0] 	 frac1_signed;
-   reg [26:0] 	 frac2_signed;
-   reg [26:0] 	 sum_signed;
-   
-   always_comb begin : exp_max_assignment
-      if(sum_signed == 0) exp_max_out = 8'b00000000;
-      else exp_max_out = exp_max_in;
-   end
-   //change unsigned number to signed number
-   u_to_s change_to_signed1(
-			    .sign(sign1),
-			    .frac_unsigned(frac1),
-			    .frac_signed(frac1_signed)
-			    );
-   
-   u_to_s change_to_signed2(
-			    .sign(sign2),
-			    .frac_unsigned(frac2),
-			    .frac_signed(frac2_signed)
-			    );
-   //perform addition
-   adder_26b add_signed_fracs(
-			     .frac1(frac1_signed),
-			     .frac2(frac2_signed),
-			     .sum(sum_signed),
-			     .ovf(carry_out)
-			     );
-   //change signed to unsigned number
-   s_to_u change_to_unsigned(
-			     .frac_signed(sum_signed),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );
-   
-   
-endmodule
-			    
diff --git a/source_code/rv32f/source/ADD_step3.sv b/source_code/rv32f/source/ADD_step3.sv
deleted file mode 100755
index 633dd99..0000000
--- a/source_code/rv32f/source/ADD_step3.sv
+++ /dev/null
@@ -1,110 +0,0 @@
-
-module ADD_step3
-  (
-   input logic out_of_range,
-   input    reg        mul_ovf,
-   input reg         mul_carry_out,
-   input [6:0] 	 function_mode,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   input 	 ovf_in,
-   input 	 unf_in,
-   input 	 dz, // divide by zero flag
-   input 	 inv,
-   input [2:0] 	 frm,
-   input [7:0] 	 exponent_max_in,
-   input 	 sign_in,
-   input [25:0]  frac_in,
-   input 	 carry_out,
-   output [31:0] add_floating_point_out,
-   output reg ovf,
-   output reg unf,
-   output reg inexact
-   );
-   localparam quietNaN = 32'b01111111110000000000000000000000;
-   localparam signalNaN = 32'b01111111101000000000000000000000;
-   localparam Inf = 32'b01111111100000000000000000000000;
-   localparam NegInf = 32'b11111111100000000000000000000000;
-   localparam zero = 32'b00000000000000000000000000000000;
-   localparam NegZero = 32'b10000000000000000000000000000000;
-   //reg        inexact;
-   wire        sign;
-   wire [7:0]  exponent;
-   wire [22:0] frac;
-   
-   assign {sign, exponent, frac} = add_floating_point_out;
-   reg [31:0] dummy_floating_point_out;
-   reg [7:0] exp_minus_shift_amount;
-   reg [25:0] shifted_frac;
-   reg [7:0]  shifted_amount;
-   reg [7:0]  exp_out;
-   //reg        ovf;
-   //reg        unf;
-   
-   //normalize fraction
-   left_shift shift_left (
-			  .fraction(frac_in),
-			  .result(shifted_frac),
-			  .shifted_amount(shifted_amount)
-			  );
-
-   //subtract exponent if fraction is normalized 
-   subtract SUB (
-		 .exp1(exponent_max_in),
-		 .shifted_amount(shifted_amount),
-		 .result(exp_minus_shift_amount)
-		 );
-
-   
-   reg [24:0] round_this;
-   
-   always_comb begin
-      ovf = 0;
-      unf = 0;
-      if(carry_out == 1) begin
-	      round_this = frac_in[25:1] + 1'b1;
-	      exp_out    = exponent_max_in + 1;
-	      if((exponent_max_in == 8'b11111110) && (~unf_in)) ovf = 1;
-      end
-      else begin
-	      round_this = shifted_frac[24:0];
-	      exp_out    = exp_minus_shift_amount;
-	      if(({1'b0, exponent_max_in} < shifted_amount) && (~ovf_in)) unf = 1;
-      end
-   end
-
-   reg [31:0] fp_option;
-   reg [31:0] round_out;
-   
-   rounder ROUND (
-		  .frm(frm),
-		  .sign(sign_in),
-		  .exp_in(exp_out),
-		  .fraction(round_this),
-		  .round_out(round_out),
-		  .rounded(round_flag)
-		  );
-   
-   assign inexact                  = ovf_in | ovf | unf_in | unf | round_flag;
-   //assign flags                    = {inv, dz, (ovf | ovf_in), (unf | unf_in), inexact};
-   assign dummy_floating_point_out[31]   = round_out[31];
-   assign dummy_floating_point_out[30:0] = inv    ? 31'b1111111101111111111111111111111 :
-				     ovf_in ? 31'b1111111100000000000000000000000 :
-				     ovf    ? 31'b1111111100000000000000000000000 :
-				     unf_in ? 31'b0000000000000000000000000000000 :
-				     unf    ? 31'b0000000000000000000000000000000 :
-				     round_out[30:0];
- always_comb begin
-	fp_option = dummy_floating_point_out;
-	if (function_mode == 7'b0001000) begin
-	 	/*if ((exponent_max_in == 8'b11111111) & (mul_carry_out == 1'b1)) begin
-		fp_option = {round_out[31],31'b1111111100000000000000000000000};
-		end*/ //(exponent_max_in == 8'b11111111)
-		if ((out_of_range == 1'b1)) begin
-		fp_option = {round_out[31],31'b1111111100000000000000000000000};
-		end
-	end
-  end
-
-assign add_floating_point_out = fp_option;
-endmodule
diff --git a/source_code/rv32f/source/FPU_top_level.sv b/source_code/rv32f/source/FPU_top_level.sv
deleted file mode 100755
index 498ad74..0000000
--- a/source_code/rv32f/source/FPU_top_level.sv
+++ /dev/null
@@ -1,501 +0,0 @@
-//By            : Joe Nasti
-//Edited by 		: Xinlue Liu, Zhengsen Fu
-//Last Updated  : 7/15/2020
-//
-//Module Summary:
-//    Three-stage floating point unit supporting operations:
-//    addition
-//    subtraction (in progress)
-//    multiplication 
-//
-//Inputs:
-//    clk                - system clock
-//    nrst               - active low reset
-//    floating_point1/2  - floating points to be operated on
-//    frm                - rounding mode
-//    funct7             - 7 bit operation code
-//Outputs:
-//    floating_point_out - result of operation 
-//    flags              - 5 error flags (overflow,  underflow, divide by zero, inexact result, invalid operation)
-
-`include "FPU_if.vh"
-module FPU_top_level
-(
-    FPU_if.fp fpu_if
-/* input 	       clk,
- input 	       nrst,
- input  [31:0] floating_point1,
- input  [31:0] floating_point2,
- input  [2:0]  frm,
- input  [6:0]  funct7,
- output [31:0] floating_point_out,
-	output 			 f_stall,
- output [4:0]  flags*/
- );
-   //reg [2:0]   cycle_count;
-   reg [2:0]   frm2;
-   reg [2:0]   frm3;
-   reg [6:0]   funct7_2;
-   reg [6:0]   funct7_3;
-
-   //funct7 definitions
-   localparam ADD = 7'b0000000;
-   localparam MUL = 7'b0001000;
-   localparam SUB = 7'b0000100; 
-
-
-   
-   reg 	       sign_shifted;
-   reg         sign_shifted_minus;
-   reg [25:0]  frac_shifted;
-   reg [25:0]  frac_shifted_minus;
-   
-   reg 	       sign_not_shifted;
-   reg         sign_not_shifted_minus;
-   reg [25:0]  frac_not_shifted;
-   reg [25:0]  frac_not_shifted_minus;
-   reg [7:0]   exp_max;
-   reg [7:0]   exp_max_minus;
-   
-   reg         mul_sign1;
-   reg         mul_sign2;
-   reg [7:0]   mul_exp1;
-   reg [7:0]   mul_exp2;
-   reg [25:0]  product;
-   reg         mul_carry_out;
-   logic 		   out_of_range;
-   
-   reg [61:0]  step1_to_step2;
-   reg [61:0]  nxt_step1_to_step2;
-   
-   
-   reg        add_sign_out;
-   reg [25:0] add_sum;
-   reg 	      add_carry_out;
-   reg [7:0]  add_exp_max;
-
-
-   reg        minus_sign_out;
-   reg [25:0] minus_sum;
-   reg        minus_carry_out;
-   reg [7:0]  minus_exp_max;
-   reg        cmp_out;
-   reg 	      cmp_out_det;
-   reg        fp1_sign;
-   reg [25:0] fp1_frac;
-   reg        fp2_sign;
-   reg [25:0] fp2_frac;
-
-   // MUL step2 outputs -> step3 inputs
-   reg        mul_sign_out;
-   reg [7:0]  sum_exp;
-   reg        mul_ovf;
-   reg        mul_unf;
-
-   // invalid operation flag
-   reg        inv;
-   reg        inv2;
-   reg        inv3;  
-
-   reg [37:0] step2_to_step3;
-   reg [37:0] nxt_step2_to_step3;
-   reg exp_determine;
-   reg bothnegsub;
-   reg bothpossub;
-   reg 	      n1p2;
-   reg 	      n1p2r;
-   reg 	      signout;
-   reg 	      same_compare;
-   reg 	      shifted_check_allone;
-   reg 	      shifted_check_onezero;
-   reg  [7:0] 	 unsigned_exp_diff;
-   reg        frac_same;
-   reg [2:0] wm;
-   reg        ovf;
-   reg        unf;
-   reg        inexact;
-   reg        ovf_sub;
-   reg        unf_sub;
-   reg        inexact_sub;
-   reg [4:0] flag_add;
-   reg [4:0] flag_sub;
-   reg sum_init;
-
-	determine_frac_status determine_frac_status (
-			      .fp1_frac1(fpu_if.port_a[22:0]),
-			      .fp2_frac2(fpu_if.port_b[22:0]),
-			      .frac_same(frac_same)
-				);
-
- 	int_comparesub cmp_exponent (
-			      .exp1(fpu_if.port_a[30:23]), 
-			      .exp2(fpu_if.port_b[30:23]),
-			      .cmp_out(cmp_out_det),
-			      .same_compare(same_compare)
-			      );
-
-	sign_determine sign_determine (
-					.same_compare(same_compare),
-				        .frac_same(frac_same),
-					.cmp_out(cmp_out_det),
-					.floating_point1(fpu_if.port_a),
-					.floating_point2(fpu_if.port_b),
-					.signout(signout)
-					);
-
-	always_comb begin : check_neg_size
-		bothnegsub = 0;
-		if (((fpu_if.port_a[31]==1) && (fpu_if.port_b[31]==1) && (cmp_out_det==1) && (fpu_if.f_funct_7 == SUB)) | ((fpu_if.f_funct_7 == SUB) & ((fpu_if.port_a[31] == 1) & (fpu_if.port_b[31] == 1) & (same_compare == 1)) 
-	& (frac_same == 1))) begin
-			bothnegsub = 1;
-		end
-	end
-
-	always_comb begin : check_pos_size
-		bothpossub = 0;
-		if ((fpu_if.port_a[31]==0) && (fpu_if.port_b[31]==0) && (cmp_out_det==1) && (fpu_if.f_funct_7 == SUB)) begin
-			bothpossub = 1;
-		end
-	end
-
-always_comb begin : check_n1p2_size
-		n1p2 = 0; 
-		if (((fpu_if.port_a[31]==0) && (fpu_if.port_b[31]==1) && (cmp_out_det==1) && (fpu_if.f_funct_7 == SUB))) begin
-			n1p2 = 1;
-		end
-	end
-
-always_comb begin : check_n1p2r_size
-		n1p2r = 0; 
-		if ((fpu_if.port_a[31]==1) && (fpu_if.port_b[31]==0) && (cmp_out_det==1) && (fpu_if.f_funct_7 == SUB)) begin
-			n1p2r = 1;
-		end
-	end
-
-
-        //first step of addition. determine the exponent and fraction of the floating point that needs to be shifted
-	ADD_step1 addStep1(
-			   .funct7(fpu_if.f_funct_7),
-			   .floating_point1_in(fpu_if.port_a),
-			   .floating_point2_in(fpu_if.port_b),
-			   .sign_shifted(sign_shifted),
-			   .frac_shifted(frac_shifted),
-			   .sign_not_shifted(sign_not_shifted),
-			   .frac_not_shifted(frac_not_shifted),
-			   .exp_max(exp_max)
-			   );
-
-	//first step of subtraction. determine the exponent and fraction of the floating point that needs to be shifted
-        SUB_step1 substep1(
-			   .funct7(fpu_if.f_funct_7),
-			   .bothnegsub(bothnegsub),
-		      	   .floating_point1_in(fpu_if.port_a),
-			   //.floating_point2_in({~floating_point2[31], floating_point2[30:0]}),
-			   .floating_point2_in(fpu_if.port_b),
-			   .sign_shifted(sign_shifted_minus),
-			   .frac_shifted(frac_shifted_minus),
-			   .sign_not_shifted(sign_not_shifted_minus),
-			   .frac_not_shifted(frac_not_shifted_minus),
-			   .exp_max(exp_max_minus),
-			   .cmp(cmp_out),
-			   .unsigned_exp_diff(unsigned_exp_diff)
-		           );
-
-   
-// first step of multiplication. multiply two floating points
-        MUL_step1 mulStep1(
-			   .fp1_in(fpu_if.port_a),
-			   .fp2_in(fpu_if.port_b),
-			   .sign1(mul_sign1),
-			   .sign2(mul_sign2),
-			   .exp1(mul_exp1),
-			   .exp2(mul_exp2),
-			   .product(product),
-			   .carry_out(mul_carry_out),
-			   .out_of_range(out_of_range)
-			   );
-   
-   
-   always_comb begin : check_for_invalid_op
-      inv = 0;
-      // checking for invalid operation. Subject to change
-      if ((fpu_if.f_funct_7 == ADD) || (fpu_if.f_funct_7 == SUB)) begin
-	 if((fpu_if.port_a[30:0] == 31'h7F800000) && 
-	    (fpu_if.port_b[30:0] == 31'h7F800000) && 
-	    (fpu_if.port_a[31] ^ fpu_if.port_b[31])) begin
-	        inv = 1;
-	 end
-      end
-      
-      if(fpu_if.f_funct_7 == MUL) begin
-	 if(((fpu_if.port_a[30:0] == 31'h00000000)  &&
-	     (fpu_if.port_b[30:0] == 31'h7F800000)) ||
-	    ((fpu_if.port_a[30:0] == 31'h7F800000)  &&
-	     (fpu_if.port_b[30:0] == 31'h00000000))) begin
-	        inv = 1;
-	 end
-      end
-   end // block: check_for_invalid_op
-
-	// add signal indicator that indicates which subtraction operation it is going to perform
-	always_comb begin: determine_exp
-	if (cmp_out == 0) begin //fp1 > fp2.
-		exp_determine = 1'b1;
-	end else if (cmp_out == 1) begin
-		exp_determine = 1'b0;
-	end
-	end
-
-   //reorder the two floating points to pass into the second block of the subtraction routine
-   always_comb begin: reorder_the_subtraction
-	fp1_sign = 0;
-	fp1_frac = 0;
-	fp2_sign = 0;
-	fp2_frac = 0;
-   //if (bothnegsub == 0) begin
-   	if (cmp_out == 0) begin //if fp1 >= fp2
-      		fp1_sign = sign_not_shifted_minus;
-      		fp1_frac = frac_not_shifted_minus;
-      		fp2_sign = sign_shifted_minus;
-      		fp2_frac = frac_shifted_minus;
-   	end else if (cmp_out == 1) begin
-      		fp1_sign = sign_shifted_minus;
-      		fp1_frac = frac_shifted_minus;
-      		fp2_sign = sign_not_shifted_minus;
-      		fp2_frac = frac_not_shifted_minus; 
-   	end
-   end
-	always_comb begin : check_shifted_frac_allone
-		shifted_check_allone = 0;
-		if ((fpu_if.port_a[31]==1) && (fpu_if.port_b[31]== 1) && (frac_shifted_minus==0) && (fpu_if.f_funct_7 == SUB)) 	begin
-			shifted_check_allone = 1;
-		end
-	end
-
-always_comb begin : check_shifted_frac_onezero
-		shifted_check_onezero = 0;
-		if ((fpu_if.port_a[31]==1) && (fpu_if.port_b[31]== 0) && (frac_shifted_minus==0) && (fpu_if.f_funct_7 == SUB)) 	begin
-			shifted_check_onezero = 1;
-		end
-	end
-
-   always_comb begin : select_op_step1to2
-	nxt_step1_to_step2 = 0;
-      case(fpu_if.f_funct_7)
-	ADD: begin
-	   nxt_step1_to_step2[61]    = sign_shifted;
-	   nxt_step1_to_step2[60:35] = frac_shifted;
-	   nxt_step1_to_step2[34]    = sign_not_shifted;
-	   nxt_step1_to_step2[33:8]  = frac_not_shifted; 
-	   nxt_step1_to_step2[7:0]   = exp_max;
-	end
-	SUB: begin
-	   nxt_step1_to_step2[61]   = fp1_sign;
-	   nxt_step1_to_step2[60:35] = fp1_frac;
-	   nxt_step1_to_step2[34]    = fp2_sign;
-	   nxt_step1_to_step2[33:8]  = fp2_frac;
-	   nxt_step1_to_step2[7:0]   = exp_max_minus;
-	end
-	MUL: begin
-	   nxt_step1_to_step2[61]    = mul_sign1;
-	   nxt_step1_to_step2[60]    = mul_sign2;
-           nxt_step1_to_step2[59:52] = mul_exp1;
-	   nxt_step1_to_step2[51:44] = mul_exp2;
-	   nxt_step1_to_step2[43:18] = product;
-	   nxt_step1_to_step2[17]    = mul_carry_out;
-	end
-     
-      endcase // case (funct7)
-   end // block: select_op
-   			       
-   always_ff @ (posedge fpu_if.clk, negedge fpu_if.n_rst) begin : STEP1_to_STEP2
-      if(fpu_if.n_rst == 0) begin
-        frm2           <= 0;
-	 			step1_to_step2 <= 0;
-        funct7_2       <= 0;
-	 			inv2           <= 0;
-      end
-      else begin
-        frm2           <= fpu_if.f_frm_in;
-	 			step1_to_step2 <= nxt_step1_to_step2;
-	 			funct7_2       <= fpu_if.f_funct_7;
-	 			inv2           <= inv;
-      end
-   end 
-	 //perform addition
-	  ADD_step2 add_step2 (
-			      .frac1(step1_to_step2[60:35]),    // frac_shifted
-			      .sign1(step1_to_step2[61]),       // sign_shifted
-			      .frac2(step1_to_step2[33:8]),     // frac_not_shhifted
-			      .sign2(step1_to_step2[34]),       // sign_not_shifted
-			      .exp_max_in(step1_to_step2[7:0]), // exp_max
-			      .sign_out(add_sign_out),
-			      .sum(add_sum),
-			      .carry_out(add_carry_out),
-			      .exp_max_out(add_exp_max)
-			      );
-	 //perform subtraction
-          SUB_step2 sub_step2 (
-			      .n1p2r(n1p2r),
-			      .shifted_check_onezero(shifted_check_onezero),
-			      .fp1(fpu_if.port_a),
-			      .fp2(fpu_if.port_b),
-	 		      .cmp_out(cmp_out),
-	   		      .n1p2(n1p2),
-		  	      .bothnegsub(bothnegsub),
-			      .bothpossub(bothpossub),
-			      .frac1(step1_to_step2[60:35]),    // frac_shifted
-			      .sign1(step1_to_step2[61]),       // sign_shifted
-			      .frac2(step1_to_step2[33:8]),     // frac_not_shhifted
-			      .sign2(step1_to_step2[34]),       // sign_not_shifted
-			      .exp_max_in(step1_to_step2[7:0]), // exp_max
-			      .sign_out(minus_sign_out),
-			      .sum(minus_sum),
-			      .carry_out(minus_carry_out),
-			      .exp_max_out(minus_exp_max),
-			      .exp_determine(exp_determine),
-			      .outallone(outallone),
-			      .outallzero(outallzero),
-			      .wm(wm),
-			      .sum_init(sum_init)
-			      );
-   
-         MUL_step2 mul_step2 (
-			      .sign1(step1_to_step2[61]),   // mul_sign1
-			      .sign2(step1_to_step2[60]),   // mul_sign2
-			      .exp1(step1_to_step2[59:52]), // mul_exp1
-			      .exp2(step1_to_step2[51:44]), // mul_exp2
-			      .sign_out(mul_sign_out),
-			      .sum_exp(sum_exp),
-			      .ovf(mul_ovf),
-			      .unf(mul_unf),
-			      .carry(step1_to_step2[17])
-			      );
-   
-   always_comb begin : select_op_step2to3
-      nxt_step2_to_step3 = 0;
-      case(funct7_2)
-	ADD: begin
-	   nxt_step2_to_step3[37:36]= 2'b00;
-	   nxt_step2_to_step3[35]   = add_sign_out;
-	   nxt_step2_to_step3[34:9] = add_sum;
-	   nxt_step2_to_step3[8]    = add_carry_out;
-	   nxt_step2_to_step3[7:0]  = add_exp_max;
-	end
-	MUL: begin
-	   nxt_step2_to_step3[37]   = mul_ovf;
-       	   nxt_step2_to_step3[36]   = mul_unf;	      
-	   nxt_step2_to_step3[35]   = mul_sign_out;
-	   nxt_step2_to_step3[34:9] = step1_to_step2[43:18]; // product from MUL_step1
-	   nxt_step2_to_step3[8]    = step1_to_step2[17];    // mul_carry_out;
-	   nxt_step2_to_step3[7:0]  = sum_exp;
-	end
-	SUB: begin
-	   nxt_step2_to_step3[37:36]= 2'b00;
-	   nxt_step2_to_step3[35]   = minus_sign_out;
-	   nxt_step2_to_step3[34:9] = minus_sum;
-	   nxt_step2_to_step3[8]    = minus_carry_out;
-	   nxt_step2_to_step3[7:0]  = minus_exp_max;
-	end
-      endcase // case (funct7_2)
-   end // block: select_op_step2to3
-   
-   
-   always_ff @ (posedge fpu_if.clk, negedge fpu_if.n_rst) begin : STEP2_to_STEP3
-      if(fpu_if.n_rst == 0) begin
-	 				funct7_3       <= 0;
-   	      step2_to_step3 <= 0;
-	 				frm3           <= 0;
-	 				inv3           <= 0;
-      end
-      else begin
-	 				funct7_3       <= funct7_2;
-	 				step2_to_step3 <= nxt_step2_to_step3;
-	 				frm3           <= frm2;
-	 				inv3           <= inv2;
-      end 
-   end  
-   reg o;
-
-   always_comb begin
-      o = 0;
-      if((step2_to_step3[7:0] == 8'b11111111) && (step2_to_step3[36] == 1'b0) && (step2_to_step3[8] == 0)) o = 1;
-      else o = step2_to_step3[37]; 
-   end
-
-   reg [31:0] negmul_floating_point_out;
-   reg [31:0] add_floating_point_out;
-   //round the results and perform special case checking
-   SUB_step3 sub_step3 (
-		    .sum_init(sum_init),
-		    .unsigned_exp_diff(unsigned_exp_diff),
-		    .n1p2r(n1p2r),
-		    .wm(wm),
-		    .clk(fpu_if.clk),
-		    .nrst(fpu_if.n_rst),
-		    .frac_shifted_minus(frac_shifted_minus),
-		    .outallzero(outallzero),
-	 	    .outallone(outallone),
-		    .same_compare(same_compare),
-		    .shifted_check_allone(shifted_check_allone),
-		    .shifted_check_onezero(shifted_check_onezero),
-	 	    //.signout(signout),
-		    .bothnegsub(bothnegsub),
-		    .cmp_out(cmp_out),
-		    .floating_point1(fpu_if.port_a),
-		    .floating_point2(fpu_if.port_b),
-		    .function_mode(funct7_3[6:0]),
-		    .ovf_in(o),
-		    .unf_in(step2_to_step3[36]),
-		    .dz(1'b0),
-		    .inv(inv3),
-		    .frm(frm3),
-		    .exponent_max_in(step2_to_step3[7:0]),
-		    //.sign_in(step2_to_step3[35]),
-		    .sign_in(signout),
-		    .frac_in(step2_to_step3[34:9]),
-		    .carry_out(step2_to_step3[8]),
-		    .before_floating_point_out(negmul_floating_point_out),
-		    .ovf(ovf_sub),
-		    .unf(unf_sub),
-		    .inexact(inexact_sub)
-		    //.flags(flags)
-		    );
-//round the results 
-   ADD_step3 add_step3 (
-	   		.out_of_range(out_of_range),
-		    .mul_ovf(mul_ovf),
-		    .mul_carry_out(mul_carry_out),
-		    .function_mode(funct7_3[6:0]),
-		    .floating_point1(fpu_if.port_a),
-		    .floating_point2(fpu_if.port_b),
-		    .ovf_in(o),
-		    .unf_in(step2_to_step3[36]),
-		    .dz(1'b0),
-		    .inv(inv3),
-		    .frm(frm3),
-		    .exponent_max_in(step2_to_step3[7:0]),
-		    .sign_in(step2_to_step3[35]),
-		    .frac_in(step2_to_step3[34:9]),
-		    .carry_out(step2_to_step3[8]),
-		    .add_floating_point_out(add_floating_point_out),
-		    .ovf(ovf),
-		    .unf(unf),
-		    .inexact(inexact)
-		    );
-
-
-always_ff @ (posedge fpu_if.clk, negedge fpu_if.n_rst) begin: delay_flags
-	if (fpu_if.n_rst == 0) begin
-		flag_add <= 0;
-		flag_sub <= 0;
-	end else begin
-		flag_add   <= {inv, 1'b0, (ovf | o), (unf | o), inexact};
-		flag_sub   <= {inv, 1'b0, (ovf_sub | o), (unf_sub | o), inexact_sub};
-	end
-end
-
-assign fpu_if.fpu_out = (fpu_if.f_funct_7 == SUB) ? negmul_floating_point_out : add_floating_point_out;
-assign fpu_if.f_flags = (fpu_if.f_funct_7 == SUB) ? flag_sub : flag_add;
-
-endmodule
diff --git a/source_code/rv32f/source/MUL_step1.sv b/source_code/rv32f/source/MUL_step1.sv
deleted file mode 100755
index 837b23b..0000000
--- a/source_code/rv32f/source/MUL_step1.sv
+++ /dev/null
@@ -1,57 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary:
-//    First step of multiplication in three-step pipeline.
-//    multiplies 26 bit fractions
-//
-//Inputs:
-//    fp1/2     - single precision floating points
-//Outputs:
-//    sign1/2   - signs of floating points
-//    exp1/2    - exponents of floating points
-//    product   - result of fraction multiplication
-//    carry_out - signal if there is a carry out of the multiplication
-
-module MUL_step1
-  (
-   input  [31:0] fp1_in,
-   input  [31:0] fp2_in,
-   output        sign1,
-   output        sign2,
-   output [7:0]  exp1,
-   output [7:0]  exp2,
-   output [25:0] product,
-   output        carry_out,
-   output reg out_of_range
-   );
-
-   assign sign1 = fp1_in[31];
-   assign sign2 = fp2_in[31];
-   assign exp1  = fp1_in[30:23];
-   assign exp2  = fp2_in[30:23];
-   //multiply the two numbers
-
-   reg [28:0] test_mul_frac;
-   assign test_mul_frac = fp1_in[22:0] * fp2_in[22:0];
-   reg [9:0] test_mul_exp;
-   assign test_mul_exp = fp1_in[30:23] + fp2_in[30:23];
-   //reg out_of_range;
-
-   always_comb begin
-     out_of_range = 1'b0;
-     if (test_mul_exp == 9'b0101111111)
-      out_of_range = 1'b1;
-   end
-
-   mul_26b MUL (
-		.frac_in1({1'b1, fp1_in[22:0], 2'b00}),
-		.frac_in2({1'b1, fp2_in[22:0], 2'b00}),
-		.frac_out(product),
-		.overflow(carry_out)
-		);
-
-endmodule // MUL_step1
-
-
-   
diff --git a/source_code/rv32f/source/MUL_step2.sv b/source_code/rv32f/source/MUL_step2.sv
deleted file mode 100755
index bf71671..0000000
--- a/source_code/rv32f/source/MUL_step2.sv
+++ /dev/null
@@ -1,42 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 9/3/18
-//
-//Module Summary:
-//    Second step of multiplication in three-step pipeline
-//    Adds exponents together and xor's sign bits
-//
-//Inputs:
-//    sign1/2 - signs to be xor'ed
-//    exp1/2  - exponents to be added together
-//Outputs:
-//    sign_out - result of xor operation
-//    sum_exp  - result of addition
-//    ovf      - signal if an overflow has occurred 
-//    unf      - signal if an undeflow has occurred
-
-module MUL_step2
-  (
-   input        sign1,
-   input        sign2,
-   input  [7:0] exp1,
-   input  [7:0] exp2,
-   output       sign_out,
-   output [7:0] sum_exp,
-   output reg   ovf,
-   output reg   unf,
-   input        carry
-   );
- 
-
-   adder_8b add_EXPs(
-		     .carry(carry),
-		     .exp1(exp1),
-		     .exp2(exp2),
-		     .sum(sum_exp),
-		     .ovf(ovf),
-		     .unf(unf)
-		     );
-   
-   assign sign_out = sign1 ^ sign2;
-
-endmodule
diff --git a/source_code/rv32f/source/SUB_step1.sv b/source_code/rv32f/source/SUB_step1.sv
deleted file mode 100755
index c15faa2..0000000
--- a/source_code/rv32f/source/SUB_step1.sv
+++ /dev/null
@@ -1,107 +0,0 @@
-//By            : Joe Nasti
-//Edited by	: Xinlue Liu
-//Last updated  : 6/1/20
-//
-//Module summary:
-//    First step for subtraction operation in three-step pipline.
-//    Shifts smaller fraction by difference in exponents
-//
-//Inputs:
-//    floating_point1/2_in - single precision floating point values
-//Outputs:
-//    sign_shifted         - sign of the floating point that gets shifted
-//    frac_shifted         - fraction of the floating point that gets shifted
-//    sign_not_shifted     - sign of the floating point that does not get shifted
-//    frac_not_shifted     - fraction of the floating point that does not get shifted
-//    exp_max              - max exponent of the two given floating points
-//    cmp		   - indicator of which floating point is bigger or smaller
-module SUB_step1
-  (
-   input  [6:0]  funct7,
-   input 	bothnegsub,
-   input [31:0]  floating_point1_in,
-   input [31:0]  floating_point2_in,
-   output 	 sign_shifted,
-   output [25:0] frac_shifted,
-   output 	 sign_not_shifted,
-   output [25:0] frac_not_shifted,
-   output reg [7:0]  exp_max,
-   output 	 cmp,
-   output  reg  [7:0] 	 unsigned_exp_diff
-   );
-   reg [31:0] floating_point1_in_temp;
-   reg [31:0] floating_point2_in_temp;
-   //reg  [7:0] 	 unsigned_exp_diff;
-   reg 		 cmp_out; //exp1 >= exp2 -> cmp_out == 0
-                          //exp1 <  exp2 -> cmp_out == 1
-   reg  [31:0] 	 floating_point_shift;
-   reg  [31:0] 	 floating_point_not_shift;
-
-   always_comb begin: determine_input
-	if (bothnegsub == 1'b1) begin
-		floating_point1_in_temp = floating_point2_in;
-		floating_point2_in_temp = floating_point1_in;
-	end else begin
-		floating_point1_in_temp = floating_point1_in;
-		floating_point2_in_temp = floating_point2_in;
-   	end
-   end
-   //compare the exponents of two floating points
-   int_compare cmp_exponents (
-			      .funct7(funct7),
-			      .exp1(floating_point1_in_temp[30:23]), 
-			      .exp2(floating_point2_in_temp[30:23]),
-			      .u_diff(unsigned_exp_diff),
-			      .cmp_out(cmp_out)
-			      );
-   //determine which one to shift
-   //shift the smaller exponent
-
-	always_comb begin
-		floating_point_shift = 0;
-		if (cmp_out ==1) begin
-			floating_point_shift = floating_point1_in_temp;
-		end else begin
-			floating_point_shift = floating_point2_in_temp;
-		end
-	end
-	always_comb begin
-		floating_point_not_shift = 0;
-		if (cmp_out == 1) begin
-			floating_point_not_shift = floating_point2_in_temp;
-		end else begin
-			floating_point_not_shift = floating_point1_in_temp;
-		end
-	end
-	always_comb begin
-		exp_max = 0;
-		if (cmp_out == 1) begin
-			exp_max = floating_point2_in_temp[30:23];
-		end else begin
-			exp_max = floating_point1_in_temp[30:23];
-		end
-	end
-   //assign floating_point_shift = cmp_out ? floating_point1_in_temp : floating_point2_in_temp;
-   //assign floating_point_not_shift = cmp_out ? floating_point2_in_temp : floating_point1_in_temp;
-   //set the result exponent to the bigger exponent between X and Y
-   //assign exp_max = cmp_out ? floating_point2_in_temp[30:23] : floating_point1_in_temp[30:23];
-
-   //right shift the smaller fp the amount of the difference of two fps.
-   //right_shift_minus shift_frac (
-   right_shift shift_frac(
-	       .fraction({1'b1, floating_point_shift[22:0], 2'b0}),
-	       .shift_amount(unsigned_exp_diff),
-	       //.result_final(temp_frac_shifted)
-	       .result(frac_shifted)
-	       );
-
-   assign frac_not_shifted = {1'b1, floating_point_not_shift[22:0], 2'b0};
-   //assign frac_not_shifted = floating_point_not_shift[22:0];
-   //assign frac_shifted = temp_frac_shifted;
-   assign sign_not_shifted = floating_point_not_shift[31];
-   //negate the sign bit
-           //assign sign_shifted     = ~floating_point_shift[31];
-   assign sign_shifted     = floating_point_shift[31];
-   assign cmp = cmp_out;
-
-endmodule
diff --git a/source_code/rv32f/source/SUB_step2.sv b/source_code/rv32f/source/SUB_step2.sv
deleted file mode 100755
index a2f09fc..0000000
--- a/source_code/rv32f/source/SUB_step2.sv
+++ /dev/null
@@ -1,97 +0,0 @@
-module SUB_step2
-  (
-   input reg     shifted_check_onezero,
-   input reg     n1p2r,
-   input         bothnegsub,
-   input  [31:0] fp1,
-   input  [31:0] fp2,
-   input  [25:0] frac1,
-   input         sign1,
-   input  [25:0] frac2,
-   input         sign2,
-   input  [7:0]  exp_max_in, //
-   input reg exp_determine,
-   input reg bothpossub,
-   input reg n1p2,
-   input cmp_out,
-   output        sign_out,
-   output [25:0] sum,
-   output        carry_out,
-   output reg [7:0]  exp_max_out,//
-   output reg outallone,
-   output reg outallzero,
-   output reg    [2:0]    wm,
-   output reg sum_init
-   );
-
-   reg [26:0] 	 frac1_signed;
-   reg [26:0] 	 frac2_signed;
-   reg [26:0] 	 sum_signed;
-   reg [26:0] 	 frac2_complement; //26
-   reg [26:0]	 frac2_signedout;
-	 
-   
-   always_comb begin : exp_max_assignment
-      if(sum_signed == 0) exp_max_out = 8'b00000000;
-      else exp_max_out = exp_max_in;
-   end
-
-   //change to signed value. either {0, frac} or {0, ~frac} if sign is 1
-   u_to_s change_to_signed1(
-			    .sign(sign1),
-			    .frac_unsigned(frac1),
-			    .frac_signed(frac1_signed)
-			    );
-   
-   u_to_s change_to_signed2(
-			    .sign(sign2),
-			    .frac_unsigned(frac2),
-			    .frac_signed(frac2_signed)
-			    );
-   
-   //change the floating points to its two's complement
-   c_to_cp change_to_complement(
-				.frac2_input({1'b0,frac2}),
-				.frac2_signedin(frac2_signed),
-				.frac2_output(frac2_complement),
-				.frac2_signedout(frac2_signedout)
-				);
-   //perform subtraction
-   sub_26b sub_signed_fracs(
-			     .n1p2r(n1p2r),
-			     .shifted_check_onezero(shifted_check_onezero),
-			     .fp1(fp1),
-			     .fp2(fp2),
-			     .cmp_out(cmp_out),
-	 		     .n1p2(n1p2),
-			     //.frac1({1'b0,frac1}),
-			     //.frac2({1'b0,frac2_complement}),
-			     .frac1_s({1'b0,frac1_signed[26:1]}),//26,1 
-			     .frac2_s(frac2_signedout),
-			     .bothpossub(bothpossub),
-			     //.exp_determine(exp_determine),
-			     .frac1(frac1_signed),
-			     .frac2(frac2_signedout),
-			     .sum(sum_signed),
-			     .ovf(carry_out),
-			     .outallone(outallone),
-			     .outallzero(outallzero),
-		   	     .wm(wm),
-			     .sum_init(sum_init)
-			     );
-
-   /*s_to_u_new change_to_unsigned_new(
-			     .frac_signed(sum_signed),
-			     .exp_determine(exp_determine),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );*/
-
-    s_to_u change_to_unsigned(
-			     .frac_signed(sum_signed),
-			     .sign(sign_out),
-			     .frac_unsigned(sum)
-			     );
-   
-endmodule
-		
diff --git a/source_code/rv32f/source/SUB_step3.sv b/source_code/rv32f/source/SUB_step3.sv
deleted file mode 100644
index 08fa561..0000000
--- a/source_code/rv32f/source/SUB_step3.sv
+++ /dev/null
@@ -1,178 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/23/18
-//
-//Module Summary: 
-//    Third step of addition operation in three-step pipeline.
-//    Rounds result based on rounding mode (frm) and left shifts fraction if needed
-//
-//Inputs:
-//    frm              - 3 bit rounding mode
-//    exponent_max_in  - exponent of result floating point
-//    sign_in          - sign of result floating point
-//    frac_in          - fraction of result floating point
-//    carry_out        - carry out from step 2
-//Outputs:
-//    floating_point_out - final floating point
-
-module SUB_step3
-  (
-   input reg sum_init,
-   input reg  [7:0] 	 unsigned_exp_diff,
-   input reg n1p2r,
-   input reg [2:0] wm,
-   input clk,
-   input nrst,
-   input 	   [25:0] frac_shifted_minus,
-   input reg outallzero,
-   input reg outallone,
-   input reg same_compare,
-   //input 	 signout,
-   input 	 bothnegsub,
-   input 	 cmp_out,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   input [6:0] 	 function_mode,
-   input 	 ovf_in,
-   input 	 unf_in,
-   input 	 dz, // divide by zero flag
-   input 	 inv,
-   input [2:0] 	 frm,
-   input [7:0] 	 exponent_max_in, //exponent 
-   input 	 sign_in,
-   input [25:0]  frac_in,
-   input 	 carry_out,
-   input reg     shifted_check_allone,
-   input reg     shifted_check_onezero,
-   output [31:0] before_floating_point_out,
-   output reg ovf,
-   output reg unf,
-   output reg inexact
-   );
-
-   localparam quietNaN = 32'b01111111110000000000000000000000;
-   localparam signalNaN = 32'b01111111101000000000000000000000;
-   localparam Inf = 32'b01111111100000000000000000000000;
-   localparam NegInf = 32'b11111111100000000000000000000000;
-   localparam zero = 32'b00000000000000000000000000000000;
-   localparam NegZero = 32'b10000000000000000000000000000000;
-
-   //reg        inexact;
-   wire        sign;
-   wire [7:0]  exponent;
-   wire [22:0] frac;
-
-   localparam ADD = 7'b0000000;
-   localparam MUL = 7'b0001000;
-   localparam SUB = 7'b0000100; //add sub mode
-   
-   //assign {sign, exponent, frac} = before_floating_point_out;
-   
-   //reg [7:0] exp_minus_shift_amount;
-   reg [25:0] shifted_frac;
-   reg [7:0]  shifted_amount;
-   reg [7:0]  exp_out;
-   //reg        ovf;
-   //reg        unf;
-   reg 	      temp_sign;
-   reg [31:0] dummy_floating_point_out;
-   reg [31:0] fp_option;
-   reg [31:0] hold_value;
-   reg [23:0] rounded_frac;
-// Left shifts an unsigned 26 bit value until the first '1' is the most significant bit and returns the amount shifted
-   left_shift shift_left (
-			  .fraction(frac_in),
-			  .result(shifted_frac),
-			  .shifted_amount(shifted_amount)
-			  );
-
-   assign 	 exp_out    = exponent_max_in;
-
-   
-   reg [24:0] round_this;
-   reg [2:0] log_de;
-//this comb logic is for rounding mode
-   always_comb begin
-      ovf = 0;
-      unf = 0;
-      log_de = 0;
-      //if ((carry_out == 0) & (((floating_point1[31] == 0)&(floating_point2[31] == 0) & (cmp_out == 1)))) begin
-      if (carry_out == 0) begin
-	 log_de = 2'b01;
-	 round_this = frac_in[24:0] + 1'b1;
-	 if(({1'b0, exponent_max_in} < shifted_amount) && (~ovf_in)) unf = 1;
-      end else begin
-	 round_this = frac_in[25:1] + 1'b1;
-	 log_de = 2'b10;
-	 if((exponent_max_in == 8'b11111110) && (~unf_in)) ovf = 1;
-   end
-   end
-
-   reg [31:0] round_out;
-   wire buf_determine;
-   assign buf_determine = ovf_in | ovf | unf_in | unf;
-   //round the result
-   rounder_sub ROUND (
-		  .sum_init(sum_init),
-		  .clk(clk),
-		  .nrst(nrst),
-		  .unsigned_exp_diff(unsigned_exp_diff),
-		  .frac_in(frac_in),
-		  .shifted_frac(shifted_frac),
-		  .n1p2r(n1p2r),
-		  .wm(wm),
-		  .shifted_amount(shifted_amount),
-		  .buf_determine(buf_determine),
-		  .frac_shifted_minus(frac_shifted_minus),
-		  .outallzero(outallzero),
-		  .outallone(outallone),
-		  .same_compare(same_compare),
-		  .shifted_check_onezero(shifted_check_onezero),
-		  .shifted_check_allone(shifted_check_allone),
-		  .bothnegsub(bothnegsub),
-		  .cmp_out(cmp_out),
-		  .fp1(floating_point1),
-		  .fp2(floating_point2),
-		  .frm(frm),
-		  .sign(sign_in),
-		  .exp_in(exp_out),
-		  .carry_out(carry_out),
-		  .fraction(round_this),
-		  .round_out(round_out),
-		  .rounded(round_flag),
-		  .sol_frac(rounded_frac)
-		  );
-   
-     assign inexact                  = ovf_in | ovf | unf_in | unf | round_flag;
-
-     assign dummy_floating_point_out[31]   = round_out[31];
-     assign dummy_floating_point_out[30:0] = inv    ? signalNaN :
-				     ovf_in ? 31'b1111111100000000000000000000000 :
-				     (unf & (function_mode != SUB)) ? 31'b1111111100000000000000000000000 :
-				     ovf    ? 31'b1111111100000000000000000000000 :
-				     unf_in ? 31'b0000000000000000000000000000000 :
-				     ((function_mode == SUB) & unf & ((round_out[30:23] == 8'b11111111) | (round_out[30:23] == 8'b11111110) | (round_out[30:23] == 8'b11111101) | (round_out[30:23] == 8'b11111100) | (round_out[30:23] == 8'b11111000) | (round_out[30:23] == 8'b11111001)))    ? 31'b0000000000000000000000000000000 :
-				     round_out[30:0];
-   
-   assign temp_sign = dummy_floating_point_out[31];
-   
-   always_comb begin
-         hold_value  = dummy_floating_point_out;
-      if (function_mode == SUB) begin
-	 hold_value = {sign_in,dummy_floating_point_out[30:0]};
-      end
-   end
-
-   always_comb begin
-      fp_option = hold_value;
-      if (hold_value[30:23] == 8'b11111111) begin
-	if (((floating_point1 == Inf) & (floating_point2 == Inf)) | ((floating_point1 == NegInf) & (floating_point2 == NegInf))) begin
-		fp_option = hold_value;
-        end else begin
-		fp_option = {hold_value[31:23], 23'd0};
-        end
-      end
-   end
-//determine special cases like operations between Infinity, negitive Infinity, zero, negative zero, quiet NaN, signaling NaN
-assign before_floating_point_out = fp_option;
-assign {sign, exponent, frac} = before_floating_point_out;
-endmodule
diff --git a/source_code/rv32f/source/adder_26b.sv b/source_code/rv32f/source/adder_26b.sv
deleted file mode 100755
index d38c3fb..0000000
--- a/source_code/rv32f/source/adder_26b.sv
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7.16.18
-//
-//Module Summary: 
-//    adds two signed 26 bit fraction values
-//
-//Inputs:
-//    frac1/2 - signed 26 bit values with decimal point fixed after second bit
-//Outputs:
-//    sum     - output of sum operation regardless of overflow
-//    ovf     - high if an overflow has occured 
- 
-module adder_26b(
-	input      [26:0] frac1,
-	input      [26:0] frac2, 
-	output reg [26:0] sum, 
-	output reg        ovf
-);
-
-always_comb begin 
-
-   sum = frac1 + frac2;
-   ovf = 0;
-   
-   if(frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-      ovf = 1;
-      sum[26] = 1;
-   end
-   
-   if(frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-      ovf = 1;
-      sum[26] = 0;
-   end
-  
-end
-endmodule
-
diff --git a/source_code/rv32f/source/adder_8b.sv b/source_code/rv32f/source/adder_8b.sv
deleted file mode 100755
index 95a1f5a..0000000
--- a/source_code/rv32f/source/adder_8b.sv
+++ /dev/null
@@ -1,37 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/31/2018
-//
-//Module summary:
-//    Adds two unsigned 8 bit integers with ofset of 128 and signals if there is an over/underflow
-//Inputs:
-//    exp1/2 - 8 bit values to be summed
-//Outputs:
-//    sum    - 8 bit result of addition regardless of ovf/unf
-//    ovf    - signal overflow has occurred
-//    unf    - signal underflow has occurred
-
-module adder_8b(
-	input carry,
-	input [7:0]  exp1,
-	input [7:0]  exp2, 
-	output [7:0] sum, 
-	output 	     ovf,
-	output 	     unf
-);
-
-   reg [7:0] 	     r_exp1;
-   reg [7:0] 	     r_exp2;
-   reg [7:0] 	     r_sum;
-   
-
-   always_comb begin
-      r_exp1 = exp1 - 8'b01111111;
-      r_exp2 = exp2 - 8'b01111111;
-      r_sum  = r_exp1 + r_exp2;
-   end
-   
-   assign sum = (exp1 + exp2) - 8'b01111111; // add with offset
-   assign ovf = r_sum[7] && ~r_exp1[7] && ~r_exp2[7];
-   assign unf = ((carry != 1) || (sum != 8'b11111111)) && (~r_sum[7] && r_exp1[7] && r_exp2[7]);
-
-endmodule
diff --git a/source_code/rv32f/source/c_to_cp.sv b/source_code/rv32f/source/c_to_cp.sv
deleted file mode 100755
index 4938912..0000000
--- a/source_code/rv32f/source/c_to_cp.sv
+++ /dev/null
@@ -1,16 +0,0 @@
-module c_to_cp
-  (
-   input [26:0] frac2_input,//25
-   input [26:0] frac2_signedin,
-   output reg [26:0] frac2_output,//25
-   output reg [26:0] frac2_signedout
-   );
- 
-   always_comb begin
-   //find the two's complement of the frac2
-      frac2_output[26:0] = (~frac2_input[26:0] + 1'b1);//25
-      frac2_signedout[26:0] = (~frac2_signedin[26:0] + 1'b1);
-   end
-   
-   
-endmodule // c_to_cp
diff --git a/source_code/rv32f/source/clock_counter.sv b/source_code/rv32f/source/clock_counter.sv
deleted file mode 100644
index 72aab06..0000000
--- a/source_code/rv32f/source/clock_counter.sv
+++ /dev/null
@@ -1,73 +0,0 @@
-`include "FPU_if.vh"
-module clock_counter (
-    FPU_if.cc frf_cc
-);
-  typedef enum bit[2:0] {IDLE, START, READY} stateType; //state machine to identify f_ready
-  stateType STATE;
-  stateType NXT_STATE;
-  reg [31:0] nxt_f_rs1_data, nxt_f_rs2_data;
-  reg [31:0] last_f_rs1_data, last_f_rs2_data;
-  
-  reg [7:0] nxt_f_funct_7;
-  reg [7:0] last_f_funct_7;
-
-  reg [2:0] nxt_frm;
-  reg [2:0] last_frm;
-
-  logic f_ready;
-  always_ff @ (negedge frf_cc.n_rst, posedge frf_cc.clk)
-    begin: REG_LOGIC
-    if (!frf_cc.n_rst) begin
-      STATE <= IDLE;
-      last_f_rs1_data <= 0;
-      last_f_rs2_data <= 0;
-      last_f_funct_7 <= 0;
-      last_frm <= 0;
-    end else begin
-      STATE <= NXT_STATE;
-      last_f_rs1_data <= nxt_f_rs1_data;
-      last_f_rs2_data <= nxt_f_rs2_data;
-      last_f_funct_7 <= nxt_f_funct_7;
-      last_frm <= nxt_frm;
-    end
-  end
-
-  always_comb begin: NXT_LOGIC
-    NXT_STATE = STATE;
-    case(STATE)
-    IDLE: begin
-      if ((last_f_rs1_data != frf_cc.port_a) || (last_f_rs2_data != frf_cc.port_b) || (last_f_funct_7 != frf_cc.f_funct_7) || (last_frm != frf_cc.f_frm_in)) begin
-        NXT_STATE = START;
-      end else begin
-        NXT_STATE = IDLE;
-      end
-    end
-    START: begin
-      NXT_STATE = READY;
-    end
-    READY: begin
-      NXT_STATE = IDLE;
-    end
-    endcase
-  end
-
-  always_comb begin: OUTPUT_LOGIC
-    frf_cc.f_ready = 1'b0;
-    nxt_f_rs1_data = last_f_rs1_data;
-    nxt_f_rs2_data = last_f_rs2_data;
-    nxt_f_funct_7 = last_f_funct_7;
-    nxt_frm = last_frm;
-    case (STATE) 
-    READY: begin
-    frf_cc.f_ready = 1'b1;
-    end
-    IDLE: begin
-      nxt_f_rs1_data = frf_cc.port_a;
-      nxt_f_rs2_data = frf_cc.port_b;
-      nxt_f_funct_7 = frf_cc.f_funct_7;
-      nxt_frm = frf_cc.f_frm_in;
-    end
-    endcase
-  end
-  
-endmodule
diff --git a/source_code/rv32f/source/determine_frac_status.sv b/source_code/rv32f/source/determine_frac_status.sv
deleted file mode 100644
index 045635e..0000000
--- a/source_code/rv32f/source/determine_frac_status.sv
+++ /dev/null
@@ -1,26 +0,0 @@
-module determine_frac_status
-(
-   input [22:0]  fp1_frac1,
-   input [22:0]  fp2_frac2,
-   output reg frac_same
-);
-
-wire [23:0] temp_fp1_frac1 = {1'b0, fp1_frac1};
-wire [23:0] temp_fp2_frac2 = {1'b0, fp2_frac2};
-reg [23:0] diff_frac1_frac2;
-reg diff_determine;
-
-always_comb begin
-	diff_frac1_frac2 = temp_fp1_frac1 - temp_fp2_frac2;
-	case(diff_frac1_frac2[23])
-		1'b0: diff_determine = 1'b0;
-		1'b1: diff_determine = 1'b1;
-	endcase
-end
-always_comb begin
-	frac_same = 0;
-	if (diff_determine == 1'b1)
-		frac_same = 1'b1;
-end
-
-endmodule
diff --git a/source_code/rv32f/source/int_compare.sv b/source_code/rv32f/source/int_compare.sv
deleted file mode 100755
index f6081d6..0000000
--- a/source_code/rv32f/source/int_compare.sv
+++ /dev/null
@@ -1,43 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/18
-//
-//Module Summary:
-//    Compares magnitude of two unsigned 8 bit integers
-//
-//Inputs: 
-//    exp1/2 - 8 bit unsigned integers
-//Outputs:
-//    u_diff  - unsigned difference between exp1 and exp2
-//    cmp_out - exp1 < exp2 -> 1, exp1 >= exp2 -> 0
-
-module int_compare(
-        input  [6:0]  funct7,
-	input      [7:0] exp1,
-	input      [7:0] exp2,
-	output     [7:0] u_diff,
-	output reg       cmp_out
-);
-
-wire [8:0] u_exp1 = {1'b0, exp1};
-wire [8:0] u_exp2 = {1'b0, exp2}; 
-reg  [8:0] diff;
-
-assign u_diff = diff[7:0];
-
-always_comb begin 
-	diff = u_exp1 - u_exp2;
-	case(diff[8]) 
-		1'b0: cmp_out = 1'b0;
-		1'b1: begin
-		      cmp_out = 1'b1; 
-		      if (funct7 == 7'b0000100) begin
-		      	diff = ~diff;
-		      end else begin
-			diff = -diff;
-		      end
-		      end
-	endcase
-end 
-endmodule
-
-
diff --git a/source_code/rv32f/source/int_comparesub.sv b/source_code/rv32f/source/int_comparesub.sv
deleted file mode 100644
index ea9f72e..0000000
--- a/source_code/rv32f/source/int_comparesub.sv
+++ /dev/null
@@ -1,45 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/18
-//
-//Module Summary:
-//    Compares magnitude of two unsigned 8 bit integers
-//
-//Inputs: 
-//    exp1/2 - 8 bit unsigned integers
-//Outputs:
-//    u_diff  - unsigned difference between exp1 and exp2
-//    cmp_out - exp1 < exp2 -> 1, exp1 >= exp2 -> 0
-
-module int_comparesub(
-	input      [7:0] exp1,
-	input      [7:0] exp2,
-	output     [7:0] u_diff,
-	output reg       cmp_out,
-	output reg 	 same_compare
-);
-
-wire [8:0] u_exp1 = {1'b0, exp1};
-wire [8:0] u_exp2 = {1'b0, exp2}; 
-reg  [8:0] diff;
-
-assign u_diff = diff[7:0];
-
-always_comb begin 
-	diff = u_exp1 - u_exp2;
-	case(diff[8]) 
-		1'b0: cmp_out = 1'b0;
-		1'b1: begin
-		      cmp_out = 1'b1; 
-		      diff = ~diff;
-		      end
-	endcase
-end 
-always_comb begin
-	same_compare = 1'b0;
-	if (exp1 == exp2) begin
-		same_compare = 1'b1;
-	end
-end
-endmodule
-
-
diff --git a/source_code/rv32f/source/left_shift.sv b/source_code/rv32f/source/left_shift.sv
deleted file mode 100755
index ae2aeeb..0000000
--- a/source_code/rv32f/source/left_shift.sv
+++ /dev/null
@@ -1,49 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/16/2018
-//
-//Module Summary: 
-//    Left shifts an unsigned 26 bit value until the first '1' is the most significant bit and returns the amount shifted
-//
-//Inputs:
-//    fraction - 26 bit value to be shifted
-//Outputs:
-//    result   - resulting 26 bit value with a '1' in most significance and zeros shifted in from the right
-
-module left_shift(
-	input      [25:0] fraction,
-	output reg [25:0] result,
-	output reg [7:0] shifted_amount
-);
-
-	always_comb begin
-	        result = fraction; 
-	        shifted_amount = 0;
-		casez(fraction)
-			26'b01????????????????????????: begin result = {fraction[24:0], 1'd0}; shifted_amount = 1;  end
-			26'b001???????????????????????: begin result = {fraction[23:0], 2'd0}; shifted_amount = 2;  end
-			26'b0001??????????????????????: begin result = {fraction[22:0], 3'd0}; shifted_amount = 3;  end 
-			26'b00001?????????????????????: begin result = {fraction[21:0], 4'd0}; shifted_amount = 4;  end
-			26'b000001????????????????????: begin result = {fraction[20:0], 5'd0}; shifted_amount = 5;  end
-			26'b0000001???????????????????: begin result = {fraction[19:0], 6'd0}; shifted_amount = 6;  end
-			26'b00000001??????????????????: begin result = {fraction[18:0], 7'd0}; shifted_amount = 7;  end 
-			26'b000000001?????????????????: begin result = {fraction[17:0], 8'd0}; shifted_amount = 8;  end
-			26'b0000000001????????????????: begin result = {fraction[16:0], 9'd0}; shifted_amount = 9;  end
-			26'b00000000001???????????????: begin result = {fraction[15:0],10'd0}; shifted_amount = 10; end
-			26'b000000000001??????????????: begin result = {fraction[14:0],11'd0}; shifted_amount = 11; end
-			26'b0000000000001?????????????: begin result = {fraction[13:0],12'd0}; shifted_amount = 12; end
-			26'b00000000000001????????????: begin result = {fraction[12:0],13'd0}; shifted_amount = 13; end
-			26'b000000000000001???????????: begin result = {fraction[11:0],14'd0}; shifted_amount = 14; end
-			26'b0000000000000001??????????: begin result = {fraction[10:0],15'd0}; shifted_amount = 15; end
-			26'b00000000000000001?????????: begin result = {fraction[9:0], 16'd0}; shifted_amount = 16; end
-			26'b000000000000000001????????: begin result = {fraction[8:0], 17'd0}; shifted_amount = 17; end
-			26'b0000000000000000001???????: begin result = {fraction[7:0], 18'd0}; shifted_amount = 18; end
-			26'b00000000000000000001??????: begin result = {fraction[6:0], 19'd0}; shifted_amount = 19; end
-			26'b000000000000000000001?????: begin result = {fraction[5:0], 20'd0}; shifted_amount = 20; end
-			26'b0000000000000000000001????: begin result = {fraction[4:0], 21'd0}; shifted_amount = 21; end
-			26'b00000000000000000000001???: begin result = {fraction[3:0], 22'd0}; shifted_amount = 22; end
-			26'b000000000000000000000001??: begin result = {fraction[2:0], 23'd0}; shifted_amount = 23; end
-			26'b0000000000000000000000001?: begin result = {fraction[1:0], 24'd0}; shifted_amount = 24; end
-			26'b00000000000000000000000001: begin result = {fraction[0],   25'd0}; shifted_amount = 25; end
-		endcase
-	end
-endmodule
diff --git a/source_code/rv32f/source/mul_26b.sv b/source_code/rv32f/source/mul_26b.sv
deleted file mode 100755
index fb3cb91..0000000
--- a/source_code/rv32f/source/mul_26b.sv
+++ /dev/null
@@ -1,30 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary:
-//    multiplies two 26 bit fraction values with decimal point after the first bit
-//
-//Inputs:
-//    frac_in1/2 - 26 bit fractions with decimal point after first bit
-//Outputs: 
-//    frac_out   - 26 bit result of operation regardless of overflow occuring
-//    overflow   - flags if an overflow has occured
-
-module mul_26b
-(
- input  [25:0] frac_in1,
- input  [25:0] frac_in2,
- output [25:0] frac_out,
- output        overflow
- );
-
-   reg 	[51:0] frac_out_52b;
-
-   assign overflow = frac_out_52b[51];
-   assign frac_out = frac_out_52b[50:25];
-
-   always_comb begin : MULTIPLY
-      frac_out_52b = frac_in1 * frac_in2;
-      
-   end
-endmodule   
diff --git a/source_code/rv32f/source/right_shift.sv b/source_code/rv32f/source/right_shift.sv
deleted file mode 100755
index 0ed6f3b..0000000
--- a/source_code/rv32f/source/right_shift.sv
+++ /dev/null
@@ -1,51 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary: 
-//    right shifts a 26 bit value by a given amount
-//
-//Inputs:
-//    fraction     - 26 bit value to be shifted
-//    shift_amount - unsigned 8 bit value amount to shift fraction
-//Outputs:
-//    result       - 26 bit result of the shift
-
-module right_shift(
-	input      [25:0] fraction,
-	input      [7:0]  shift_amount,
-	output reg [25:0] result
-);
-
-	always_comb begin
-		case(shift_amount)
-			0 : result = fraction;
-			1 : result =  {1'd0, fraction[25:1]}; 
-			2 : result =  {2'd0, fraction[25:2]};
-			3 : result =  {3'd0, fraction[25:3]};
-			4 : result =  {4'd0, fraction[25:4]};
-			5 : result =  {5'd0, fraction[25:5]};
-			6 : result =  {6'd0, fraction[25:6]};
-			7 : result =  {7'd0, fraction[25:7]};
-			8 : result =  {8'd0, fraction[25:8]};
-			9 : result =  {9'd0, fraction[25:9]};
-			10: result = {10'd0, fraction[25:10]}; 
-			11: result = {11'd0, fraction[25:11]};
-			12: result = {12'd0, fraction[25:12]};
-			13: result = {13'd0, fraction[25:13]};
-			14: result = {14'd0, fraction[25:14]};
-			15: result = {15'd0, fraction[25:15]};
-			16: result = {16'd0, fraction[25:16]};
-			17: result = {17'd0, fraction[25:17]};
-			18: result = {18'd0, fraction[25:18]};
-			19: result = {19'd0, fraction[25:19]};
-			20: result = {20'd0, fraction[25:20]};
-			21: result = {21'd0, fraction[25:21]};
-			22: result = {22'd0, fraction[25:22]};
-			23: result = {23'd0, fraction[25:23]};
-			24: result = {24'd0, fraction[25:24]};
-			25: result = {25'd0, fraction[25]};
-		   default: result = 26'd0;
-	        endcase
-	end
-endmodule
-
diff --git a/source_code/rv32f/source/rounder.sv b/source_code/rv32f/source/rounder.sv
deleted file mode 100755
index 0e72899..0000000
--- a/source_code/rv32f/source/rounder.sv
+++ /dev/null
@@ -1,65 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/18/18
-//
-//Module Summary: 
-//    rounds floating point after the operation according to the frm (rounding mode)
-//
-//Inputs:
-//    frm       - rounding mode
-//    sign      - one bit sign of floating point
-//    exp_in    - 8 bit exponent of floating point
-//    fraction  - 25 bit fraction of floating point (2 extra least significant bits used for rounding)
-//Ouputs:
-//    rount_out - resulting floating point after rounding operation
-
-module rounder(
-	       input      [2:0]  frm,
-	       input 		 sign,
-	       input      [7:0]  exp_in,
-	       input      [24:0] fraction,
-	       output reg [31:0] round_out,
-	       output            rounded
-	       );
-   reg        round_amount;
-
-   localparam RNE = 3'b000;
-   localparam RZE = 3'b001;
-   localparam RDN = 3'b010;
-   localparam RUP = 3'b011;
-   localparam RMM = 3'b100;
-   
-   always_comb begin
-      round_amount = 0;
-      if(fraction[24:2] != '1) begin
-	      if(frm == RNE) begin
-	          if(fraction[1] == 1'b1) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RZE) begin
-	          round_amount = 0;
-	      end
-	      else if(frm == RDN) begin
-	          if(sign == 1 && ((fraction[0] == 1) || (fraction[1] == 1))) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RUP) begin
-	          if(sign == 0 && ((fraction[0] == 1) || (fraction[1] == 1))) begin
-	              round_amount = 1;
-            end
-	      end
-	      else if(frm == RMM) begin
-	          if(fraction[1] == 1) begin
-	              round_amount = 1;
-            end
-	      end
-      end // if (fraction[24:2] != '1)
-   end // always_comb
-
-   assign rounded   = round_amount;
-   assign round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   
-endmodule
-	    
-	    
diff --git a/source_code/rv32f/source/rounder_sub.sv b/source_code/rv32f/source/rounder_sub.sv
deleted file mode 100644
index 02474be..0000000
--- a/source_code/rv32f/source/rounder_sub.sv
+++ /dev/null
@@ -1,202 +0,0 @@
-//Module Summary: 
-//    rounds floating point after the operation according to the frm (rounding mode)
-//
-//Inputs:
-//    frm       - rounding mode
-//    sign      - one bit sign of floating point
-//    exp_in    - 8 bit exponent of floating point
-//    fraction  - 25 bit fraction of floating point (2 extra least significant bits used for rounding)
-//Ouputs:
-//    rount_out - resulting floating point after rounding operation
-
-module rounder_sub(
-		input sum_init,
-	 	input clk,
-   		input nrst,
-	       input reg  [7:0] 	 unsigned_exp_diff,
-	       input [25:0]  frac_in,
-	       input reg [25:0] shifted_frac,
-	       input reg n1p2r,
-	       input reg [2:0] wm,
-	       input reg [7:0]  shifted_amount,
-	       input buf_determine,
-   	       input [25:0] frac_shifted_minus,
-	       input reg  outallzero,
-	       input reg  outallone,
-	       input      same_compare,
-	       input 	  bothnegsub,
-	       input      cmp_out,
-	       input      [31:0] fp1,
-	       input      [31:0] fp2,
-	       input      [2:0]  frm,
-	       input 		 sign,
-	       input      [7:0]  exp_in,
-	       input      [24:0] fraction,
-	       input 	  carry_out,
-	       input reg  shifted_check_allone,
-	       input reg  shifted_check_onezero,
-	       output reg [31:0] round_out,
-	       output            rounded,
-	       output 	  [23:0] sol_frac
-	       );
-   reg        round_amount;
-   reg 	[31:0] temp_round_out;
-   reg  [22:0] temp_fraction;
-   reg  [7:0]  temp_exp;
-   localparam RNE = 3'b000;
-   localparam RZE = 3'b001;
-   localparam RDN = 3'b010;
-   localparam RUP = 3'b011;
-   localparam RMM = 3'b100;
-   reg [3:0] mod;
-   reg flag_inexact;
-always_comb begin
-	flag_inexact = 1'b0;
-	if (buf_determine == 1'b1) 
-		flag_inexact = 1'b1;
-		
-end
-   //assign diff_sign_determine = ((fp1[31] == 1) & (fp2[31] == 0)) ? 1:0;
-   //assign temp_fraction = fraction;
-   //assign same_sign_determine = (((fp1[31] == 0) & (fp2[31] == 0))) ? 1:0;
-   always_comb begin
-      round_amount = 1'b0;
-      if(fraction[24:2] != '1) begin
-	 if(frm == RNE) begin
-	    if(fraction[1:0] == 2'b11)
-	      round_amount = 1'b1;
-	 end
-	 else if(frm == RZE) begin
-	    round_amount = 1'b0;
-	 end
-	 else if(frm == RDN) begin
-	 if(sign == 1 && ((fraction[0] == 1) || (fraction[1] == 1)))
-	    round_amount = 1'b1;
-	 end
-	 else if(frm == RUP) begin
-	    if(sign == 0 && ((fraction[0] == 1) || (fraction[1] == 1)))
-	      round_amount = 1'b1;
-	 end
-	 else if(frm == RMM) begin
-	    if(fraction[1] == 1)
-	      round_amount = 1'b1;
-	 end
-      end // if (fraction[24:2] != '1)
-   end // always_comb
-
-   assign rounded   = round_amount;
-   assign temp_round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   //assign round_out = {sign, exp_in, fraction[24:2] + round_amount};
-   assign sol_frac = fraction[24:2] + round_amount;
-   always_comb begin
-	temp_fraction = sol_frac[22:0];
-	temp_exp = exp_in;
-        mod = 4'b0000;
-	if (carry_out == 1) begin
-		temp_fraction = sol_frac[22:0];
-		temp_exp = exp_in + 1'b1;
-		mod = 4'b0001;
-	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000001)) begin
-		temp_fraction = fraction[23:1] + round_amount;;
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0010;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000010)) begin
-		temp_fraction = fraction[22:0] - 1'b1;
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0011;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001100)) begin
-		temp_fraction = {fraction[12:1], 11'b00000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001010)) begin
-		temp_fraction = {fraction[14:1], 9'b000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001001)) begin
-		temp_fraction = {fraction[15:1], 8'b00000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000110)) begin
-		temp_fraction = {fraction[18:1], 5'b00000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001000)) begin
-		temp_fraction = {fraction[16:1], 7'b0000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00000111)) begin
-		temp_fraction = {fraction[17:1], 6'b000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((same_compare == 1'b1) & (shifted_amount == 8'b00001110)) begin
-		temp_fraction = {fraction[10:1], 13'b0000000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b0100;
-    	end else if ((cmp_out == 1'b1) & (fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (sum_init == 1'b1) & (frac_shifted_minus != 0)) begin
-		temp_fraction = sol_frac[23:1];
-		temp_exp = exp_in + 1'b1;
-		mod = 4'b0101;
-	end else if ((shifted_check_onezero == 1'b0)  & (fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (cmp_out == 1'b1)) begin
-		temp_fraction = ~fraction[24:2] + 1'b1;
-		temp_exp = exp_in;
-		mod = 4'b0110;
-	end else if ((frac_shifted_minus == 0)  & (round_amount == 1'b1)) begin
-		temp_fraction = fraction[24:2];
-		temp_exp = exp_in;
-		mod = 4'b0111;
-	end else if (shifted_amount == 8'd1) begin
-		temp_fraction = fraction[23:1];
-		temp_exp = exp_in - 1'b1;
-      		mod = 4'b1000;
-	end else if ((shifted_amount == 0) & (same_compare == 1'b0)) begin
-		temp_fraction = sol_frac - round_amount;
-		temp_exp = exp_in;
-      		mod = 4'b1001;
-	end else if ((fp1[31] == 1'b1) & (fp2[31] == 1'b0) & (cmp_out == 1'b1) & (sign == 1'b1)) begin
-		temp_fraction = ~sol_frac + 1'b1;
-		temp_exp = exp_in;
-      		mod = 4'b1010;
-	end else if ((same_compare == 1'b0) & (shifted_amount == 8'b00000001)) begin
-		temp_fraction = fraction[23:1];
-		temp_exp = exp_in - 1'b1;
-      		mod = 4'b1011;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000011)) begin
-		temp_fraction = {fraction[21:1], 2'b00};
-		temp_exp = exp_in - 8'd3;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000110)) begin
-		temp_fraction = {fraction[18:1], 5'b00000};
-		temp_exp = exp_in - 8'd6;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000111)) begin
-		temp_fraction = {fraction[13:3], 12'b000000000000};
-		temp_exp = exp_in - 8'd3;
-		mod = 4'b1100;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000010)) begin
-		temp_fraction = fraction[22:0] - 1'b1;
-		temp_exp = exp_in - 8'd2;
-		mod = 4'b1101;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000100)) begin
-		temp_fraction = {fraction[20:1], 3'b000};
-		temp_exp = exp_in - 8'd4;
-		mod = 4'b1110;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00000101)) begin
-		temp_fraction = {fraction[19:1], 4'b000};
-		temp_exp = exp_in - 8'd5;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001000)) begin
-		temp_fraction = {fraction[16:1], 7'b0000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001011)) begin
-		temp_fraction = {fraction[13:1], 10'b0000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end else if ((frac_shifted_minus != 0) & (shifted_amount == 8'b00001101)) begin
-		temp_fraction = {fraction[11:1], 12'b000000000000};
-		temp_exp = exp_in - shifted_amount;
-		mod = 4'b1111;
-	end
-	end
-   assign round_out = {sign, temp_exp, temp_fraction};
-endmodule
diff --git a/source_code/rv32f/source/rv32f_reg_file.sv b/source_code/rv32f/source/rv32f_reg_file.sv
deleted file mode 100644
index 807408f..0000000
--- a/source_code/rv32f/source/rv32f_reg_file.sv
+++ /dev/null
@@ -1,84 +0,0 @@
-/*   Copyright 2016 Purdue University
-*   
-*   Licensed under the Apache License, Version 2.0 (the "License");
-*   you may not use this file except in compliance with the License.
-*   You may obtain a copy of the License at
-*   
-*       http://www.apache.org/licenses/LICENSE-2.0
-*   
-*   Unless required by applicable law or agreed to in writing, software
-*   distributed under the License is distributed on an "AS IS" BASIS,
-*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-*   See the License for the specific language governing permissions and
-*   limitations under the License.
-*   
-*   
-*   Filename:     f_register_file.sv
-*   
-*   Created by:   Sean Hsu	
-*   Email:        hsu151@purdue.edu
-*   Date Created: 02/24/2020
-*   Description:  floating point register file for the FPU; based on integer reg file
-*/
-//Modified by Xinlue Liu, Zhengsen Fu
-//Last Updated  : 7/21/20
-
-//`include "f_register_file_if.vh"
-//`include "FPU_if.svh"
-`include "rv32f_reg_file_if.vh"
-module rv32f_reg_file (
-  // FPU_if.fp fpa_if,
-  // register_FPU_if.fp frf_fp
-  rv32f_reg_file_if.rf frf_rf
-);
-
-//  import rv32i_types_pkg::*;
-
-// rs1 and rs2: register locations of two calculation operands
-// rd: register location where f_w_data goes
-
-  parameter NUM_REGS = 32;
-
-  logic [31:0] fcsr_reg;
-  logic [31:0] [NUM_REGS-1:0] registers;
-  logic f_wen; //write enable. Enable register file to written by FPU TODO: implementation of this signal
-  //logic [2:0] frm;
-
-  always_ff @ (posedge frf_rf.clk, negedge frf_rf.n_rst) begin
-    if (~frf_rf.n_rst) begin
-      fcsr_reg <= '0;
-      for (int i = 0; i < 32; i++) begin
-          registers[i] <= 'h7fc00000;
-      end
-      //frf_rf.f_frm <= '0;
-    end else if (frf_rf.f_wen) begin 
-      registers[frf_rf.f_rd] <= frf_rf.f_wdata; //f_w_data: FPU_out or dload_ext
-      //frf_rf.frm <= frf_rf.f_frm_in;
-      //fcsr_reg[7:5] <= frf_rf.f_frm_in;
-      fcsr_reg[4:0] <= frf_rf.f_flags;
-    end else begin
-      //frf_rf.frm <= frf_rf.f_frm_in;
-      //fcsr_reg[7:5] <= frf_rf.f_frm_in;
-    end
-  end 
-
-  /*always_comb begin: f_wen_logic
-	f_wen = 1'b0; //f_wen default to be 0.
-	if (frf_rf.f_LW) // if f_lw is assert(choosing dload_ext)
-		f_wen = 1'b1; 
-	else begin //if f_lw is asserteds(choosing FPU_out)
-		if (!frf_rf.f_ready) //if not f_ready,
-			f_wen = 1'b0;
-		else	      //if f_ready,
-			f_wen = 1'b1;
-	end
-  end*/
-
-  assign frf_rf.f_rs1_data = registers[frf_rf.f_rs1];
-  assign frf_rf.f_rs2_data = registers[frf_rf.f_rs2];
-
-  assign frf_rf.f_frm = fcsr_reg[7:5];
-  // assign frf_rf.f_flags = {frf_rf.f_NV, frf_rf.f_DZ, frf_rf.f_OF, frf_rf.f_UF, frf_rf.f_NX};
-  //assign frf_rf.f_flags = fcsr_reg[4:0];
-
-endmodule
diff --git a/source_code/rv32f/source/s_to_u.sv b/source_code/rv32f/source/s_to_u.sv
deleted file mode 100755
index 5c2abbc..0000000
--- a/source_code/rv32f/source/s_to_u.sv
+++ /dev/null
@@ -1,20 +0,0 @@
-
-module s_to_u(
-	input      [26:0] frac_signed,
-	output reg        sign,
-	output     [25:0] frac_unsigned
-);
-
-reg [26:0] rfrac_signed;
-
-assign frac_unsigned = rfrac_signed[25:0];
-   
-always_comb begin
-        sign = 0;
-	rfrac_signed = frac_signed;
-	if(frac_signed[26] == 1) begin
-		rfrac_signed = -frac_signed;
-		sign         = 1;
-	end
-end
-endmodule
diff --git a/source_code/rv32f/source/sign_determine.sv b/source_code/rv32f/source/sign_determine.sv
deleted file mode 100755
index 4843ad4..0000000
--- a/source_code/rv32f/source/sign_determine.sv
+++ /dev/null
@@ -1,58 +0,0 @@
-module sign_determine
-  (
-   //input 	 temp_sign,
-   //input [31:0]  temp_floating_point_out,
-   input 	 cmp_out,
-   input reg	 same_compare,
-   input reg     frac_same,
-   input [31:0]  floating_point1,
-   input [31:0]  floating_point2,
-   output reg signout
-   );
-   //wire [30:0] 	 temp_result;
-   //reg 		 dummy;	 
-
-   //assign temp_result[30:0] = temp_floating_point_out[30:0];
-   
-   always_comb begin
-      signout = 1'b0;
-      if ((floating_point1[31] == 0) & (floating_point2[31] == 1)) begin
-	 signout = 1'b0;
-      end else if ((floating_point1[31] == 1) & (floating_point2[31] == 0)) begin
-	 signout = 1'b1;
-      end else begin //1 1 or 00
-	 if ((floating_point1[31] == 1) & (floating_point2[31] == 1) & (same_compare == 0)) begin
-	    if (cmp_out == 1) begin
-	       signout = 1'b0;
-	    end else if (cmp_out == 0) begin
-	       signout = 1'b1;
-	    end
-	 end else if ((floating_point1[31] == 1) & (floating_point2[31] == 1) & (same_compare == 1)) begin
-	    if (frac_same == 1'b1) begin
-		signout = 1'b0;
-	    end else begin
-		signout = 1'b1;
-	    end
-	 end else if ((floating_point1[31] == 0) & (floating_point2[31] == 0) & (same_compare == 0)) begin
-	    if (cmp_out == 1) begin
-	       signout = 1'b1;
-	    end else if (cmp_out == 0) begin
-	       signout = 1'b0;
-	    end
-	    // dummy  = cmp_out ? ~temp_sign : temp_sign;
-	 end else if ((floating_point1[31] == 0) & (floating_point2[31] == 0) & (same_compare == 1)) begin
-	    if (frac_same == 1'b1) begin
-		signout = 1'b1;
-	    end else begin
-		signout = 1'b0;
-	    end
-	  end
-      end
-   end // always_comb
-   
-   //assign temp_result[31]  = cmp_out ? ~temp_sign : temp_sign;
-
-   //assign floating_point_out[31:0] = {dummy, temp_result[30:0]};
-   
-endmodule // sign_determine
-
diff --git a/source_code/rv32f/source/sub_26b.sv b/source_code/rv32f/source/sub_26b.sv
deleted file mode 100755
index e980c73..0000000
--- a/source_code/rv32f/source/sub_26b.sv
+++ /dev/null
@@ -1,93 +0,0 @@
-//By            : Joe Nasti
-//Modified by   : Xinlue Liu
-//Last Updated  : 6/1/20
-//
-//Module Summary: 
-//    adds two signed 26 bit fraction values
-//
-//Inputs:
-//    frac1/2 - signed 26 bit values with decimal point fixed after second bit
-//    frac1_s/frac2_s - 2's complements of the two floating points
-//    exp_determine - signal indicator that indicates which subtraction operation it is going to perform
-//Outputs:
-//    sum     - output of sum operation regardless of overflow
-//    ovf     - high if an overflow has occured 
- 
-module sub_26b(
-	input reg n1p2r,
-	input reg shifted_check_onezero,
-	input      [31:0] fp1,
-	input      [31:0] fp2,
-	input 	   cmp_out,
-	input      [26:0] frac1,
-	input      [26:0] frac2,
-	input      [26:0] frac1_s,
-	input      [26:0] frac2_s,
-	input reg n1p2,
-	input reg  bothpossub,
-	//input reg exp_determine,
-	output reg [26:0] sum, 
-	output reg        ovf,
-	output reg        outallone,
-	output reg 	  outallzero,
-	output reg    [2:0]    wm,
-	output reg sum_init
-);
-   always_comb begin : check_frac1_one
-	outallone = 1'b0;
-	outallzero = 1'b0;
-	if (frac1 == 27'b111111111111111111111111111)
-		outallone = 1'b1;
-	if ((frac1 == 0) & (fp1[31] == 0) & (fp2[31] == 0)) 
-		outallzero = 1'b1;
-		  //tallzero = 1'b0;
-   end
-always_comb begin
-   wm = 0;
-   if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 0))begin
-   	sum = frac1 + frac2;
-  	wm = 3'b001;
-   end else begin
-   	sum = frac1_s + frac2_s;
-   	//sum = ~temp_sum + 1'b1;
-        wm = 3'b010;
-	//sum 00001101010011101110001110
-   end
-   sum_init = sum[26];
-   ovf = 0;
-   if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 0)) begin
-     //if (bothpossub == 0) begin
-  	 if(frac1[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-     	 	ovf = 1;
-     	 	sum[26] = 1;
-   	 end
-   
-   	 if(frac1[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-     		ovf = 1;
-     		sum[26] = 0;
-   	 end
-   /*end else if ((bothpossub == 0) & (n1p2 == 0) & (cmp_out == 1))begin
-  	 if(frac1_s2[26] == 1 && frac2[26]== 1 && sum[26] == 0) begin
-     	 	ovf = 1;
-     	 	sum[26] = 1;
-   	 end
-   
-   	 if(frac1_s2[26] == 0 && frac2[26]== 0 && sum[26] == 1) begin
-     		ovf = 1;
-     		sum[26] = 0;
-   	 end*/
-   end else begin
-   	if(frac1_s[26] == 1 && frac2_s[26]== 1 && sum[26] == 0) begin
-      		ovf = 1;
-      		sum[26] = 1;
-   	end
-   
-   	if(frac1_s[26] == 0 && frac2_s[26]== 0 && sum[26] == 1) begin
-      		ovf = 1;
-      		sum[26] = 0;
-   	end
-  end
-end
-endmodule
-
-
diff --git a/source_code/rv32f/source/subtract.sv b/source_code/rv32f/source/subtract.sv
deleted file mode 100755
index 6df5d8f..0000000
--- a/source_code/rv32f/source/subtract.sv
+++ /dev/null
@@ -1,23 +0,0 @@
-// subtracts shifted amount from the exponent
-
-module subtract
-(
- input  [7:0] exp1,
- input  [7:0] shifted_amount,
- output [7:0] result
-);
-
-   //reg [8:0]  u_exp1 = {1'b0, exp1};
-   reg [8:0]  u_exp1;
-   reg [8:0]  u_shifted_amount; 
-   //reg [8:0]  u_shifted_amount = {1'b0,shifted_amount};
-   reg [8:0]  u_result;
-   
-always_comb   begin
-   u_exp1           = {1'b0, exp1};
-   u_shifted_amount = {1'b0,shifted_amount};
-   u_result         = u_exp1 - u_shifted_amount;
-end
-
-   assign result = u_result[7:0];
-endmodule // subtract
diff --git a/source_code/rv32f/source/u_to_s.sv b/source_code/rv32f/source/u_to_s.sv
deleted file mode 100755
index b8364bf..0000000
--- a/source_code/rv32f/source/u_to_s.sv
+++ /dev/null
@@ -1,51 +0,0 @@
-//By            : Joe Nasti
-//Last Updated  : 7/21/18
-//
-//Module Summary: 
-//    Converts a one bit sign and 26 bit magnitude to a 27 bit signed value
-//
-//Inputs:
-//    sign          - one bit value to represent the sign (0 -> +, 1 -> -)
-//    frac_unsigned - 26 bit unsigned magnitude
-//Outputs:
-//    frac_signed   - 27 bit signed result of conversion
-/*
-module u_to_s(
-	input             sign,
-	input      [25:0] frac_unsigned,
-	output reg [26:0] frac_signed
-);
-
-always_comb begin
-	frac_signed = {1'b0, frac_unsigned};
-	if(sign == 1) begin
-		frac_signed = ~frac_signed;
-	end
-end
-endmodule*/
-//By            : Joe Nasti
-//Last Updated  : 7/21/18
-//
-//Module Summary: 
-//    Converts a one bit sign and 26 bit magnitude to a 27 bit signed value
-//
-//Inputs:
-//    sign          - one bit value to represent the sign (0 -> +, 1 -> -)
-//    frac_unsigned - 26 bit unsigned magnitude
-//Outputs:
-//    frac_signed   - 27 bit signed result of conversion
-
-module u_to_s(
-	input             sign,
-	input      [25:0] frac_unsigned,
-	output reg [26:0] frac_signed
-);
-
-always_comb begin
-	frac_signed = {1'b0, frac_unsigned};
-	if(sign == 1) begin
-		frac_signed = -frac_signed;
-	end
-end
-endmodule
-
diff --git a/source_code/rv32f/testbench/FPU_top_level_tb.sv b/source_code/rv32f/testbench/FPU_top_level_tb.sv
deleted file mode 100644
index 36ef8fb..0000000
--- a/source_code/rv32f/testbench/FPU_top_level_tb.sv
+++ /dev/null
@@ -1,85 +0,0 @@
-`timescale 1 ns / 1ns
-
-`include "FPU_if.vh"
-module FPU_top_level_tb();
-    parameter PERIOD = 10;
-
-    logic nRST, CLK = 0;
-
-    //clock generation
-    always #(PERIOD/2) CLK++;
-
-    //fpu interface
-    FPU_if fpu_if(nRST, CLK);
-
-    //module instantiations
-
-    FPU_top_level DUT(fpu_if);
-
-    clock_counter cc(fpu_if);
-
-    test PROG(CLK, nRST, fpu_if);
-endmodule
-
-program test(
-    input logic CLK,
-    output logic nRST,
-    FPU_if.tb fpu_if
-);
-
-    parameter PERIOD = 10;
-    word_t expected_fpu_out;
-    word_t expected_flags;
-    int test_case_num;
-    string test_case;
-    int sample_num;
-
-    task reset_dut; begin
-        nRST = 1'b0;
-        @(posedge CLK);
-        @(posedge CLK);
-
-        @(negedge CLK);
-        nRST = 1'b1;
-
-        @(posedge CLK);
-        @(posedge CLK);
-    end
-    endtask
-
-    task wait_for_finish; begin
-    @(posedge CLK);
-    while (!fpu_if.f_ready) #(PERIOD);
-    end
-    endtask
-
-    task check_outputs; begin
-        #(2ns);
-        if (expected_flags !== fpu_if.f_flags) begin
-            $error("Incorrect flags for test case #%d: %s, expected: %b obtained: %b\n", test_case_num, test_case, expected_flags, fpu_if.f_flags);
-            return ;
-        end
-        if (expected_fpu_out !== fpu_if.fpu_out) begin
-            $error("Incorrect output value for test case #%d: %s, expected: %x %f obtained: %h %f\n", test_case_num, test_case, expected_fpu_out, expected_fpu_out, fpu_if.fpu_out, fpu_if.fpu_out);
-        end
-        $info("Correct output values for test case %d: %s\n", test_case_num, test_case);
-    end
-    endtask
-        
-    initial begin
-        reset_dut;
-        fpu_if.port_a = 32'hc49a6333;
-        fpu_if.port_b = 32'h3f8ccccd;
-        fpu_if.f_frm_in = 0;
-        fpu_if.f_funct_7 = 0;
-        test_case_num = 1;
-        test_case = "add test case";
-        sample_num = 1;
-        //wait_for_finish;
-        expected_flags = 1;
-        expected_fpu_out = 32'hc13239c2;
-        #(3 * PERIOD);
-        check_outputs;
-        $finish;
-    end
-endprogram
diff --git a/source_code/rv32m/divide_unit.sv b/source_code/rv32m/divide_unit.sv
new file mode 100644
index 0000000..0079df5
--- /dev/null
+++ b/source_code/rv32m/divide_unit.sv
@@ -0,0 +1,129 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     divide_unit.sv
+*
+*   Created by:   Jing Yin See
+*   Email:        see4@purdue.edu
+*   Date Created: 11/7/2021
+*   Description:  DIVU
+*/
+
+`include "divide_unit_if.vh"
+
+module divide_unit (
+  input logic CLK, nRST,
+  divide_unit_if.execute dif
+);
+
+  import rv32i_types_pkg::*;
+
+  logic start_reg, done_reg, done, div_type_reg, overflow, div_zero, is_signed_reg;
+  logic [31:0] quotient, remainder;
+  logic [31:0] q;
+  logic [4:0] reg_rd_du; 
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_du; 
+  typedef enum logic [1:0] { OFF, BUSY } div_state_t;
+  div_state_t start_div_state;
+
+  divider DVD (
+    .CLK(CLK),
+    .nRST(nRST),
+    .dividend(dif.rs1_data),
+    .divisor(dif.rs2_data),
+    .ena(dif.busy_du & ~overflow & ~div_zero),
+    .is_signed(dif.start_div ? dif.is_signed_div : is_signed_reg),
+    .start(dif.start_div & ~overflow & ~div_zero),
+    .finished(done),
+    .quotient(quotient),
+    .remainder(remainder)
+  );
+
+
+  assign overflow   = dif.start_div && (dif.rs1_data == 32'h8000_0000) && (dif.rs2_data == 32'hffff_ffff) && dif.is_signed_div;
+  assign div_zero   = dif.start_div && (dif.rs2_data == 32'h0); 
+
+  //assign dif.busy_du      = (start_reg | dif.start_div) & !done_reg; 
+  //assign dif.wdata_du     = div_type_reg ? q : remainder;
+  //assign dif.done_du      = done;  
+
+  assign q = (dif.rs2_data == 0) && dif.is_signed_div  ? 32'hFFFF_FFFF : 
+             (dif.rs2_data == 0) && ~dif.is_signed_div ? 32'h7FFF_FFFF : quotient;
+
+  //assign dif.done_du = dif.rs2_data == 0 ? 1 : done;
+
+  always_comb begin
+    if (div_zero) begin
+      dif.busy_du = 0; 
+      dif.done_du = 1;
+      if (dif.div_type) begin // Quotient when divide by 0
+        dif.wdata_du = dif.is_signed_div ? 32'hFFFF_FFFF : 32'h7FFF_FFFF;
+      end else begin // Remainder when divide by 0
+        dif.wdata_du = dif.rs1_data;
+      end
+    end else if (overflow) begin
+      dif.busy_du = 0; 
+      dif.done_du = 1;
+      if (dif.div_type) begin // Quotient when overflow
+        dif.wdata_du = 32'h8000_0000;
+      end else begin // Remainder when overflow
+        dif.wdata_du = 32'h0000_0000;
+      end
+    end else begin
+      dif.busy_du = (start_reg | dif.start_div) & !done_reg; 
+      dif.done_du = done;
+      if (div_type_reg) begin // Quotient when normal operation
+        dif.wdata_du = quotient;
+      end else begin // Remainder when normal operation
+        dif.wdata_du = remainder;
+      end
+    end
+  end
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (nRST == 0) begin
+      start_reg <= '0;
+      div_type_reg <= '0;
+      is_signed_reg <= 0;
+    end else if (done) begin
+      start_reg <= 0;
+    end else if (dif.start_div & ~overflow & ~div_zero) begin
+      start_reg <= 1;
+      div_type_reg <= dif.div_type;
+      is_signed_reg <= dif.is_signed_div;
+    end
+  end
+
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (nRST == 0) begin
+      done_reg <= '0;
+    end else begin
+      done_reg <= done;
+    end
+  end
+
+  // always_ff @(posedge CLK or negedge nRST) begin
+  //   if (~nRST) begin
+  //     start_div_state = OFF;
+  //   end else begin
+  //     case (start_div_state)
+  //     OFF:  if (dif.start_div) start_div_state <= BUSY;
+  //     BUSY: if (done) start_div_state <= OFF;
+  //     endcase
+  //   end
+  // end
+
+endmodule
diff --git a/source_code/rv32m/divider.sv b/source_code/rv32m/divider.sv
new file mode 100644
index 0000000..a3b464b
--- /dev/null
+++ b/source_code/rv32m/divider.sv
@@ -0,0 +1,146 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     divider.sv
+*
+*   Created by:   Jing Yin See
+*   Email:        see4@purdue.edu
+*   Date Created: 11/7/2021
+*   Description:  Pipelined restoring divider that does not support overlapping 
+*/
+
+module divider
+#(
+	parameter NUM_BITS = 32
+)
+(
+	input logic CLK, 
+	input logic nRST, 
+  input logic start,
+	input logic is_signed, //new
+	input logic ena,
+	input logic [NUM_BITS-1:0] dividend, 
+	input logic [NUM_BITS-1:0] divisor, 
+	output logic [NUM_BITS-1:0] quotient, 
+	output logic [NUM_BITS-1:0] remainder,
+	output logic finished
+
+);
+	logic [NUM_BITS-1:0] next_remainder, next_quotient, shifted_remainder, shifted_quotient, temp_quotient, temp_remainder;
+	logic [NUM_BITS:0] Result1, Result2, Result3;
+	logic [NUM_BITS-1:0] DivisorX2, DivisorX3;
+	logic [4:0] count, next_count;
+
+	logic [NUM_BITS-1:0] usign_divisor, usign_dividend, dividend_reg, divisor_reg;
+	logic adjustment_possible, adjust_quotient, adjust_remainder;
+	//logic div_done;
+
+	assign usign_divisor        = is_signed & divisor_reg[NUM_BITS-1] ? (~divisor_reg)+1 : divisor_reg;
+	assign usign_dividend       = is_signed & dividend[NUM_BITS-1] ? (~dividend)+1 : dividend;
+	assign adjustment_possible  = is_signed && (divisor_reg[NUM_BITS-1] ^ dividend_reg[NUM_BITS-1]); 
+	assign adjust_quotient      = adjustment_possible && ~temp_quotient[NUM_BITS-1];
+	assign adjust_remainder     = is_signed && dividend_reg[NUM_BITS-1];
+	//assign div_done             = ena & (count == 0);
+	//assign quotient = temp_quotient;
+        assign quotient = adjust_quotient ? ~temp_quotient+1 : temp_quotient;
+	//assign remainder = temp_remainder;
+	assign remainder = adjust_remainder ? ~temp_remainder+1 : temp_remainder;
+        assign finished = ena & (count == 0) & ~start;	
+
+	/*always_ff @(posedge CLK, negedge nRST) begin
+        if (nRST == 0) begin
+			finished <= 1'b0;
+        end else if(finished) begin
+            finished <= 1'b0;
+        end else if(div_done) begin
+            finished <= 1'b1;
+        end
+	end */
+	//initialize d2 d3
+	assign DivisorX2 = usign_divisor << 1; //Divisor*2
+	assign DivisorX3 = (usign_divisor << 1) + usign_divisor; //Divisor*3
+	always_ff @(posedge CLK, negedge nRST) begin
+		if (nRST == 0) begin
+
+			count <= 5'd16;
+			temp_quotient <= '0;
+			temp_remainder <= '0;
+			dividend_reg <= '0;
+			divisor_reg <= '0;
+		end else if (start) begin
+			temp_quotient <= usign_dividend;
+			temp_remainder <= '0;
+			count <= 5'd16;
+			dividend_reg <= dividend;
+			divisor_reg <= divisor;	
+		end else if (ena && count >= 0) begin
+			temp_quotient <= next_quotient;
+			temp_remainder <= next_remainder;
+			count <= next_count;
+		end
+	end
+
+	always_comb begin
+		
+		next_quotient = temp_quotient;
+		next_remainder = temp_remainder;
+		next_count = count;
+		
+		if (count != 0) begin
+			next_count = count - 1;
+			shifted_remainder = (temp_remainder << 2) | temp_quotient[NUM_BITS-1:NUM_BITS-2];
+			shifted_quotient = temp_quotient << 2;
+			Result1 = shifted_remainder - usign_divisor;
+			Result2 = shifted_remainder - DivisorX2;
+			Result3 = shifted_remainder - DivisorX3;
+			if(Result1[NUM_BITS-1] | Result1[NUM_BITS]) begin 
+				next_remainder = shifted_remainder;
+				next_quotient = shifted_quotient | 0;
+					//if (count == 1 && adjust_quotient )
+					//	next_quotient = ~next_quotient + 1;
+			
+					//if(count == 1  && adjust_remainder  )
+					//	next_remainder = ~next_remainder	+ 1;
+						
+			end else if(Result2[NUM_BITS-1] | Result2[NUM_BITS]) begin 
+				next_remainder = Result1;
+				next_quotient = shifted_quotient | 1;
+					//if (count == 1 && adjust_quotient )
+					//	next_quotient = ~next_quotient + 1;
+			
+					//if(count == 1  && adjust_remainder  )
+					//	next_remainder = ~next_remainder	+ 1;
+			end else if(Result3[NUM_BITS-1] | Result3[NUM_BITS]) begin 
+				next_remainder = Result2;
+				next_quotient = shifted_quotient | 2;
+					//if (count == 1 && adjust_quotient )
+					//	next_quotient = ~next_quotient + 1;
+			
+					//if(count == 1  && adjust_remainder  )
+					//	next_remainder = ~next_remainder	+ 1;
+			end else begin 
+				next_remainder = Result3;
+				next_quotient = shifted_quotient | 3;
+					//if (count == 1 && adjust_quotient )
+					//	next_quotient = ~next_quotient + 1;
+			
+					//if(count == 1  && adjust_remainder  )
+					//	next_remainder = ~next_remainder	+ 1;
+			end
+		end
+							
+	end
+endmodule
diff --git a/source_code/rv32m/mul_csa.sv b/source_code/rv32m/mul_csa.sv
new file mode 100644
index 0000000..3460b86
--- /dev/null
+++ b/source_code/rv32m/mul_csa.sv
@@ -0,0 +1,21 @@
+module mul_csa
+#(
+	parameter BIT_WIDTH = 32
+)
+(
+	input logic [(BIT_WIDTH-1):0] x,
+	input logic [(BIT_WIDTH-1):0] y,
+	input logic [(BIT_WIDTH-1):0] z,
+	output logic [(BIT_WIDTH-1):0] cout,
+	output logic [(BIT_WIDTH-1):0] sum 
+);
+	genvar i;
+	logic [(BIT_WIDTH-1):0] c; 
+	generate
+	for (i = 0; i < BIT_WIDTH; i = i + 1) 
+		begin
+			mul_fa FA (.x(x[i]), .y(y[i]), .cin(z[i]), .cout(c[i]), .sum(sum[i]));
+		end
+	endgenerate
+	assign cout = c << 1;
+endmodule
diff --git a/source_code/rv32m/mul_fa.sv b/source_code/rv32m/mul_fa.sv
new file mode 100644
index 0000000..75fedbd
--- /dev/null
+++ b/source_code/rv32m/mul_fa.sv
@@ -0,0 +1,12 @@
+module mul_fa
+(
+	input logic x,
+	input logic y,
+	input logic cin,
+	output logic cout,
+	output logic sum 
+);
+  	assign sum = x ^ y ^ cin;
+  	assign cout = (x & y) | (x & cin) | (y & cin);
+
+endmodule
diff --git a/source_code/rv32m/multiplier.sv b/source_code/rv32m/multiplier.sv
new file mode 100644
index 0000000..a9efd1c
--- /dev/null
+++ b/source_code/rv32m/multiplier.sv
@@ -0,0 +1,247 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     multiplier.sv
+*
+*   Created by:   Jing Yin See
+*   Email:        see4@purdue.edu
+*   Date Created: 11/7/2021
+*   Description:  Pipelined wallace tree multiplier that supports overlapping of MUL instr
+*/
+
+import rv32i_types_pkg::sign_type_t;
+
+module multiplier
+(
+	input logic CLK,
+	input logic nRST,
+	input logic [31:0] multiplicand,
+	input logic [31:0] multiplier,
+	input sign_type_t is_signed,
+	input logic start,
+	output logic finished,
+	output logic next_finished,
+	output logic [63:0] product
+);
+	//logic start_reg;
+	logic [31:0] multiplicand_reg;
+	logic [31:0] multiplier_reg, multiplier_reg1, multiplier_reg2;
+	logic [63:0] result;
+	logic [63:0] result2;
+	logic [63:0] temp_product;
+	logic [63:0] temp_product2;
+	logic [31:0] multiplicand_mod, multiplicand_mod1, multiplicand_mod2;
+	logic [31:0] multiplier_mod;
+	logic adjust_product, adjust_product1, adjust_product2;
+	logic [63:0] partial_product [15:0];
+	logic [63:0] pp0, pp1, pp2, pp3, pp4, pp5, pp6, pp7, pp8, pp9, pp10, pp11, pp12, pp13, pp14, pp15, pp15_pip;
+	logic [32:0] mul_plus2, mul_minus2, mul_minus1;
+	logic [63:0] pp [15:0];
+	logic [32:0] modified_in;
+	logic [63:0] sum0, sum1, sum2, sum3, sum4, sum5, sum6, sum7, sum8, sum9, sum10, sum11, sum12, sum13, sum4_pip; 	
+	logic [63:0] cout0, cout1, cout2, cout3, cout4, cout5, cout6, cout7, cout8, cout9, cout10, cout11, cout12, cout13;
+	logic [1:0] count;
+	logic ff1, ff2; 
+	//logic [63:0] sum13_pip, cout13_pip;
+	logic [63:0] sum5_pip, cout5_pip, sum6_pip, cout6_pip, sum7_pip, cout7_pip;
+	sign_type_t is_signed_reg, is_signed_reg1, is_signed_reg2;
+	logic done;
+	logic count_ena;	
+	integer i, j;
+
+	always_ff @ (posedge CLK, negedge nRST) begin
+		if (nRST == 0) begin
+			multiplicand_reg <= '0;
+			multiplier_reg <= '0;
+			is_signed_reg <= '0;
+		end
+		else if (start) begin
+			multiplicand_reg <= multiplicand;
+			multiplier_reg <= multiplier;
+			is_signed_reg <= is_signed;
+		end
+	end
+	// Modify multiplicand and multiplier if they are signed
+	assign multiplicand_mod = is_signed_reg[1] && multiplicand_reg[31] ? (~(multiplicand_reg)+1) : multiplicand_reg;
+	assign multiplier_mod = is_signed_reg[0] && multiplier_reg[31] ? (~(multiplier_reg)+1) : multiplier_reg;
+	// Control signal to modify final product
+ 	assign adjust_product   = (is_signed_reg[0] & multiplier_reg[31]) ^ (is_signed_reg[1] & multiplicand_reg[31]);
+	// For bit pair recoding part
+	assign mul_plus2 = multiplicand_mod + multiplicand_mod;
+	assign mul_minus2 = ~mul_plus2 + 1;
+	assign mul_minus1 = ~multiplicand_mod + 1;
+	assign modified_in = {multiplier_mod,1'b0};
+
+	// STAGE 1: BOOTH ENCODER
+	// Bit pair recoding to generate partial product
+	always_comb begin
+		for (i = 0; i < 32; i = i + 2) begin
+			case ({modified_in[i+2], modified_in[i+1], modified_in[i]})
+				3'b000:
+					pp[i/2] = '0; //0
+				3'b001:
+					pp[i/2] = {{32'd0},multiplicand_mod}; // +1M
+				3'b010:
+					pp[i/2] = {{32'd0},multiplicand_mod}; // +1M
+				3'b011:
+					pp[i/2] = {{31'd0},mul_plus2}; // +2M
+				3'b100:
+					if (mul_minus2 == 0) pp[i/2] = '0;
+					else pp[i/2] = {{31{1'b1}},mul_minus2}; // -2M
+				3'b101:
+					if (mul_minus1 == 0) pp[i/2] = '0;
+					else pp[i/2] = {{31{1'b1}},mul_minus1}; // -1M
+				3'b110:
+					if (mul_minus1 == 0) pp[i/2] = '0;
+					else pp[i/2] = {{31{1'b1}},mul_minus1}; // -1M
+				3'b111:
+					pp[i/2] = '0;
+			endcase
+		end
+	end
+	// Shift partial product
+	always_comb begin
+		for (j = 0; j < 16; j = j + 1) 
+			begin
+				partial_product[j] = pp[j] << (2*j); // Shift with multiple of 2 (Radix 4)
+			end
+	end
+
+	// Pipeline register before wallace tree
+	always_ff @ (posedge CLK, negedge nRST) begin
+		if (nRST == 0) begin
+			pp0 <= '0;
+			pp1 <= '0;
+			pp2 <= '0;
+			pp3 <= '0;
+			pp4 <= '0;
+			pp5 <= '0;
+			pp6 <= '0;
+			pp7 <= '0;
+			pp8 <= '0;
+			pp9 <= '0;
+			pp10 <= '0;
+			pp11 <= '0;
+			pp12 <= '0;
+			pp13 <= '0;
+			pp14 <= '0;
+			pp15 <= '0;
+                        is_signed_reg1 <= '0;
+                        multiplier_reg1 <= '0;
+                        multiplicand_mod1 <= '0;
+                        adjust_product1 <= '0;
+		end
+		else begin
+			pp0 <= partial_product[0];
+			pp1 <= partial_product[1];
+			pp2 <= partial_product[2];
+			pp3 <= partial_product[3];
+			pp4 <= partial_product[4];
+			pp5 <= partial_product[5];
+			pp6 <= partial_product[6];
+			pp7 <= partial_product[7];
+			pp8 <= partial_product[8];
+			pp9 <= partial_product[9];
+			pp10 <= partial_product[10];
+			pp11 <= partial_product[11];
+			pp12 <= partial_product[12];
+			pp13 <= partial_product[13];
+			pp14 <= partial_product[14];
+			pp15 <= partial_product[15];
+                        is_signed_reg1 <= is_signed_reg;
+                        multiplier_reg1 <= multiplier_reg;
+                        multiplicand_mod1 <= multiplicand_mod;
+                        adjust_product1 <= adjust_product;
+		end
+	end
+	
+	// STAGE 2: WALLACE TREE 
+	// Layer 1
+	mul_csa #(64) CSA0 (.x(pp0), .y(pp1), .z(pp2), .cout(cout0), .sum(sum0));
+	mul_csa #(64) CSA1 (.x(pp3), .y(pp4), .z(pp5), .cout(cout1), .sum(sum1));
+	mul_csa #(64) CSA2 (.x(pp6), .y(pp7), .z(pp8), .cout(cout2), .sum(sum2));
+	mul_csa #(64) CSA3 (.x(pp9), .y(pp10), .z(pp11), .cout(cout3), .sum(sum3));
+	mul_csa #(64) CSA4 (.x(pp12), .y(pp13), .z(pp14), .cout(cout4), .sum(sum4)); // remaining partialproduct 15
+	// Layer 2
+	mul_csa #(64) CSA5 (.x(cout0), .y(sum0), .z(cout1), .cout(cout5), .sum(sum5));
+	mul_csa #(64) CSA6 (.x(sum1), .y(cout2), .z(sum2), .cout(cout6), .sum(sum6));
+	mul_csa #(64) CSA7 (.x(cout3), .y(sum3), .z(cout4), .cout(cout7), .sum(sum7)); // remaining sum4
+	// Pipeline register in wallace tree between layer 2 and layer 3	
+	always_ff @ (posedge CLK, negedge nRST) begin
+		if (nRST == 0) begin
+			cout5_pip <= '0;
+			sum5_pip <= '0;
+			cout6_pip <= '0;
+			sum6_pip <= '0;
+			cout7_pip <= '0;
+			sum7_pip <= '0;
+                        pp15_pip <= '0;
+                        sum4_pip <= '0;
+                        is_signed_reg2 <= '0;
+                        multiplier_reg2 <= '0;
+                        multiplicand_mod2 <= '0;
+                        adjust_product2 <= '0;
+		end
+		else begin
+			cout5_pip <= cout5;
+			sum5_pip <= sum5;
+			cout6_pip <= cout6;
+			sum6_pip <= sum6;
+			cout7_pip <= cout7;
+			sum7_pip <= sum7;
+                        pp15_pip <= pp15;
+                        sum4_pip <= sum4;
+                        is_signed_reg2 <= is_signed_reg1;
+                        multiplier_reg2 <= multiplier_reg1;
+                        multiplicand_mod2 <= multiplicand_mod1;
+                        adjust_product2 <= adjust_product1;
+		end
+	end
+
+	// Layer 3
+	mul_csa #(64) CSA8 (.x(cout5_pip), .y(sum5_pip), .z(cout6_pip), .cout(cout8), .sum(sum8));
+	mul_csa #(64) CSA9 (.x(sum6_pip), .y(cout7_pip), .z(sum7_pip), .cout(cout9), .sum(sum9));
+	// Layer 4
+	mul_csa #(64) CSA10 (.x(cout8), .y(sum8), .z(cout9), .cout(cout10), .sum(sum10));
+	mul_csa #(64) CSA11 (.x(sum9), .y(pp15_pip), .z(sum4_pip), .cout(cout11), .sum(sum11)); 
+	// Layer 5
+	mul_csa #(64) CSA12 (.x(cout10), .y(sum10), .z(cout11), .cout(cout12), .sum(sum12));	// remaining sum11
+	// Layer 6
+	mul_csa #(64) CSA13 (.x(cout12), .y(sum12), .z(sum11), .cout(cout13), .sum(sum13));
+
+	// STAGE 3: NORMAL ADDER	
+	assign temp_product = cout13 + sum13;
+	assign temp_product2 = is_signed_reg2[0] == 0 && multiplier_reg2[31] ? temp_product + ({{33{multiplicand_mod2[31]}},multiplicand_mod2} << 32) : temp_product; // plus extra 1M
+	assign product = adjust_product2 ? (~temp_product2)+1: temp_product2;
+	// assign product = adjust_product2 ?  temp_product2 : (~temp_product2)+1;
+
+        // Finished logic (delay start by 3 cycles)
+	always_ff @ (posedge CLK, negedge nRST) begin
+		if (nRST == 0) begin
+                        ff1 <= '0;
+                        ff2 <= '0;
+			finished <= '0;
+			next_finished <= '0;
+		end
+		else begin
+                        ff1 <= start;
+                        ff2 <= ff1;
+			next_finished <= ff1;
+			finished <= ff2;
+		end
+	end
+	
+endmodule
diff --git a/source_code/rv32m/multiply_unit.sv b/source_code/rv32m/multiply_unit.sv
new file mode 100644
index 0000000..c5b9bf7
--- /dev/null
+++ b/source_code/rv32m/multiply_unit.sv
@@ -0,0 +1,94 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     multiply_unit.sv
+*
+*   Created by:   Jing Yin See
+*   Email:        see4@purdue.edu
+*   Date Created: 11/7/2021
+*   Description:  MULU
+*/
+
+`include "multiply_unit_if.vh"
+
+module multiply_unit (
+  input logic CLK, nRST,
+  multiply_unit_if.execute mif
+);
+
+  import rv32m_pkg::*;
+  import rv32i_types_pkg::*;
+  
+  logic start_reg;
+  logic done, next_done;
+  logic [63:0] product;
+  logic [31:0] product_high_sew32, product_low_sew32;  
+  logic [31:0] multiplicand, multiplier;  
+  sign_type_t is_signed;
+
+  multiplier MULU (
+    .CLK(CLK),
+    .nRST(nRST),
+    .multiplicand(multiplicand),
+    .multiplier(multiplier),
+    .is_signed(is_signed),
+    .start(mif.start_mu),
+    .finished(done),
+    .next_finished(next_done),
+    .product(product)
+  );
+
+  logic high_low_sel_ff0, high_low_sel_ff1, high_low_sel_ff2; 
+  always_ff @(posedge CLK or negedge nRST) begin
+    if (~nRST) begin 
+      high_low_sel_ff0 <= 0; 
+      high_low_sel_ff1 <= 0; 
+      high_low_sel_ff2 <= 0; 
+      // ena_ff0 <= 0; // something like this 
+      // ena_ff1 <= 0; // something like this 
+      // ena_ff2 <= 0; // something like this 
+    end else begin
+      high_low_sel_ff0 <= mif.high_low_sel;
+      high_low_sel_ff1 <= high_low_sel_ff0;
+      high_low_sel_ff2 <= high_low_sel_ff1;
+      // ena_ff0 <= mif.start_mu;
+      // ena_ff1 <= ena_ff0;
+      // ena_ff2 <= ena_ff1;
+    end
+  end
+
+  assign multiplicand  = mif.is_signed == SIGNED_UNSIGNED ? mif.rs1_data : mif.rs2_data;
+  assign multiplier    = mif.is_signed == SIGNED_UNSIGNED ? mif.rs2_data : mif.rs1_data;
+  assign is_signed     = mif.is_signed == SIGNED_UNSIGNED ? UNSIGNED_SIGNED : mif.is_signed;
+  assign mif.done_mu   = done;
+  assign mif.reg_rd_mu = mif.reg_rd;
+  assign mif.wdata_mu = (high_low_sel_ff2) ? product_high_sew32 : product_low_sew32;
+  assign mif.busy_mu = mif.start_mu & ~mif.done_mu;
+
+  assign product_low_sew32  = product[31:0];
+  assign product_high_sew32 = product[63:32]; 
+  
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (nRST == 0) begin
+      start_reg <= '0;
+    end else if (mif.decode_done) begin
+      start_reg <= 0;
+    end else if (mif.start_mu) begin
+      start_reg <= 1;
+    end
+  end
+
+endmodule
diff --git a/source_code/standard_core/RISCVBusiness.sv b/source_code/standard_core/RISCVBusiness.sv
index 93ab3cc..8b22aad 100644
--- a/source_code/standard_core/RISCVBusiness.sv
+++ b/source_code/standard_core/RISCVBusiness.sv
@@ -29,19 +29,19 @@
 `include "cache_control_if.vh"
 //`include "sparce_pipeline_if.vh"
 `include "core_interrupt_if.vh"
-`include "pipe5_fetch1_fetch2_if.vh"
-`include "pipe5_decode_execute_if.vh"
-`include "pipe5_execute_mem_if.vh"
-`include "pipe5_mem_writeback_if.vh"
-`include "pipe5_forwarding_unit_if.vh"
-`include "pipe5_hazard_unit_if.vh"
-`include "rv32i_reg_file_if.vh"
-`include "rv32f_reg_file_if.vh"
+//`include "ooo_fetch1_fetch2_if.vh"
+`include "ooo_fetch_decode_if.vh"
+`include "ooo_decode_execute_if.vh"
+`include "ooo_execute_commit_if.vh"
+`include "completion_buffer_if.vh"
+`include "ooo_hazard_unit_if.vh"
 `include "jump_calc_if.vh"
 `include "branch_res_if.vh"
+`include "rv32i_reg_file_if.vh"
 `include "predictor_pipeline_if.vh"
 `include "generic_bus_if.vh"
 `include "prv_pipeline_if.vh"
+`include "ooo_bypass_unit_if.vh"
 
 module RISCVBusiness (
   input logic CLK, nRST,
@@ -55,7 +55,6 @@ module RISCVBusiness (
 );
 
   import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
  //  Interface instantiations
 
   generic_bus_if icache_gen_bus_if();
@@ -69,158 +68,126 @@ module RISCVBusiness (
   cache_control_if cc_if();
   //sparce_pipeline_if sparce_if();
 
-   pipe5_fetch1_fetch2_if fetch1_fetch2_if();
-   pipe5_fetch2_decode_if fetch_decode_if();
-   pipe5_decode_execute_if decode_execute_if();
-   pipe5_execute_mem_if execute_mem_if();
-   pipe5_mem_writeback_if mem_wb_if();
-   pipe5_forwarding_unit_if bypass_if();
-   pipe5_hazard_unit_if hazard_if();
-   rv32i_reg_file_if rf_if();
-   rv32f_reg_file_if frf_if();
-   jump_calc_if jump_if();
-   branch_res_if branch_if();
-
+  //ooo_fetch1_fetch2_if fetch1_fetch2_if();
+  ooo_fetch_decode_if fetch_decode_if();
+  ooo_decode_execute_if decode_execute_if();
+  ooo_execute_commit_if execute_commit_if();
+  ooo_hazard_unit_if hazard_if();
+  rv32i_reg_file_if rf_if();
+  jump_calc_if jump_if();
+  branch_res_if branch_if();
+  completion_buffer_if cb_if();
+  ooo_bypass_unit_if bypass_if();
   logic halt;    //JOHN CHANGED THIS
 
-  // Module Instantiations
-/*
-  pipeline_wrapper pipeline (
-    .CLK(CLK),
-    .nRST(nRST),
-    .halt(halt),
-    .igen_bus_if(tspp_icache_gen_bus_if),
-    .dgen_bus_if(tspp_dcache_gen_bus_if),
-    .prv_pipe_if(prv_pipe_if), // TODO: Look at the communications between pipeline_wrapper and priv_wrapper
-    .predict_if(predict_if),
-    .rm_if(rm_if),
-    .cc_if(cc_if),
-    .sparce_if(sparce_if)
-  );
-*/
-/*
-  tspp_fetch_stage fetch_stage_i (
-    .CLK(CLK),
-    .nRST(nRST),
-    .fetch_ex_if(fetch_ex_if),
-    .hazard_if(hazard_if),
-    .predict_if(predict_if),
-    .igen_bus_if(tspp_icache_gen_bus_if),
-    .sparce_if(sparce_if),
-    .rv32cif(rv32cif)
-  );
-
-  tspp_execute_stage execute_stage_i (
-    .CLK(CLK),
-    .nRST(nRST),
-    .fetch_ex_if(fetch_ex_if),
-    .hazard_if(hazard_if),
-    .predict_if(predict_if),
-    .dgen_bus_if(tspp_dcache_gen_bus_if),
-    .prv_pipe_if(prv_pipe_if),
-    .halt(halt),
-    .rm_if(rm_if),
-    .cc_if(cc_if),
-    .sparce_if(sparce_if),
-    .rv32cif(rv32cif),
-    .wfi(wfi)
-  );
-
-  tspp_hazard_unit hazard_unit_i (
-    .hazard_if(hazard_if),
-    .prv_pipe_if(prv_pipe_if),
-    .rm_if(rm_if),
-    .sparce_if(sparce_if)
+//   ooo_fetch1_stage fetch1_stage (
+//        .CLK(CLK)
+//       ,.nRST(nRST)
+//       ,.halt(halt)
+//       ,.fetch1_fetch2_if(fetch1_fetch2_if)
+//       ,.predict_if(predict_if)
+//       ,.hazard_if(hazard_if)
+//      );
+//
+//   ooo_fetch2_stage fetch2_stage (
+//        .CLK(CLK)
+//       ,.nRST(nRST)
+//       ,.halt(halt)
+//       ,.fetch1_fetch2_if(fetch1_fetch2_if)
+//       ,.fetch_decode_if(fetch_decode_if)
+//       ,.igen_bus_if(icache_gen_bus_if)
+//       ,.hazard_if(hazard_if)
+//      );
+
+
+  always @(posedge hazard_if.pc_en) begin
+    $info ("PC: %8x --- Instr: %8x \n", fetch_stage.program_counter_pc, fetch_decode_if.instr);
+  end
+
+
+
+  ooo_fetch_stage fetch_stage (
+      .CLK(CLK)
+    ,.nRST(nRST)
+    ,.halt(halt)
+    ,.fetch_decode_if(fetch_decode_if)
+    ,.predict_if(predict_if)
+    ,.hazard_if(hazard_if)
+    ,.igen_bus_if(icache_gen_bus_if)
   );
-  */
 
-   pipe5_fetch1_stage fetch1_stage (
-        .CLK(CLK)
-       ,.nRST(nRST)
-       ,.halt(halt)
-       ,.fetch1_fetch2_if(fetch1_fetch2_if)
-       ,.predict_if(predict_if)
-       ,.hazard_if(hazard_if)
-      );
-
-   pipe5_fetch2_stage fetch2_stage (
-        .CLK(CLK)
-       ,.nRST(nRST)
-       ,.halt(halt)
-       ,.fetch1_fetch2_if(fetch1_fetch2_if)
-       ,.fetch_decode_if(fetch_decode_if)
-       ,.igen_bus_if(icache_gen_bus_if)
-       ,.hazard_if(hazard_if)
-       ,.prv_pipe_if(prv_pipe_if)
-      );
-
-   pipe5_decode_stage decode_stage (
+   ooo_decode_stage decode_stage (
         .CLK(CLK)
        ,.nRST(nRST)
        ,.halt(halt)
        ,.fetch_decode_if(fetch_decode_if)
        ,.decode_execute_if(decode_execute_if)
        ,.rf_if(rf_if)
-       ,.frf_if(frf_if)
        ,.hazard_if(hazard_if)
+       ,.cc_if(cc_if)
+       ,.cb_if(cb_if)
+       ,.bypass_if(bypass_if)
       );
 
-   pipe5_execute_stage execute_stage (
+   ooo_execute_stage execute_stage (
         .CLK(CLK)
        ,.nRST(nRST)
        ,.halt(halt)
        ,.decode_execute_if(decode_execute_if)
-       ,.execute_mem_if(execute_mem_if)
-       ,.bypass_if(bypass_if)
-       ,.jump_if(jump_if)
-       ,.branch_if(branch_if)
+       ,.execute_commit_if(execute_commit_if)
+       //,.jump_if(jump_if)
        ,.hazard_if(hazard_if)
+       //,.branch_if(branch_if)
+       ,.cc_if(cc_if)
+       ,.prv_pipe_if(prv_pipe_if)
+       ,.dgen_bus_if(dcache_gen_bus_if)
+       ,.bypass_if(bypass_if)
+       ,.cb_if(cb_if)
       );
 
-   pipe5_memory_stage memory_stage (
+   ooo_commit_stage commit_stage (
         .CLK(CLK)
        ,.nRST(nRST)
        ,.halt(halt)
-       ,.execute_mem_if(execute_mem_if)
-       ,.mem_wb_if(mem_wb_if)
-       ,.bypass_if(bypass_if)
-       ,.dgen_bus_if(dcache_gen_bus_if)
-       ,.predict_if(predict_if)
-       ,.cc_if(cc_if)
+       ,.decode_execute_if(decode_execute_if)
+       ,.execute_commit_if(execute_commit_if)
        ,.hazard_if(hazard_if)
-       ,.prv_pipe_if(prv_pipe_if)
+       ,.predict_if(predict_if)
+       ,.cb_if(cb_if)
       );
 
-
-   pipe5_writeback_stage writeback_stage (
-        .CLK(CLK)
-       ,.nRST(nRST)
-       ,.mem_wb_if(mem_wb_if)
-       ,.bypass_if(bypass_if)
-       ,.rf_if(rf_if)
-       ,.frf_if(frf_if)
-      );
+   completion_buffer completion_buffer (
+     .CLK 
+     ,.nRST 
+     ,.cb_if
+     ,.prv_pipe_if
+     ,.rf_if
+     ,.hazard_if(hazard_if)
+    );
+
+   ooo_bypass_unit bypass_unit (bypass_if);
+
+    assign cb_if.rv32v_commit_done  = 0;
+    assign cb_if.rv32v_exception  = 0;
+    assign cb_if.rv32v_wb_scalar_ready  = 0;
+    assign cb_if.rv32v_wb_exception = 0;
+    assign cb_if.rv32v_wb_scalar_index  = 0;
+    assign cb_if.rv32v_wb_vd  = 0;
+    assign cb_if.scalar_commit_ena = 0; 
    
    rv32i_reg_file reg_file (.*);
 
-   assign frf_if.clk = CLK;
-   assign frf_if.n_rst = nRST;
-
-   rv32f_reg_file f_reg_file (.frf_rf(frf_if));
-   branch_res branch_res (.br_if(branch_if));
-   jump_calc jump_calc (.jump_if(jump_if));
-   pipe5_forwarding_unit forwarding_unit (.bypass_if(bypass_if));
-
-   pipe5_hazard_unit hazard_unit (
+   ooo_hazard_unit hazard_unit (
        .hazard_if(hazard_if)
        ,.prv_pipe_if(prv_pipe_if)
+       ,.cb_if(cb_if)
      );
    
    always @(posedge CLK, negedge nRST)
    begin
        if (!nRST)
            halt <= 1'b0;
-       else if (mem_wb_if.halt_instr)
+       else if (cb_if.halt_instr)
            halt <= 1'b1;
 
    end
diff --git a/source_code/standard_core/RISCVBusiness_oldpipe5.sv b/source_code/standard_core/RISCVBusiness_oldpipe5.sv
new file mode 100644
index 0000000..8b189eb
--- /dev/null
+++ b/source_code/standard_core/RISCVBusiness_oldpipe5.sv
@@ -0,0 +1,295 @@
+// /*
+// *   Copyright 2016 Purdue University
+// *   
+// *   Licensed under the Apache License, Version 2.0 (the "License");
+// *   you may not use this file except in compliance with the License.
+// *   You may obtain a copy of the License at
+// *   
+// *       http://www.apache.org/licenses/LICENSE-2.0
+// *   
+// *   Unless required by applicable law or agreed to in writing, software
+// *   distributed under the License is distributed on an "AS IS" BASIS,
+// *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// *   See the License for the specific language governing permissions and
+// *   limitations under the License.
+// *   
+// *   
+// *   Filename:     RISCVBusiness.sv
+// *   
+// *   Created by:   John Skubic
+// *   Email:        jskubic@purdue.edu
+// *   Date Created: 06/01/2016
+// *   Description:  Top level module for RISCVBusiness
+// */
+
+// `include "generic_bus_if.vh"
+// `include "ahb_if.vh"
+// `include "component_selection_defines.vh"
+// //`include "risc_mgmt_if.vh"
+// `include "cache_control_if.vh"
+// //`include "sparce_pipeline_if.vh"
+// `include "core_interrupt_if.vh"
+// `include "pipe5_fetch1_fetch2_if.vh"
+// `include "pipe5_decode_execute_if.vh"
+// `include "pipe5_execute_mem_if.vh"
+// `include "pipe5_mem_writeback_if.vh"
+// `include "pipe5_forwarding_unit_if.vh"
+// `include "pipe5_hazard_unit_if.vh"
+// `include "rv32i_reg_file_if.vh"
+// `include "jump_calc_if.vh"
+// `include "branch_res_if.vh"
+// `include "rv32i_reg_file_if.vh"
+// `include "predictor_pipeline_if.vh"
+// `include "generic_bus_if.vh"
+// `include "prv_pipeline_if.vh"
+
+// module RISCVBusiness (
+//   input logic CLK, nRST,
+//   output logic wfi,
+//   core_interrupt_if.core interrupt_if,
+//   `ifdef BUS_INTERFACE_GENERIC_BUS
+//   generic_bus_if.cpu gen_bus_if
+//   `elsif BUS_INTERFACE_AHB
+//   ahb_if.ahb_m ahb_master
+//   `endif
+// );
+
+//   import rv32i_types_pkg::*;
+//  //  Interface instantiations
+
+//   generic_bus_if icache_gen_bus_if();
+//   generic_bus_if dcache_gen_bus_if();
+//   generic_bus_if icache_mc_if();
+//   generic_bus_if dcache_mc_if();
+//   generic_bus_if pipeline_trans_if(); 
+//   //risc_mgmt_if   rm_if();
+//   predictor_pipeline_if predict_if();
+//   prv_pipeline_if prv_pipe_if();
+//   cache_control_if cc_if();
+//   //sparce_pipeline_if sparce_if();
+
+//    pipe5_fetch1_fetch2_if fetch1_fetch2_if();
+//    pipe5_fetch2_decode_if fetch_decode_if();
+//    pipe5_decode_execute_if decode_execute_if();
+//    pipe5_execute_mem_if execute_mem_if();
+//    pipe5_mem_writeback_if mem_wb_if();
+//    pipe5_forwarding_unit_if bypass_if();
+//    pipe5_hazard_unit_if hazard_if();
+//    rv32i_reg_file_if rf_if();
+//    jump_calc_if jump_if();
+//    branch_res_if branch_if();
+
+//   logic halt;    //JOHN CHANGED THIS
+
+//   // Module Instantiations
+// /*
+//   pipeline_wrapper pipeline (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .halt(halt),
+//     .igen_bus_if(tspp_icache_gen_bus_if),
+//     .dgen_bus_if(tspp_dcache_gen_bus_if),
+//     .prv_pipe_if(prv_pipe_if), // TODO: Look at the communications between pipeline_wrapper and priv_wrapper
+//     .predict_if(predict_if),
+//     .rm_if(rm_if),
+//     .cc_if(cc_if),
+//     .sparce_if(sparce_if)
+//   );
+// */
+// /*
+//   tspp_fetch_stage fetch_stage_i (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .fetch_ex_if(fetch_ex_if),
+//     .hazard_if(hazard_if),
+//     .predict_if(predict_if),
+//     .igen_bus_if(tspp_icache_gen_bus_if),
+//     .sparce_if(sparce_if),
+//     .rv32cif(rv32cif)
+//   );
+
+//   tspp_execute_stage execute_stage_i (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .fetch_ex_if(fetch_ex_if),
+//     .hazard_if(hazard_if),
+//     .predict_if(predict_if),
+//     .dgen_bus_if(tspp_dcache_gen_bus_if),
+//     .prv_pipe_if(prv_pipe_if),
+//     .halt(halt),
+//     .rm_if(rm_if),
+//     .cc_if(cc_if),
+//     .sparce_if(sparce_if),
+//     .rv32cif(rv32cif),
+//     .wfi(wfi)
+//   );
+
+//   tspp_hazard_unit hazard_unit_i (
+//     .hazard_if(hazard_if),
+//     .prv_pipe_if(prv_pipe_if),
+//     .rm_if(rm_if),
+//     .sparce_if(sparce_if)
+//   );
+//   */
+
+//    pipe5_fetch1_stage fetch1_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.halt(halt)
+//        ,.fetch1_fetch2_if(fetch1_fetch2_if)
+//        ,.predict_if(predict_if)
+//        ,.hazard_if(hazard_if)
+//       );
+
+//    pipe5_fetch2_stage fetch2_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.halt(halt)
+//        ,.fetch1_fetch2_if(fetch1_fetch2_if)
+//        ,.fetch_decode_if(fetch_decode_if)
+//        ,.igen_bus_if(icache_gen_bus_if)
+//        ,.hazard_if(hazard_if)
+//       );
+
+//    pipe5_decode_stage decode_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.halt(halt)
+//        ,.fetch_decode_if(fetch_decode_if)
+//        ,.decode_execute_if(decode_execute_if)
+//        ,.rf_if(rf_if)
+//        ,.hazard_if(hazard_if)
+//       );
+
+//    pipe5_execute_stage execute_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.halt(halt)
+//        ,.decode_execute_if(decode_execute_if)
+//        ,.execute_mem_if(execute_mem_if)
+//        ,.bypass_if(bypass_if)
+//        ,.jump_if(jump_if)
+//        ,.branch_if(branch_if)
+//        ,.hazard_if(hazard_if)
+//       );
+
+//    pipe5_memory_stage memory_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.halt(halt)
+//        ,.execute_mem_if(execute_mem_if)
+//        ,.mem_wb_if(mem_wb_if)
+//        ,.bypass_if(bypass_if)
+//        ,.dgen_bus_if(dcache_gen_bus_if)
+//        ,.predict_if(predict_if)
+//        ,.cc_if(cc_if)
+//        ,.hazard_if(hazard_if)
+//        ,.prv_pipe_if(prv_pipe_if)
+//       );
+
+
+//    pipe5_writeback_stage writeback_stage (
+//         .CLK(CLK)
+//        ,.nRST(nRST)
+//        ,.mem_wb_if(mem_wb_if)
+//        ,.bypass_if(bypass_if)
+//        ,.rf_if(rf_if)
+//       );
+   
+//    rv32i_reg_file reg_file (.*);
+//    branch_res branch_res (.br_if(branch_if));
+//    jump_calc jump_calc (.jump_if(jump_if));
+//    pipe5_forwarding_unit forwarding_unit (.bypass_if(bypass_if));
+
+//    pipe5_hazard_unit hazard_unit (
+//        .hazard_if(hazard_if)
+//        ,.prv_pipe_if(prv_pipe_if)
+//      );
+   
+//    always @(posedge CLK, negedge nRST)
+//    begin
+//        if (!nRST)
+//            halt <= 1'b0;
+//        else if (mem_wb_if.halt_instr)
+//            halt <= 1'b1;
+
+//    end
+
+//   branch_predictor_wrapper branch_predictor_i (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .predict_if(predict_if)
+//   );
+
+//   priv_wrapper priv_wrapper_i (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .prv_pipe_if(prv_pipe_if),
+//     .interrupt_if
+//   );
+
+
+//   /*risc_mgmt_wrapper rmgmt (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .rm_if(rm_if)
+//   );*/
+
+//   separate_caches sep_caches (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .icache_proc_gen_bus_if(icache_gen_bus_if),
+//     .icache_mem_gen_bus_if(icache_mc_if),
+//     .dcache_proc_gen_bus_if(dcache_gen_bus_if),
+//     .dcache_mem_gen_bus_if(dcache_mc_if),
+//     .cc_if(cc_if)
+//   );
+
+//   memory_controller mc (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .d_gen_bus_if(dcache_mc_if),
+//     .i_gen_bus_if(icache_mc_if),
+//     .out_gen_bus_if(pipeline_trans_if)
+//   );
+
+//   /*sparce_wrapper sparce_wrapper_i (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .sparce_if(sparce_if)
+// <<<<<<< HEAD
+//   );
+
+//   rv32c_wrapper rv32c (
+//     .CLK(CLK),
+//     .nRST(nRST),
+//     .rv32cif(rv32cif)
+//   );
+
+//   // Instantiate the chosen bus interface
+// =======
+//   ); */
+
+//   generate 
+//     case (BUS_INTERFACE_TYPE) 
+//       "generic_bus_if" : begin
+//         generic_nonpipeline bt(
+//           .CLK(CLK), 
+//           .nRST(nRST), 
+//           .pipeline_trans_if(pipeline_trans_if), 
+//           .out_gen_bus_if(gen_bus_if)
+//         );
+//       end
+//       "ahb_if" : begin 
+//         ahb bt (
+//           .CLK(CLK),
+//           .nRST(nRST),
+//           .out_gen_bus_if(pipeline_trans_if),
+//           .ahb_m(ahb_master)
+//         ); 
+//       end
+//    endcase
+
+//   endgenerate
+
+// endmodule
diff --git a/source_code/standard_core/agu.sv b/source_code/standard_core/agu.sv
new file mode 100644
index 0000000..2451e4a
--- /dev/null
+++ b/source_code/standard_core/agu.sv
@@ -0,0 +1,95 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     agu.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: /21/2016
+*   Description:  Address Generation Unit
+*/
+
+module agu (
+  input logic [31:0] port_a,
+  input logic [31:0] port_b,
+  input rv32i_types_pkg::load_t load_type,
+  input logic [3:0] byte_en,
+  output logic [3:0] byte_en_standard,
+  output logic [31:0] address,
+  output logic mal_addr  
+);
+  
+  import rv32i_types_pkg::*;
+
+  logic [1:0] byte_offset;
+  assign byte_offset = address[1:0];
+
+  // Generate address
+  assign address = port_a + port_b;
+
+  // misaligned address
+  always_comb begin
+    unique case(load_type)
+      LB : begin
+        unique case(byte_offset)
+          2'b00   : byte_en_standard = 4'b0001;
+          2'b01   : byte_en_standard = 4'b0010;
+          2'b10   : byte_en_standard = 4'b0100;
+          2'b11   : byte_en_standard = 4'b1000;
+          default : byte_en_standard = 4'b0000;
+        endcase
+      end
+      LBU : begin
+        unique case(byte_offset)
+          2'b00   : byte_en_standard = 4'b0001;
+          2'b01   : byte_en_standard = 4'b0010;
+          2'b10   : byte_en_standard = 4'b0100;
+          2'b11   : byte_en_standard = 4'b1000;
+          default : byte_en_standard = 4'b0000;
+        endcase
+      end
+      LH : begin
+        unique case(byte_offset)
+          2'b00   : byte_en_standard = 4'b0011;
+          2'b10   : byte_en_standard = 4'b1100;
+          default : byte_en_standard = 4'b0000;
+        endcase
+      end
+      LHU : begin
+        unique case(byte_offset)
+          2'b00   : byte_en_standard = 4'b0011;
+          2'b10   : byte_en_standard = 4'b1100;
+          default : byte_en_standard = 4'b0000;
+        endcase
+      end
+      LW:           byte_en_standard = 4'b1111;
+      default :     byte_en_standard = 4'b0000;
+    endcase
+  end
+   // logic [3:0] byte_en;
+  // misaligned address
+  always_comb begin
+    if(byte_en_standard == 4'hf) 
+      mal_addr = (address[1:0] != 2'b00);
+    else if (byte_en_standard == 4'h3 || byte_en_standard == 4'hc) begin
+      mal_addr = (address[1:0] == 2'b01 || address[1:0] == 2'b11);
+    end
+    else 
+      mal_addr = 1'b0;
+  end
+  
+
+endmodule
diff --git a/source_code/standard_core/arithmetic_unit.sv b/source_code/standard_core/arithmetic_unit.sv
new file mode 100644
index 0000000..8aa8c2c
--- /dev/null
+++ b/source_code/standard_core/arithmetic_unit.sv
@@ -0,0 +1,54 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     arithmetic_unit.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 2/23/2022
+*   Description:  Load store functional unit
+*/
+
+`include "arithmetic_unit_if.vh"
+`include "alu_if.vh"
+
+module arithmetic_unit (
+  arithmetic_unit_if.au auif
+);
+  
+  import rv32i_types_pkg::*;
+
+  alu_if aluif();
+  alu ALU (.alu_if(aluif));
+
+  assign aluif.port_a = auif.port_a;
+  assign aluif.port_b = auif.port_b;
+  assign aluif.aluop  = auif.aluop;
+  // assign auif.wen_au
+
+  // assign wdata_au = csr_instr_sel ? auif.csr_rdata : aluif.port_out;
+  always_comb begin
+    case(auif.w_src)
+    CSR:     auif.wdata_au = auif.csr_rdata;
+    ALU_SRC: auif.wdata_au = aluif.port_out;
+    default: auif.wdata_au = auif.reg_file_wdata;
+    endcase
+  end
+  // auif.wen = auif.wen_au; 
+
+
+
+endmodule
diff --git a/source_code/standard_core/completion_buffer.sv b/source_code/standard_core/completion_buffer.sv
new file mode 100644
index 0000000..6093526
--- /dev/null
+++ b/source_code/standard_core/completion_buffer.sv
@@ -0,0 +1,197 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     completion_buffer.sv
+*
+*   Created by:   Jing Yin See
+*   Email:        see4@purdue.edu
+*   Date Created: 2/12/2022
+*   Description:  Completion Buffer to maintain global program order
+*/
+
+`include "completion_buffer_if.vh"
+`include "prv_pipeline_if.vh"
+`include "ooo_hazard_unit_if.vh"
+
+module completion_buffer # (
+  parameter NUM_ENTRY = 16
+)
+(
+  input CLK, nRST,
+  completion_buffer_if.cb cb_if,
+  prv_pipeline_if.cb  prv_pipe_if, 
+  rv32i_reg_file_if.writeback rf_if,
+  ooo_hazard_unit_if.cb hazard_if
+);
+
+  import rv32i_types_pkg::*;
+
+  typedef struct packed {
+    word_t data;
+    logic [4:0] vd;
+    logic valid;
+    cb_exception_t exception_type;
+    logic wen;
+    logic rv32v;
+    logic rv32f;
+    cpu_tracker_signals_t CPU_TRACKER;
+  } cb_entry;
+
+  logic [$clog2(NUM_ENTRY):0] head, tail, next_head, next_tail;
+  logic [$clog2(NUM_ENTRY) - 1:0] head_sel, tail_sel;
+  cb_entry cb [0:NUM_ENTRY-1]; 
+  cb_entry next_cb [0:NUM_ENTRY-1]; 
+  logic move_head, move_tail, flush_cb;
+  integer i;
+
+  //Register file signals here... this is just to stay consistent with the vector unit
+  assign rf_if.w_data            = cb[head_sel].data; 
+  assign rf_if.rd                = cb[head_sel].vd; 
+  assign rf_if.wen               = cb[head_sel].valid & cb[head_sel].wen; 
+
+  assign cb_if.cur_tail          = tail[$clog2(NUM_ENTRY)-1:0]; 
+  assign cb_if.vd_final          = cb[head_sel].vd; 
+  assign cb_if.wdata_final       = cb[head_sel].data; 
+  assign cb_if.full              = head[$clog2(NUM_ENTRY)-1:0] == tail[$clog2(NUM_ENTRY)-1:0] && head[$clog2(NUM_ENTRY)] != tail[$clog2(NUM_ENTRY)]; 
+  assign cb_if.empty             = head == tail; 
+  assign cb_if.flush             = cb[head_sel].exception_type != 2'b00;
+  assign cb_if.exception         = cb_if.flush | cb_if.rv32v_exception; // WEN to epc register
+  assign cb_if.rv32v_commit_ena  = cb[head_sel].rv32v & ~cb[head_sel].wen; // For vector instr that is not writing back to scalar reg
+  assign cb_if.rv32f_commit_ena  = cb[head_sel].rv32f & cb[head_sel].valid & ~cb_if.flush & ~cb[head_sel].wen; 
+  assign cb_if.tb_read           = move_head;
+  assign cb_if.CPU_TRACKER       = cb[head_sel].CPU_TRACKER;
+  assign cb_if.branch_mispredict_ena = 0;
+  assign cb_if.mal_ls             = cb[head_sel].exception_type == MAL_LOADSTORE;
+  assign cb_if.illegal_insn       = cb[head_sel].exception_type == ILLEGAL; 
+  assign cb_if.mal_insn           = cb[head_sel].exception_type == MAL_NORMAL; 
+  assign cb_if.epc                = cb[head_sel].data;
+
+  assign tail_sel                = tail[$clog2(NUM_ENTRY)-1:0];
+  assign head_sel                = head[$clog2(NUM_ENTRY)-1:0];
+  assign move_head               = cb_if.rv32v_commit_ena ? cb_if.rv32v_commit_done : cb[head_sel].valid & ~cb_if.flush;
+  assign move_tail               = cb_if.alloc_ena & ~cb_if.full & (cb_if.opcode != opcode_t'(0));
+  assign flush_cb                = cb_if.flush | cb_if.rv32v_exception;
+
+  assign prv_pipe_if.instr = move_head;
+
+   //Hazard unit logic
+  assign hazard_if.rob_full = cb_if.full;
+  assign hazard_if.rob_empty = cb_if.empty;
+
+  // HEAD AND TAIL POINTER LOGIC
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      head <= '0;
+      tail <= '0;
+    end else begin
+      head <= next_head;
+      tail <= next_tail;
+    end
+  end 
+
+  always_comb begin
+    next_head = head;
+    if (flush_cb) begin
+      next_head = 0;
+    end else if (move_head) begin
+      next_head = head + 1;
+    end
+  end
+
+  always_comb begin
+    next_tail = tail;
+    if (flush_cb) begin
+      next_tail = 0;
+    end else if (move_tail) begin
+      next_tail = tail + 1;
+    end
+  end
+
+  // CB LOGIC
+  always_ff @ (posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      for (i = 0; i < NUM_ENTRY; i++) begin
+        cb[i] <= '0;
+      end
+    end else if (flush_cb) begin
+      for (i = 0; i < NUM_ENTRY; i++) begin
+        cb[i] <= '0;
+      end
+    end else begin
+      for (i = 0; i < NUM_ENTRY; i++) begin
+        cb[i] <= next_cb[i];
+      end
+    end
+  end 
+
+  always_comb begin
+    // Set default value
+    next_cb = cb;
+    // Clear head entry when committed
+    if (move_head) begin
+      next_cb[head_sel] = '0;
+    end
+    if (move_tail) begin
+      next_cb[tail_sel].CPU_TRACKER = cb_if.CPU_TRACKER_decode;
+    end
+    // Illegal instr
+    /*if (cb_if.alloc_ena) begin
+      next_cb[tail].epc = cb_if.pc;
+      if (cb_if.illegal_instr) begin
+        next_cb[tail].exception = 1;
+      end 
+    end */
+    // Allocate entry for vector instr
+    if (move_tail & cb_if.rv32v_instr) begin
+      next_cb[tail_sel].rv32v = 1;
+      if (cb_if.rv32v_wb_scalar_ena) begin
+        next_cb[tail_sel].wen = 1;
+      end else begin
+        next_cb[tail_sel].wen = 0;
+      end
+    end
+    // Next state for arithemtic/multiply/divide unit result
+    if (cb_if.ready_sfu) begin
+      next_cb[cb_if.index_sfu].data = cb_if.wdata_sfu;
+      next_cb[cb_if.index_sfu].vd = cb_if.vd_sfu;
+      next_cb[cb_if.index_sfu].valid = cb_if.exception_type_sfu == NO_EXCEPTION; 
+      next_cb[cb_if.index_sfu].exception_type = cb_if.exception_type_sfu;
+      next_cb[cb_if.index_sfu].wen = cb_if.wen_sfu; 
+      next_cb[cb_if.index_sfu].rv32v = 0;
+      next_cb[cb_if.index_sfu].rv32f = 0;
+    end
+    // Next state for loadstore unit result
+    if (cb_if.ready_ls) begin
+      next_cb[cb_if.index_ls].data = cb_if.wdata_ls;
+      next_cb[cb_if.index_ls].vd = cb_if.vd_ls;
+      next_cb[cb_if.index_ls].valid = cb_if.exception_type_ls == NO_EXCEPTION;
+      next_cb[cb_if.index_ls].exception_type = cb_if.exception_type_ls;
+      next_cb[cb_if.index_ls].wen = cb_if.wen_ls & cb_if.exception_type_ls == NO_EXCEPTION; 
+      next_cb[cb_if.index_ls].rv32v = 0;
+      next_cb[cb_if.index_ls].rv32f = 0;
+    end
+    // Next state for vector unit result
+    if (cb_if.rv32v_wb_scalar_ready) begin
+      next_cb[cb_if.rv32v_wb_scalar_index].data = cb_if.rv32v_wb_scalar_data;
+      next_cb[cb_if.rv32v_wb_scalar_index].vd = cb_if.rv32v_wb_vd; 
+      next_cb[cb_if.rv32v_wb_scalar_index].valid = 1;
+      next_cb[cb_if.rv32v_wb_scalar_index].exception_type = cb_if.rv32v_wb_exception;
+      next_cb[cb_if.rv32v_wb_scalar_index].rv32f = 0;
+    end
+    // TODO: Add floating point signals when integrating FPU
+  end
+
+endmodule
diff --git a/source_code/standard_core/control_unit.sv b/source_code/standard_core/control_unit.sv
index e59e52a..18f1e03 100644
--- a/source_code/standard_core/control_unit.sv
+++ b/source_code/standard_core/control_unit.sv
@@ -32,15 +32,18 @@
 module control_unit 
 (
   control_unit_if.control_unit  cu_if
-  //rv32i_reg_file_if.cu          rf_if
-  //input logic [4:0] rmgmt_rsel_s_0, rmgmt_rsel_s_1, rmgmt_rsel_d,
-  //input logic rmgmt_req_reg_r, rmgmt_req_reg_w 
 );
   import alu_types_pkg::*;
   import rv32i_types_pkg::*;
-  import rv32f_types_pkg::*;
   import machine_mode_types_1_11_pkg::*;
 
+  import rv32m_pkg::*;
+
+  
+  // Some vector CSR constants
+  //typedef enum logic [6:0] {7'b1000000} vsetvl_const_t;
+
+  // decode funct
   stype_t         instr_s;
   itype_t         instr_i;
   rtype_t         instr_r;
@@ -48,87 +51,24 @@ module control_unit
   utype_t         instr_u;
   ujtype_t        instr_uj;
 
+  rv32m_insn_t    instr_m;
+  
+  // intermediates for ALU decoding
+  logic sr, aluop_srl, aluop_sra, aluop_add, aluop_sub, aluop_and, aluop_or;
+  logic aluop_sll, aluop_xor, aluop_slt, aluop_sltu, add_sub;
+
+  // cast the instruction as each possible type
   assign instr_s = stype_t'(cu_if.instr);
   assign instr_i = itype_t'(cu_if.instr);
   assign instr_r = rtype_t'(cu_if.instr);
   assign instr_sb = sbtype_t'(cu_if.instr);
   assign instr_u = utype_t'(cu_if.instr);
   assign instr_uj = ujtype_t'(cu_if.instr);
+  assign instr_m = rv32m_insn_t'(cu_if.instr);
+  assign instr_sys = systype_t'(cu_if.instr);
 
-  //assign integer opcodes
-  always_comb begin
-    case (cu_if.instr[6:0])
-        7'b0110111: begin
-            cu_if.opcode = LUI;
-        end
-        7'b0010111: begin
-            cu_if.opcode = AUIPC;
-        end
-        7'b1101111: begin
-            cu_if.opcode = JAL;
-        end
-        7'b1100111: begin
-            cu_if.opcode = JALR;
-        end
-        7'b1100011: begin
-            cu_if.opcode = BRANCH;
-        end
-        7'b0000011: begin
-            cu_if.opcode = LOAD;
-        end
-        7'b0100011: begin
-            cu_if.opcode = STORE;
-        end
-        7'b0010011: begin
-            cu_if.opcode = IMMED;
-        end
-        7'b0110011: begin
-            cu_if.opcode = REGREG;
-        end
-        7'b1110011: begin
-            cu_if.opcode = SYSTEM;
-        end
-        7'b0001111: begin
-            cu_if.opcode = MISCMEM;
-        end
-        default:
-            cu_if.opcode = opcode_t'(0);
-    endcase
-  end
-  
-  //assign floating point opcodes
-  always_comb begin
-    case (cu_if.instr[6:0])
-        7'b0000111: begin
-            cu_if.f_opcode = FLW; 
-        end
-        7'b0100111: begin
-            cu_if.f_opcode = FSW;
-        end
-        7'b1010011: begin
-            cu_if.f_opcode = F_RTYPE;
-        end
-        default:
-            cu_if.f_opcode = f_opcode_t'(0);
-    endcase
-  end
-  //assign cu_if.opcode = opcode_t'(cu_if.instr[6:0]);
-  //assign rf_if.rs1  = rmgmt_req_reg_r ? rmgmt_rsel_s_0 : cu_if.instr[19:15];
-  //assign rf_if.rs2  = rmgmt_req_reg_r ? rmgmt_rsel_s_1 : cu_if.instr[24:20];
-  //assign rf_if.rd   = rmgmt_req_reg_w ? rmgmt_rsel_d   : cu_if.instr[11:7]; 
-  
-  //assign int registers
-  assign cu_if.reg_rs1  = cu_if.opcode | (cu_if.f_opcode == FLW || cu_if.f_opcode == FSW || cu_if.f_funct7 === FMVWX)  ? cu_if.instr[19:15]: 0;
-  assign cu_if.reg_rs2  = cu_if.opcode | (cu_if.f_opcode == FSW) ? cu_if.instr[24:20] : 0;
-  assign cu_if.reg_rd   = cu_if.opcode | cu_if.f_funct7 === FMVXW ? cu_if.instr[11:7] : 0;
-
-  assign cu_if.shamt = cu_if.instr[24:20];
-
-  //assign floating point registers
-  assign cu_if.f_reg_rs1  = cu_if.f_opcode & cu_if.f_funct7 !== FMVWX ? cu_if.instr[19:15]: 0;
-  assign cu_if.f_reg_rs2  = cu_if.f_opcode & cu_if.f_funct7 !== FMVWX ? cu_if.instr[24:20]: 0;
-  assign cu_if.f_reg_rd   = cu_if.f_opcode & cu_if.f_funct7 !== FMVXW ? cu_if.instr[11:7] : 0;
-  
+  // assign the opcode of the instruction
+  assign cu_if.opcode = opcode_t'(cu_if.instr[6:0]);
 
   // Assign the immediate values
   assign cu_if.imm_I  = instr_i.imm11_00;
@@ -142,138 +82,114 @@ module control_unit
   assign cu_if.imm_shamt_sel = (cu_if.opcode == IMMED &&
                             (instr_i.funct3 == SLLI || instr_i.funct3 == SRI));
 
-  //assign floating point rounding mode
-  assign cu_if.frm_in = instr_r.funct3;
-
-  // Assign branch and load type
-  assign cu_if.load_type    = load_t'(instr_i.funct3);
-  assign cu_if.branch_type  = branch_t'(instr_sb.funct3);
-  assign cu_if.fsw = cu_if.f_opcode == FSW;
 
-  // Assign memory read/write enables
-  assign cu_if.dwen = (cu_if.opcode == STORE) | (cu_if.f_opcode == FSW);
-  assign cu_if.dren = (cu_if.opcode == LOAD) | (cu_if.f_opcode == FLW);
-  assign cu_if.ifence = (cu_if.opcode == MISCMEM) && (rv32i_miscmem_t'(instr_r.funct3) == FENCEI);
 
-  // Assign control flow signals
-  assign cu_if.branch     = (cu_if.opcode == BRANCH);
-  assign cu_if.lui_instr  = (cu_if.opcode == LUI);
-  assign cu_if.jump       = (cu_if.opcode == JAL || cu_if.opcode == JALR);
-  assign cu_if.ex_pc_sel  = (cu_if.opcode == JAL || cu_if.opcode == JALR);
-  assign cu_if.j_sel      = (cu_if.opcode == JAL);
-  // Assign alu operands
+  /***** REGISTER FILE CONTROL SIGNALS/COMMON SIGNALS ALL FU's NEED *****/
+  assign cu_if.reg_rs1  = cu_if.instr[19:15];
+  assign cu_if.reg_rs2  = cu_if.instr[24:20];
+  // reg dest
+  assign cu_if.reg_rd   = cu_if.instr[11:7]; 
+  assign cu_if.shamt = cu_if.instr[24:20];
+  assign cu_if.arith_sigs.reg_rd = cu_if.reg_rd;
+  assign cu_if.arith_sigs.wen    = cu_if.wen;
+  // Select the source for writing
   always_comb begin
     case(cu_if.opcode)
-      REGREG, IMMED, LOAD : cu_if.alu_a_sel = 2'd0;
-      STORE               : cu_if.alu_a_sel = 2'd1;
-      AUIPC               : cu_if.alu_a_sel = 2'd2;
-      default             : cu_if.alu_a_sel = 2'd2;
-    endcase
-    case (cu_if.f_opcode) 
-        FLW: cu_if.alu_a_sel = 2'd0;
-        FSW: cu_if.alu_a_sel = 2'd1;
+      LOAD                  : cu_if.arith_sigs.w_src   = LOAD_SRC;
+      JAL, JALR             : cu_if.arith_sigs.w_src   = JUMP_SRC;
+      LUI                   : cu_if.arith_sigs.w_src   = LUI_SRC;
+      IMMED, AUIPC, REGREG  : cu_if.arith_sigs.w_src   = ALU_SRC;
+      SYSTEM                : cu_if.arith_sigs.w_src   = CSR;
+      default               : cu_if.arith_sigs.w_src   = LOAD_SRC;
     endcase
   end
+  // Assign register write enable
 
+    //config instructions
+//  assign vcu_if.cfgsel = (vcu_if.opcode == VECTOR) && (vfunct3 == OPCFG) && (vcu_if.instr[31] == 0) ? VSETVLI : 
+//                         (vcu_if.opcode == VECTOR) && (vfunct3 == OPCFG) && (vcu_if.instr[31:30] == 2'b11) ? VSETIVLI : 
+//                         (vcu_if.opcode == VECTOR) && (vfunct3 == OPCFG) && (vcu_if.instr[31:30] == 2'b10) ? VSETVL  : NOT_CFG;
   always_comb begin
     case(cu_if.opcode)
-      STORE       : cu_if.alu_b_sel = 2'd0;
-      REGREG      : cu_if.alu_b_sel = 2'd1;
-      IMMED, LOAD : cu_if.alu_b_sel = 2'd2;
-      AUIPC       : cu_if.alu_b_sel = 2'd3;
-      default     : cu_if.alu_b_sel = 2'd1;
-    endcase
-    case (cu_if.f_opcode) 
-        FSW: cu_if.alu_b_sel = 2'd0;
-        FLW: cu_if.alu_b_sel = 2'd2;
+      STORE, BRANCH       : cu_if.wen   = 1'b0;
+      IMMED, LUI, AUIPC,
+      REGREG, JAL, JALR,
+      LOAD                : cu_if.wen   = 1'b1;
+      // Opcode is VECTOR, funct3 is 3'b111: vsetvli, vsetivli, vsetvl
+      VECTOR              : cu_if.wen   = instr_i.funct3 == 3'b111;
+      SYSTEM              : cu_if.wen   = cu_if.csr_rw_valid;
+      default:  cu_if.wen   = 1'b0;
     endcase
   end
 
-  
-
-  //assign fpu funct code
-  always_comb begin
-    cu_if.f_funct7 = f_funct7_t'(7'b1111111);
-    if (cu_if.f_opcode == F_RTYPE) begin
-        case (instr_r.funct7)
-            FADD: begin
-            cu_if.f_funct7 = FADD;
-            end
-            FSUB: begin
-            cu_if.f_funct7 = FSUB;
-            end
-            FMUL: begin
-            cu_if.f_funct7 = FMUL;
-            end
-            FMVWX: begin
-            cu_if.f_funct7 = FMVWX;
-            end
-            FMVXW: begin
-            cu_if.f_funct7 = FMVXW;
-            end
-
-        endcase
-    end
-  end
-
-  // Assign write select
+  // Select which operand to use
   always_comb begin
     case(cu_if.opcode)
-      LOAD                  : cu_if.w_sel   = 3'd0;
-      JAL, JALR             : cu_if.w_sel   = 3'd1;
-      LUI                   : cu_if.w_sel   = 3'd2;
-      IMMED, AUIPC, REGREG  : cu_if.w_sel   = 3'd3;
-      SYSTEM                : cu_if.w_sel   = 3'd4;
-      default               : cu_if.w_sel   = 3'd0;
+      REGREG, IMMED, LOAD, BRANCH, JALR, SYSTEM : cu_if.source_a_sel = 2'd0;
+      //Opcode is VECTOR, funct3 is 3'b111: vsetvli, vsetivli, vsetvl
+      VECTOR              : cu_if.source_a_sel = 2'd0;
+      STORE               : cu_if.source_a_sel = 2'd1;
+      AUIPC               : cu_if.source_a_sel = 2'd2;
+      default             : cu_if.source_a_sel = 2'd2;
     endcase
-    if (cu_if.f_funct7 === FMVXW) begin
-        cu_if.w_sel = 3'd3;
-    end
   end
 
-  //floating point write select
-  always_comb begin
-    case (cu_if.f_opcode)
-        FLW: cu_if.f_wsel = 3'd1;
-        F_RTYPE: cu_if.f_wsel = 3'd0;
-        default: cu_if.f_wsel = 3'd2;
-    endcase
-   end
-
-  // Assign register write enable
   always_comb begin
     case(cu_if.opcode)
-      STORE, BRANCH       : cu_if.wen   = 1'b0;
-      IMMED, LUI, AUIPC,
-      REGREG, JAL, JALR,
-      LOAD                : cu_if.wen   = 1'b1; 
-      SYSTEM              : cu_if.wen   = cu_if.csr_rw_valid;
-      default:  cu_if.wen   = 1'b0;
+      STORE       : cu_if.source_b_sel = 2'd0;
+      VECTOR      : cu_if.source_b_sel = 2'd0;
+      REGREG      : cu_if.source_b_sel = 2'd1;
+      IMMED, LOAD : cu_if.source_b_sel = 2'd2;
+      AUIPC       : cu_if.source_b_sel = 2'd3;
+      default     : cu_if.source_b_sel = 2'd1;
     endcase
-        if (cu_if.f_funct7 === FMVXW) begin
-           cu_if.wen = 1'b1;
-        end
   end
 
-  //floating point register write enable
+
+  /***** TOP LEVEL FUNCTIONAL UNIT DECODING *****/
+  // decoding which functional unit the instruction belongs to
   always_comb begin
-     cu_if.f_wen = 1'b0;
-    case (cu_if.f_opcode)
-       FLW, F_RTYPE: begin
-       cu_if.f_wen = 1'b1; 
-       if (cu_if.f_funct7 === FMVXW) begin
-           cu_if.f_wen = 1'b0;
-       end
-       end
-    endcase
+    if (cu_if.opcode == REGREG && (instr_r.funct7 == 7'b000_0001)) begin
+      if (instr_r.funct3[2] == 1) begin
+        cu_if.sfu_type = DIV_S;
+      end else begin
+        cu_if.sfu_type = MUL_S;
+      end
+    end else begin
+      if ((cu_if.opcode == LOAD) || (cu_if.opcode == STORE)) begin
+        cu_if.sfu_type = LOADSTORE_S;
+      end else begin
+        cu_if.sfu_type = ARITH_S;
+      end
+    end
   end
 
+  /***** LOADSTORE CONTROL SIGNALS *****/
+  // Assign memory read/write enables
+  assign cu_if.lsu_sigs.load_type = load_t'(instr_i.funct3);
+  assign cu_if.lsu_sigs.dren = (cu_if.opcode == LOAD);
+  assign cu_if.lsu_sigs.dwen = (cu_if.opcode == STORE);
+  assign cu_if.lsu_sigs.opcode = cu_if.opcode;
 
-  // Assign alu opcode
-  logic sr, aluop_srl, aluop_sra, aluop_add, aluop_sub, aluop_and, aluop_or;
-  logic aluop_sll, aluop_xor, aluop_slt, aluop_sltu, add_sub;
 
+  // common signals 
+  assign cu_if.lsu_sigs.reg_rd = cu_if.reg_rd;
+  assign cu_if.lsu_sigs.wen = cu_if.wen;
+
+  /***** ARITHIMETIC CONTROL SIGNALS *****/
+  // assign the branch type output
+  assign cu_if.branch_type  = branch_t'(instr_sb.funct3);
+
+  // Assign control flow signals
+  assign cu_if.branch = (cu_if.opcode == BRANCH);
+
+  assign cu_if.lui_instr  = (cu_if.opcode == LUI);
+  assign cu_if.jump       = (cu_if.opcode == JAL || cu_if.opcode == JALR);
+  assign cu_if.ex_pc_sel  = (cu_if.opcode == JAL || cu_if.opcode == JALR);
+  assign cu_if.j_sel      = (cu_if.opcode == JAL);
+  
 
+  // Alu op code decoding
   assign sr = ((cu_if.opcode == IMMED && instr_i.funct3 == SRI) ||
                 (cu_if.opcode == REGREG && instr_r.funct3 == SR));
   assign add_sub = (cu_if.opcode == REGREG && instr_r.funct3 == ADDSUB);
@@ -286,9 +202,7 @@ module control_unit
                       (cu_if.opcode == AUIPC) ||
                       (add_sub && ~cu_if.instr[30]) ||
                       (cu_if.opcode == LOAD) ||
-                      (cu_if.opcode == STORE) || 
-                      (cu_if.f_opcode == FSW) || 
-                      (cu_if.f_opcode == FLW));
+                      (cu_if.opcode == STORE));
   assign aluop_sub = (add_sub && cu_if.instr[30]);
   assign aluop_and = ((cu_if.opcode == IMMED && instr_i.funct3 == ANDI) ||
                       (cu_if.opcode == REGREG && instr_r.funct3 == AND));
@@ -303,54 +217,72 @@ module control_unit
 
   always_comb begin
     if (aluop_sll)
-      cu_if.alu_op = ALU_SLL;
+      cu_if.arith_sigs.alu_op = ALU_SLL;
     else if (aluop_sra)
-      cu_if.alu_op = ALU_SRA;
+      cu_if.arith_sigs.alu_op = ALU_SRA;
     else if (aluop_srl)
-      cu_if.alu_op = ALU_SRL;
+      cu_if.arith_sigs.alu_op = ALU_SRL;
     else if (aluop_add)
-      cu_if.alu_op = ALU_ADD;
+      cu_if.arith_sigs.alu_op = ALU_ADD;
     else if (aluop_sub)
-      cu_if.alu_op = ALU_SUB;
+      cu_if.arith_sigs.alu_op = ALU_SUB;
     else if (aluop_and)
-      cu_if.alu_op = ALU_AND;
+      cu_if.arith_sigs.alu_op = ALU_AND;
     else if (aluop_or)
-      cu_if.alu_op = ALU_OR;
+      cu_if.arith_sigs.alu_op = ALU_OR;
     else if (aluop_xor)
-      cu_if.alu_op = ALU_XOR;
+      cu_if.arith_sigs.alu_op = ALU_XOR;
     else if (aluop_slt)
-      cu_if.alu_op = ALU_SLT;
+      cu_if.arith_sigs.alu_op = ALU_SLT;
     else if (aluop_sltu)
-      cu_if.alu_op = ALU_SLTU;
+      cu_if.arith_sigs.alu_op = ALU_SLTU;
     else
-      cu_if.alu_op = ALU_ADD;
+      cu_if.arith_sigs.alu_op = ALU_ADD;
   end
 
-  // HALT HACK. Just looking for j + 0x0 (infinite loop)
-  // Halt required for unit testing, but not useful in tapeout context
-  // Due to presence of interrupts, infinite loops are valid
-  generate
-    if(INFINITE_LOOP_HALTS == "true") begin
-      assign cu_if.halt = (cu_if.instr == 32'h0000006f);
-    end else begin
-      assign cu_if.halt = '0;
-    end
-  endgenerate
-  // Privilege Control Signals
-  assign cu_if.fault_insn = '0;
- 
+  
+  /***** MULTIPLY CONTROL SIGNALS *****/
+  // mult specific signals
+  //assign cu_if.mult_sigs.ena = cu_if.sfu_type == MUL_S;
+  //upper is 1, lower is 0
+  assign cu_if.mult_sigs.high_low_sel = (|instr_r.funct3[1:0]); 
+  assign cu_if.mult_sigs.is_signed = cu_if.sign_type; // decoded below
+
   always_comb begin
-    case(cu_if.opcode)
-      REGREG: cu_if.illegal_insn = instr_r.funct7[0];
-      LUI, AUIPC, JAL, JALR,
-      BRANCH, LOAD, STORE,
-      IMMED, SYSTEM,
-      MISCMEM, opcode_t'('0)           : cu_if.illegal_insn = 1'b0;
-      default                 : cu_if.illegal_insn = 1'b1;
+    case(instr_r.funct3)
+      3'b011, 3'b101, 3'b111: cu_if.sign_type = UNSIGNED;
+      3'b001, 3'b100, 3'b110, 3'b000: cu_if.sign_type = SIGNED;
+      3'b010: cu_if.sign_type = SIGNED_UNSIGNED;
+      default: cu_if.sign_type = SIGNED;
     endcase
   end
- 
-  //Decoding of System Priv Instructions
+  // TODO: try and get rid of this signal
+  assign cu_if.mult_sigs.decode_done = 0;
+  // comomon signals
+  assign cu_if.mult_sigs.wen = cu_if.wen;
+  assign cu_if.mult_sigs.reg_rd = cu_if.reg_rd;
+
+
+  /***** DIVIDE CONTROL SIGNALS *****/
+  // div_type selects between remainder and divide. div_type == 1 means divide, 0 = remainder
+  assign cu_if.div_sigs.div_type = (cu_if.sfu_type == DIV_S) && ~instr_r.funct3[1] ? 1 : 0; 
+  //assign cu_if.div_sigs.ena = cu_if.sfu_type == DIV_S;
+  assign cu_if.div_sigs.is_signed = cu_if.sign_type;
+
+  // comomon signals
+  assign cu_if.div_sigs.wen = cu_if.wen;
+  assign cu_if.div_sigs.reg_rd= cu_if.reg_rd;
+
+
+  /***** FLOATING POINT CONTROL SIGNALS *****/
+  // TODO: The top level signals for the floating point decoding here 
+  // if there are any
+
+  /***** PRIV CONTROL SIGNALS *****/
+  // exception related control signals
+  // Decoding of System Priv Instructions
+  // Privilege Control Signals
+  assign cu_if.fault_insn = '0;
   always_comb begin
     cu_if.ret_insn = 1'b0;
     cu_if.breakpoint = 1'b0;
@@ -371,13 +303,16 @@ module control_unit
     end
   end
 
+  /***** CSR CONTROL SIGNALS *****/
   //CSR Insns
+  
   always_comb begin
     cu_if.csr_swap  = 1'b0;
     cu_if.csr_clr   = 1'b0;
     cu_if.csr_set   = 1'b0;
     cu_if.csr_imm   = 1'b0;
-    cu_if.csr_addr = csr_addr_t'(instr_i.imm11_00);
+    cu_if.csr_sigs.vtype_imm = 1'b1;
+    cu_if.csr_sigs.vl_imm    = 1'b0;
 
     if (cu_if.opcode == SYSTEM) begin
       if (rv32i_system_t'(instr_r.funct3) == CSRRW) begin
@@ -397,19 +332,114 @@ module control_unit
         cu_if.csr_clr = 1'b1;
         cu_if.csr_imm   = 1'b1;
       end
+    end else if (cu_if.opcode == VECTOR) begin
+      if (~cu_if.instr[31]) begin
+        //vsetvli
+        cu_if.csr_set            = 1'b1;
+        cu_if.csr_imm            = 1'b1;
+        cu_if.csr_sigs.vtype_imm = 1'b1;
+        cu_if.csr_sigs.vl_imm    = 1'b0;
+        cu_if.csr_swap  = 1'b1;
+        //rd, new vl
+        // rs1, AVL
+        // zimm11 
+      end else if (cu_if.instr[31:30] == 2'b11) begin
+        //vsetivli
+        cu_if.csr_set            = 1'b1;
+        cu_if.csr_imm            = 1'b1;
+        cu_if.csr_sigs.vtype_imm = 1'b1;
+        cu_if.csr_sigs.vl_imm    = 1'b1;
+        cu_if.csr_swap  = 1'b1;
+        //rd, new vl
+        //uimm5, AVL
+        //zimm10, new vtype
+      end else if (cu_if.instr[31:25] == 7'b1000000) begin
+        //vsetvl
+        cu_if.csr_set            = 1'b1;
+        cu_if.csr_sigs.vtype_imm = 1'b0;
+        cu_if.csr_sigs.vl_imm    = 1'b0;
+        cu_if.csr_swap  = 1'b1;
+        //rd, rs1, rs2
+      end
     end
+  end
+  assign cu_if.csr_rw_valid = (cu_if.csr_swap | cu_if.csr_set | cu_if.csr_clr);
 
-    //logic for updating floating point flags
+  logic [31:0] zimm;
 
-   /* if (cu_if.f_funct7 == FADD || cu_if.f_funct7 == FSUB || cu_if.f_funct7 == FMUL) begin
-        cu_if.csr_addr = FFLAGS_ADDR;
-        cu_if.csr_swap = 1'b1;
-    end*/
+  // Zero-extend immediate value
+  // Scalar CSR instructions have zimm5, vector have zimm10 and zimm11
+  always_comb begin
+    zimm = '0;
+    if (cu_if.opcode == SYSTEM) begin
+      zimm = {27'd0, cu_if.instr[19:15]};
+    end else if (cu_if.opcode == VECTOR) begin
+      if (~cu_if.instr[31]) begin
+        zimm = {21'd0, cu_if.instr[30:20]};
+      end else if (cu_if.instr[31:30] == 2'b11) begin
+        zimm = {22'd0, cu_if.instr[29:20]};
+      end
+    end
   end
-  assign cu_if.csr_rw_valid = (cu_if.csr_swap | cu_if.csr_set | cu_if.csr_clr);
+  
+  // TODO: if vector, then vtype CSR
+  assign cu_if.csr_addr = csr_addr_t'(instr_i.imm11_00);
+  // assign cu_if.zimm     = cu_if.instr[19:15];
+  
+  assign cu_if.csr_sigs.vector_csr_instr = (cu_if.opcode == VECTOR) & (~cu_if.instr[31] || (cu_if.instr[31:30] == 2'b11) || (cu_if.instr[31:25] == 7'b1000000));
+  
+  // new struct refactor
+  // TODO: remove intermediaries from part of the interface
+  assign cu_if.csr_sigs.csr_instr = (cu_if.opcode == SYSTEM) || cu_if.csr_sigs.vector_csr_instr;
+  assign cu_if.csr_sigs.csr_swap = cu_if.csr_swap;
+  assign cu_if.csr_sigs.csr_clr = cu_if.csr_clr;
+  assign cu_if.csr_sigs.csr_set = cu_if.csr_set;
+  assign cu_if.csr_sigs.csr_imm = cu_if.csr_imm;
+
+  assign cu_if.csr_sigs.csr_addr = cu_if.csr_sigs.vector_csr_instr ? VTYPE_ADDR : 
+                                                      cu_if.csr_addr;
+  // TODO: Edit immediate value
+  assign cu_if.csr_sigs.csr_imm_value = zimm;
+  assign cu_if.csr_sigs.instr_null = (cu_if.instr == '0);
+
+  /***** IFENCE CONTROL SIGNALS *****/
+  assign cu_if.ifence = (cu_if.opcode == MISCMEM) && (rv32i_miscmem_t'(instr_r.funct3) == FENCEI);
+
+  /***** ILLEGAL INSTRUCTION DETECTION *****/ 
+  always_comb begin
+    case(cu_if.opcode)
+      REGREG: cu_if.illegal_insn = instr_r.funct7[0] && (instr_r.funct7 != 7'b000_0001);
+      LUI, AUIPC, JAL, JALR,
+      BRANCH, LOAD, STORE,
+      IMMED, SYSTEM,
+      MISCMEM, VECTOR, opcode_t'('0)           : cu_if.illegal_insn = 1'b0;
+      default                 : cu_if.illegal_insn = 1'b1;
+    endcase
+  end
+
+  /***** HALT SIGNALS *****/
+  // HALT HACK. Just looking for j + 0x0 (infinite loop)
+  // Halt required for unit testing, but not useful in tapeout context
+  // Due to presence of interrupts, infinite loops are valid
+  generate
+    if(INFINITE_LOOP_HALTS == "true") begin
+      assign cu_if.halt = (cu_if.instr == 32'h0000006f);
+    end else begin
+      assign cu_if.halt = '0;
+    end
+  endgenerate
+
+
+  assign cu_if.arith_sigs.ready_a =  (cu_if.sfu_type == ARITH_S) && ~cu_if.pc_en;
+  assign cu_if.mult_sigs.ready_mu = cu_if.wen &  (cu_if.sfu_type == MUL_S);
+  assign cu_if.div_sigs.ready_du = cu_if.wen &  (cu_if.sfu_type == DIV_S);
+  assign cu_if.lsu_sigs.ready_ls = (cu_if.sfu_type == LOADSTORE_S);
+
+  assign cu_if.arith_sigs.ena = (cu_if.sfu_type == ARITH_S) ;
+  assign cu_if.mult_sigs.ena = (cu_if.sfu_type == MUL_S);
+  assign cu_if.div_sigs.ena  = (cu_if.sfu_type == DIV_S);
+  assign cu_if.lsu_sigs.ena  = (cu_if.sfu_type == LOADSTORE_S);
 
-  //assign cu_if.csr_addr = csr_addr_t'(instr_i.imm11_00);
-  assign cu_if.zimm     = cu_if.instr[19:15];
 
 endmodule
 
diff --git a/source_code/standard_core/loadstore_unit.sv b/source_code/standard_core/loadstore_unit.sv
new file mode 100644
index 0000000..182198a
--- /dev/null
+++ b/source_code/standard_core/loadstore_unit.sv
@@ -0,0 +1,218 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     loadstore_unit.sv
+*
+*   Created by:   Owen Prince
+*   Email:        oprince@purdue.edu
+*   Date Created: 2/21/2016
+*   Description:  Load store functional unit
+*/
+
+`include "loadstore_unit_if.vh"
+`include "component_selection_defines.vh"
+`include "generic_bus_if.vh"
+
+
+
+
+module loadstore_unit (
+  input logic CLK, nRST, halt,
+  generic_bus_if.cpu dgen_bus_if,
+  ooo_hazard_unit_if.execute hazard_if,
+  loadstore_unit_if.execute lsif
+);
+
+  import rv32i_types_pkg::*;
+
+  // input
+
+  logic [31:0] store_data_ff1, store_data_ff0;
+  logic [31:0] pc_ff1, pc_ff0;
+  logic  dren_ff1, dren_ff0;
+  logic  dwen_ff1, dwen_ff0;
+  logic  wen_ff1, wen_ff0;
+  logic [4:0] reg_rd_ff1, reg_rd_ff0;
+  logic [31:0] address_ff1, address_ff0;
+  logic [3:0] byte_en_ff1, byte_en_ff0;
+  load_t load_type_ff1, load_type_ff0;
+  opcode_t opcode_ff0, opcode_ff1;
+  logic mal_addr_ff0, mal_addr_ff1;
+  logic [$clog2(NUM_CB_ENTRY)-1:0] index_ff0, index_ff1;
+  word_t dload_ext;
+  logic [3:0] byte_en_standard;
+  logic stall_mem;
+  logic ena_ff1;
+  logic [3:0] byte_en, byte_en_temp;
+
+  assign stall_mem = dgen_bus_if.busy & (dren_ff1 | dwen_ff1) ;
+
+  //assign stall = '0;
+
+  assign store_data_ff0 = lsif.store_data;
+  assign dren_ff0       = lsif.dren;
+  assign dwen_ff0       = lsif.dwen;
+  assign wen_ff0        = lsif.wen;
+  assign reg_rd_ff0     = lsif.reg_rd;
+  assign load_type_ff0  = lsif.load_type;
+  assign pc_ff0         = lsif.pc;
+  assign opcode_ff0     = lsif.opcode;
+  assign index_ff0      = lsif.index;
+  assign hazard_if.dmem_access = dren_ff1 | dwen_ff1;
+  assign hazard_if.busy_ls = stall_mem | lsif.ena & ~ena_ff1 & (dren_ff0 | dwen_ff0);
+
+  agu AGU (
+    .port_a(lsif.port_a), 
+    .port_b(lsif.port_b),
+    .load_type(lsif.load_type),
+    .byte_en(byte_en),
+    .byte_en_standard(byte_en_ff0),
+    .address(address_ff0), 
+    .mal_addr(mal_addr_ff0)
+  );
+
+  // THIS IS THE MEM LATCH --> STALL_MEM STALLS THIS LATCH
+
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST ) begin
+      store_data_ff1 <= '0;
+      dren_ff1       <= '0;
+      dwen_ff1       <= '0;
+      wen_ff1        <= '0;
+      reg_rd_ff1     <= '0;
+      address_ff1    <= '0;
+      byte_en_ff1    <= '0;
+      mal_addr_ff1    <= '0;
+      load_type_ff1  <= load_t'('0);
+      pc_ff1         <= '0;
+      opcode_ff1     <= opcode_t'('0);
+      index_ff1     <= '0;
+    end else begin
+      //if (hazard_if.ex_mem_flush | (hazard_if.stall_ls & ~stall_mem) | halt ) begin
+      if (hazard_if.loadstore_flush | halt ) begin
+        store_data_ff1 <= '0;
+        dren_ff1       <= '0;
+        dwen_ff1       <= '0;
+        wen_ff1        <= '0;
+        reg_rd_ff1     <= '0;
+        address_ff1    <= '0;
+        byte_en_ff1    <= '0;
+        mal_addr_ff1    <= '0;
+        load_type_ff1  <= load_t'('0);
+        pc_ff1         <= '0;
+        opcode_ff1     <= opcode_t'('0);
+        index_ff1     <= '0;
+      end else if (hazard_if.dmem_access & ~hazard_if.d_mem_busy) begin //arbitate dren, dwen for iaccess
+        dren_ff1 <= '0;
+        dwen_ff1 <= '0;
+      end else if(~stall_mem) begin 
+        store_data_ff1 <= store_data_ff0;
+        dren_ff1       <= dren_ff0;
+        dwen_ff1       <= dwen_ff0;
+        wen_ff1        <= wen_ff0;
+        reg_rd_ff1     <= reg_rd_ff0;
+        address_ff1    <= address_ff0;
+        byte_en_ff1    <= byte_en_ff0;
+        mal_addr_ff1    <= mal_addr_ff0;
+        load_type_ff1  <= load_type_ff0;
+        pc_ff1         <= pc_ff0;
+        opcode_ff1     <= opcode_ff0;
+        index_ff1     <= index_ff0;
+      end
+    end
+  end
+
+  // OUTPUT:
+  logic stall_mem_ff1;
+
+  assign lsif.wdata_ls = dload_ext;
+  assign lsif.wen_ls   = wen_ff1;
+  assign lsif.reg_rd_ls   = reg_rd_ff1;
+  assign lsif.dren_ls  = dren_ff1;
+  assign lsif.dwen_ls  = dwen_ff1;
+  assign lsif.opcode_ls  = opcode_ff1;
+  assign lsif.mal_addr = mal_addr_ff1;
+  assign lsif.memory_addr = address_ff1;
+  assign lsif.done_ls = stall_mem_ff1 & ~stall_mem; 
+  assign lsif.index_ls = index_ff1;
+
+
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      stall_mem_ff1 <= 0;
+    end else if (hazard_if.loadstore_flush) begin
+      stall_mem_ff1 <= 0;
+    end else begin
+      stall_mem_ff1 <= stall_mem;
+    end
+  end 
+
+  always_ff @(posedge CLK, negedge nRST) begin
+    if (~nRST) begin
+      ena_ff1 <= 0;
+    end else begin
+      ena_ff1 <= lsif.ena;
+    end
+  end 
+
+  /*******************************************************
+  *** Choose the Endianness Coming into the processor
+  *******************************************************/
+  assign byte_en_temp = byte_en_ff1;
+  generate
+    if (BUS_ENDIANNESS == "big")
+    begin
+      assign byte_en = byte_en_temp;
+    end else if (BUS_ENDIANNESS == "little")
+    begin
+      assign byte_en = dren_ff1 ? byte_en_temp :
+                                  {byte_en_temp[0], byte_en_temp[1],
+                                    byte_en_temp[2], byte_en_temp[3]};
+    end
+  endgenerate 
+
+  dmem_extender dmem_ext (
+    .dmem_in(dgen_bus_if.rdata),
+    .load_type(load_type_ff1),
+    .byte_en(byte_en),
+    .ext_out(dload_ext)
+  );
+
+
+  /*******************************************************
+  *** mal_addr  and Associated Logic 
+  *******************************************************/
+  assign hazard_if.d_mem_busy = dgen_bus_if.busy ;
+  assign hazard_if.dren       = lsif.dren;
+  assign hazard_if.dwen       = lsif.dwen;
+
+  /*******************************************************
+  *** data bus  and Associated Logic 
+  *******************************************************/
+  assign dgen_bus_if.ren     = dren_ff1 & ~mal_addr_ff1;
+  assign dgen_bus_if.wen     = dwen_ff1 & ~mal_addr_ff1;
+  assign dgen_bus_if.byte_en = byte_en;
+  assign dgen_bus_if.addr    = address_ff1;
+  always_comb begin
+    dgen_bus_if.wdata = '0;
+    case(load_type_ff1) // load_type can be used for store_type as well
+      LB: dgen_bus_if.wdata = {4{store_data_ff1[7:0]}};
+      LH: dgen_bus_if.wdata = {2{store_data_ff1[15:0]}};
+      LW: dgen_bus_if.wdata = store_data_ff1; 
+    endcase
+  end
+
+endmodule
diff --git a/source_code/standard_core/rv32i_reg_file.sv b/source_code/standard_core/rv32i_reg_file.sv
index 4328005..2432b57 100644
--- a/source_code/standard_core/rv32i_reg_file.sv
+++ b/source_code/standard_core/rv32i_reg_file.sv
@@ -34,16 +34,30 @@ module rv32i_reg_file (
   parameter NUM_REGS = 32;
 
   word_t [NUM_REGS-1:0] registers;
+  logic [31:0] in_use;
 
   always_ff @ (posedge CLK, negedge nRST) begin
     if (~nRST) begin
       registers <= '0;
-    end else if (rf_if.wen && rf_if.rd) begin
-      registers[rf_if.rd] <= rf_if.w_data;
+      in_use <= '0;
+    end else begin
+      if (rf_if.wen && rf_if.rd) begin
+        registers[rf_if.rd] <= rf_if.w_data;
+        in_use[rf_if.rd] <= 1'b0;
+      end
+      if (rf_if.clear_status) begin
+        in_use <= '0;
+      end else if (rf_if.rden && rf_if.rd_decode) begin
+        in_use[rf_if.rd_decode] <= 1'b1;
+      end
     end
   end 
 
   assign rf_if.rs1_data = registers[rf_if.rs1];
   assign rf_if.rs2_data = registers[rf_if.rs2];
 
+  assign rf_if.rs1_busy = in_use[rf_if.rs1];
+  assign rf_if.rs2_busy = in_use[rf_if.rs2];
+  assign rf_if.rd_busy  = in_use[rf_if.rd_decode];
+
 endmodule
diff --git a/source_code/stats.txt b/source_code/stats.txt
deleted file mode 100644
index b9d4d12..0000000
--- a/source_code/stats.txt
+++ /dev/null
@@ -1,550 +0,0 @@
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted:  0
-Conditional branches predicted incorrectly:  0
-Conditional branches predicted correctly:  0
-Branch prediction accuracy:  -nan
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken:  0
-Branches predicted as not taken, incorrect:  0
-Branches predicted as not taken, correct:  0
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
-Conditional branches predicted: 272
-Conditional branches predicted incorrectly: 64
-Conditional branches predicted correctly: 208
-Branch prediction accuracy: 0.764706
-Branches predicted as taken:  0
-Branches predicted as taken, incorrect:  0
-Branches predicted as taken, correct:  0
-Branches predicted as not taken: 272
-Branches predicted as not taken, incorrect: 64
-Branches predicted as not taken, correct: 208
diff --git a/source_code/tb/tb_RISCVBusiness.sv b/source_code/tb/tb_RISCVBusiness.sv
index 42f0705..cdd41c1 100644
--- a/source_code/tb/tb_RISCVBusiness.sv
+++ b/source_code/tb/tb_RISCVBusiness.sv
@@ -79,23 +79,23 @@ module tb_RISCVBusiness ();
     assign data = data_temp;
   else ;//TODO:ERROR
 
-  bind tspp_execute_stage cpu_tracker cpu_track1 (
+  bind ooo_commit_stage cpu_tracker cpu_track1 (
     .CLK(CLK),
-    .wb_stall(wb_stall),
-    .instr(fetch_ex_if.fetch_ex_reg.instr),
-    .pc(fetch_ex_if.fetch_ex_reg.pc),
-    .opcode(cu_if.opcode),
-    .funct3(funct3),
-    .funct12(funct12),
-    .rs1(rf_if.rs1),
-    .rs2(rf_if.rs2),
-    .rd(rf_if.rd),
-    .imm_S(cu_if.imm_S),
-    .imm_I(cu_if.imm_I),
-    .imm_U(cu_if.imm_U),
-    .imm_UJ(imm_UJ_ext),
-    .imm_SB(cu_if.imm_SB),
-    .instr_30(instr_30)
+    .wb_stall (cb_if.CPU_TRACKER.instr == 0),
+    .instr    (cb_if.CPU_TRACKER.instr),
+    .pc       (cb_if.CPU_TRACKER.pc),
+    .opcode   (cb_if.CPU_TRACKER.opcode),
+    .funct3   (cb_if.CPU_TRACKER.funct3),
+    .funct12  (cb_if.CPU_TRACKER.funct12),
+    .rs1      (cb_if.CPU_TRACKER.reg_rs1),
+    .rs2      (cb_if.CPU_TRACKER.reg_rs2),
+    .rd       (cb_if.CPU_TRACKER.reg_rd),
+    .imm_S    (cb_if.CPU_TRACKER.imm_S),
+    .imm_I    (cb_if.CPU_TRACKER.imm_I),
+    .imm_U    (cb_if.CPU_TRACKER.imm_U),
+    .imm_UJ   (cb_if.CPU_TRACKER.imm_UJ_ext),
+    .imm_SB   (cb_if.CPU_TRACKER.imm_SB),
+    .instr_30 (cb_if.CPU_TRACKER.instr_30)
     );
 
   bind branch_predictor_wrapper branch_tracker branch_perf(
diff --git a/source_code/tb/tb_RISCVBusiness_self_test.sv b/source_code/tb/tb_RISCVBusiness_self_test.sv
index 769bd19..ff601e8 100644
--- a/source_code/tb/tb_RISCVBusiness_self_test.sv
+++ b/source_code/tb/tb_RISCVBusiness_self_test.sv
@@ -31,7 +31,7 @@
 
 `define OUTPUT_FILE_NAME "cpu.hex"
 `define STATS_FILE_NAME "stats.txt"
-`define RVBSELF_CLK_TIMEOUT 50000
+`define RVBSELF_CLK_TIMEOUT 2000000
 
 module tb_RISCVBusiness_self_test ();
    
@@ -83,23 +83,23 @@ module tb_RISCVBusiness_self_test ();
     assign data = data_temp;
   else ;//TODO:ERROR
 
-  bind pipe5_writeback_stage cpu_tracker cpu_track1 (
+  bind ooo_commit_stage cpu_tracker cpu_track1 (
     .CLK(CLK),
-    .wb_stall(wb_stall),
-    .instr(mem_wb_if.instr),
-    .pc(mem_wb_if.pc),
-    .opcode(mem_wb_if.opcode),
-    .funct3(mem_wb_if.funct3),
-    .funct12(mem_wb_if.funct12),
-    .rs1(mem_wb_if.rs1),
-    .rs2(mem_wb_if.rs2),
-    .rd(mem_wb_if.reg_rd),
-    .imm_S(mem_wb_if.imm_S),
-    .imm_I(mem_wb_if.imm_I),
-    .imm_U(mem_wb_if.imm_U),
-    .imm_UJ(mem_wb_if.imm_UJ_ext),
-    .imm_SB(mem_wb_if.imm_SB),
-    .instr_30(mem_wb_if.instr_30)
+    .wb_stall (cb_if.CPU_TRACKER.instr == 0),
+    .instr    (cb_if.CPU_TRACKER.instr),
+    .pc       (cb_if.CPU_TRACKER.pc),
+    .opcode   (cb_if.CPU_TRACKER.opcode),
+    .funct3   (cb_if.CPU_TRACKER.funct3),
+    .funct12  (cb_if.CPU_TRACKER.funct12),
+    .rs1      (cb_if.CPU_TRACKER.reg_rs1),
+    .rs2      (cb_if.CPU_TRACKER.reg_rs2),
+    .rd       (cb_if.CPU_TRACKER.reg_rd),
+    .imm_S    (cb_if.CPU_TRACKER.imm_S),
+    .imm_I    (cb_if.CPU_TRACKER.imm_I),
+    .imm_U    (cb_if.CPU_TRACKER.imm_U),
+    .imm_UJ   (cb_if.CPU_TRACKER.imm_UJ_ext),
+    .imm_SB   (cb_if.CPU_TRACKER.imm_SB),
+    .instr_30 (cb_if.CPU_TRACKER.instr_30)
     );
 
   bind branch_predictor_wrapper branch_tracker branch_perf(
@@ -169,7 +169,7 @@ module tb_RISCVBusiness_self_test ();
 
     #(1);
 
-   // dump_stats();
+    dump_stats();
     dump_ram();
 
     // Check Register 28 to see if test passed or failed
diff --git a/source_code/trace.log b/source_code/trace.log
deleted file mode 100644
index e69de29..0000000
diff --git a/source_code/wscript b/source_code/wscript
index 2f42074..96a93dc 100644
--- a/source_code/wscript
+++ b/source_code/wscript
@@ -1,8 +1,16 @@
 def configure(ctx):
-    rvb_srcs = ['caches', 'branch_predictors', 'bus_bridges', 'trackers', 'risc_mgmt', 'privs', 'pipelines', 'standard_core', 'ram', 'sparce', 'rv32c', 'rv32f', 'RV32E']
+    rvb_srcs = ['caches', 'branch_predictors', 'bus_bridges', 'trackers', 'risc_mgmt', 'privs', 'ooo', 'standard_core', 'ram', 'sparce', 'rv32c', 'RV32E', 'rv32m']
     ctx.SFFUnits.add('RISCVBusiness_packages',
       src_dir = ['packages']
     )
+    ctx.SFFUnits.add('RISCVBusiness',
+      includes = ['include'],
+      src_dir = rvb_srcs,
+      use = ['RISCVBusiness_packages'],
+      tb_use = ['RISCVBusiness_packages'],
+      tb = 'tb_RISCVBusiness',
+      tb_includes = ['include']
+    )
     ctx.SFFUnits.add('RISCVBusiness_self_test',
       includes = ['include'],
       src_dir = rvb_srcs,
diff --git a/verification/asm-env/link.ld b/verification/asm-env/link.ld
index 4fd20ea..d0684bb 100755
--- a/verification/asm-env/link.ld
+++ b/verification/asm-env/link.ld
@@ -8,7 +8,7 @@ SECTIONS
   .text : { *(.text) }
   .data ALIGN(0x1000) : { *(.data) }
   .bss : { *(.bss) }
-  . = 0x0000000080007000;
+  . = 0x0000000000007000;
   .statuses : { *(.statuses) }
   _end = .;
 }
diff --git a/verification/asm-env/selfasm/riscv_test.h b/verification/asm-env/selfasm/riscv_test.h
index 82e829b..8e26e16 100644
--- a/verification/asm-env/selfasm/riscv_test.h
+++ b/verification/asm-env/selfasm/riscv_test.h
@@ -1,239 +1,72 @@
-// See LICENSE for license details.
-
-#ifndef _ENV_PHYSICAL_SINGLE_CORE_H
-#define _ENV_PHYSICAL_SINGLE_CORE_H
+/*
+* Copyright (c) 2012-2015, The Regents of the University of California (Regents).
+* All Rights Reserved.
+* 
+* Redistribution and use in source and binary forms, with or without
+* modification, are permitted provided that the following conditions are met:
+* 1. Redistributions of source code must retain the above copyright
+*    notice, this list of conditions and the following disclaimer.
+* 2. Redistributions in binary form must reproduce the above copyright
+*    notice, this list of conditions and the following disclaimer in the
+*    documentation and/or other materials provided with the distribution.
+* 3. Neither the name of the Regents nor the
+*    names of its contributors may be used to endorse or promote products
+*    derived from this software without specific prior written permission.
+* 
+* IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
+* SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING
+* OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF REGENTS HAS
+* BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+* 
+* REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+* THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+* PURPOSE. THE SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED
+* HEREUNDER IS PROVIDED "AS IS". REGENTS HAS NO OBLIGATION TO PROVIDE
+* MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
+*/
+
+#ifndef _ENV_SIMPLE_PHYSICAL_SINGLE_CORE_H
+#define _ENV_SIMPLE_PHYSICAL_SINGLE_CORE_H
 
 #include "../encoding.h"
 
-#define __RISCVEL
-//-----------------------------------------------------------------------
-// Begin Macro
-//-----------------------------------------------------------------------
-
-#define RVTEST_RV64U                                                    \
-  .macro init;                                                          \
-  .endm
-
-#define RVTEST_RV64UF                                                   \
-  .macro init;                                                          \
-  RVTEST_FP_ENABLE;                                                     \
-  .endm
-
-#define RVTEST_RV64UV                                                   \
-  .macro init;                                                          \
-  RVTEST_VECTOR_ENABLE;                                                 \
-  .endm
+#define __RISCVEL 1
 
 #define RVTEST_RV32U                                                    \
   .macro init;                                                          \
   .endm
 
-#define RVTEST_RV32UF                                                   \
-  .macro init;                                                          \
-  RVTEST_FP_ENABLE;                                                     \
-  .endm
-
-#define RVTEST_RV32UV                                                   \
-  .macro init;                                                          \
-  RVTEST_VECTOR_ENABLE;                                                 \
-  .endm
-
-#define RVTEST_RV64M                                                    \
-  .macro init;                                                          \
-  RVTEST_ENABLE_MACHINE;                                                \
-  .endm
-
-#define RVTEST_RV64S                                                    \
-  .macro init;                                                          \
-  RVTEST_ENABLE_SUPERVISOR;                                             \
-  .endm
-
-#define RVTEST_RV32M                                                    \
-  .macro init;                                                          \
-  RVTEST_ENABLE_MACHINE;                                                \
-  .endm
-
-#define RVTEST_RV32S                                                    \
-  .macro init;                                                          \
-  RVTEST_ENABLE_SUPERVISOR;                                             \
-  .endm
-
-#if __riscv_xlen == 64
-# define CHECK_XLEN li a0, 1; slli a0, a0, 31; bgez a0, 1f; RVTEST_PASS; 1:
-#else
-# define CHECK_XLEN li a0, 1; slli a0, a0, 31; bltz a0, 1f; RVTEST_PASS; 1:
-#endif
-
-#define INIT_XREG                                                       \
-  li x1, 0;                                                             \
-  li x2, 0;                                                             \
-  li x3, 0;                                                             \
-  li x4, 0;                                                             \
-  li x5, 0;                                                             \
-  li x6, 0;                                                             \
-  li x7, 0;                                                             \
-  li x8, 0;                                                             \
-  li x9, 0;                                                             \
-  li x10, 0;                                                            \
-  li x11, 0;                                                            \
-  li x12, 0;                                                            \
-  li x13, 0;                                                            \
-  li x14, 0;                                                            \
-  li x15, 0;                                                            \
-  li x16, 0;                                                            \
-  li x17, 0;                                                            \
-  li x18, 0;                                                            \
-  li x19, 0;                                                            \
-  li x20, 0;                                                            \
-  li x21, 0;                                                            \
-  li x22, 0;                                                            \
-  li x23, 0;                                                            \
-  li x24, 0;                                                            \
-  li x25, 0;                                                            \
-  li x26, 0;                                                            \
-  li x27, 0;                                                            \
-  li x28, 0;                                                            \
-  li x29, 0;                                                            \
-  li x30, 0;                                                            \
-  li x31, 0;
-
-#define INIT_PMP                                                        \
-  la t0, 1f;                                                            \
-  csrw mtvec, t0;                                                       \
-  /* Set up a PMP to permit all accesses */                             \
-  li t0, (1 << (31 + (__riscv_xlen / 64) * (53 - 31))) - 1;             \
-  csrw pmpaddr0, t0;                                                    \
-  li t0, PMP_NAPOT | PMP_R | PMP_W | PMP_X;                             \
-  csrw pmpcfg0, t0;                                                     \
-  .align 2;                                                             \
-1:
-
-#define INIT_SATP                                                      \
-  la t0, 1f;                                                            \
-  csrw mtvec, t0;                                                       \
-  csrwi satp, 0;                                                       \
-  .align 2;                                                             \
-1:
-
-#define DELEGATE_NO_TRAPS                                               \
-  csrwi mie, 0;                                                         \
-  la t0, 1f;                                                            \
-  csrw mtvec, t0;                                                       \
-  csrwi medeleg, 0;                                                     \
-  csrwi mideleg, 0;                                                     \
-  .align 2;                                                             \
-1:
-
-#define RVTEST_ENABLE_SUPERVISOR                                        \
-  li a0, MSTATUS_MPP & (MSTATUS_MPP >> 1);                              \
-  csrs mstatus, a0;                                                     \
-  li a0, SIP_SSIP | SIP_STIP;                                           \
-  csrs mideleg, a0;                                                     \
-
-#define RVTEST_ENABLE_MACHINE                                           \
-  li a0, MSTATUS_MPP;                                                   \
-  csrs mstatus, a0;                                                     \
-
-#define RVTEST_FP_ENABLE                                                \
-  li a0, MSTATUS_FS & (MSTATUS_FS >> 1);                                \
-  csrs mstatus, a0;                                                     \
-  csrwi fcsr, 0
-
-#define RVTEST_VECTOR_ENABLE                                            \
-  li a0, (MSTATUS_VS & (MSTATUS_VS >> 1)) |                             \
-         (MSTATUS_FS & (MSTATUS_FS >> 1));                              \
-  csrs mstatus, a0;                                                     \
-  csrwi fcsr, 0;                                                        \
-  csrwi vcsr, 0;
+//-----------------------------------------------------------------------
+// Text Section Macro
+//-----------------------------------------------------------------------
 
-#define RISCV_MULTICORE_DISABLE                                         \
-  csrr a0, mhartid;                                                     \
-  1: bnez a0, 1b
+#define RVTEST_INTVEC_USER_BEGIN \
+  .text;                    \
+  .align 6;                 
+ 
+#define RVTEST_INTVEC_SUPER_BEGIN \
+  .align 6;            
 
-#define EXTRA_TVEC_USER
-#define EXTRA_TVEC_MACHINE
-#define EXTRA_INIT
-#define EXTRA_INIT_TIMER
+#define RVTEST_INTVEC_HYPER_BEGIN \
+  .align 6;           
 
-#define INTERRUPT_HANDLER j other_exception /* No interrupts should occur */
+#define RVTEST_INTVEC_MACH_BEGIN \
+  .align 6;           
 
-#define RVTEST_CODE_BEGIN                                               \
-        .section .text.init;                                            \
-        .align  6;                                                      \
-        .weak stvec_handler;                                            \
-        .weak mtvec_handler;                                            \
-        .globl _start;                                                  \
-_start:                                                                 \
-        /* reset vector */                                              \
-        j reset_vector;                                                 \
-        .align 2;                                                       \
-trap_vector:                                                            \
-        /* test whether the test came from pass/fail */                 \
-        csrr t5, mcause;                                                \
-        li t6, CAUSE_USER_ECALL;                                        \
-        beq t5, t6, write_tohost;                                       \
-        li t6, CAUSE_SUPERVISOR_ECALL;                                  \
-        beq t5, t6, write_tohost;                                       \
-        li t6, CAUSE_MACHINE_ECALL;                                     \
-        beq t5, t6, write_tohost;                                       \
-        /* if an mtvec_handler is defined, jump to it */                \
-        la t5, mtvec_handler;                                           \
-        beqz t5, 1f;                                                    \
-        jr t5;                                                          \
-        /* was it an interrupt or an exception? */                      \
-  1:    csrr t5, mcause;                                                \
-        bgez t5, handle_exception;                                      \
-        INTERRUPT_HANDLER;                                              \
-handle_exception:                                                       \
-        /* we don't know how to handle whatever the exception was */    \
-  other_exception:                                                      \
-        /* some unhandlable exception occurred */                       \
-  1:    ori TESTNUM, TESTNUM, 1337;                                     \
-  write_tohost:                                                         \
-        sw TESTNUM, tohost, t5;                                         \
-        j write_tohost;                                                 \
-reset_vector:                                                           \
-        INIT_XREG;                                                      \
-        RISCV_MULTICORE_DISABLE;                                        \
-        INIT_SATP;                                                      \
-        INIT_PMP;                                                       \
-        DELEGATE_NO_TRAPS;                                              \
-        li TESTNUM, 0;                                                  \
-        la t0, trap_vector;                                             \
-        csrw mtvec, t0;                                                 \
-        CHECK_XLEN;                                                     \
-        /* if an stvec_handler is defined, delegate exceptions to it */ \
-        la t0, stvec_handler;                                           \
-        beqz t0, 1f;                                                    \
-        csrw stvec, t0;                                                 \
-        li t0, (1 << CAUSE_LOAD_PAGE_FAULT) |                           \
-               (1 << CAUSE_STORE_PAGE_FAULT) |                          \
-               (1 << CAUSE_FETCH_PAGE_FAULT) |                          \
-               (1 << CAUSE_MISALIGNED_FETCH) |                          \
-               (1 << CAUSE_USER_ECALL) |                                \
-               (1 << CAUSE_BREAKPOINT);                                 \
-        csrw medeleg, t0;                                               \
-1:      csrwi mstatus, 0;                                               \
-        init;                                                           \
-        EXTRA_INIT;                                                     \
-        EXTRA_INIT_TIMER;                                               \
-        la t0, 1f;                                                      \
-        csrw mepc, t0;                                                  \
-        csrr a0, mhartid;                                               \
-        mret;                                                           \
-1:
+#define RVTEST_CODE_BEGIN   \
+  .align  6; \
+  .globl _start;          \
+_start:
+  
 
-//-----------------------------------------------------------------------
-// End Macro
-//-----------------------------------------------------------------------
+#define RVTEST_CODE_END \
+  li x1, 1; \
+  li x2, 1; \
+  sw x2, tohost, x1; \
+  done:  \
+  j done
 
-#define RVTEST_CODE_END                                                 \
-    li x1, 1; \
-    li x2, 1; \
-    sw x2, tohost, x1; \
-    done: \
-    j done
-    //unimp
+#endif // merged in
 
 //-----------------------------------------------------------------------
 // Pass/Fail Macro
@@ -242,10 +75,7 @@ reset_vector:                                                           \
 #define RVTEST_PASS                                                     \
         fence;                                                          \
         li TESTNUM, 1;                                                  \
-        j done;                                                         \
-        //li a7, 93;                                                      \
-        //li a0, 0;                                                       \
-        //ecall
+        j done
 
 #define TESTNUM x28
 #define RVTEST_FAIL                                                     \
@@ -253,10 +83,17 @@ reset_vector:                                                           \
 1:      beqz TESTNUM, 1b;                                               \
         sll TESTNUM, TESTNUM, 1;                                        \
         or TESTNUM, TESTNUM, 1;                                         \
-        j done                                                          \
-        //li a7, 93;                                                      \
-        //addi a0, TESTNUM, 0;                                            \
-        //ecall
+        j done
+
+
+//-----------------------------------------------------------------------
+// End Macro
+//-----------------------------------------------------------------------
+
+//#define RVTEST_CODE_END                                                 \
+//ecall:  ecall;                                                          \
+//        j ecall
+
 
 //-----------------------------------------------------------------------
 // Data Section Macro
@@ -264,14 +101,10 @@ reset_vector:                                                           \
 
 #define EXTRA_DATA
 
-#define RVTEST_DATA_BEGIN                                               \
-        EXTRA_DATA                                                      \
-        .pushsection .tohost,"aw",@progbits;                            \
-        .align 6; .global tohost; tohost: .dword 0;                     \
-        .align 6; .global fromhost; fromhost: .dword 0;                 \
-        .popsection;                                                    \
-        .align 4; .global begin_signature; begin_signature:
-
-#define RVTEST_DATA_END .align 4; .global end_signature; end_signature:
+#define RVTEST_DATA_BEGIN EXTRA_DATA .align 4; .global begin_signature; begin_signature:
+#define RVTEST_DATA_END .align 4; .global end_signature; end_signature: \
+ .align 6; .global tohost; tohost: .dword 0; \
+ .align 6; .global fromhost; fromhost: .dword 0; \
+ .align 6; .global mtime; mtime: .dword 0; \
+ .align 6; .global mtimecmp; mtimecmp: .dword 0; \
 
-#endif
diff --git a/verification/asm-env/selfasm/riscv_test.h.bak b/verification/asm-env/selfasm/riscv_test.h.bak
deleted file mode 100644
index 8e26e16..0000000
--- a/verification/asm-env/selfasm/riscv_test.h.bak
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
-* Copyright (c) 2012-2015, The Regents of the University of California (Regents).
-* All Rights Reserved.
-* 
-* Redistribution and use in source and binary forms, with or without
-* modification, are permitted provided that the following conditions are met:
-* 1. Redistributions of source code must retain the above copyright
-*    notice, this list of conditions and the following disclaimer.
-* 2. Redistributions in binary form must reproduce the above copyright
-*    notice, this list of conditions and the following disclaimer in the
-*    documentation and/or other materials provided with the distribution.
-* 3. Neither the name of the Regents nor the
-*    names of its contributors may be used to endorse or promote products
-*    derived from this software without specific prior written permission.
-* 
-* IN NO EVENT SHALL REGENTS BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
-* SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING
-* OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF REGENTS HAS
-* BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-* 
-* REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
-* THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
-* PURPOSE. THE SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED
-* HEREUNDER IS PROVIDED "AS IS". REGENTS HAS NO OBLIGATION TO PROVIDE
-* MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
-*/
-
-#ifndef _ENV_SIMPLE_PHYSICAL_SINGLE_CORE_H
-#define _ENV_SIMPLE_PHYSICAL_SINGLE_CORE_H
-
-#include "../encoding.h"
-
-#define __RISCVEL 1
-
-#define RVTEST_RV32U                                                    \
-  .macro init;                                                          \
-  .endm
-
-//-----------------------------------------------------------------------
-// Text Section Macro
-//-----------------------------------------------------------------------
-
-#define RVTEST_INTVEC_USER_BEGIN \
-  .text;                    \
-  .align 6;                 
- 
-#define RVTEST_INTVEC_SUPER_BEGIN \
-  .align 6;            
-
-#define RVTEST_INTVEC_HYPER_BEGIN \
-  .align 6;           
-
-#define RVTEST_INTVEC_MACH_BEGIN \
-  .align 6;           
-
-#define RVTEST_CODE_BEGIN   \
-  .align  6; \
-  .globl _start;          \
-_start:
-  
-
-#define RVTEST_CODE_END \
-  li x1, 1; \
-  li x2, 1; \
-  sw x2, tohost, x1; \
-  done:  \
-  j done
-
-#endif // merged in
-
-//-----------------------------------------------------------------------
-// Pass/Fail Macro
-//-----------------------------------------------------------------------
-
-#define RVTEST_PASS                                                     \
-        fence;                                                          \
-        li TESTNUM, 1;                                                  \
-        j done
-
-#define TESTNUM x28
-#define RVTEST_FAIL                                                     \
-        fence;                                                          \
-1:      beqz TESTNUM, 1b;                                               \
-        sll TESTNUM, TESTNUM, 1;                                        \
-        or TESTNUM, TESTNUM, 1;                                         \
-        j done
-
-
-//-----------------------------------------------------------------------
-// End Macro
-//-----------------------------------------------------------------------
-
-//#define RVTEST_CODE_END                                                 \
-//ecall:  ecall;                                                          \
-//        j ecall
-
-
-//-----------------------------------------------------------------------
-// Data Section Macro
-//-----------------------------------------------------------------------
-
-#define EXTRA_DATA
-
-#define RVTEST_DATA_BEGIN EXTRA_DATA .align 4; .global begin_signature; begin_signature:
-#define RVTEST_DATA_END .align 4; .global end_signature; end_signature: \
- .align 6; .global tohost; tohost: .dword 0; \
- .align 6; .global fromhost; fromhost: .dword 0; \
- .align 6; .global mtime; mtime: .dword 0; \
- .align 6; .global mtimecmp; mtimecmp: .dword 0; \
-
diff --git a/verification/asm-env/selfasm/test_macros.h b/verification/asm-env/selfasm/test_macros.h
index a8a78a7..c225e17 100644
--- a/verification/asm-env/selfasm/test_macros.h
+++ b/verification/asm-env/selfasm/test_macros.h
@@ -7,15 +7,36 @@
 #-----------------------------------------------------------------------
 # Helper macros
 #-----------------------------------------------------------------------
-
-#define MASK_XLEN(x) ((x) & ((1 << (__riscv_xlen - 1) << 1) - 1))
+#define SPARCE_ADDR 0x90000000
+#define SPARCE_CONFIG_ADDR (SPARCE_ADDR + 4)
 
 #define TEST_CASE( testnum, testreg, correctval, code... ) \
 test_ ## testnum: \
     code; \
-    li  x7, MASK_XLEN(correctval); \
+    li  x29, correctval; \
     li  TESTNUM, testnum; \
-    bne testreg, x7, fail;
+    bne testreg, x29, fail;
+
+#define SASA_COND_OR 0
+#define SASA_COND_AND 1
+
+#define CALC_SASA_VAL(reg1, reg2, condition, insts_to_skip) \
+(((reg1) << 11) + ((reg2) << 6) + ((condition << 5)) + ((insts_to_skip)));
+
+#define STORE_SASA_FROM_MEM(mem_label, reg_offset, tempreg1, tempreg2) \
+slli tempreg1, reg_offset, 3; \
+la   tempreg2, mem_label; \
+add  tempreg2, tempreg2, tempreg1; \
+lw   tempreg1, 0(tempreg2); \
+slli tempreg1, tempreg1, 14; \
+lw   tempreg2, 4(tempreg2); \
+or   tempreg1, tempreg1, tempreg2; \
+li   tempreg2, SPARCE_ADDR; \
+sw   tempreg1, 0(tempreg2);
+
+#define CREATE_SASA_MEMORY_ENTRIES(skip_label, reg1, reg2, condition, insts_to_skip) \
+.word skip_label; \
+.word CALC_SASA_VAL(reg1, reg2, condition, insts_to_skip); \
 
 # We use a macro hack to simpify code generation for various numbers
 # of bubble cycles.
@@ -44,35 +65,35 @@ test_ ## testnum: \
 #define SEXT_IMM(x) ((x) | (-(((x) >> 11) & 1) << 11))
 
 #define TEST_IMM_OP( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x14, result, \
-      li  x1, MASK_XLEN(val1); \
-      inst x14, x1, SEXT_IMM(imm); \
+    TEST_CASE( testnum, x3, result, \
+      li  x1, val1; \
+      inst x3, x1, SEXT_IMM(imm); \
     )
 
 #define TEST_IMM_SRC1_EQ_DEST( testnum, inst, result, val1, imm ) \
     TEST_CASE( testnum, x1, result, \
-      li  x1, MASK_XLEN(val1); \
+      li  x1, val1; \
       inst x1, x1, SEXT_IMM(imm); \
     )
 
 #define TEST_IMM_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
     TEST_CASE( testnum, x6, result, \
       li  x4, 0; \
-1:    li  x1, MASK_XLEN(val1); \
-      inst x14, x1, SEXT_IMM(imm); \
+1:    li  x1, val1; \
+      inst x3, x1, SEXT_IMM(imm); \
       TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x14, 0; \
+      addi  x6, x3, 0; \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
     )
 
 #define TEST_IMM_SRC1_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       li  x4, 0; \
-1:    li  x1, MASK_XLEN(val1); \
+1:    li  x1, val1; \
       TEST_INSERT_NOPS_ ## nop_cycles \
-      inst x14, x1, SEXT_IMM(imm); \
+      inst x3, x1, SEXT_IMM(imm); \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
@@ -85,18 +106,46 @@ test_ ## testnum: \
 
 #define TEST_IMM_ZERODEST( testnum, inst, val1, imm ) \
     TEST_CASE( testnum, x0, 0, \
-      li  x1, MASK_XLEN(val1); \
+      li  x1, val1; \
       inst x0, x1, SEXT_IMM(imm); \
     )
 
 #-----------------------------------------------------------------------
+# Tests for vector config instructions
+#-----------------------------------------------------------------------
+
+#define TEST_VSETCFGIVL( testnum, nxpr, nfpr, bank, vl, result ) \
+    TEST_CASE( testnum, x1, result, \
+      li x1, (bank << 12); \
+      vsetcfg x1,nxpr,nfpr; \
+      li x1, vl; \
+      vsetvl x1,x1; \
+    )
+
+#define TEST_VVCFG( testnum, nxpr, nfpr, bank, vl, result ) \
+    TEST_CASE( testnum, x1, result, \
+      li x1, (bank << 12) | (nfpr << 6) | nxpr; \
+      vsetcfg x1; \
+      li x1, vl; \
+      vsetvl x1,x1; \
+    )
+
+#define TEST_VSETVL( testnum, nxpr, nfpr, bank, vl, result ) \
+    TEST_CASE( testnum, x1, result, \
+      li x1, (bank << 12); \
+      vsetcfg x1,nxpr,nfpr; \
+      li x1, vl; \
+      vsetvl x1, x1; \
+    )
+
+#-----------------------------------------------------------------------
 # Tests for an instruction with register operands
 #-----------------------------------------------------------------------
 
 #define TEST_R_OP( testnum, inst, result, val1 ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       li  x1, val1; \
-      inst x14, x1; \
+      inst x3, x1; \
     )
 
 #define TEST_R_SRC1_EQ_DEST( testnum, inst, result, val1 ) \
@@ -109,9 +158,9 @@ test_ ## testnum: \
     TEST_CASE( testnum, x6, result, \
       li  x4, 0; \
 1:    li  x1, val1; \
-      inst x14, x1; \
+      inst x3, x1; \
       TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x14, 0; \
+      addi  x6, x3, 0; \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
@@ -122,66 +171,66 @@ test_ ## testnum: \
 #-----------------------------------------------------------------------
 
 #define TEST_RR_OP( testnum, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x14, result, \
-      li  x1, MASK_XLEN(val1); \
-      li  x2, MASK_XLEN(val2); \
-      inst x14, x1, x2; \
+    TEST_CASE( testnum, x3, result, \
+      li  x1, val1; \
+      li  x2, val2; \
+      inst x3, x1, x2; \
     )
 
 #define TEST_RR_SRC1_EQ_DEST( testnum, inst, result, val1, val2 ) \
     TEST_CASE( testnum, x1, result, \
-      li  x1, MASK_XLEN(val1); \
-      li  x2, MASK_XLEN(val2); \
+      li  x1, val1; \
+      li  x2, val2; \
       inst x1, x1, x2; \
     )
 
 #define TEST_RR_SRC2_EQ_DEST( testnum, inst, result, val1, val2 ) \
     TEST_CASE( testnum, x2, result, \
-      li  x1, MASK_XLEN(val1); \
-      li  x2, MASK_XLEN(val2); \
+      li  x1, val1; \
+      li  x2, val2; \
       inst x2, x1, x2; \
     )
 
 #define TEST_RR_SRC12_EQ_DEST( testnum, inst, result, val1 ) \
     TEST_CASE( testnum, x1, result, \
-      li  x1, MASK_XLEN(val1); \
+      li  x1, val1; \
       inst x1, x1, x1; \
     )
 
 #define TEST_RR_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, val2 ) \
     TEST_CASE( testnum, x6, result, \
       li  x4, 0; \
-1:    li  x1, MASK_XLEN(val1); \
-      li  x2, MASK_XLEN(val2); \
-      inst x14, x1, x2; \
+1:    li  x1, val1; \
+      li  x2, val2; \
+      inst x3, x1, x2; \
       TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x14, 0; \
+      addi  x6, x3, 0; \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
     )
 
 #define TEST_RR_SRC12_BYPASS( testnum, src1_nops, src2_nops, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       li  x4, 0; \
-1:    li  x1, MASK_XLEN(val1); \
+1:    li  x1, val1; \
       TEST_INSERT_NOPS_ ## src1_nops \
-      li  x2, MASK_XLEN(val2); \
+      li  x2, val2; \
       TEST_INSERT_NOPS_ ## src2_nops \
-      inst x14, x1, x2; \
+      inst x3, x1, x2; \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
     )
 
 #define TEST_RR_SRC21_BYPASS( testnum, src1_nops, src2_nops, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       li  x4, 0; \
-1:    li  x2, MASK_XLEN(val2); \
+1:    li  x2, val2; \
       TEST_INSERT_NOPS_ ## src1_nops \
-      li  x1, MASK_XLEN(val1); \
+      li  x1, val1; \
       TEST_INSERT_NOPS_ ## src2_nops \
-      inst x14, x1, x2; \
+      inst x3, x1, x2; \
       addi  x4, x4, 1; \
       li  x5, 2; \
       bne x4, x5, 1b \
@@ -189,13 +238,13 @@ test_ ## testnum: \
 
 #define TEST_RR_ZEROSRC1( testnum, inst, result, val ) \
     TEST_CASE( testnum, x2, result, \
-      li x1, MASK_XLEN(val); \
+      li x1, val; \
       inst x2, x0, x1; \
     )
 
 #define TEST_RR_ZEROSRC2( testnum, inst, result, val ) \
     TEST_CASE( testnum, x2, result, \
-      li x1, MASK_XLEN(val); \
+      li x1, val; \
       inst x2, x1, x0; \
     )
 
@@ -206,8 +255,8 @@ test_ ## testnum: \
 
 #define TEST_RR_ZERODEST( testnum, inst, val1, val2 ) \
     TEST_CASE( testnum, x0, 0, \
-      li x1, MASK_XLEN(val1); \
-      li x2, MASK_XLEN(val2); \
+      li x1, val1; \
+      li x2, val2; \
       inst x0, x1, x2; \
     )
 
@@ -216,17 +265,17 @@ test_ ## testnum: \
 #-----------------------------------------------------------------------
 
 #define TEST_LD_OP( testnum, inst, result, offset, base ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       la  x1, base; \
-      inst x14, offset(x1); \
+      inst x3, offset(x1); \
     )
 
 #define TEST_ST_OP( testnum, load_inst, store_inst, result, offset, base ) \
-    TEST_CASE( testnum, x14, result, \
+    TEST_CASE( testnum, x3, result, \
       la  x1, base; \
       li  x2, result; \
       store_inst x2, offset(x1); \
-      load_inst x14, offset(x1); \
+      load_inst x3, offset(x1); \
     )
 
 #define TEST_LD_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
@@ -234,11 +283,11 @@ test_ ## testnum: \
     li  TESTNUM, testnum; \
     li  x4, 0; \
 1:  la  x1, base; \
-    inst x14, offset(x1); \
+    inst x3, offset(x1); \
     TEST_INSERT_NOPS_ ## nop_cycles \
-    addi  x6, x14, 0; \
-    li  x7, result; \
-    bne x6, x7, fail; \
+    addi  x6, x3, 0; \
+    li  x29, result; \
+    bne x6, x29, fail; \
     addi  x4, x4, 1; \
     li  x5, 2; \
     bne x4, x5, 1b; \
@@ -249,9 +298,9 @@ test_ ## testnum: \
     li  x4, 0; \
 1:  la  x1, base; \
     TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x14, offset(x1); \
-    li  x7, result; \
-    bne x14, x7, fail; \
+    inst x3, offset(x1); \
+    li  x29, result; \
+    bne x3, x29, fail; \
     addi  x4, x4, 1; \
     li  x5, 2; \
     bne x4, x5, 1b \
@@ -265,9 +314,9 @@ test_ ## testnum: \
     la  x2, base; \
     TEST_INSERT_NOPS_ ## src2_nops \
     store_inst x1, offset(x2); \
-    load_inst x14, offset(x2); \
-    li  x7, result; \
-    bne x14, x7, fail; \
+    load_inst x3, offset(x2); \
+    li  x29, result; \
+    bne x3, x29, fail; \
     addi  x4, x4, 1; \
     li  x5, 2; \
     bne x4, x5, 1b \
@@ -281,9 +330,45 @@ test_ ## testnum: \
     li  x1, result; \
     TEST_INSERT_NOPS_ ## src2_nops \
     store_inst x1, offset(x2); \
-    load_inst x14, offset(x2); \
-    li  x7, result; \
-    bne x14, x7, fail; \
+    load_inst x3, offset(x2); \
+    li  x29, result; \
+    bne x3, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#-----------------------------------------------------------------------
+# Test branch instructions
+#-----------------------------------------------------------------------
+
+#define TEST_BR1_OP_TAKEN( testnum, inst, val1 ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x1, val1; \
+    inst x1, 2f; \
+    bne x0, TESTNUM, fail; \
+1:  bne x0, TESTNUM, 3f; \
+2:  inst x1, 1b; \
+    bne x0, TESTNUM, fail; \
+3:
+
+#define TEST_BR1_OP_NOTTAKEN( testnum, inst, val1 ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x1, val1; \
+    inst x1, 1f; \
+    bne x0, TESTNUM, 2f; \
+1:  bne x0, TESTNUM, fail; \
+2:  inst x1, 1b; \
+3:
+
+#define TEST_BR1_SRC1_BYPASS( testnum, nop_cycles, inst, val1 ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  li  x1, val1; \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    inst x1, fail; \
     addi  x4, x4, 1; \
     li  x5, 2; \
     bne x4, x5, 1b \
@@ -359,7 +444,7 @@ test_ ## testnum: \
     li  x4, 0; \
 1:  la  x6, 2f; \
     TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x13, x6, 0; \
+    inst x19, x6, 0; \
     bne x0, TESTNUM, fail; \
 2:  addi  x4, x4, 1; \
     li  x5, 2; \
@@ -374,35 +459,6 @@ test_ ## testnum: \
 # Tests floating-point instructions
 #-----------------------------------------------------------------------
 
-#define qNaNh 0h:7e00
-#define sNaNh 0h:7c01
-#define qNaNf 0f:7fc00000
-#define sNaNf 0f:7f800001
-#define qNaN 0d:7ff8000000000000
-#define sNaN 0d:7ff0000000000001
-
-#define TEST_FP_OP_H_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  flh f0, 0(a0); \
-  flh f1, 2(a0); \
-  flh f2, 4(a0); \
-  lh  a3, 6(a0); \
-  code; \
-  fsflags a1, x0; \
-  li a2, flags; \
-  bne a0, a3, fail; \
-  bne a1, a2, fail; \
-  .pushsection .data; \
-  .align 1; \
-  test_ ## testnum ## _data: \
-  .float16 val1; \
-  .float16 val2; \
-  .float16 val3; \
-  .result; \
-  .popsection
-
 #define TEST_FP_OP_S_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
 test_ ## testnum: \
   li  TESTNUM, testnum; \
@@ -416,14 +472,16 @@ test_ ## testnum: \
   li a2, flags; \
   bne a0, a3, fail; \
   bne a1, a2, fail; \
-  .pushsection .data; \
+  j 2f; \
   .align 2; \
+  .data; \
   test_ ## testnum ## _data: \
   .float val1; \
   .float val2; \
   .float val3; \
   .result; \
-  .popsection
+  .text; \
+2:
 
 #define TEST_FP_OP_D_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
 test_ ## testnum: \
@@ -438,43 +496,16 @@ test_ ## testnum: \
   li a2, flags; \
   bne a0, a3, fail; \
   bne a1, a2, fail; \
-  .pushsection .data; \
+  j 2f; \
+  .data; \
   .align 3; \
   test_ ## testnum ## _data: \
   .double val1; \
   .double val2; \
   .double val3; \
   .result; \
-  .popsection
-
-// TODO: assign a separate mem location for the comparison address?
-#define TEST_FP_OP_D32_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  fld f0, 0(a0); \
-  fld f1, 8(a0); \
-  fld f2, 16(a0); \
-  lw  a3, 24(a0); \
-  lw  t1, 28(a0); \
-  code; \
-  fsflags a1, x0; \
-  li a2, flags; \
-  bne a0, a3, fail; \
-  bne t1, t2, fail; \
-  bne a1, a2, fail; \
-  .pushsection .data; \
-  .align 3; \
-  test_ ## testnum ## _data: \
-  .double val1; \
-  .double val2; \
-  .double val3; \
-  .result; \
-  .popsection
-
-#define TEST_FCVT_S_D32( testnum, result, val1 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, 0, double result, val1, 0.0, 0.0, \
-                    fcvt.s.d f3, f0; fcvt.d.s f3, f3; fsd f3, 0(a0); lw t2, 4(a0); lw a0, 0(a0))
+  .text; \
+2:
 
 #define TEST_FCVT_S_D( testnum, result, val1 ) \
   TEST_FP_OP_D_INTERNAL( testnum, 0, double result, val1, 0.0, 0.0, \
@@ -484,28 +515,10 @@ test_ ## testnum: \
   TEST_FP_OP_S_INTERNAL( testnum, 0, float result, val1, 0.0, 0.0, \
                     fcvt.d.s f3, f0; fcvt.s.d f3, f3; fmv.x.s a0, f3)
 
-#define TEST_FCVT_H_S( testnum, result, val1 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, 0, float16 result, val1, 0.0, 0.0, \
-                    fcvt.s.h f3, f0; fcvt.h.s f3, f3; fmv.x.h a0, f3)
-
-#define TEST_FCVT_H_D( testnum, result, val1 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, 0, float16 result, val1, 0.0, 0.0, \
-                    fcvt.d.h f3, f0; fcvt.h.d f3, f3; fmv.x.h a0, f3)
-
-
-#define TEST_FP_OP1_H( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, float16 result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.h a0, f3;)
-
 #define TEST_FP_OP1_S( testnum, inst, flags, result, val1 ) \
   TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, 0.0, 0.0, \
                     inst f3, f0; fmv.x.s a0, f3)
 
-#define TEST_FP_OP1_D32( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, double result, val1, 0.0, 0.0, \
-                    inst f3, f0; fsd f3, 0(a0); lw t2, 4(a0); lw a0, 0(a0))
-// ^: store computation result in address from a0, load high-word into t2
-
 #define TEST_FP_OP1_D( testnum, inst, flags, result, val1 ) \
   TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, 0.0, 0.0, \
                     inst f3, f0; fmv.x.d a0, f3)
@@ -514,15 +527,6 @@ test_ ## testnum: \
   TEST_FP_OP_S_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
                     inst f3, f0; fmv.x.s a0, f3)
 
-#define TEST_FP_OP1_H_DWORD_RESULT( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, word result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.h a0, f3)
-
-#define TEST_FP_OP1_D32_DWORD_RESULT( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
-                    inst f3, f0; fsd f3, 0(a0); lw t2, 4(a0); lw a0, 0(a0))
-// ^: store computation result in address from a0, load high-word into t2
-
 #define TEST_FP_OP1_D_DWORD_RESULT( testnum, inst, flags, result, val1 ) \
   TEST_FP_OP_D_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
                     inst f3, f0; fmv.x.d a0, f3)
@@ -531,15 +535,6 @@ test_ ## testnum: \
   TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, val2, 0.0, \
                     inst f3, f0, f1; fmv.x.s a0, f3)
 
-#define TEST_FP_OP2_H( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, float16 result, val1, val2, 0.0, \
-                    inst f3, f0, f1; fmv.x.h a0, f3)
-
-#define TEST_FP_OP2_D32( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, double result, val1, val2, 0.0, \
-                    inst f3, f0, f1; fsd f3, 0(a0); lw t2, 4(a0); lw a0, 0(a0))
-// ^: store computation result in address from a0, load high-word into t2
-
 #define TEST_FP_OP2_D( testnum, inst, flags, result, val1, val2 ) \
   TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, val2, 0.0, \
                     inst f3, f0, f1; fmv.x.d a0, f3)
@@ -548,15 +543,6 @@ test_ ## testnum: \
   TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, val2, val3, \
                     inst f3, f0, f1, f2; fmv.x.s a0, f3)
 
-#define TEST_FP_OP3_H( testnum, inst, flags, result, val1, val2, val3 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, float16 result, val1, val2, val3, \
-                    inst f3, f0, f1, f2; fmv.x.h a0, f3)
-
-#define TEST_FP_OP3_D32( testnum, inst, flags, result, val1, val2, val3 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, double result, val1, val2, val3, \
-                    inst f3, f0, f1, f2; fsd f3, 0(a0); lw t2, 4(a0); lw a0, 0(a0))
-// ^: store computation result in address from a0, load high-word into t2
-
 #define TEST_FP_OP3_D( testnum, inst, flags, result, val1, val2, val3 ) \
   TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, val2, val3, \
                     inst f3, f0, f1, f2; fmv.x.d a0, f3)
@@ -565,53 +551,18 @@ test_ ## testnum: \
   TEST_FP_OP_S_INTERNAL( testnum, flags, word result, val1, 0.0, 0.0, \
                     inst a0, f0, rm)
 
-#define TEST_FP_INT_OP_H( testnum, inst, flags, result, val1, rm ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, word result, val1, 0.0, 0.0, \
-                    inst a0, f0, rm)
-
-#define TEST_FP_INT_OP_D32( testnum, inst, flags, result, val1, rm ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
-                    inst a0, f0, f1; li t2, 0)
-
 #define TEST_FP_INT_OP_D( testnum, inst, flags, result, val1, rm ) \
   TEST_FP_OP_D_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
                     inst a0, f0, rm)
 
-#define TEST_FP_CMP_OP_S( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, word result, val1, val2, 0.0, \
+#define TEST_FP_CMP_OP_S( testnum, inst, result, val1, val2 ) \
+  TEST_FP_OP_S_INTERNAL( testnum, 0, word result, val1, val2, 0.0, \
                     inst a0, f0, f1)
 
-#define TEST_FP_CMP_OP_H( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_H_INTERNAL( testnum, flags, hword result, val1, val2, 0.0, \
+#define TEST_FP_CMP_OP_D( testnum, inst, result, val1, val2 ) \
+  TEST_FP_OP_D_INTERNAL( testnum, 0, dword result, val1, val2, 0.0, \
                     inst a0, f0, f1)
 
-#define TEST_FP_CMP_OP_D32( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_D32_INTERNAL( testnum, flags, dword result, val1, val2, 0.0, \
-                    inst a0, f0, f1; li t2, 0)
-
-#define TEST_FP_CMP_OP_D( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, dword result, val1, val2, 0.0, \
-                    inst a0, f0, f1)
-
-#define TEST_FCLASS_S(testnum, correct, input) \
-  TEST_CASE(testnum, a0, correct, li a0, input; fmv.s.x fa0, a0; \
-                    fclass.s a0, fa0)
-
-#define TEST_FCLASS_D32(testnum, correct, input) \
-  TEST_CASE(testnum, a0, correct, \
-            la a0, test_ ## testnum ## _data ;\
-            fld fa0, 0(a0); \
-            fclass.d a0, fa0) \
-    .pushsection .data; \
-    .align 3; \
-    test_ ## testnum ## _data: \
-    .dword input; \
-    .popsection
-
-#define TEST_FCLASS_D(testnum, correct, input) \
-  TEST_CASE(testnum, a0, correct, li a0, input; fmv.d.x fa0, a0; \
-                    fclass.d a0, fa0)
-
 #define TEST_INT_FP_OP_S( testnum, inst, result, val1 ) \
 test_ ## testnum: \
   li  TESTNUM, testnum; \
@@ -622,49 +573,11 @@ test_ ## testnum: \
   fsflags x0; \
   fmv.x.s a0, f0; \
   bne a0, a3, fail; \
-  .pushsection .data; \
+  j 1f; \
   .align 2; \
   test_ ## testnum ## _data: \
   .float result; \
-  .popsection
-
-#define TEST_INT_FP_OP_H( testnum, inst, result, val1 ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  lh  a3, 0(a0); \
-  li  a0, val1; \
-  inst f0, a0; \
-  fsflags x0; \
-  fmv.x.h a0, f0; \
-  bne a0, a3, fail; \
-  .pushsection .data; \
-  .align 1; \
-  test_ ## testnum ## _data: \
-  .float16 result; \
-  .popsection
-
-#define TEST_INT_FP_OP_D32( testnum, inst, result, val1 ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  lw  a3, 0(a0); \
-  lw  a4, 4(a0); \
-  li  a1, val1; \
-  inst f0, a1; \
-  \
-  fsd f0, 0(a0); \
-  lw a1, 4(a0); \
-  lw a0, 0(a0); \
-  \
-  fsflags x0; \
-  bne a0, a3, fail; \
-  bne a1, a4, fail; \
-  .pushsection .data; \
-  .align 3; \
-  test_ ## testnum ## _data: \
-  .double result; \
-  .popsection
+1:
 
 #define TEST_INT_FP_OP_D( testnum, inst, result, val1 ) \
 test_ ## testnum: \
@@ -676,30 +589,372 @@ test_ ## testnum: \
   fsflags x0; \
   fmv.x.d a0, f0; \
   bne a0, a3, fail; \
-  .pushsection .data; \
+  j 1f; \
   .align 3; \
   test_ ## testnum ## _data: \
   .double result; \
-  .popsection
+1:
+
+#-----------------------------------------------------------------------
+# Tests compressed instructions (RV32C)
+#-----------------------------------------------------------------------
+#define TEST_RV32C_R_OP( testnum, inst, result, predefined_val, val1) \
+    TEST_CASE( testnum, x13, result, \
+      li  x11, val1; \
+      li  x13, predefined_val; \
+      inst x13, x11; \
+    )
+
+#define TEST_RV32C_RR_SRC12_EQ_DEST( testnum, inst, result, val1 ) \
+    TEST_CASE( testnum, x11, result, \
+      li  x11, val1; \
+      inst x11, x11; \
+    )
+
+#define TEST_RV32C_RR_DEST_BYPASS( testnum, nop_cycles, inst, result, predefined_val, val1) \
+    TEST_CASE( testnum, x16, result, \
+      li  x14, 0; \
+1:    li  x11, val1; \
+      li  x13, predefined_val; \
+      inst x13, x11; \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      addi  x16, x13, 0; \
+      addi  x14, x14, 1; \
+      li  x15, 2; \
+      bne x14, x15, 1b \
+    )
+
+#define TEST_RV32C_RR_SRC12_BYPASS( testnum, src1_nops, src2_nops, inst, result, predefined_val, val1) \
+    TEST_CASE( testnum, x13, result, \
+      li  x14, 0; \
+1:    li  x11, val1; \
+      TEST_INSERT_NOPS_ ## src1_nops \
+      li  x13, predefined_val; \
+      TEST_INSERT_NOPS_ ## src2_nops \
+      inst x13, x11; \
+      addi  x14, x14, 1; \
+      li  x15, 2; \
+      bne x14, x15, 1b \
+    )
+
+#define TEST_RV32C_RR_SRC21_BYPASS( testnum, src1_nops, src2_nops, inst, result, predefined_val, val1) \
+    TEST_CASE( testnum, x13, result, \
+      li  x14, 0; \
+1:    li  x13, predefined_val; \
+      TEST_INSERT_NOPS_ ## src1_nops \
+      li  x11, val1; \
+      TEST_INSERT_NOPS_ ## src2_nops \
+      inst x13, x11; \
+      addi  x14, x14, 1; \
+      li  x15, 2; \
+      bne x14, x15, 1b \
+    )
 
-// We need some special handling here to allow 64-bit comparison in 32-bit arch
-// TODO: find a better name and clean up when intended for general usage?
-#define TEST_CASE_D32( testnum, testreg1, testreg2, correctval, code... ) \
+#define TEST_RV32C_BR2_OP_TAKEN( testnum, inst, val1) \
 test_ ## testnum: \
-    code; \
-    la  x15, test_ ## testnum ## _data ; \
-    lw  x7, 0(x15); \
-    lw  x15, 4(x15); \
     li  TESTNUM, testnum; \
-    bne testreg1, x7, fail;\
-    bne testreg2, x15, fail;\
-    .pushsection .data; \
-    .align 3; \
-    test_ ## testnum ## _data: \
-    .dword correctval; \
-    .popsection
+    li  x12, val1; \
+    inst x12, 2f; \
+    bne x0, TESTNUM, fail; \
+1:  bne x0, TESTNUM, 3f; \
+2:  inst x12, 1b; \
+    bne x0, TESTNUM, fail; \
+3:
 
-// ^ x14 is used in some other macros, to avoid issues we use x15 for upper word
+#define TEST_RV32C_BR2_OP_NOTTAKEN( testnum, inst, val1) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x9, val1; \
+    inst x9, 1f; \
+    bne x0, TESTNUM, 2f; \
+1:  bne x0, TESTNUM, fail; \
+2:  inst x9, 1b; \
+3:
+
+#define TEST_RV32C_BR2_SRC_BYPASS( testnum, src1_nops, inst, val1) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x6, 0; \
+1:  li  x14, val1; \
+    TEST_INSERT_NOPS_ ## src1_nops \
+    inst x14, fail; \
+    addi  x6, x6, 1; \
+    li  x5, 2; \
+    bne x6, x5, 1b \
+
+#define TEST_RV32C_JALR_SRC1_BYPASS( testnum, nop_cycles, inst ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x6, 2f; \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    inst x6; \
+    bne x0, TESTNUM, fail; \
+2:  addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_JAL_SRC1_BYPASS( testnum, nop_cycles, inst ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  TEST_INSERT_NOPS_ ## nop_cycles \
+    inst 2f; \
+    bne x0, TESTNUM, fail; \
+2:  addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define SEXT_IMM_5(x) ((x) | (-(((x) >> 5) & 1) << 5))
+
+#define TEST_RV32C_IMM_OP( testnum, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x10, result, \
+      li  x10, val1; \
+      inst x10, SEXT_IMM_5(imm); \
+    )
+
+#define TEST_RV32C_IMM_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x6, result, \
+      li  x4, 0; \
+1:    li  x12, val1; \
+      inst x12, SEXT_IMM_5(imm); \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      addi  x6, x12, 0; \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define TEST_RV32C_IMM_SRC1_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x14, result, \
+      li  x4, 0; \
+1:    li  x14, val1; \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      inst x14, SEXT_IMM_5(imm); \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define SEXT_IMM_9(x) ((x) | (-(((x) >> 9) & 1) << 9))
+
+#define TEST_RV32C_IMM_OP_SP( testnum, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x2, result, \
+      li  x2, val1; \
+      inst x2, SEXT_IMM_9(imm); \
+    )
+
+#define TEST_RV32C_IMM_DEST_BYPASS_SP( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x6, result, \
+      li  x4, 0; \
+1:    li  x2, val1; \
+      inst x2, SEXT_IMM_9(imm); \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      addi  x6, x2, 0; \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define TEST_RV32C_IMM_SRC1_BYPASS_SP( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x2, result, \
+      li  x4, 0; \
+1:    li  x2, val1; \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      inst x2, SEXT_IMM_9(imm); \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define ZERO_IMM_9(x) ((x) | (0 << 10))
+
+#define TEST_RV32C_IMM_OP_SP_REG( testnum, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x10, result, \
+      li  x2, val1; \
+      inst x10, x2, ZERO_IMM_9(imm); \
+    )
+
+#define TEST_RV32C_IMM_DEST_BYPASS_SP_REG( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x6, result, \
+      li  x4, 0; \
+1:    li  x2, val1; \
+      inst x11, x2, ZERO_IMM_9(imm); \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      addi  x6, x11, 0; \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define TEST_RV32C_IMM_SRC1_BYPASS_SP_REG( testnum, nop_cycles, inst, result, val1, imm ) \
+    TEST_CASE( testnum, x12, result, \
+      li  x4, 0; \
+1:    li  x2, val1; \
+      TEST_INSERT_NOPS_ ## nop_cycles \
+      inst x12, x2, ZERO_IMM_9(imm); \
+      addi  x4, x4, 1; \
+      li  x5, 2; \
+      bne x4, x5, 1b \
+    )
+
+#define TEST_RV32C_LI( testnum, inst, result, imm, shamt ) \
+    TEST_CASE( testnum, x4, result, \
+      inst x4, SEXT_IMM_5(imm); \
+      sra x4, x4, shamt; \
+    )
+
+#define TEST_RV32C_LUI( testnum, inst, result, imm, shamt ) \
+    TEST_CASE( testnum, x4, result, \
+      inst x4, imm; \
+      sra x4, x4, shamt; \
+    )
+
+#define TEST_RV32C_LD_OP( testnum, inst, result, offset, base ) \
+    TEST_CASE( testnum, x13, result, \
+      la  x11, base; \
+      inst x13, offset(x11); \
+    )
+
+#define TEST_RV32C_LD_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x11, base; \
+    inst x13, offset(x11); \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    addi  x6, x13, 0; \
+    li  x29, result; \
+    bne x6, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b; \
+
+#define TEST_RV32C_LD_SRC1_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x11, base; \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    inst x13, offset(x11); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_ST_OP( testnum, load_inst, store_inst, result, offset, base ) \
+    TEST_CASE( testnum, x13, result, \
+      la  x11, base; \
+      li  x12, result; \
+      store_inst x12, offset(x11); \
+      load_inst x13, offset(x11); \
+    )
+
+#define TEST_RV32C_ST_SRC12_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  li  x11, result; \
+    TEST_INSERT_NOPS_ ## src1_nops \
+    la  x12, base; \
+    TEST_INSERT_NOPS_ ## src2_nops \
+    store_inst x11, offset(x12); \
+    load_inst x13, offset(x12); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_ST_SRC21_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x12, base; \
+    TEST_INSERT_NOPS_ ## src1_nops \
+    li  x11, result; \
+    TEST_INSERT_NOPS_ ## src2_nops \
+    store_inst x11, offset(x12); \
+    load_inst x13, offset(x12); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_LDSP_OP( testnum, inst, result, offset, base ) \
+    TEST_CASE( testnum, x13, result, \
+      la  x2, base; \
+      inst x13, offset(x2); \
+    )
+
+#define TEST_RV32C_LDSP_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x2, base; \
+    inst x13, offset(x2); \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    addi  x6, x13, 0; \
+    li  x29, result; \
+    bne x6, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b; \
+
+#define TEST_RV32C_LDSP_SRC1_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x2, base; \
+    TEST_INSERT_NOPS_ ## nop_cycles \
+    inst x13, offset(x2); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_STSP_OP( testnum, load_inst, store_inst, result, offset, base ) \
+    TEST_CASE( testnum, x13, result, \
+      la  x2, base; \
+      li  x12, result; \
+      store_inst x12, offset(x2); \
+      load_inst x13, offset(x2); \
+    )
+
+#define TEST_RV32C_STSP_SRC12_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  li  x11, result; \
+    TEST_INSERT_NOPS_ ## src1_nops \
+    la  x2, base; \
+    TEST_INSERT_NOPS_ ## src2_nops \
+    store_inst x11, offset(x2); \
+    load_inst x13, offset(x2); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
+
+#define TEST_RV32C_STSP_SRC21_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
+test_ ## testnum: \
+    li  TESTNUM, testnum; \
+    li  x4, 0; \
+1:  la  x2, base; \
+    TEST_INSERT_NOPS_ ## src1_nops \
+    li  x11, result; \
+    TEST_INSERT_NOPS_ ## src2_nops \
+    store_inst x11, offset(x2); \
+    load_inst x13, offset(x2); \
+    li  x29, result; \
+    bne x13, x29, fail; \
+    addi  x4, x4, 1; \
+    li  x5, 2; \
+    bne x4, x5, 1b \
 
 #-----------------------------------------------------------------------
 # Pass and fail code (assumes test num is in TESTNUM)
@@ -718,5 +973,4 @@ pass: \
 #-----------------------------------------------------------------------
 
 #define TEST_DATA
-
 #endif
diff --git a/verification/asm-env/selfasm/test_macros.h.bak b/verification/asm-env/selfasm/test_macros.h.bak
deleted file mode 100644
index c225e17..0000000
--- a/verification/asm-env/selfasm/test_macros.h.bak
+++ /dev/null
@@ -1,976 +0,0 @@
-// See LICENSE for license details.
-
-#ifndef __TEST_MACROS_SCALAR_H
-#define __TEST_MACROS_SCALAR_H
-
-
-#-----------------------------------------------------------------------
-# Helper macros
-#-----------------------------------------------------------------------
-#define SPARCE_ADDR 0x90000000
-#define SPARCE_CONFIG_ADDR (SPARCE_ADDR + 4)
-
-#define TEST_CASE( testnum, testreg, correctval, code... ) \
-test_ ## testnum: \
-    code; \
-    li  x29, correctval; \
-    li  TESTNUM, testnum; \
-    bne testreg, x29, fail;
-
-#define SASA_COND_OR 0
-#define SASA_COND_AND 1
-
-#define CALC_SASA_VAL(reg1, reg2, condition, insts_to_skip) \
-(((reg1) << 11) + ((reg2) << 6) + ((condition << 5)) + ((insts_to_skip)));
-
-#define STORE_SASA_FROM_MEM(mem_label, reg_offset, tempreg1, tempreg2) \
-slli tempreg1, reg_offset, 3; \
-la   tempreg2, mem_label; \
-add  tempreg2, tempreg2, tempreg1; \
-lw   tempreg1, 0(tempreg2); \
-slli tempreg1, tempreg1, 14; \
-lw   tempreg2, 4(tempreg2); \
-or   tempreg1, tempreg1, tempreg2; \
-li   tempreg2, SPARCE_ADDR; \
-sw   tempreg1, 0(tempreg2);
-
-#define CREATE_SASA_MEMORY_ENTRIES(skip_label, reg1, reg2, condition, insts_to_skip) \
-.word skip_label; \
-.word CALC_SASA_VAL(reg1, reg2, condition, insts_to_skip); \
-
-# We use a macro hack to simpify code generation for various numbers
-# of bubble cycles.
-
-#define TEST_INSERT_NOPS_0
-#define TEST_INSERT_NOPS_1  nop; TEST_INSERT_NOPS_0
-#define TEST_INSERT_NOPS_2  nop; TEST_INSERT_NOPS_1
-#define TEST_INSERT_NOPS_3  nop; TEST_INSERT_NOPS_2
-#define TEST_INSERT_NOPS_4  nop; TEST_INSERT_NOPS_3
-#define TEST_INSERT_NOPS_5  nop; TEST_INSERT_NOPS_4
-#define TEST_INSERT_NOPS_6  nop; TEST_INSERT_NOPS_5
-#define TEST_INSERT_NOPS_7  nop; TEST_INSERT_NOPS_6
-#define TEST_INSERT_NOPS_8  nop; TEST_INSERT_NOPS_7
-#define TEST_INSERT_NOPS_9  nop; TEST_INSERT_NOPS_8
-#define TEST_INSERT_NOPS_10 nop; TEST_INSERT_NOPS_9
-
-
-#-----------------------------------------------------------------------
-# RV64UI MACROS
-#-----------------------------------------------------------------------
-
-#-----------------------------------------------------------------------
-# Tests for instructions with immediate operand
-#-----------------------------------------------------------------------
-
-#define SEXT_IMM(x) ((x) | (-(((x) >> 11) & 1) << 11))
-
-#define TEST_IMM_OP( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x1, val1; \
-      inst x3, x1, SEXT_IMM(imm); \
-    )
-
-#define TEST_IMM_SRC1_EQ_DEST( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x1, result, \
-      li  x1, val1; \
-      inst x1, x1, SEXT_IMM(imm); \
-    )
-
-#define TEST_IMM_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x1, val1; \
-      inst x3, x1, SEXT_IMM(imm); \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x3, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_IMM_SRC1_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x4, 0; \
-1:    li  x1, val1; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      inst x3, x1, SEXT_IMM(imm); \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_IMM_ZEROSRC1( testnum, inst, result, imm ) \
-    TEST_CASE( testnum, x1, result, \
-      inst x1, x0, SEXT_IMM(imm); \
-    )
-
-#define TEST_IMM_ZERODEST( testnum, inst, val1, imm ) \
-    TEST_CASE( testnum, x0, 0, \
-      li  x1, val1; \
-      inst x0, x1, SEXT_IMM(imm); \
-    )
-
-#-----------------------------------------------------------------------
-# Tests for vector config instructions
-#-----------------------------------------------------------------------
-
-#define TEST_VSETCFGIVL( testnum, nxpr, nfpr, bank, vl, result ) \
-    TEST_CASE( testnum, x1, result, \
-      li x1, (bank << 12); \
-      vsetcfg x1,nxpr,nfpr; \
-      li x1, vl; \
-      vsetvl x1,x1; \
-    )
-
-#define TEST_VVCFG( testnum, nxpr, nfpr, bank, vl, result ) \
-    TEST_CASE( testnum, x1, result, \
-      li x1, (bank << 12) | (nfpr << 6) | nxpr; \
-      vsetcfg x1; \
-      li x1, vl; \
-      vsetvl x1,x1; \
-    )
-
-#define TEST_VSETVL( testnum, nxpr, nfpr, bank, vl, result ) \
-    TEST_CASE( testnum, x1, result, \
-      li x1, (bank << 12); \
-      vsetcfg x1,nxpr,nfpr; \
-      li x1, vl; \
-      vsetvl x1, x1; \
-    )
-
-#-----------------------------------------------------------------------
-# Tests for an instruction with register operands
-#-----------------------------------------------------------------------
-
-#define TEST_R_OP( testnum, inst, result, val1 ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x1, val1; \
-      inst x3, x1; \
-    )
-
-#define TEST_R_SRC1_EQ_DEST( testnum, inst, result, val1 ) \
-    TEST_CASE( testnum, x1, result, \
-      li  x1, val1; \
-      inst x1, x1; \
-    )
-
-#define TEST_R_DEST_BYPASS( testnum, nop_cycles, inst, result, val1 ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x1, val1; \
-      inst x3, x1; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x3, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#-----------------------------------------------------------------------
-# Tests for an instruction with register-register operands
-#-----------------------------------------------------------------------
-
-#define TEST_RR_OP( testnum, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x1, val1; \
-      li  x2, val2; \
-      inst x3, x1, x2; \
-    )
-
-#define TEST_RR_SRC1_EQ_DEST( testnum, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x1, result, \
-      li  x1, val1; \
-      li  x2, val2; \
-      inst x1, x1, x2; \
-    )
-
-#define TEST_RR_SRC2_EQ_DEST( testnum, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x2, result, \
-      li  x1, val1; \
-      li  x2, val2; \
-      inst x2, x1, x2; \
-    )
-
-#define TEST_RR_SRC12_EQ_DEST( testnum, inst, result, val1 ) \
-    TEST_CASE( testnum, x1, result, \
-      li  x1, val1; \
-      inst x1, x1, x1; \
-    )
-
-#define TEST_RR_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x1, val1; \
-      li  x2, val2; \
-      inst x3, x1, x2; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x3, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RR_SRC12_BYPASS( testnum, src1_nops, src2_nops, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x4, 0; \
-1:    li  x1, val1; \
-      TEST_INSERT_NOPS_ ## src1_nops \
-      li  x2, val2; \
-      TEST_INSERT_NOPS_ ## src2_nops \
-      inst x3, x1, x2; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RR_SRC21_BYPASS( testnum, src1_nops, src2_nops, inst, result, val1, val2 ) \
-    TEST_CASE( testnum, x3, result, \
-      li  x4, 0; \
-1:    li  x2, val2; \
-      TEST_INSERT_NOPS_ ## src1_nops \
-      li  x1, val1; \
-      TEST_INSERT_NOPS_ ## src2_nops \
-      inst x3, x1, x2; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RR_ZEROSRC1( testnum, inst, result, val ) \
-    TEST_CASE( testnum, x2, result, \
-      li x1, val; \
-      inst x2, x0, x1; \
-    )
-
-#define TEST_RR_ZEROSRC2( testnum, inst, result, val ) \
-    TEST_CASE( testnum, x2, result, \
-      li x1, val; \
-      inst x2, x1, x0; \
-    )
-
-#define TEST_RR_ZEROSRC12( testnum, inst, result ) \
-    TEST_CASE( testnum, x1, result, \
-      inst x1, x0, x0; \
-    )
-
-#define TEST_RR_ZERODEST( testnum, inst, val1, val2 ) \
-    TEST_CASE( testnum, x0, 0, \
-      li x1, val1; \
-      li x2, val2; \
-      inst x0, x1, x2; \
-    )
-
-#-----------------------------------------------------------------------
-# Test memory instructions
-#-----------------------------------------------------------------------
-
-#define TEST_LD_OP( testnum, inst, result, offset, base ) \
-    TEST_CASE( testnum, x3, result, \
-      la  x1, base; \
-      inst x3, offset(x1); \
-    )
-
-#define TEST_ST_OP( testnum, load_inst, store_inst, result, offset, base ) \
-    TEST_CASE( testnum, x3, result, \
-      la  x1, base; \
-      li  x2, result; \
-      store_inst x2, offset(x1); \
-      load_inst x3, offset(x1); \
-    )
-
-#define TEST_LD_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x1, base; \
-    inst x3, offset(x1); \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    addi  x6, x3, 0; \
-    li  x29, result; \
-    bne x6, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b; \
-
-#define TEST_LD_SRC1_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x1, base; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x3, offset(x1); \
-    li  x29, result; \
-    bne x3, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_ST_SRC12_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x1, result; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    la  x2, base; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x1, offset(x2); \
-    load_inst x3, offset(x2); \
-    li  x29, result; \
-    bne x3, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_ST_SRC21_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x2, base; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    li  x1, result; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x1, offset(x2); \
-    load_inst x3, offset(x2); \
-    li  x29, result; \
-    bne x3, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#-----------------------------------------------------------------------
-# Test branch instructions
-#-----------------------------------------------------------------------
-
-#define TEST_BR1_OP_TAKEN( testnum, inst, val1 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x1, val1; \
-    inst x1, 2f; \
-    bne x0, TESTNUM, fail; \
-1:  bne x0, TESTNUM, 3f; \
-2:  inst x1, 1b; \
-    bne x0, TESTNUM, fail; \
-3:
-
-#define TEST_BR1_OP_NOTTAKEN( testnum, inst, val1 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x1, val1; \
-    inst x1, 1f; \
-    bne x0, TESTNUM, 2f; \
-1:  bne x0, TESTNUM, fail; \
-2:  inst x1, 1b; \
-3:
-
-#define TEST_BR1_SRC1_BYPASS( testnum, nop_cycles, inst, val1 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x1, val1; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x1, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_BR2_OP_TAKEN( testnum, inst, val1, val2 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x1, val1; \
-    li  x2, val2; \
-    inst x1, x2, 2f; \
-    bne x0, TESTNUM, fail; \
-1:  bne x0, TESTNUM, 3f; \
-2:  inst x1, x2, 1b; \
-    bne x0, TESTNUM, fail; \
-3:
-
-#define TEST_BR2_OP_NOTTAKEN( testnum, inst, val1, val2 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x1, val1; \
-    li  x2, val2; \
-    inst x1, x2, 1f; \
-    bne x0, TESTNUM, 2f; \
-1:  bne x0, TESTNUM, fail; \
-2:  inst x1, x2, 1b; \
-3:
-
-#define TEST_BR2_SRC12_BYPASS( testnum, src1_nops, src2_nops, inst, val1, val2 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x1, val1; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    li  x2, val2; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    inst x1, x2, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_BR2_SRC21_BYPASS( testnum, src1_nops, src2_nops, inst, val1, val2 ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x2, val2; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    li  x1, val1; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    inst x1, x2, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#-----------------------------------------------------------------------
-# Test jump instructions
-#-----------------------------------------------------------------------
-
-#define TEST_JR_SRC1_BYPASS( testnum, nop_cycles, inst ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x6, 2f; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x6; \
-    bne x0, TESTNUM, fail; \
-2:  addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_JALR_SRC1_BYPASS( testnum, nop_cycles, inst ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x6, 2f; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x19, x6, 0; \
-    bne x0, TESTNUM, fail; \
-2:  addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-
-#-----------------------------------------------------------------------
-# RV64UF MACROS
-#-----------------------------------------------------------------------
-
-#-----------------------------------------------------------------------
-# Tests floating-point instructions
-#-----------------------------------------------------------------------
-
-#define TEST_FP_OP_S_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  flw f0, 0(a0); \
-  flw f1, 4(a0); \
-  flw f2, 8(a0); \
-  lw  a3, 12(a0); \
-  code; \
-  fsflags a1, x0; \
-  li a2, flags; \
-  bne a0, a3, fail; \
-  bne a1, a2, fail; \
-  j 2f; \
-  .align 2; \
-  .data; \
-  test_ ## testnum ## _data: \
-  .float val1; \
-  .float val2; \
-  .float val3; \
-  .result; \
-  .text; \
-2:
-
-#define TEST_FP_OP_D_INTERNAL( testnum, flags, result, val1, val2, val3, code... ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  fld f0, 0(a0); \
-  fld f1, 8(a0); \
-  fld f2, 16(a0); \
-  ld  a3, 24(a0); \
-  code; \
-  fsflags a1, x0; \
-  li a2, flags; \
-  bne a0, a3, fail; \
-  bne a1, a2, fail; \
-  j 2f; \
-  .data; \
-  .align 3; \
-  test_ ## testnum ## _data: \
-  .double val1; \
-  .double val2; \
-  .double val3; \
-  .result; \
-  .text; \
-2:
-
-#define TEST_FCVT_S_D( testnum, result, val1 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, 0, double result, val1, 0.0, 0.0, \
-                    fcvt.s.d f3, f0; fcvt.d.s f3, f3; fmv.x.d a0, f3)
-
-#define TEST_FCVT_D_S( testnum, result, val1 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, 0, float result, val1, 0.0, 0.0, \
-                    fcvt.d.s f3, f0; fcvt.s.d f3, f3; fmv.x.s a0, f3)
-
-#define TEST_FP_OP1_S( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.s a0, f3)
-
-#define TEST_FP_OP1_D( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.d a0, f3)
-
-#define TEST_FP_OP1_S_DWORD_RESULT( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.s a0, f3)
-
-#define TEST_FP_OP1_D_DWORD_RESULT( testnum, inst, flags, result, val1 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
-                    inst f3, f0; fmv.x.d a0, f3)
-
-#define TEST_FP_OP2_S( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, val2, 0.0, \
-                    inst f3, f0, f1; fmv.x.s a0, f3)
-
-#define TEST_FP_OP2_D( testnum, inst, flags, result, val1, val2 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, val2, 0.0, \
-                    inst f3, f0, f1; fmv.x.d a0, f3)
-
-#define TEST_FP_OP3_S( testnum, inst, flags, result, val1, val2, val3 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, float result, val1, val2, val3, \
-                    inst f3, f0, f1, f2; fmv.x.s a0, f3)
-
-#define TEST_FP_OP3_D( testnum, inst, flags, result, val1, val2, val3 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, double result, val1, val2, val3, \
-                    inst f3, f0, f1, f2; fmv.x.d a0, f3)
-
-#define TEST_FP_INT_OP_S( testnum, inst, flags, result, val1, rm ) \
-  TEST_FP_OP_S_INTERNAL( testnum, flags, word result, val1, 0.0, 0.0, \
-                    inst a0, f0, rm)
-
-#define TEST_FP_INT_OP_D( testnum, inst, flags, result, val1, rm ) \
-  TEST_FP_OP_D_INTERNAL( testnum, flags, dword result, val1, 0.0, 0.0, \
-                    inst a0, f0, rm)
-
-#define TEST_FP_CMP_OP_S( testnum, inst, result, val1, val2 ) \
-  TEST_FP_OP_S_INTERNAL( testnum, 0, word result, val1, val2, 0.0, \
-                    inst a0, f0, f1)
-
-#define TEST_FP_CMP_OP_D( testnum, inst, result, val1, val2 ) \
-  TEST_FP_OP_D_INTERNAL( testnum, 0, dword result, val1, val2, 0.0, \
-                    inst a0, f0, f1)
-
-#define TEST_INT_FP_OP_S( testnum, inst, result, val1 ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  lw  a3, 0(a0); \
-  li  a0, val1; \
-  inst f0, a0; \
-  fsflags x0; \
-  fmv.x.s a0, f0; \
-  bne a0, a3, fail; \
-  j 1f; \
-  .align 2; \
-  test_ ## testnum ## _data: \
-  .float result; \
-1:
-
-#define TEST_INT_FP_OP_D( testnum, inst, result, val1 ) \
-test_ ## testnum: \
-  li  TESTNUM, testnum; \
-  la  a0, test_ ## testnum ## _data ;\
-  ld  a3, 0(a0); \
-  li  a0, val1; \
-  inst f0, a0; \
-  fsflags x0; \
-  fmv.x.d a0, f0; \
-  bne a0, a3, fail; \
-  j 1f; \
-  .align 3; \
-  test_ ## testnum ## _data: \
-  .double result; \
-1:
-
-#-----------------------------------------------------------------------
-# Tests compressed instructions (RV32C)
-#-----------------------------------------------------------------------
-#define TEST_RV32C_R_OP( testnum, inst, result, predefined_val, val1) \
-    TEST_CASE( testnum, x13, result, \
-      li  x11, val1; \
-      li  x13, predefined_val; \
-      inst x13, x11; \
-    )
-
-#define TEST_RV32C_RR_SRC12_EQ_DEST( testnum, inst, result, val1 ) \
-    TEST_CASE( testnum, x11, result, \
-      li  x11, val1; \
-      inst x11, x11; \
-    )
-
-#define TEST_RV32C_RR_DEST_BYPASS( testnum, nop_cycles, inst, result, predefined_val, val1) \
-    TEST_CASE( testnum, x16, result, \
-      li  x14, 0; \
-1:    li  x11, val1; \
-      li  x13, predefined_val; \
-      inst x13, x11; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x16, x13, 0; \
-      addi  x14, x14, 1; \
-      li  x15, 2; \
-      bne x14, x15, 1b \
-    )
-
-#define TEST_RV32C_RR_SRC12_BYPASS( testnum, src1_nops, src2_nops, inst, result, predefined_val, val1) \
-    TEST_CASE( testnum, x13, result, \
-      li  x14, 0; \
-1:    li  x11, val1; \
-      TEST_INSERT_NOPS_ ## src1_nops \
-      li  x13, predefined_val; \
-      TEST_INSERT_NOPS_ ## src2_nops \
-      inst x13, x11; \
-      addi  x14, x14, 1; \
-      li  x15, 2; \
-      bne x14, x15, 1b \
-    )
-
-#define TEST_RV32C_RR_SRC21_BYPASS( testnum, src1_nops, src2_nops, inst, result, predefined_val, val1) \
-    TEST_CASE( testnum, x13, result, \
-      li  x14, 0; \
-1:    li  x13, predefined_val; \
-      TEST_INSERT_NOPS_ ## src1_nops \
-      li  x11, val1; \
-      TEST_INSERT_NOPS_ ## src2_nops \
-      inst x13, x11; \
-      addi  x14, x14, 1; \
-      li  x15, 2; \
-      bne x14, x15, 1b \
-    )
-
-#define TEST_RV32C_BR2_OP_TAKEN( testnum, inst, val1) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x12, val1; \
-    inst x12, 2f; \
-    bne x0, TESTNUM, fail; \
-1:  bne x0, TESTNUM, 3f; \
-2:  inst x12, 1b; \
-    bne x0, TESTNUM, fail; \
-3:
-
-#define TEST_RV32C_BR2_OP_NOTTAKEN( testnum, inst, val1) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x9, val1; \
-    inst x9, 1f; \
-    bne x0, TESTNUM, 2f; \
-1:  bne x0, TESTNUM, fail; \
-2:  inst x9, 1b; \
-3:
-
-#define TEST_RV32C_BR2_SRC_BYPASS( testnum, src1_nops, inst, val1) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x6, 0; \
-1:  li  x14, val1; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    inst x14, fail; \
-    addi  x6, x6, 1; \
-    li  x5, 2; \
-    bne x6, x5, 1b \
-
-#define TEST_RV32C_JALR_SRC1_BYPASS( testnum, nop_cycles, inst ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x6, 2f; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x6; \
-    bne x0, TESTNUM, fail; \
-2:  addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_JAL_SRC1_BYPASS( testnum, nop_cycles, inst ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  TEST_INSERT_NOPS_ ## nop_cycles \
-    inst 2f; \
-    bne x0, TESTNUM, fail; \
-2:  addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define SEXT_IMM_5(x) ((x) | (-(((x) >> 5) & 1) << 5))
-
-#define TEST_RV32C_IMM_OP( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x10, result, \
-      li  x10, val1; \
-      inst x10, SEXT_IMM_5(imm); \
-    )
-
-#define TEST_RV32C_IMM_DEST_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x12, val1; \
-      inst x12, SEXT_IMM_5(imm); \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x12, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RV32C_IMM_SRC1_BYPASS( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x14, result, \
-      li  x4, 0; \
-1:    li  x14, val1; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      inst x14, SEXT_IMM_5(imm); \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define SEXT_IMM_9(x) ((x) | (-(((x) >> 9) & 1) << 9))
-
-#define TEST_RV32C_IMM_OP_SP( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x2, result, \
-      li  x2, val1; \
-      inst x2, SEXT_IMM_9(imm); \
-    )
-
-#define TEST_RV32C_IMM_DEST_BYPASS_SP( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x2, val1; \
-      inst x2, SEXT_IMM_9(imm); \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x2, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RV32C_IMM_SRC1_BYPASS_SP( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x2, result, \
-      li  x4, 0; \
-1:    li  x2, val1; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      inst x2, SEXT_IMM_9(imm); \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define ZERO_IMM_9(x) ((x) | (0 << 10))
-
-#define TEST_RV32C_IMM_OP_SP_REG( testnum, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x10, result, \
-      li  x2, val1; \
-      inst x10, x2, ZERO_IMM_9(imm); \
-    )
-
-#define TEST_RV32C_IMM_DEST_BYPASS_SP_REG( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x6, result, \
-      li  x4, 0; \
-1:    li  x2, val1; \
-      inst x11, x2, ZERO_IMM_9(imm); \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      addi  x6, x11, 0; \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RV32C_IMM_SRC1_BYPASS_SP_REG( testnum, nop_cycles, inst, result, val1, imm ) \
-    TEST_CASE( testnum, x12, result, \
-      li  x4, 0; \
-1:    li  x2, val1; \
-      TEST_INSERT_NOPS_ ## nop_cycles \
-      inst x12, x2, ZERO_IMM_9(imm); \
-      addi  x4, x4, 1; \
-      li  x5, 2; \
-      bne x4, x5, 1b \
-    )
-
-#define TEST_RV32C_LI( testnum, inst, result, imm, shamt ) \
-    TEST_CASE( testnum, x4, result, \
-      inst x4, SEXT_IMM_5(imm); \
-      sra x4, x4, shamt; \
-    )
-
-#define TEST_RV32C_LUI( testnum, inst, result, imm, shamt ) \
-    TEST_CASE( testnum, x4, result, \
-      inst x4, imm; \
-      sra x4, x4, shamt; \
-    )
-
-#define TEST_RV32C_LD_OP( testnum, inst, result, offset, base ) \
-    TEST_CASE( testnum, x13, result, \
-      la  x11, base; \
-      inst x13, offset(x11); \
-    )
-
-#define TEST_RV32C_LD_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x11, base; \
-    inst x13, offset(x11); \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    addi  x6, x13, 0; \
-    li  x29, result; \
-    bne x6, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b; \
-
-#define TEST_RV32C_LD_SRC1_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x11, base; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x13, offset(x11); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_ST_OP( testnum, load_inst, store_inst, result, offset, base ) \
-    TEST_CASE( testnum, x13, result, \
-      la  x11, base; \
-      li  x12, result; \
-      store_inst x12, offset(x11); \
-      load_inst x13, offset(x11); \
-    )
-
-#define TEST_RV32C_ST_SRC12_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x11, result; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    la  x12, base; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x11, offset(x12); \
-    load_inst x13, offset(x12); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_ST_SRC21_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x12, base; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    li  x11, result; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x11, offset(x12); \
-    load_inst x13, offset(x12); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_LDSP_OP( testnum, inst, result, offset, base ) \
-    TEST_CASE( testnum, x13, result, \
-      la  x2, base; \
-      inst x13, offset(x2); \
-    )
-
-#define TEST_RV32C_LDSP_DEST_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x2, base; \
-    inst x13, offset(x2); \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    addi  x6, x13, 0; \
-    li  x29, result; \
-    bne x6, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b; \
-
-#define TEST_RV32C_LDSP_SRC1_BYPASS( testnum, nop_cycles, inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x2, base; \
-    TEST_INSERT_NOPS_ ## nop_cycles \
-    inst x13, offset(x2); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_STSP_OP( testnum, load_inst, store_inst, result, offset, base ) \
-    TEST_CASE( testnum, x13, result, \
-      la  x2, base; \
-      li  x12, result; \
-      store_inst x12, offset(x2); \
-      load_inst x13, offset(x2); \
-    )
-
-#define TEST_RV32C_STSP_SRC12_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  li  x11, result; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    la  x2, base; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x11, offset(x2); \
-    load_inst x13, offset(x2); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#define TEST_RV32C_STSP_SRC21_BYPASS( testnum, src1_nops, src2_nops, load_inst, store_inst, result, offset, base ) \
-test_ ## testnum: \
-    li  TESTNUM, testnum; \
-    li  x4, 0; \
-1:  la  x2, base; \
-    TEST_INSERT_NOPS_ ## src1_nops \
-    li  x11, result; \
-    TEST_INSERT_NOPS_ ## src2_nops \
-    store_inst x11, offset(x2); \
-    load_inst x13, offset(x2); \
-    li  x29, result; \
-    bne x13, x29, fail; \
-    addi  x4, x4, 1; \
-    li  x5, 2; \
-    bne x4, x5, 1b \
-
-#-----------------------------------------------------------------------
-# Pass and fail code (assumes test num is in TESTNUM)
-#-----------------------------------------------------------------------
-
-#define TEST_PASSFAIL \
-        bne x0, TESTNUM, pass; \
-fail: \
-        RVTEST_FAIL; \
-pass: \
-        RVTEST_PASS \
-
-
-#-----------------------------------------------------------------------
-# Test data section
-#-----------------------------------------------------------------------
-
-#define TEST_DATA
-#endif
diff --git a/verification/asm-tests/RV32F/test.fadd_double_negative.S b/verification/asm-tests/RV32F/test.fadd_double_negative.S
deleted file mode 100644
index 7d47dbe..0000000
--- a/verification/asm-tests/RV32F/test.fadd_double_negative.S
+++ /dev/null
@@ -1,39 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fadd.s f4, f0, f1
-    fsw f4, 0(x9)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fadd.s f5, f2, f3
-    fsw f5, 4(x9)
-    fadd.s f6, f4, f5
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_double_negative_no_hazard.S b/verification/asm-tests/RV32F/test.fadd_double_negative_no_hazard.S
deleted file mode 100644
index 2fd4655..0000000
--- a/verification/asm-tests/RV32F/test.fadd_double_negative_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fadd.s f4, f0, f1
-    fadd.s f5, f2, f3
-    nop
-    nop
-    fadd.s f6, f4, f5
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_infinity.S b/verification/asm-tests/RV32F/test.fadd_infinity.S
deleted file mode 100644
index 550efb5..0000000
--- a/verification/asm-tests/RV32F/test.fadd_infinity.S
+++ /dev/null
@@ -1,39 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fadd.s f4, f0, f1
-    fsw f4, 0(x9)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fadd.s f5, f2, f3
-    fadd.s f6, f0, f2
-    fsw f6, 8(x9)
-    fsw f5, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_infinity_no_hazard.S b/verification/asm-tests/RV32F/test.fadd_infinity_no_hazard.S
deleted file mode 100644
index 87f3c33..0000000
--- a/verification/asm-tests/RV32F/test.fadd_infinity_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    nop
-    nop
-    fadd.s f4, f0, f1
-    fadd.s f5, f2, f3
-    fadd.s f6, f0, f2
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_nan.S b/verification/asm-tests/RV32F/test.fadd_nan.S
deleted file mode 100644
index 0af2c41..0000000
--- a/verification/asm-tests/RV32F/test.fadd_nan.S
+++ /dev/null
@@ -1,30 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    fadd.s f2, f0, f1
-    fadd.s f3, f1, f0
-    fadd.s f4, f2, f3
-    fsw f2, 0(x9)
-    fsw f3, 4(x9)
-    fsw f4, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_nan_no_hazard.S b/verification/asm-tests/RV32F/test.fadd_nan_no_hazard.S
deleted file mode 100644
index c4c81f3..0000000
--- a/verification/asm-tests/RV32F/test.fadd_nan_no_hazard.S
+++ /dev/null
@@ -1,34 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    nop
-    nop
-    fadd.s f2, f0, f1
-    fadd.s f3, f1, f0
-    nop
-    nop
-    fadd.s f4, f2, f3
-    fsw f2, 0(x9)
-    fsw f3, 4(x9)
-    fsw f4, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_pos_neg.S b/verification/asm-tests/RV32F/test.fadd_pos_neg.S
deleted file mode 100644
index 47f1612..0000000
--- a/verification/asm-tests/RV32F/test.fadd_pos_neg.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    #normal cases
-    fadd.s f7, f0, f1
-    fsw f7, 0(x9)
-    fadd.s f8, f2, f3
-    fsw f8, 4(x9)
-    fadd.s f9, f4, f5
-    fsw f9, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_pos_neg_no_hazard.S b/verification/asm-tests/RV32F/test.fadd_pos_neg_no_hazard.S
deleted file mode 100644
index 9ceb28d..0000000
--- a/verification/asm-tests/RV32F/test.fadd_pos_neg_no_hazard.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    #normal cases
-    fadd.s f7, f0, f1
-    fadd.s f8, f2, f3
-    fadd.s f9, f4, f5
-    fsw f7, 0(x9)
-    fsw f8, 4(x9)
-    fsw f9, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_simple.S b/verification/asm-tests/RV32F/test.fadd_simple.S
deleted file mode 100644
index 9e37d72..0000000
--- a/verification/asm-tests/RV32F/test.fadd_simple.S
+++ /dev/null
@@ -1,42 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    #normal cases
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fadd.s f4, f0, f1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fadd.s f5, f2, f3
-    fadd.s f6, f4, f5
-    fadd.s f7, f5, f6
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-    fsw f7, 12(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0x41865014 //16.7891
-test2_op1: .word 0x4b3c4efb //12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-res4: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fadd_simple_no_hazard.S b/verification/asm-tests/RV32F/test.fadd_simple_no_hazard.S
deleted file mode 100644
index 4f34805..0000000
--- a/verification/asm-tests/RV32F/test.fadd_simple_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fadd.s f4, f0, f1
-    fadd.s f5, f2, f3
-    nop
-    nop
-    fadd.s f6, f4, f5
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0x41865014 //16.7891
-test2_op1: .word 0x4b3c4efb //12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fcsr.S b/verification/asm-tests/RV32F/test.fcsr.S
deleted file mode 100644
index 3588173..0000000
--- a/verification/asm-tests/RV32F/test.fcsr.S
+++ /dev/null
@@ -1,52 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    ori a0, a0, 0xff
-    ori x4, x4, 0x25
-    la x20, test1_op1
-    flw f0, 0(x20)
-    flw f1, 4(x20)
-    la x10, fcsr_contents
-    fscsr x1, a0 #write 0xff csrrw x1, fcsr, a0
-    frcsr x0 #csrs fcsr, x0
-    sw x0, 0(x10)
-    fsrm x5, x4 #write 0x25 csrrw x5, frm, tp
-    frrm x3 #csrr x3, frm
-    sw x3, 4(x10)
-    fsflags x6, x3 #write frm into flags csrrw, x6, fflags, x3
-    frflags x7 #csrr x7, fflags
-    sw x7, 8(x10)
-    fsrmi x5, 0x3 //write 3 to frm csrrwi x5, frm, 0x3
-    sw x5, 12(x10)
-    fsflagsi x6, 0x3 //write 3 to flags csrrwi x6, fflags, 3
-    sw x6, 16(x10)
-    frcsr x8
-    sw x8, 20(x10)
-    fadd.s f3, f0, f1
-    frcsr x8
-    fsw f3, 24(x10)
-    sw x8, 28(x10)
-
-RVTEST_CODE_END
-.data
-    fcsr_contents: .word 0x00000000
-    frm_contents: .word 0x00000000
-    flag_contents: .word 0x00000000
-    frm_contents1: .word 0x00000000
-    flag_contents2: .word 0x00000000
-    final_fcsr_contents: .word 0x00000000
-    res: .word 0x00000000
-    final_fcsr_contents2: .word 0x00000000
-    test1_op1: .word 0x40b4cccd //5.65
-    test1_op2: .word 0x41865014 //16.7891
-
-RVTEST_DATA_DUMP_END
-
-
-
diff --git a/verification/asm-tests/RV32F/test.fmul_double_negative.S b/verification/asm-tests/RV32F/test.fmul_double_negative.S
deleted file mode 100644
index f66c323..0000000
--- a/verification/asm-tests/RV32F/test.fmul_double_negative.S
+++ /dev/null
@@ -1,39 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fmul.s f4, f0, f1
-    fmul.s f5, f2, f3
-    fmul.s f6, f4, f5
-    fsw f6, 8(x9)
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_double_negative_no_hazard.S b/verification/asm-tests/RV32F/test.fmul_double_negative_no_hazard.S
deleted file mode 100644
index 8d52c9d..0000000
--- a/verification/asm-tests/RV32F/test.fmul_double_negative_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fmul.s f4, f0, f1
-    fmul.s f5, f2, f3
-    nop
-    nop
-    fmul.s f6, f4, f5
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_infinity.S b/verification/asm-tests/RV32F/test.fmul_infinity.S
deleted file mode 100644
index a4f220c..0000000
--- a/verification/asm-tests/RV32F/test.fmul_infinity.S
+++ /dev/null
@@ -1,44 +0,0 @@
-
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fmul.s f4, f0, f1
-    fmul.s f5, f2, f3
-    fmul.s f6, f0, f2
-    fadd.s f7, f3, f1
-    fmul.s f8, f7, f0
-    fsw f8, 12(x9)
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-res4: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_infinity_no_hazard.S b/verification/asm-tests/RV32F/test.fmul_infinity_no_hazard.S
deleted file mode 100644
index 00f8c9e..0000000
--- a/verification/asm-tests/RV32F/test.fmul_infinity_no_hazard.S
+++ /dev/null
@@ -1,48 +0,0 @@
-
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    nop
-    nop
-    fmul.s f4, f0, f1
-    fmul.s f5, f2, f3
-    fmul.s f6, f0, f2
-    fadd.s f7, f3, f1
-    nop
-    nop
-    fmul.s f8, f7, f0
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-    fsw f8, 12(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-res4: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_nan.S b/verification/asm-tests/RV32F/test.fmul_nan.S
deleted file mode 100644
index c3d7c79..0000000
--- a/verification/asm-tests/RV32F/test.fmul_nan.S
+++ /dev/null
@@ -1,30 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    fmul.s f2, f0, f1
-    fsw f2, 0(x9)
-    fmul.s f3, f1, f0
-    fmul.s f4, f2, f3
-    fsw f3, 4(x9)
-    fsw f4, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_nan_no_hazard.S b/verification/asm-tests/RV32F/test.fmul_nan_no_hazard.S
deleted file mode 100644
index 7ccab76..0000000
--- a/verification/asm-tests/RV32F/test.fmul_nan_no_hazard.S
+++ /dev/null
@@ -1,34 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    nop
-    nop
-    fmul.s f2, f0, f1
-    fmul.s f3, f1, f0
-    nop
-    nop
-    fmul.s f4, f2, f3
-    fsw f2, 0(x9)
-    fsw f3, 4(x9)
-    fsw f4, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_pos_neg.S b/verification/asm-tests/RV32F/test.fmul_pos_neg.S
deleted file mode 100644
index 54960aa..0000000
--- a/verification/asm-tests/RV32F/test.fmul_pos_neg.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fmul.s f7, f0, f1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fmul.s f8, f2, f3
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    #normal cases
-    fmul.s f9, f4, f5
-    fsw f9, 8(x9)
-    fsw f7, 0(x9)
-    fsw f8, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_pos_neg_no_hazard.S b/verification/asm-tests/RV32F/test.fmul_pos_neg_no_hazard.S
deleted file mode 100644
index 1d6a4d7..0000000
--- a/verification/asm-tests/RV32F/test.fmul_pos_neg_no_hazard.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    #normal cases
-    fmul.s f7, f0, f1
-    fmul.s f8, f2, f3
-    fmul.s f9, f4, f5
-    fsw f7, 0(x9)
-    fsw f8, 4(x9)
-    fsw f9, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_simple.S b/verification/asm-tests/RV32F/test.fmul_simple.S
deleted file mode 100644
index 8ea64ef..0000000
--- a/verification/asm-tests/RV32F/test.fmul_simple.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fmul.s f4, f1, f0
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fmul.s f5, f2, f3
-    fmul.s f6, f4, f5
-    fmul.s f7, f5, f6
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-    fsw f7, 12(x9)
-
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b33333 //5.6
-test1_op2: .word 0x40600000 //3.5
-test2_op1: .word 0x41a4cccd //20.6
-test2_op2: .word 0x420c0000 //35
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-res4: .word 0x00000000
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmul_simple_no_hazard.S b/verification/asm-tests/RV32F/test.fmul_simple_no_hazard.S
deleted file mode 100644
index 57e0b1e..0000000
--- a/verification/asm-tests/RV32F/test.fmul_simple_no_hazard.S
+++ /dev/null
@@ -1,43 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x7)
-    flw f3, 0(x6)
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fmul.s f4, f1, f0
-    fmul.s f5, f2, f3
-    nop
-    nop
-    fmul.s f6, f4, f5
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b33333 //5.6
-test1_op2: .word 0x40600000 //3.5
-test2_op1: .word 0x41a4cccd //20.6
-test2_op2: .word 0x420c0000 //35
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fmv.S b/verification/asm-tests/RV32F/test.fmv.S
deleted file mode 100644
index 5e8aa2e..0000000
--- a/verification/asm-tests/RV32F/test.fmv.S
+++ /dev/null
@@ -1,25 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, data1
-    ori x3, x3, 0xff
-    fmv.s.x f1, x3
-    fsw f1, 8(x5)
-    flw f2, 0(x5)
-    fmv.x.s x3, f2
-    sw x3, 4(x5)
-
-    
-RVTEST_CODE_END
-.data
-data1: .word 0x12345678
-res1: .word 0x00000000
-res2: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.forwarding.S b/verification/asm-tests/RV32F/test.forwarding.S
deleted file mode 100644
index f6b3794..0000000
--- a/verification/asm-tests/RV32F/test.forwarding.S
+++ /dev/null
@@ -1,28 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    ori a0, a0, 0xff
-    ori x4, x4, 0x25
-    la x20, test1_op1
-    flw f0, 0(x20)
-    flw f1, 4(x20)
-    fadd.s f2, f0, f1
-    fmv.x.s x3, f2
-    frflags x5
-    sw x3, 8(x20)
-    sw x5, 12(x20)
-
-RVTEST_CODE_END
-.data
-    test1_op1: .float -1235.1
-    test1_op2: .float 1.1 
-    result: .word 0x00000000 
-    flags: .word 0x00000000 
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_double_negative.S b/verification/asm-tests/RV32F/test.fsub_double_negative.S
deleted file mode 100644
index f9cfd04..0000000
--- a/verification/asm-tests/RV32F/test.fsub_double_negative.S
+++ /dev/null
@@ -1,39 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fsub.s f4, f0, f1
-    fsub.s f5, f2, f3
-    fsub.s f6, f4, f5
-    fsw f6, 8(x9)
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_double_negative_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_double_negative_no_hazard.S
deleted file mode 100644
index 050c680..0000000
--- a/verification/asm-tests/RV32F/test.fsub_double_negative_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fsub.s f4, f0, f1
-    fsub.s f5, f2, f3
-    nop
-    nop
-    fsub.s f6, f4, f5
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0xc1865014 //-16.7891
-test1_op2: .word 0xcb3c4efb //-12340987.13
-test2_op1: .word 0xc428cda8 //-675.21340897
-test2_op2: .word 0xcb3c4efb //-12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_infinity.S b/verification/asm-tests/RV32F/test.fsub_infinity.S
deleted file mode 100644
index 05faa6f..0000000
--- a/verification/asm-tests/RV32F/test.fsub_infinity.S
+++ /dev/null
@@ -1,39 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    #normal cases
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fsub.s f4, f0, f1
-    fsw f4, 0(x9)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fsub.s f5, f2, f3
-    fsw f5, 4(x9)
-    fsub.s f6, f0, f2
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_infinity_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_infinity_no_hazard.S
deleted file mode 100644
index d154712..0000000
--- a/verification/asm-tests/RV32F/test.fsub_infinity_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    nop
-    nop
-    fsub.s f4, f0, f1
-    fsub.s f5, f2, f3
-    fsub.s f6, f0, f2
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x7f800000 //infinity
-test1_op2: .word 0x40d00000 //6.5
-test2_op1: .word 0xff800000 //-infinity
-test2_op2: .word 0xc0d00000 //-6.5
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_nan.S b/verification/asm-tests/RV32F/test.fsub_nan.S
deleted file mode 100644
index 98374b7..0000000
--- a/verification/asm-tests/RV32F/test.fsub_nan.S
+++ /dev/null
@@ -1,30 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    fsub.s f2, f0, f1
-    fsub.s f3, f1, f0
-    fsub.s f4, f2, f3
-    fsw f4, 8(x9)
-    fsw f2, 0(x9)
-    fsw f3, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_nan_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_nan_no_hazard.S
deleted file mode 100644
index 2d6842d..0000000
--- a/verification/asm-tests/RV32F/test.fsub_nan_no_hazard.S
+++ /dev/null
@@ -1,34 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x9, res1
-    flw f0, 0(x5)
-    #normal cases
-    nop
-    nop
-    fsub.s f2, f0, f1
-    fsub.s f3, f1, f0
-    nop
-    nop
-    fsub.s f4, f2, f3
-    fsw f2, 0(x9)
-    fsw f3, 4(x9)
-    fsw f4, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_neg_result.S b/verification/asm-tests/RV32F/test.fsub_neg_result.S
deleted file mode 100644
index b7b4913..0000000
--- a/verification/asm-tests/RV32F/test.fsub_neg_result.S
+++ /dev/null
@@ -1,37 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fsub.s f4, f0, f1
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fsub.s f5, f2, f3
-    fsw f5, 4(x9)
-    fsw f4, 0(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0x41865014 //16.7891
-test2_op1: .word 0x4b3c4efb //12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_neg_result_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_neg_result_no_hazard.S
deleted file mode 100644
index b39c4f1..0000000
--- a/verification/asm-tests/RV32F/test.fsub_neg_result_no_hazard.S
+++ /dev/null
@@ -1,37 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fsub.s f4, f0, f1
-    fsub.s f5, f2, f3
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0x41865014 //16.7891
-test2_op1: .word 0x4b3c4efb //12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_pos_neg.S b/verification/asm-tests/RV32F/test.fsub_pos_neg.S
deleted file mode 100644
index 1db750d..0000000
--- a/verification/asm-tests/RV32F/test.fsub_pos_neg.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fsub.s f7, f0, f1
-    fsw f7, 0(x9)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fsub.s f8, f2, f3
-    fsw f8, 4(x9)
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    fsub.s f9, f4, f5
-    fsw f9, 8(x9)
-    #normal cases
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_pos_neg_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_pos_neg_no_hazard.S
deleted file mode 100644
index d0b18d6..0000000
--- a/verification/asm-tests/RV32F/test.fsub_pos_neg_no_hazard.S
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    la x10,test3_op1
-    la x11, test3_op2
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    flw f4, 0(x10)
-    flw f5, 0(x11)
-    #normal cases
-    fsub.s f7, f0, f1
-    fsub.s f8, f2, f3
-    fsub.s f9, f4, f5
-    fsw f7, 0(x9)
-    fsw f8, 4(x9)
-    fsw f9, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0xc1865014 //-16.7891
-test2_op1: .word 0xcb3c4efb //-12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-test3_op1: .word 0xcb3c4efb //-12340987.13
-test3_op2: .word 0x4b3c4efb //12340987.13
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_simple.S b/verification/asm-tests/RV32F/test.fsub_simple.S
deleted file mode 100644
index 34e2d5a..0000000
--- a/verification/asm-tests/RV32F/test.fsub_simple.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    fsub.s f4, f1, f0
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    fsub.s f5, f2, f3
-    fsub.s f6, f4, f5
-    fsub.s f7, f5, f6
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-    fsw f7, 12(x9)
-
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b33333 //5.6
-test1_op2: .word 0x40600000 //3.5
-test2_op1: .word 0x41a4cccd //20.6
-test2_op2: .word 0x420c0000 //35
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-res4: .word 0x00000000
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.fsub_simple_no_hazard.S b/verification/asm-tests/RV32F/test.fsub_simple_no_hazard.S
deleted file mode 100644
index 56e1b61..0000000
--- a/verification/asm-tests/RV32F/test.fsub_simple_no_hazard.S
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x5, test1_op1
-    la x6, test1_op2
-    la x7, test2_op1
-    la x8, test2_op2
-    la x9, res1
-    flw f0, 0(x5)
-    flw f1, 0(x6)
-    flw f2, 0(x7)
-    flw f3, 0(x8)
-    #normal cases
-    fsub.s f4, f1, f0
-    fsub.s f5, f3, f2
-    nop
-    nop
-    fsub.s f6, f5, f4
-    fsw f4, 0(x9)
-    fsw f5, 4(x9)
-    fsw f6, 8(x9)
-
-
-RVTEST_CODE_END
-
-.data
-test1_op1: .word 0x40b4cccd //5.65
-test1_op2: .word 0x41865014 //16.7891
-test2_op1: .word 0x4b3c4efb //12340987.13
-test2_op2: .word 0x5256aa7a //230495780987.1
-res1: .word 0x00000000
-res2: .word 0x00000000
-res3: .word 0x00000000
-
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.loadstore.S b/verification/asm-tests/RV32F/test.loadstore.S
deleted file mode 100644
index c86ef3b..0000000
--- a/verification/asm-tests/RV32F/test.loadstore.S
+++ /dev/null
@@ -1,30 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x6, tdat0
-    flw f0, 0(x6) 
-    fsw f0, 12(x6)
-    flw f1, 4(x6) 
-    fsw f1, 16(x6)
-    flw f2, 8(x6) 
-    fsw f2, 20(x6)
-    fadd.s f3, f1, f30
-    fsw f3, 24(x6)
-
-RVTEST_CODE_END
-
-.data
-tdat0: .word 0x00000001
-tdat1: .word 0x00000002
-tdat2: .word 0x00000015
-tdat3: .word 0x00000000
-tdat4: .word 0x00000000
-tdat5: .word 0x00000000
-tdat6: .word 0x00000000
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32F/test.loadstore_no_hazard.S b/verification/asm-tests/RV32F/test.loadstore_no_hazard.S
deleted file mode 100644
index 8eca0be..0000000
--- a/verification/asm-tests/RV32F/test.loadstore_no_hazard.S
+++ /dev/null
@@ -1,30 +0,0 @@
-#include "riscv_test.h"
-
-RVTEST_DATA_DUMP_BEGIN
-RVTEST_CODE_BEGIN
-
-main:
-    ori x1, x0, 1
-    sll x1, x1, 13
-    csrrs x2, mstatus, x1
-    la x6, tdat0
-    flw f0, 0(x6) 
-    flw f1, 4(x6) 
-    flw f2, 8(x6) 
-    fadd.s f3, f1, f30
-    fsw f0, 12(x6)
-    fsw f1, 16(x6)
-    fsw f2, 20(x6)
-    fsw f3, 24(x6)
-
-RVTEST_CODE_END
-
-.data
-tdat0: .word 0x00000001
-tdat1: .word 0x00000002
-tdat2: .word 0x00000015
-tdat3: .word 0x00000000
-tdat4: .word 0x00000000
-tdat5: .word 0x00000000
-tdat6: .word 0x00000000
-RVTEST_DATA_DUMP_END
diff --git a/verification/asm-tests/RV32M/mul.S b/verification/asm-tests/RV32M/mul.S
new file mode 100644
index 0000000..b7be94f
--- /dev/null
+++ b/verification/asm-tests/RV32M/mul.S
@@ -0,0 +1,52 @@
+/*
+*   Copyright 2016 Purdue University
+*   
+*   Licensed under the Apache License, Version 2.0 (the "License");
+*   you may not use this file except in compliance with the License.
+*   You may obtain a copy of the License at
+*   
+*       http://www.apache.org/licenses/LICENSE-2.0
+*   
+*   Unless required by applicable law or agreed to in writing, software
+*   distributed under the License is distributed on an "AS IS" BASIS,
+*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+*   See the License for the specific language governing permissions and
+*   limitations under the License.
+*
+*
+*   Filename:     basic_branch.S
+*
+*   Created by:   Jacob R. Stevens
+*   Email:        steven69@purdue.edu
+*   Date Created: 07/01/2016
+*   Description:  Test of basic branching behavior
+*/
+
+
+.section .text
+.global _start
+
+_start:
+    li x1, 5
+    li x2, 5
+    mul x3, x1, x2
+    la x6, tdat0
+    sw x3, 0(x6)
+
+    la      t1, tohost
+    li      t2, 1
+    sw      t2, 0(t1)
+
+
+
+
+.section .tohost, "aw", @progbits
+.globl tohost
+.align 4
+tohost: .dword 0
+.globl fromhost
+.align 4
+fromhost: .dword 0
+.data
+#test data goes here
+tdat0:  .word 0x00000080
\ No newline at end of file
diff --git a/verification/self-tests/RV32F/fadd.S b/verification/self-tests/RV32F/fadd.S
deleted file mode 100644
index ccf73d8..0000000
--- a/verification/self-tests/RV32F/fadd.S
+++ /dev/null
@@ -1,44 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fadd.S
-#-----------------------------------------------------------------------------
-#
-# Test f{add|sub|mul}.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  #TEST_FP_OP2_S( 2,  fadd.s, 0,                3.5,        2.5,        1.0 );
-  #TEST_FP_OP2_S( 3,  fadd.s, 1,              -1234,    -1235.1,        1.1 );
-  #TEST_FP_OP2_S( 4,  fadd.s, 1,         3.14159265, 3.14159265, 0.00000001 );
-
-  #TEST_FP_OP2_S( 5,  fsub.s, 0,                1.5,        2.5,        1.0 );
-  #TEST_FP_OP2_S( 6,  fsub.s, 1,              -1234,    -1235.1,       -1.1 );
-  #TEST_FP_OP2_S( 7,  fsub.s, 1,         3.14159265, 3.14159265, 0.00000001 );
-
-  TEST_FP_OP2_S( 8,  fmul.s, 0,                2.5,        2.5,        1.0 );
-  #TEST_FP_OP2_S( 9,  fmul.s, 1,            1358.61,    -1235.1,       -1.1 );
-  #TEST_FP_OP2_S(10,  fmul.s, 1,      3.14159265e-8, 3.14159265, 0.00000001 );
-
-  # Is the canonical NaN generated for Inf - Inf?
-  TEST_FP_OP2_S(11,  fsub.s, 0x10, qNaNf, Inf, Inf);
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fclass.S b/verification/self-tests/RV32F/fclass.S
deleted file mode 100644
index 39eda52..0000000
--- a/verification/self-tests/RV32F/fclass.S
+++ /dev/null
@@ -1,40 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fclass.S
-#-----------------------------------------------------------------------------
-#
-# Test fclass.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FCLASS_S( 2, 1 << 0, 0xff800000 )
-  TEST_FCLASS_S( 3, 1 << 1, 0xbf800000 )
-  TEST_FCLASS_S( 4, 1 << 2, 0x807fffff )
-  TEST_FCLASS_S( 5, 1 << 3, 0x80000000 )
-  TEST_FCLASS_S( 6, 1 << 4, 0x00000000 )
-  TEST_FCLASS_S( 7, 1 << 5, 0x007fffff )
-  TEST_FCLASS_S( 8, 1 << 6, 0x3f800000 )
-  TEST_FCLASS_S( 9, 1 << 7, 0x7f800000 )
-  TEST_FCLASS_S(10, 1 << 8, 0x7f800001 )
-  TEST_FCLASS_S(11, 1 << 9, 0x7fc00000 )
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fcmp.S b/verification/self-tests/RV32F/fcmp.S
deleted file mode 100644
index 00628ec..0000000
--- a/verification/self-tests/RV32F/fcmp.S
+++ /dev/null
@@ -1,50 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fcmp.S
-#-----------------------------------------------------------------------------
-#
-# Test f{eq|lt|le}.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FP_CMP_OP_S( 2, feq.s, 0x00, 1, -1.36, -1.36)
-  TEST_FP_CMP_OP_S( 3, fle.s, 0x00, 1, -1.36, -1.36)
-  TEST_FP_CMP_OP_S( 4, flt.s, 0x00, 0, -1.36, -1.36)
-
-  TEST_FP_CMP_OP_S( 5, feq.s, 0x00, 0, -1.37, -1.36)
-  TEST_FP_CMP_OP_S( 6, fle.s, 0x00, 1, -1.37, -1.36)
-  TEST_FP_CMP_OP_S( 7, flt.s, 0x00, 1, -1.37, -1.36)
-
-  # Only sNaN should signal invalid for feq.
-  TEST_FP_CMP_OP_S( 8, feq.s, 0x00, 0, NaN, 0)
-  TEST_FP_CMP_OP_S( 9, feq.s, 0x00, 0, NaN, NaN)
-  TEST_FP_CMP_OP_S(10, feq.s, 0x10, 0, sNaNf, 0)
-
-  # qNaN should signal invalid for fle/flt.
-  TEST_FP_CMP_OP_S(11, flt.s, 0x10, 0, NaN, 0)
-  TEST_FP_CMP_OP_S(12, flt.s, 0x10, 0, NaN, NaN)
-  TEST_FP_CMP_OP_S(13, flt.s, 0x10, 0, sNaNf, 0)
-  TEST_FP_CMP_OP_S(14, fle.s, 0x10, 0, NaN, 0)
-  TEST_FP_CMP_OP_S(15, fle.s, 0x10, 0, NaN, NaN)
-  TEST_FP_CMP_OP_S(16, fle.s, 0x10, 0, sNaNf, 0)
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fcvt.S b/verification/self-tests/RV32F/fcvt.S
deleted file mode 100644
index 228eee5..0000000
--- a/verification/self-tests/RV32F/fcvt.S
+++ /dev/null
@@ -1,43 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fcvt.S
-#-----------------------------------------------------------------------------
-#
-# Test fcvt.s.{wu|w|lu|l}, fcvt.s.d, and fcvt.d.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_INT_FP_OP_S( 2,  fcvt.s.w,                   2.0,  2);
-  TEST_INT_FP_OP_S( 3,  fcvt.s.w,                  -2.0, -2);
-
-  TEST_INT_FP_OP_S( 4, fcvt.s.wu,                   2.0,  2);
-  TEST_INT_FP_OP_S( 5, fcvt.s.wu,           4.2949673e9, -2);
-
-#if __riscv_xlen >= 64
-  TEST_INT_FP_OP_S( 6,  fcvt.s.l,                   2.0,  2);
-  TEST_INT_FP_OP_S( 7,  fcvt.s.l,                  -2.0, -2);
-
-  TEST_INT_FP_OP_S( 8, fcvt.s.lu,                   2.0,  2);
-  TEST_INT_FP_OP_S( 9, fcvt.s.lu,          1.8446744e19, -2);
-#endif
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fcvt_w.S b/verification/self-tests/RV32F/fcvt_w.S
deleted file mode 100644
index f2ab5f4..0000000
--- a/verification/self-tests/RV32F/fcvt_w.S
+++ /dev/null
@@ -1,105 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fcvt_w.S
-#-----------------------------------------------------------------------------
-#
-# Test fcvt{wu|w|lu|l}.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FP_INT_OP_S( 2,  fcvt.w.s, 0x01,         -1, -1.1, rtz);
-  TEST_FP_INT_OP_S( 3,  fcvt.w.s, 0x00,         -1, -1.0, rtz);
-  TEST_FP_INT_OP_S( 4,  fcvt.w.s, 0x01,          0, -0.9, rtz);
-  TEST_FP_INT_OP_S( 5,  fcvt.w.s, 0x01,          0,  0.9, rtz);
-  TEST_FP_INT_OP_S( 6,  fcvt.w.s, 0x00,          1,  1.0, rtz);
-  TEST_FP_INT_OP_S( 7,  fcvt.w.s, 0x01,          1,  1.1, rtz);
-  TEST_FP_INT_OP_S( 8,  fcvt.w.s, 0x10,     -1<<31, -3e9, rtz);
-  TEST_FP_INT_OP_S( 9,  fcvt.w.s, 0x10,  (1<<31)-1,  3e9, rtz);
-
-  TEST_FP_INT_OP_S(12, fcvt.wu.s, 0x10,          0, -3.0, rtz);
-  TEST_FP_INT_OP_S(13, fcvt.wu.s, 0x10,          0, -1.0, rtz);
-  TEST_FP_INT_OP_S(14, fcvt.wu.s, 0x01,          0, -0.9, rtz);
-  TEST_FP_INT_OP_S(15, fcvt.wu.s, 0x01,          0,  0.9, rtz);
-  TEST_FP_INT_OP_S(16, fcvt.wu.s, 0x00,          1,  1.0, rtz);
-  TEST_FP_INT_OP_S(17, fcvt.wu.s, 0x01,          1,  1.1, rtz);
-  TEST_FP_INT_OP_S(18, fcvt.wu.s, 0x10,          0, -3e9, rtz);
-  TEST_FP_INT_OP_S(19, fcvt.wu.s, 0x00, 3000000000,  3e9, rtz);
-
-#if __riscv_xlen >= 64
-  TEST_FP_INT_OP_S(22,  fcvt.l.s, 0x01,         -1, -1.1, rtz);
-  TEST_FP_INT_OP_S(23,  fcvt.l.s, 0x00,         -1, -1.0, rtz);
-  TEST_FP_INT_OP_S(24,  fcvt.l.s, 0x01,          0, -0.9, rtz);
-  TEST_FP_INT_OP_S(25,  fcvt.l.s, 0x01,          0,  0.9, rtz);
-  TEST_FP_INT_OP_S(26,  fcvt.l.s, 0x00,          1,  1.0, rtz);
-  TEST_FP_INT_OP_S(27,  fcvt.l.s, 0x01,          1,  1.1, rtz);
-
-  TEST_FP_INT_OP_S(32, fcvt.lu.s, 0x10,          0, -3.0, rtz);
-  TEST_FP_INT_OP_S(33, fcvt.lu.s, 0x10,          0, -1.0, rtz);
-  TEST_FP_INT_OP_S(34, fcvt.lu.s, 0x01,          0, -0.9, rtz);
-  TEST_FP_INT_OP_S(35, fcvt.lu.s, 0x01,          0,  0.9, rtz);
-  TEST_FP_INT_OP_S(36, fcvt.lu.s, 0x00,          1,  1.0, rtz);
-  TEST_FP_INT_OP_S(37, fcvt.lu.s, 0x01,          1,  1.1, rtz);
-  TEST_FP_INT_OP_S(38, fcvt.lu.s, 0x10,          0, -3e9, rtz);
-#endif
-
-  # test negative NaN, negative infinity conversion
-  TEST_CASE( 42, x1, 0x000000007fffffff, la x1, tdat  ; flw f1,  0(x1); fcvt.w.s x1, f1)
-  TEST_CASE( 44, x1, 0xffffffff80000000, la x1, tdat  ; flw f1,  8(x1); fcvt.w.s x1, f1)
-#if __riscv_xlen >= 64
-  TEST_CASE( 43, x1, 0x7fffffffffffffff, la x1, tdat  ; flw f1,  0(x1); fcvt.l.s x1, f1)
-  TEST_CASE( 45, x1, 0x8000000000000000, la x1, tdat  ; flw f1,  8(x1); fcvt.l.s x1, f1)
-#endif
-
-  # test positive NaN, positive infinity conversion
-  TEST_CASE( 52, x1, 0x000000007fffffff, la x1, tdat  ; flw f1,  4(x1); fcvt.w.s x1, f1)
-  TEST_CASE( 54, x1, 0x000000007fffffff, la x1, tdat  ; flw f1, 12(x1); fcvt.w.s x1, f1)
-#if __riscv_xlen >= 64
-  TEST_CASE( 53, x1, 0x7fffffffffffffff, la x1, tdat  ; flw f1,  4(x1); fcvt.l.s x1, f1)
-  TEST_CASE( 55, x1, 0x7fffffffffffffff, la x1, tdat  ; flw f1, 12(x1); fcvt.l.s x1, f1)
-#endif
-
-  # test NaN, infinity conversions to unsigned integer
-  TEST_CASE( 62, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1,  0(x1); fcvt.wu.s x1, f1)
-  TEST_CASE( 63, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1,  4(x1); fcvt.wu.s x1, f1)
-  TEST_CASE( 64, x1,                  0, la x1, tdat  ; flw f1,  8(x1); fcvt.wu.s x1, f1)
-  TEST_CASE( 65, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1, 12(x1); fcvt.wu.s x1, f1)
-#if __riscv_xlen >= 64
-  TEST_CASE( 66, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1,  0(x1); fcvt.lu.s x1, f1)
-  TEST_CASE( 67, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1,  4(x1); fcvt.lu.s x1, f1)
-  TEST_CASE( 68, x1,                  0, la x1, tdat  ; flw f1,  8(x1); fcvt.lu.s x1, f1)
-  TEST_CASE( 69, x1, 0xffffffffffffffff, la x1, tdat  ; flw f1, 12(x1); fcvt.lu.s x1, f1)
-#endif
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-# -NaN, NaN, -inf, +inf
-tdat:
-.word 0xffffffff
-.word 0x7fffffff
-.word 0xff800000
-.word 0x7f800000
-
-tdat_d:
-.dword 0xffffffffffffffff
-.dword 0x7fffffffffffffff
-.dword 0xfff0000000000000
-.dword 0x7ff0000000000000
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fdiv.S b/verification/self-tests/RV32F/fdiv.S
deleted file mode 100644
index 7c47e70..0000000
--- a/verification/self-tests/RV32F/fdiv.S
+++ /dev/null
@@ -1,40 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fdiv.S
-#-----------------------------------------------------------------------------
-#
-# Test f{div|sqrt}.s instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FP_OP2_S(2,  fdiv.s, 1, 1.1557273520668288, 3.14159265, 2.71828182 );
-  TEST_FP_OP2_S(3,  fdiv.s, 1,-0.9991093838555584,      -1234,     1235.1 );
-  TEST_FP_OP2_S(4,  fdiv.s, 0,         3.14159265, 3.14159265,        1.0 );
-
-  TEST_FP_OP1_S(5,  fsqrt.s, 1, 1.7724538498928541, 3.14159265 );
-  TEST_FP_OP1_S(6,  fsqrt.s, 0,                100,      10000 );
-
-  TEST_FP_OP1_S_DWORD_RESULT(7,  fsqrt.s, 0x10, 0x7FC00000, -1.0 );
-
-  TEST_FP_OP1_S(8,  fsqrt.s, 1, 13.076696, 171.0);
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fmadd.S b/verification/self-tests/RV32F/fmadd.S
deleted file mode 100644
index 6c9f6ee..0000000
--- a/verification/self-tests/RV32F/fmadd.S
+++ /dev/null
@@ -1,45 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fmadd.S
-#-----------------------------------------------------------------------------
-#
-# Test f[n]m{add|sub}.s and f[n]m{add|sub}.d instructions.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FP_OP3_S( 2,  fmadd.s, 0,                 3.5,  1.0,        2.5,        1.0 );
-  TEST_FP_OP3_S( 3,  fmadd.s, 1,              1236.2, -1.0,    -1235.1,        1.1 );
-  TEST_FP_OP3_S( 4,  fmadd.s, 0,               -12.0,  2.0,       -5.0,       -2.0 );
-
-  TEST_FP_OP3_S( 5, fnmadd.s, 0,                -3.5,  1.0,        2.5,        1.0 );
-  TEST_FP_OP3_S( 6, fnmadd.s, 1,             -1236.2, -1.0,    -1235.1,        1.1 );
-  TEST_FP_OP3_S( 7, fnmadd.s, 0,                12.0,  2.0,       -5.0,       -2.0 );
-
-  TEST_FP_OP3_S( 8,  fmsub.s, 0,                 1.5,  1.0,        2.5,        1.0 );
-  TEST_FP_OP3_S( 9,  fmsub.s, 1,                1234, -1.0,    -1235.1,        1.1 );
-  TEST_FP_OP3_S(10,  fmsub.s, 0,                -8.0,  2.0,       -5.0,       -2.0 );
-
-  TEST_FP_OP3_S(11, fnmsub.s, 0,                -1.5,  1.0,        2.5,        1.0 );
-  TEST_FP_OP3_S(12, fnmsub.s, 1,               -1234, -1.0,    -1235.1,        1.1 );
-  TEST_FP_OP3_S(13, fnmsub.s, 0,                 8.0,  2.0,       -5.0,       -2.0 );
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/fmin.S b/verification/self-tests/RV32F/fmin.S
deleted file mode 100644
index cb9587b..0000000
--- a/verification/self-tests/RV32F/fmin.S
+++ /dev/null
@@ -1,54 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# fmin.S
-#-----------------------------------------------------------------------------
-#
-# Test f{min|max}.s instructinos.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  #-------------------------------------------------------------
-  # Arithmetic tests
-  #-------------------------------------------------------------
-
-  TEST_FP_OP2_S( 2,  fmin.s, 0,        1.0,        2.5,        1.0 );
-  TEST_FP_OP2_S( 3,  fmin.s, 0,    -1235.1,    -1235.1,        1.1 );
-  TEST_FP_OP2_S( 4,  fmin.s, 0,    -1235.1,        1.1,    -1235.1 );
-  TEST_FP_OP2_S( 5,  fmin.s, 0,    -1235.1,        NaN,    -1235.1 );
-  TEST_FP_OP2_S( 6,  fmin.s, 0, 0.00000001, 3.14159265, 0.00000001 );
-  TEST_FP_OP2_S( 7,  fmin.s, 0,       -2.0,       -1.0,       -2.0 );
-
-  TEST_FP_OP2_S(12,  fmax.s, 0,        2.5,        2.5,        1.0 );
-  TEST_FP_OP2_S(13,  fmax.s, 0,        1.1,    -1235.1,        1.1 );
-  TEST_FP_OP2_S(14,  fmax.s, 0,        1.1,        1.1,    -1235.1 );
-  TEST_FP_OP2_S(15,  fmax.s, 0,    -1235.1,        NaN,    -1235.1 );
-  TEST_FP_OP2_S(16,  fmax.s, 0, 3.14159265, 3.14159265, 0.00000001 );
-  TEST_FP_OP2_S(17,  fmax.s, 0,       -1.0,       -1.0,       -2.0 );
-
-  # FMAX(sNaN, x) = x
-  TEST_FP_OP2_S(20,  fmax.s, 0x10, 1.0, sNaNf, 1.0);
-  # FMAX(qNaN, qNaN) = canonical NaN
-  TEST_FP_OP2_S(21,  fmax.s, 0x00, qNaNf, NaN, NaN);
-
-  # -0.0 < +0.0
-  TEST_FP_OP2_S(30,  fmin.s, 0,       -0.0,       -0.0,        0.0 );
-  TEST_FP_OP2_S(31,  fmin.s, 0,       -0.0,        0.0,       -0.0 );
-  TEST_FP_OP2_S(32,  fmax.s, 0,        0.0,       -0.0,        0.0 );
-  TEST_FP_OP2_S(33,  fmax.s, 0,        0.0,        0.0,       -0.0 );
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/ldst.S b/verification/self-tests/RV32F/ldst.S
deleted file mode 100644
index 01f7fef..0000000
--- a/verification/self-tests/RV32F/ldst.S
+++ /dev/null
@@ -1,38 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# ldst.S
-#-----------------------------------------------------------------------------
-#
-# This test verifies that flw, fld, fsw, and fsd work properly.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  TEST_CASE(2, a0, 0x40000000, la a1, tdat; flw f1, 4(a1); fsw f1, 20(a1); lw a0, 20(a1))
-  TEST_CASE(3, a0, 0xbf800000, la a1, tdat; flw f1, 0(a1); fsw f1, 24(a1); lw a0, 24(a1))
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-tdat:
-.word 0xbf800000
-.word 0x40000000
-.word 0x40400000
-.word 0xc0800000
-.word 0xdeadbeef
-.word 0xcafebabe
-.word 0xabad1dea
-.word 0x1337d00d
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/move.S b/verification/self-tests/RV32F/move.S
deleted file mode 100644
index 8c61590..0000000
--- a/verification/self-tests/RV32F/move.S
+++ /dev/null
@@ -1,58 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# move.S
-#-----------------------------------------------------------------------------
-#
-# This test verifies that the fmv.s.x, fmv.x.s, and fsgnj[x|n].d instructions
-# and the fcsr work properly.
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  TEST_CASE(2, a1, 1, csrwi fcsr, 1; li a0, 0x1234; fssr a1, a0)
-  TEST_CASE(3, a0, 0x34, frsr a0)
-  TEST_CASE(4, a0, 0x14, frflags a0)
-  TEST_CASE(5, a0, 0x01, csrrwi a0, frm, 2)
-  TEST_CASE(6, a0, 0x54, frsr a0)
-  TEST_CASE(7, a0, 0x14, csrrci a0, fflags, 4)
-  TEST_CASE(8, a0, 0x50, frsr a0)
-
-#define TEST_FSGNJS(n, insn, new_sign, rs1_sign, rs2_sign) \
-  TEST_CASE(n, a0, 0x12345678 | (-(new_sign) << 31), \
-    li a1, ((rs1_sign) << 31) | 0x12345678; \
-    li a2, -(rs2_sign); \
-    fmv.s.x f1, a1; \
-    fmv.s.x f2, a2; \
-    insn f0, f1, f2; \
-    fmv.x.s a0, f0)
-
-  TEST_FSGNJS(10, fsgnj.s, 0, 0, 0)
-  TEST_FSGNJS(11, fsgnj.s, 1, 0, 1)
-  TEST_FSGNJS(12, fsgnj.s, 0, 1, 0)
-  TEST_FSGNJS(13, fsgnj.s, 1, 1, 1)
-
-  TEST_FSGNJS(20, fsgnjn.s, 1, 0, 0)
-  TEST_FSGNJS(21, fsgnjn.s, 0, 0, 1)
-  TEST_FSGNJS(22, fsgnjn.s, 1, 1, 0)
-  TEST_FSGNJS(23, fsgnjn.s, 0, 1, 1)
-
-  TEST_FSGNJS(30, fsgnjx.s, 0, 0, 0)
-  TEST_FSGNJS(31, fsgnjx.s, 1, 0, 1)
-  TEST_FSGNJS(32, fsgnjx.s, 1, 1, 0)
-  TEST_FSGNJS(33, fsgnjx.s, 0, 1, 1)
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-  TEST_DATA
-
-RVTEST_DATA_END
diff --git a/verification/self-tests/RV32F/recoding.S b/verification/self-tests/RV32F/recoding.S
deleted file mode 100644
index f6af059..0000000
--- a/verification/self-tests/RV32F/recoding.S
+++ /dev/null
@@ -1,46 +0,0 @@
-# See LICENSE for license details.
-
-#*****************************************************************************
-# recoding.S
-#-----------------------------------------------------------------------------
-#
-# Test corner cases of John Hauser's microarchitectural recoding scheme.
-# There are twice as many recoded values as IEEE-754 values; some of these
-# extras are redundant (e.g. Inf) and others are illegal (subnormals with
-# too many bits set).
-#
-
-#include "riscv_test.h"
-#include "test_macros.h"
-
-RVTEST_RV32UF
-RVTEST_CODE_BEGIN
-
-  # Make sure infinities with different mantissas compare as equal.
-  flw f0, minf, a0
-  flw f1, three, a0
-  fmul.s f1, f1, f0
-  TEST_CASE( 2, a0, 1, feq.s a0, f0, f1)
-  TEST_CASE( 3, a0, 1, fle.s a0, f0, f1)
-  TEST_CASE( 4, a0, 0, flt.s a0, f0, f1)
-
-  # Likewise, but for zeroes.
-  fcvt.s.w f0, x0
-  li a0, 1
-  fcvt.s.w f1, a0
-  fmul.s f1, f1, f0
-  TEST_CASE(5, a0, 1, feq.s a0, f0, f1)
-  TEST_CASE(6, a0, 1, fle.s a0, f0, f1)
-  TEST_CASE(7, a0, 0, flt.s a0, f0, f1)
-
-  TEST_PASSFAIL
-
-RVTEST_CODE_END
-
-  .data
-RVTEST_DATA_BEGIN
-
-minf: .float -Inf
-three: .float 3.0
-
-RVTEST_DATA_END
