diff --git a/isa/Makefile b/isa/Makefile
index bf85e1f..0a45c5d 100644
--- a/isa/Makefile
+++ b/isa/Makefile
@@ -45,7 +45,7 @@ default: all
 
 RISCV_PREFIX ?= riscv$(XLEN)-unknown-elf-
 RISCV_GCC ?= $(RISCV_PREFIX)gcc
-RISCV_GCC_OPTS ?= -static -mcmodel=medany -fvisibility=hidden -nostdlib -nostartfiles
+RISCV_GCC_OPTS ?= -static -mcmodel=medany -fvisibility=hidden -nostdlib -nostartfiles -Oz
 RISCV_OBJDUMP ?= $(RISCV_PREFIX)objdump --disassemble-all --disassemble-zeroes --section=.text --section=.text.startup --section=.text.init --section=.data
 RISCV_SIM ?= spike
 
@@ -66,7 +66,13 @@ vpath %.S $(src_dir)
 define compile_template
 
 $$($(1)_p_tests): $(1)-p-%: $(1)/%.S
+ifeq ($(1), rv32mi)
 	$$(RISCV_GCC) $(2) $$(RISCV_GCC_OPTS) -I$(src_dir)/../env/p -I$(src_dir)/macros/scalar -T$(src_dir)/../env/p/link.ld $$< -o $$@
+else ifeq ($(1), rv32si)
+	$$(RISCV_GCC) $(2) $$(RISCV_GCC_OPTS) -I$(src_dir)/../env/p -I$(src_dir)/macros/scalar -T$(src_dir)/../env/p/link.ld $$< -o $$@
+else
+	$$(RISCV_GCC) $(2) $$(RISCV_GCC_OPTS) -I$(src_dir)/../env/p -I$(src_dir)/macros/scalar -T$(src_dir)/../env/p/link.ld $$< $(src_dir)/../env/v/amo_emu.c -o $$@
+endif
 $(1)_tests += $$($(1)_p_tests)
 
 $$($(1)_v_tests): $(1)-v-%: $(1)/%.S
diff --git a/isa/rv64ua/amoadd_w.S b/isa/rv64ua/amoadd_w.S
index d076d45..05e28b8 100644
--- a/isa/rv64ua/amoadd_w.S
+++ b/isa/rv64ua/amoadd_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amoand_w.S b/isa/rv64ua/amoand_w.S
index 7fe3bd0..06fe442 100644
--- a/isa/rv64ua/amoand_w.S
+++ b/isa/rv64ua/amoand_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amomax_w.S b/isa/rv64ua/amomax_w.S
index 2c42982..0eb6005 100644
--- a/isa/rv64ua/amomax_w.S
+++ b/isa/rv64ua/amomax_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amomaxu_w.S b/isa/rv64ua/amomaxu_w.S
index 6eabcd2..8673c0a 100644
--- a/isa/rv64ua/amomaxu_w.S
+++ b/isa/rv64ua/amomaxu_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amomin_w.S b/isa/rv64ua/amomin_w.S
index 754f64d..5f43909 100644
--- a/isa/rv64ua/amomin_w.S
+++ b/isa/rv64ua/amomin_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amominu_w.S b/isa/rv64ua/amominu_w.S
index d04a650..925470c 100644
--- a/isa/rv64ua/amominu_w.S
+++ b/isa/rv64ua/amominu_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amoor_w.S b/isa/rv64ua/amoor_w.S
index e64b8c2..3dee9cd 100644
--- a/isa/rv64ua/amoor_w.S
+++ b/isa/rv64ua/amoor_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amoswap_w.S b/isa/rv64ua/amoswap_w.S
index c4276dc..f73cb80 100644
--- a/isa/rv64ua/amoswap_w.S
+++ b/isa/rv64ua/amoswap_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/amoxor_w.S b/isa/rv64ua/amoxor_w.S
index 1b6fc48..6098aae 100644
--- a/isa/rv64ua/amoxor_w.S
+++ b/isa/rv64ua/amoxor_w.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
   TEST_CASE(2, a4, 0xffffffff80000000, \
     li a0, 0xffffffff80000000; \
diff --git a/isa/rv64ua/lrsc.S b/isa/rv64ua/lrsc.S
index 39fb156..93e2e4c 100644
--- a/isa/rv64ua/lrsc.S
+++ b/isa/rv64ua/lrsc.S
@@ -12,6 +12,7 @@
 
 RVTEST_RV64U
 RVTEST_CODE_BEGIN
+RVTEST_WANT_AMO_EMU
 
 # get a unique core id
 la a0, coreid
