# SimVision Command Script (Mon Mar 28 08:25:23 PM EDT 2022)
#
# Version 15.20.s030
#
# You can restore this configuration with:
#
#     simvision -input cachetb.svcf
#  or simvision -input cachetb.svcf database1 database2 ...
#


#
# Preferences
#
preferences set plugin-enable-svdatabrowser-new 1
preferences set toolbar-sendToIndago-WaveWindow {
  usual
  position -pos 1
}
preferences set toolbar-Standard-Console {
  usual
  position -pos 1
}
preferences set toolbar-Search-Console {
  usual
  position -pos 2
}
preferences set plugin-enable-groupscope 0
preferences set plugin-enable-interleaveandcompare 0
preferences set plugin-enable-waveformfrequencyplot 0

#
# PPE data
#
array set dbNames ""
set dbNames(realName1) [database require waves -hints {
	file ./waves.shm/waves.trn
	file /home/asicfab/a/socet52/Caches/RISCVBusiness/source_code/caches/l1/waves.shm/waves.trn
}]
#
# Groups
#
catch {group new -name mem_gen_bus_if -overlay 0}
catch {group new -name proc_gen_bus_if -overlay 0}
group using mem_gen_bus_if
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.wen}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.wdata[31:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.ren}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.rdata[31:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.byte_en[3:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.busy}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.mem_gen_bus_if.generic_bus.addr[31:0]}]} ]
group using proc_gen_bus_if
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.wen}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.wdata[31:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.ren}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.rdata[31:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.byte_en[3:0]}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.busy}]} ] \
    [subst  {$dbNames(realName1)::[format {tb_l1_cache.proc_gen_bus_if.cpu.addr[31:0]}]} ]

#
# Mnemonic Maps
#
mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 1" -geometry 730x500+261+33}] != ""} {
    window geometry "Design Browser 1" 730x500+261+33
}
window target "Design Browser 1" on
browser using {Design Browser 1}
browser set -scope [subst  {$dbNames(realName1)::[format {tb_l1_cache.DUT}]} ]
browser set \
    -signalsort name
browser yview see [subst  {$dbNames(realName1)::[format {tb_l1_cache.DUT}]} ]
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1920x977+-1+27}] != ""} {
    window geometry "Waveform 1" 1920x977+-1+27
}
window target "Waveform 1" on
waveform using {Waveform 1}
waveform sidebar visibility partial
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 175 \
    -units ns \
    -valuewidth 75
waveform baseline set -time 0

set id [waveform add -signals [subst  {
	{$dbNames(realName1)::[format {tb_l1_cache.TB_DUT.test_case}]}
	} ]]
set id [waveform add -signals [subst  {
	{$dbNames(realName1)::[format {tb_l1_cache.TB_DUT.test_num}]}
	} ]]
set id [waveform add -signals [subst  {
	{$dbNames(realName1)::[format {tb_l1_cache.TB_DUT.test_value}]}
	} ]]
set id [waveform add -signals [subst  {
	{$dbNames(realName1)::[format {tb_l1_cache.TB_DUT.test_value2}]}
	} ]]

set groupId0 [waveform add -groups mem_gen_bus_if]


set groupId0 [waveform add -groups proc_gen_bus_if]

set id [waveform add -signals [subst  {
	{$dbNames(realName1)::[format {tb_l1_cache.DUT.pass_through}]}
	} ]]

waveform xview limits 331259ns 331515ns

#
# Waveform Window Links
#

#
# Console windows
#
console set -windowname Console
window geometry Console 730x250+261+564

#
# Layout selection
#

