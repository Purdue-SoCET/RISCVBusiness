import yaml
import sys
import os
import argparse

help_string = """
Setup synthesis files using FuseSoC outputs.

Usage notes:
    - This script expects to be run from the directory above the FuseSoC
      'build' directory, running from anywhere else may not work as expected.

    - Use a .eda.yml file generated from running FuseSoC simulation with the
      '--no-export' flag. This script has not been tested without that flag,
      and may not work as expected!

"""

print(help_string)
parser = argparse.ArgumentParser(description='Generate synthesis files from FuseSoC outputs')
parser.add_argument('filename', type=str, help='path to .eda.yml file generated by FuseSoC to process')
args = parser.parse_args()


with open(args.filename) as fp:
    eda = yaml.safe_load(fp)


inc_dirs = []
inc_lines = []
src_lines = []

inc_lines.append('set listofdirs {}\n')

for item in eda['files']:
    path = item['name']

    if 'tb' in path or 'verification' in path or 'top_core' in path:
        print("Warning: Skipping file {} since it looks like a TB or unsynthesizable verification IP.".format(path))
        continue
    
    # trim off leading ../ in path
    while path.startswith('../'):
        path = path[3:]
    
    path = os.path.abspath(path)


    if 'is_include_file' in item.keys():
        path = os.path.dirname(path)
        if path not in inc_dirs:
            inc_dirs.append(path)
            prepend_str = 'lappend listofdirs '
            inc_lines.append(prepend_str + '"' + path + '"\n')
    else:
        prepend_str = 'read_hdl -sv -define {NOIP SYNTHESIS} '
        src_lines.append(prepend_str + path + '\n')


inc_lines.append('set_db init_hdl_search_path $listofdirs\n')

out_lines = inc_lines + src_lines

#for line in out_lines:
#    print(line)

with open('filelist.tcl', 'w') as fp:
    fp.writelines(out_lines)
