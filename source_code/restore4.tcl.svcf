# SimVision Command Script (Tue Feb 20 10:23:38 PM EST 2024)
#
# Version 21.09.s008
#
# You can restore this configuration with:
#
#     simvision -input restore4.tcl.svcf
#


#
# Preferences
#
preferences set toolbar-Standard-WatchWindow {
  usual
  shown 0
}
preferences set plugin-enable-svdatabrowser-new 1
preferences set cursorctl-dont-show-sync-warning 1
preferences set toolbar-Windows-WatchWindow {
  usual
  shown 0
}
preferences set toolbar-sendToIndago-WaveWindow {
  usual
  position -pos 3
}
preferences set toolbar-Standard-Console {
  usual
  position -pos 1
}
preferences set toolbar-Search-Console {
  usual
  position -pos 2
}
preferences set toolbar-txe_waveform_toggle-WaveWindow {
  usual
  position -pos 1
}
preferences set plugin-enable-groupscope 0
preferences set sb-callstack-in-window 0
preferences set plugin-enable-interleaveandcompare 0
preferences set plugin-enable-waveformfrequencyplot 0
preferences set toolbar-SimControl-WatchWindow {
  usual
  shown 0
}
preferences set toolbar-Windows-WaveWindow {
  usual
  position -pos 2
}
preferences set toolbar-TimeSearch-WatchWindow {
  usual
  shown 0
}
#
# Groups
#
catch {group new -name {Proc gbif} -overlay 0}
catch {group new -name {Cache State} -overlay 0}
catch {group new -name {Cache to CU gbif} -overlay 0}
catch {group new -name {Group 4} -overlay 0}
catch {group new -name {Coherence unit} -overlay 0}
catch {group new -name Bus -overlay 0}
catch {group new -name bcif -overlay 0}
catch {group new -name {CPU SRAM} -overlay 0}
catch {group new -name {BUS SRAM} -overlay 0}
group using {Proc gbif}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.addr[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.busy}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.byte_en[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.rdata[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.ren}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.wdata[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.proc_gen_bus_if.wen}]} ]
group using {Cache State}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.DUT.dcache.state}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.hit}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.sramSEL[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.sramSNOOPSEL[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.decoded_addr}]} ] \
    {CPU SRAM} \
    {BUS SRAM} \
    [subst  {[format {tb_cache_coherency.DUT.dcache.sramRead}]} ]
group using {Cache to CU gbif}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.addr[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.busy}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.byte_en[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.rdata[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.ren}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.wdata[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.mem_gen_bus_if.generic_bus.wen}]} ]
group using {Group 4}
group set -overlay 0
group set -comment {}
group clear 0 end

group using {Coherence unit}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.DUT.d_coherence_unit.state[2:0]}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.snoop_req}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.dirty}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.exclusive}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.snoop_hit}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.snoop_req}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.state_transfer[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.valid}]} ] \
    [subst  {[format {tb_cache_coherency.d_cache_coherency_if.coherency_unit.write_req}]} ]
group using Bus
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.DUT.bus.state}]} ]
group using bcif
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccIsPresent[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccdirty[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccexclusive[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccinv[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccsnoopaddr[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccsnoopdone[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccsnoophit[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccwait[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.ccwrite[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.dREN[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.dWEN[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.daddr[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.dload[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.dstore[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.dwait[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2REN}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2WEN}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2addr[31:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2load[63:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2state[1:0]}]} ] \
    [subst  {[format {tb_cache_coherency.bus_ctrl_if.cc.l2store[63:0]}]} ]
group using {CPU SRAM}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.REN}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.SEL[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.WEN}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.rVal[91:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.sramMemory[15:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.wMask[91:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.CPU_SRAM.wVal[91:0]}]} ]
group using {BUS SRAM}
group set -overlay 0
group set -comment {}
group clear 0 end

group insert \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.REN}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.SEL[3:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.WEN}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.rVal[27:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.sramMemory[15:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.wMask[27:0]}]} ] \
    [subst  {[format {tb_cache_coherency.DUT.dcache.BUS_SRAM.wVal[27:0]}]} ]

#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 1" -geometry 1479x837+597+52}] != ""} {
    window geometry "Design Browser 1" 1479x837+597+52
}
window target "Design Browser 1" on
browser using {Design Browser 1}
browser set -scope [subst  {[format {tb_cache_coherency.DUT.d_coherence_unit}]} ]
browser set \
    -signalsort name
browser yview see [subst  {[format {tb_cache_coherency.DUT.d_coherence_unit}]} ]
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1920x908+0+31}] != ""} {
    window geometry "Waveform 1" 1920x908+0+31
}
window target "Waveform 1" on
waveform using {Waveform 1}
waveform sidebar visibility none
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 175 \
    -units ps \
    -valuewidth 101
waveform baseline set -time 0

set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.PROG.tb_test_case}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.PROG.tb_test_num}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.PROG.CLK}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.DUT.dcache.idle_done}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.cc_if.dflush_done}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_cache_coherency.cc_if.dclear_done}]}
	} ]]

set groupId0 [waveform add -groups {{Proc gbif}}]


set groupId0 [waveform add -groups {{Cache State}}]

set groupId1 [waveform find -name {CPU SRAM}]


set groupId1 [waveform find -name {BUS SRAM}]



set groupId0 [waveform add -groups {{Cache to CU gbif}}]


set groupId0 [waveform add -groups {{Coherence unit}}]


set groupId0 [waveform add -groups Bus]


set groupId0 [waveform add -groups bcif]


waveform xview limits 312000ps 446900ps

#
# Waveform Window Links
#

#
# Layout selection
#

